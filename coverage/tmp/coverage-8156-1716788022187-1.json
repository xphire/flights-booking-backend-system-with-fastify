{"result":[{"scriptId":"77","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9830,"endOffset":9903,"count":358}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":9909,"endOffset":9960,"count":588}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9966,"endOffset":10013,"count":234}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":11625,"endOffset":11694,"count":124}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":12376,"endOffset":12404,"count":971}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":12554,"endOffset":12582,"count":12}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12718,"endOffset":12746,"count":394}],"isBlockCoverage":false},{"functionName":"SafeWeakSet","ranges":[{"startOffset":12896,"endOffset":12924,"count":2}],"isBlockCoverage":true},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":13184,"endOffset":13240,"count":3}],"isBlockCoverage":true},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13400,"endOffset":13438,"count":5}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":13594,"endOffset":13636,"count":1356}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":14153,"endOffset":14434,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14301,"endOffset":14428,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14332,"endOffset":14381,"count":226}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnArrayLike","ranges":[{"startOffset":15792,"endOffset":16364,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15828,"endOffset":16363,"count":94},{"startOffset":16003,"endOffset":16022,"count":33},{"startOffset":16098,"endOffset":16358,"count":200},{"startOffset":16137,"endOffset":16160,"count":0},{"startOffset":16358,"endOffset":16362,"count":200}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16229,"endOffset":16341,"count":200},{"startOffset":16313,"endOffset":16332,"count":61}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnVoid","ranges":[{"startOffset":16716,"endOffset":17128,"count":197}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16752,"endOffset":17127,"count":197},{"startOffset":16851,"endOffset":16861,"count":75},{"startOffset":16909,"endOffset":17122,"count":400},{"startOffset":16948,"endOffset":16971,"count":200},{"startOffset":16972,"endOffset":16985,"count":200},{"startOffset":17122,"endOffset":17126,"count":400}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17040,"endOffset":17105,"count":400},{"startOffset":17086,"endOffset":17096,"count":122}],"isBlockCoverage":true}]},{"scriptId":"79","url":"node:internal/per_context/messageport","functions":[{"functionName":"exports.emitMessage","ranges":[{"startOffset":425,"endOffset":1031,"count":15},{"startOffset":710,"endOffset":1028,"count":0}],"isBlockCoverage":true}]},{"scriptId":"80","url":"node:internal/bootstrap/realm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15209,"count":1}],"isBlockCoverage":false},{"functionName":"binding","ranges":[{"startOffset":4848,"endOffset":5640,"count":1},{"startOffset":5144,"endOffset":5355,"count":0},{"startOffset":5398,"endOffset":5484,"count":0},{"startOffset":5530,"endOffset":5639,"count":0}],"isBlockCoverage":true},{"functionName":"_linkedBinding","ranges":[{"startOffset":5672,"endOffset":5886,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":6139,"endOffset":6408,"count":206},{"startOffset":6243,"endOffset":6386,"count":43}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":6578,"endOffset":6736,"count":3931},{"startOffset":6716,"endOffset":6732,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6788,"endOffset":6886,"count":330},{"startOffset":6845,"endOffset":6886,"count":70}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7017,"endOffset":7084,"count":330},{"startOffset":7068,"endOffset":7084,"count":260}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7319,"endOffset":7355,"count":70}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":7739,"endOffset":7842,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7800,"endOffset":7835,"count":330}],"isBlockCoverage":true},{"functionName":"BuiltinModule","ranges":[{"startOffset":7849,"endOffset":8548,"count":330}],"isBlockCoverage":true},{"functionName":"allowRequireByUsers","ranges":[{"startOffset":8561,"endOffset":8932,"count":0}],"isBlockCoverage":false},{"functionName":"exposeInternals","ranges":[{"startOffset":9086,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":9254,"endOffset":9310,"count":0}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9323,"endOffset":9400,"count":224}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9413,"endOffset":9509,"count":491}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9522,"endOffset":9878,"count":302},{"startOffset":9599,"endOffset":9766,"count":0},{"startOffset":9822,"endOffset":9848,"count":102},{"startOffset":9848,"endOffset":9877,"count":200}],"isBlockCoverage":true},{"functionName":"isBuiltin","ranges":[{"startOffset":9891,"endOffset":10138,"count":0}],"isBlockCoverage":false},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10151,"endOffset":10262,"count":1}],"isBlockCoverage":true},{"functionName":"getSchemeOnlyModuleNames","ranges":[{"startOffset":10275,"endOffset":10352,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10427,"endOffset":11155,"count":112},{"startOffset":10509,"endOffset":10705,"count":0},{"startOffset":10771,"endOffset":11073,"count":19},{"startOffset":11034,"endOffset":11038,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":11161,"endOffset":11942,"count":122},{"startOffset":11200,"endOffset":11219,"count":103},{"startOffset":11219,"endOffset":11941,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11671,"endOffset":11777,"count":19}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":12244,"endOffset":12598,"count":131},{"startOffset":12366,"endOffset":12586,"count":3931},{"startOffset":12445,"endOffset":12454,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12604,"endOffset":13452,"count":2040},{"startOffset":12654,"endOffset":12669,"count":176},{"startOffset":12671,"endOffset":12707,"count":1866},{"startOffset":12707,"endOffset":12852,"count":174},{"startOffset":12852,"endOffset":12888,"count":3},{"startOffset":12889,"endOffset":12905,"count":171},{"startOffset":13169,"endOffset":13451,"count":174}],"isBlockCoverage":true},{"functionName":"requireBuiltin","ranges":[{"startOffset":13658,"endOffset":14033,"count":1934},{"startOffset":13710,"endOffset":13743,"count":6},{"startOffset":13743,"endOffset":13933,"count":1928},{"startOffset":13933,"endOffset":13988,"count":0},{"startOffset":13988,"endOffset":14032,"count":1928}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":14153,"endOffset":14436,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":14440,"endOffset":15053,"count":1}],"isBlockCoverage":true}]},{"scriptId":"81","url":"node:internal/errors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70089,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":2251,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":3826,"endOffset":4549,"count":1},{"startOffset":4100,"endOffset":4168,"count":0},{"startOffset":4453,"endOffset":4521,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4597,"endOffset":5159,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5205,"endOffset":5409,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":5518,"endOffset":5620,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":5657,"endOffset":5788,"count":0}],"isBlockCoverage":false},{"functionName":"lazyUtilColors","ranges":[{"startOffset":5809,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":5929,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":6017,"endOffset":6539,"count":0}],"isBlockCoverage":false},{"functionName":"inspectWithNoCustomRetry","ranges":[{"startOffset":6543,"endOffset":6797,"count":0}],"isBlockCoverage":false},{"functionName":"SystemError","ranges":[{"startOffset":7310,"endOffset":10394,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":10400,"endOffset":10477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10483,"endOffset":10679,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":10686,"endOffset":10837,"count":12}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10779,"endOffset":10828,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":10841,"endOffset":13501,"count":269},{"startOffset":10969,"endOffset":10973,"count":43},{"startOffset":10974,"endOffset":11006,"count":226},{"startOffset":11044,"endOffset":11810,"count":124},{"startOffset":11816,"endOffset":12603,"count":43},{"startOffset":12609,"endOffset":13493,"count":102}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11061,"endOffset":11778,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11834,"endOffset":12571,"count":1}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":11897,"endOffset":12189,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12340,"endOffset":12398,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12410,"endOffset":12467,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":12479,"endOffset":12562,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":12629,"endOffset":13461,"count":0}],"isBlockCoverage":true},{"functionName":"hideStackFrames","ranges":[{"startOffset":13671,"endOffset":13942,"count":47}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":14058,"endOffset":14582,"count":275},{"startOffset":14304,"endOffset":14351,"count":12},{"startOffset":14351,"endOffset":14407,"count":263},{"startOffset":14444,"endOffset":14558,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14472,"endOffset":14551,"count":6}],"isBlockCoverage":true},{"functionName":"getExpectedArgumentLength","ranges":[{"startOffset":14586,"endOffset":14785,"count":226},{"startOffset":14739,"endOffset":14756,"count":134}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":14789,"endOffset":15574,"count":1},{"startOffset":15170,"endOffset":15573,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":15596,"endOffset":15679,"count":0}],"isBlockCoverage":false},{"functionName":"uvErrmapGet","ranges":[{"startOffset":15740,"endOffset":15896,"count":0}],"isBlockCoverage":false},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":15952,"endOffset":16365,"count":0}],"isBlockCoverage":false},{"functionName":"uvException","ranges":[{"startOffset":16702,"endOffset":17985,"count":0}],"isBlockCoverage":false},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":18361,"endOffset":19378,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":19608,"endOffset":20492,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":20910,"endOffset":22232,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22443,"endOffset":24020,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":24026,"endOffset":24186,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":24484,"endOffset":24875,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":24959,"endOffset":25235,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":25522,"endOffset":25926,"count":0}],"isBlockCoverage":false},{"functionName":"afterInspector","ranges":[{"startOffset":25931,"endOffset":27248,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowMessage","ranges":[{"startOffset":27412,"endOffset":27513,"count":0}],"isBlockCoverage":false},{"functionName":"hideInternalStackFrames","ranges":[{"startOffset":27571,"endOffset":28062,"count":0}],"isBlockCoverage":false},{"functionName":"AbortError","ranges":[{"startOffset":28301,"endOffset":28617,"count":0}],"isBlockCoverage":false},{"functionName":"genericNodeError","ranges":[{"startOffset":28881,"endOffset":29078,"count":0}],"isBlockCoverage":false},{"functionName":"determineSpecificType","ranges":[{"startOffset":29206,"endOffset":30885,"count":1},{"startOffset":29269,"endOffset":29295,"count":0},{"startOffset":29326,"endOffset":29357,"count":0},{"startOffset":29416,"endOffset":29471,"count":0},{"startOffset":29516,"endOffset":29608,"count":0},{"startOffset":29635,"endOffset":29721,"count":0},{"startOffset":29751,"endOffset":29803,"count":0},{"startOffset":29834,"endOffset":29887,"count":0},{"startOffset":29933,"endOffset":30018,"count":0},{"startOffset":30024,"endOffset":30086,"count":0},{"startOffset":30092,"endOffset":30148,"count":0},{"startOffset":30154,"endOffset":30376,"count":0},{"startOffset":30382,"endOffset":30642,"count":0},{"startOffset":30648,"endOffset":30877,"count":0}],"isBlockCoverage":true},{"functionName":"formatList","ranges":[{"startOffset":31217,"endOffset":31607,"count":1},{"startOffset":31292,"endOffset":31310,"count":0},{"startOffset":31351,"endOffset":31400,"count":0},{"startOffset":31406,"endOffset":31469,"count":0},{"startOffset":31475,"endOffset":31599,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33752,"endOffset":33921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37015,"endOffset":37133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37427,"endOffset":37524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40483,"endOffset":40718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42532,"endOffset":42758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45868,"endOffset":46174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46217,"endOffset":46365,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46410,"endOffset":48600,"count":1},{"startOffset":46657,"endOffset":46733,"count":0},{"startOffset":46796,"endOffset":46808,"count":0},{"startOffset":47241,"endOffset":47522,"count":0},{"startOffset":47686,"endOffset":47883,"count":0},{"startOffset":47949,"endOffset":47964,"count":0},{"startOffset":48069,"endOffset":48083,"count":0},{"startOffset":48124,"endOffset":48248,"count":0},{"startOffset":48278,"endOffset":48515,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48642,"endOffset":48997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49312,"endOffset":49481,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50150,"endOffset":50332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50381,"endOffset":50519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50566,"endOffset":50717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50763,"endOffset":51551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51846,"endOffset":52036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52090,"endOffset":52272,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52317,"endOffset":52499,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52965,"endOffset":53191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53237,"endOffset":53533,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54109,"endOffset":54597,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55403,"endOffset":55857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55953,"endOffset":56178,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":57346,"endOffset":58062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58114,"endOffset":58309,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58359,"endOffset":58681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58927,"endOffset":59231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":59420,"endOffset":60893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61354,"endOffset":61641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63196,"endOffset":63273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63310,"endOffset":63639,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63686,"endOffset":63763,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63796,"endOffset":64214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64267,"endOffset":64451,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64728,"endOffset":64902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66635,"endOffset":66770,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67251,"endOffset":67457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67504,"endOffset":67835,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":68630,"endOffset":68701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69111,"endOffset":69225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":69424,"endOffset":69820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"node:internal/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":499,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":29,"endOffset":163,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":889},{"startOffset":216,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":326,"endOffset":446,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"node:internal/bootstrap/node","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14235,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":2},{"startOffset":4033,"endOffset":4036,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4198,"endOffset":4236,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":1},{"startOffset":4303,"endOffset":4594,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4908,"endOffset":5177,"count":407}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":6594,"endOffset":6667,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8190,"endOffset":8356,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8461,"endOffset":8665,"count":0}],"isBlockCoverage":false},{"functionName":"get cached_builtins","ranges":[{"startOffset":9438,"endOffset":9507,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12074,"endOffset":12126,"count":0}],"isBlockCoverage":false},{"functionName":"setupProcessObject","ranges":[{"startOffset":12458,"endOffset":13291,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13142,"endOffset":13180,"count":136}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13187,"endOffset":13231,"count":0}],"isBlockCoverage":false},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":13295,"endOffset":13541,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":13545,"endOffset":14233,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14086,"endOffset":14123,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14130,"endOffset":14173,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20246,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4504,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5702,"endOffset":5986,"count":1170},{"startOffset":5933,"endOffset":5983,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":6096,"endOffset":7172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7256,"endOffset":7460,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":7466,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":7588,"endOffset":7734,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":7740,"endOffset":7884,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":7890,"endOffset":7931,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7960,"endOffset":8273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8357,"endOffset":8561,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8649,"endOffset":8715,"count":2}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8871,"endOffset":9060,"count":1170},{"startOffset":8915,"endOffset":8993,"count":82},{"startOffset":8993,"endOffset":9032,"count":1088}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":9214,"endOffset":9591,"count":683},{"startOffset":9254,"endOffset":9312,"count":0},{"startOffset":9340,"endOffset":9398,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9707,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9882,"endOffset":10054,"count":0}],"isBlockCoverage":false},{"functionName":"active","ranges":[{"startOffset":10141,"endOffset":10197,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":10348,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":10637,"endOffset":11176,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":11247,"endOffset":12007,"count":0}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":12011,"endOffset":12277,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":12347,"endOffset":12890,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":12894,"endOffset":13108,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":13112,"endOffset":13185,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":13189,"endOffset":18753,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":13507,"endOffset":15503,"count":405},{"startOffset":13587,"endOffset":13612,"count":0},{"startOffset":14017,"endOffset":15381,"count":487},{"startOffset":14063,"endOffset":14078,"count":82},{"startOffset":14078,"endOffset":14130,"count":405},{"startOffset":14402,"endOffset":14501,"count":0},{"startOffset":14747,"endOffset":14774,"count":101},{"startOffset":15082,"endOffset":15140,"count":0},{"startOffset":15247,"endOffset":15268,"count":0},{"startOffset":15428,"endOffset":15457,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":15511,"endOffset":16019,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":16025,"endOffset":18687,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":18778,"endOffset":19114,"count":1170}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":19120,"endOffset":19396,"count":1170},{"startOffset":19238,"endOffset":19366,"count":1088}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":19402,"endOffset":19679,"count":1069},{"startOffset":19520,"endOffset":19649,"count":987}],"isBlockCoverage":true},{"functionName":"hasRef","ranges":[{"startOffset":19685,"endOffset":19728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"node:internal/async_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20709,"count":1}],"isBlockCoverage":false},{"functionName":"useDomainTrampoline","ranges":[{"startOffset":5221,"endOffset":5277,"count":1}],"isBlockCoverage":true},{"functionName":"callbackTrampoline","ranges":[{"startOffset":5281,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":5886,"endOffset":6395,"count":0}],"isBlockCoverage":false},{"functionName":"inspectExceptionValue","ranges":[{"startOffset":6399,"endOffset":6529,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":6593,"endOffset":7009,"count":0}],"isBlockCoverage":false},{"functionName":"lookupPublicResource","ranges":[{"startOffset":7013,"endOffset":7370,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":7568,"endOffset":8730,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":8835,"endOffset":9850,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":9854,"endOffset":10127,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":10160,"endOffset":10660,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":10666,"endOffset":10972,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":10976,"endOffset":11247,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":11367,"endOffset":11578,"count":0}],"isBlockCoverage":false},{"functionName":"trackPromise","ranges":[{"startOffset":11582,"endOffset":12024,"count":0}],"isBlockCoverage":false},{"functionName":"promiseInitHook","ranges":[{"startOffset":12028,"endOffset":12277,"count":0}],"isBlockCoverage":false},{"functionName":"promiseInitHookWithDestroyTracking","ranges":[{"startOffset":12281,"endOffset":12420,"count":0}],"isBlockCoverage":false},{"functionName":"destroyTracking","ranges":[{"startOffset":12424,"endOffset":12591,"count":0}],"isBlockCoverage":false},{"functionName":"promiseBeforeHook","ranges":[{"startOffset":12595,"endOffset":12811,"count":0}],"isBlockCoverage":false},{"functionName":"promiseAfterHook","ranges":[{"startOffset":12815,"endOffset":13396,"count":0}],"isBlockCoverage":false},{"functionName":"promiseResolveHook","ranges":[{"startOffset":13400,"endOffset":13550,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":13584,"endOffset":13694,"count":0}],"isBlockCoverage":false},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":13720,"endOffset":14316,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":14320,"endOffset":14633,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":14637,"endOffset":14757,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":1171}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":15041,"endOffset":15237,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":1171},{"startOffset":15686,"endOffset":15721,"count":0}],"isBlockCoverage":true},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":15728,"endOffset":15819,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":16055,"endOffset":16561,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":3806}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":488}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":1171}],"isBlockCoverage":true},{"functionName":"afterHooksExist","ranges":[{"startOffset":16760,"endOffset":16819,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":1171}],"isBlockCoverage":true},{"functionName":"promiseResolveHooksExist","ranges":[{"startOffset":16890,"endOffset":16967,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitScript","ranges":[{"startOffset":16973,"endOffset":17392,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":488},{"startOffset":17550,"endOffset":17576,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":488},{"startOffset":17651,"endOffset":17676,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":17716,"endOffset":17931,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17937,"endOffset":18002,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":488},{"startOffset":18296,"endOffset":18346,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":488},{"startOffset":18839,"endOffset":18852,"count":0},{"startOffset":18933,"endOffset":19042,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":19353,"endOffset":19431,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":19435,"endOffset":19509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/validators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16528,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":877,"endOffset":938,"count":233}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":996,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileMode","ranges":[{"startOffset":1697,"endOffset":2019,"count":238},{"startOffset":1792,"endOffset":1965,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2666,"count":20},{"startOffset":2400,"endOffset":2454,"count":0},{"startOffset":2496,"endOffset":2550,"count":0},{"startOffset":2595,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2924,"endOffset":3398,"count":34},{"startOffset":3098,"endOffset":3168,"count":0},{"startOffset":3203,"endOffset":3273,"count":0},{"startOffset":3311,"endOffset":3393,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3648,"endOffset":4093,"count":238},{"startOffset":3719,"endOffset":3785,"count":0},{"startOffset":3818,"endOffset":3884,"count":0},{"startOffset":3909,"endOffset":3912,"count":0},{"startOffset":4012,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4256,"endOffset":4391,"count":11077},{"startOffset":4334,"endOffset":4388,"count":1}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":4604,"endOffset":5081,"count":315},{"startOffset":4704,"endOffset":4758,"count":0},{"startOffset":4781,"endOffset":4795,"count":309},{"startOffset":4813,"endOffset":4827,"count":309},{"startOffset":4851,"endOffset":4865,"count":6},{"startOffset":4867,"endOffset":4888,"count":309},{"startOffset":4891,"endOffset":5078,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5278,"endOffset":5620,"count":2},{"startOffset":5350,"endOffset":5617,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5425,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5786,"endOffset":5924,"count":18},{"startOffset":5866,"endOffset":5921,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6288,"endOffset":7336,"count":2037},{"startOffset":6380,"endOffset":6628,"count":1341},{"startOffset":6432,"endOffset":6506,"count":0},{"startOffset":6547,"endOffset":6621,"count":0},{"startOffset":6628,"endOffset":7331,"count":696},{"startOffset":6744,"endOffset":6761,"count":694},{"startOffset":6763,"endOffset":6837,"count":0},{"startOffset":6939,"endOffset":6961,"count":0},{"startOffset":6963,"endOffset":7037,"count":0},{"startOffset":7198,"endOffset":7248,"count":0},{"startOffset":7250,"endOffset":7324,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7906,"endOffset":8090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8320,"endOffset":8606,"count":1},{"startOffset":8383,"endOffset":8448,"count":0},{"startOffset":8482,"endOffset":8603,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringArray","ranges":[{"startOffset":8781,"endOffset":9158,"count":0}],"isBlockCoverage":false},{"functionName":"validateBooleanArray","ranges":[{"startOffset":9334,"endOffset":9725,"count":0}],"isBlockCoverage":false},{"functionName":"validateAbortSignalArray","ranges":[{"startOffset":9913,"endOffset":10272,"count":0}],"isBlockCoverage":false},{"functionName":"validateSignalName","ranges":[{"startOffset":10391,"endOffset":10775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10997,"endOffset":11233,"count":11},{"startOffset":11063,"endOffset":11230,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":11303,"endOffset":11645,"count":1},{"startOffset":11475,"endOffset":11494,"count":0},{"startOffset":11496,"endOffset":11642,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":11917,"endOffset":12305,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12482,"endOffset":12706,"count":688},{"startOffset":12530,"endOffset":12629,"count":0},{"startOffset":12631,"endOffset":12703,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12916,"endOffset":13035,"count":1209},{"startOffset":12976,"endOffset":13032,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13260,"endOffset":13405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13619,"endOffset":13731,"count":0}],"isBlockCoverage":false},{"functionName":"validateUnion","ranges":[{"startOffset":13832,"endOffset":14023,"count":0}],"isBlockCoverage":false},{"functionName":"validateLinkHeaderFormat","ranges":[{"startOffset":14467,"endOffset":14784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14834,"endOffset":15048,"count":2},{"startOffset":14975,"endOffset":15045,"count":0}],"isBlockCoverage":true},{"functionName":"validateLinkHeaderValue","ranges":[{"startOffset":15108,"endOffset":15821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25879,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":1866,"endOffset":2186,"count":272},{"startOffset":2141,"endOffset":2185,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":2208,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":2295,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2386,"endOffset":2641,"count":0}],"isBlockCoverage":false},{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2806,"endOffset":3476,"count":28}],"isBlockCoverage":true},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2907,"endOffset":2917,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2957,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"isPendingDeprecation","ranges":[{"startOffset":3480,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"pendingDeprecate","ranges":[{"startOffset":3783,"endOffset":4089,"count":3}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":3956,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4249,"endOffset":5281,"count":25},{"startOffset":4337,"endOffset":4359,"count":0},{"startOffset":4452,"endOffset":4506,"count":1},{"startOffset":4541,"endOffset":4570,"count":24},{"startOffset":5027,"endOffset":5254,"count":24}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":4689,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":5285,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5565,"endOffset":5642,"count":1},{"startOffset":5613,"endOffset":5639,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5826,"endOffset":5960,"count":367},{"startOffset":5897,"endOffset":5915,"count":0},{"startOffset":5931,"endOffset":5959,"count":0}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":5964,"endOffset":7767,"count":0}],"isBlockCoverage":false},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":7771,"endOffset":8042,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":8046,"endOffset":8397,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":8401,"endOffset":8564,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8454,"endOffset":8560,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":8837,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":9281,"endOffset":9570,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":9574,"endOffset":9905,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":9909,"endOffset":10268,"count":0}],"isBlockCoverage":false},{"functionName":"getCWDURL","ranges":[{"startOffset":10601,"endOffset":11131,"count":1},{"startOffset":10939,"endOffset":10990,"count":0}],"isBlockCoverage":true},{"functionName":"getSystemErrorName","ranges":[{"startOffset":11135,"endOffset":11267,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorMap","ranges":[{"startOffset":11271,"endOffset":11338,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":11513,"endOffset":13430,"count":5},{"startOffset":11636,"endOffset":11692,"count":1},{"startOffset":11783,"endOffset":12069,"count":0},{"startOffset":13210,"endOffset":13376,"count":14}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":12275,"endOffset":12811,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":13530,"endOffset":13864,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":14009,"endOffset":14140,"count":3},{"startOffset":14092,"endOffset":14122,"count":0}],"isBlockCoverage":true},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":14228,"endOffset":15498,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":15502,"endOffset":15682,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":15709,"endOffset":15931,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredPromise","ranges":[{"startOffset":15935,"endOffset":16138,"count":0}],"isBlockCoverage":false},{"functionName":"defineOperation","ranges":[{"startOffset":16201,"endOffset":16410,"count":8}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":16465,"endOffset":16693,"count":5}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":16748,"endOffset":16976,"count":1}],"isBlockCoverage":true},{"functionName":"exposeGetterAndSetter","ranges":[{"startOffset":16980,"endOffset":17211,"count":1}],"isBlockCoverage":true},{"functionName":"defineLazyProperties","ranges":[{"startOffset":17215,"endOffset":18186,"count":22},{"startOffset":17381,"endOffset":18185,"count":51}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17440,"endOffset":17589,"count":15}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17697,"endOffset":17900,"count":15}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":18190,"endOffset":19131,"count":2},{"startOffset":19096,"endOffset":19101,"count":1},{"startOffset":19102,"endOffset":19113,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18409,"endOffset":18655,"count":7},{"startOffset":18458,"endOffset":18513,"count":0},{"startOffset":18539,"endOffset":18572,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18767,"endOffset":18841,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":19135,"endOffset":19237,"count":14}],"isBlockCoverage":true},{"functionName":"lazyDOMExceptionClass","ranges":[{"startOffset":19291,"endOffset":19390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19436,"endOffset":19567,"count":0}],"isBlockCoverage":false},{"functionName":"filterOwnProperties","ranges":[{"startOffset":19760,"endOffset":20042,"count":0}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20219,"endOffset":20417,"count":763}],"isBlockCoverage":true},{"functionName":"getInternalGlobal","ranges":[{"startOffset":20442,"endOffset":20724,"count":358},{"startOffset":20504,"endOffset":20695,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":20728,"endOffset":20944,"count":357}],"isBlockCoverage":true},{"functionName":"getCrossRelmRegex","ranges":[{"startOffset":20993,"endOffset":21801,"count":2153},{"startOffset":21091,"endOffset":21105,"count":2152},{"startOffset":21105,"endOffset":21176,"count":1},{"startOffset":21176,"endOffset":21194,"count":0},{"startOffset":21194,"endOffset":21298,"count":1},{"startOffset":21298,"endOffset":21316,"count":0},{"startOffset":21316,"endOffset":21360,"count":1},{"startOffset":21360,"endOffset":21378,"count":0},{"startOffset":21378,"endOffset":21419,"count":1},{"startOffset":21419,"endOffset":21437,"count":0},{"startOffset":21437,"endOffset":21479,"count":1},{"startOffset":21479,"endOffset":21497,"count":0},{"startOffset":21497,"endOffset":21538,"count":1},{"startOffset":21538,"endOffset":21556,"count":0},{"startOffset":21556,"endOffset":21800,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":21805,"endOffset":21961,"count":2153}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeSymbolSplit","ranges":[{"startOffset":21965,"endOffset":22117,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferDetached","ranges":[{"startOffset":22123,"endOffset":22289,"count":0}],"isBlockCoverage":false},{"functionName":"getLazy","ranges":[{"startOffset":22498,"endOffset":22720,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22582,"endOffset":22716,"count":612},{"startOffset":22627,"endOffset":22692,"count":4}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":22849,"endOffset":23543,"count":1},{"startOffset":23329,"endOffset":23511,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":23620,"endOffset":23720,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23724,"endOffset":24298,"count":5}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":23803,"endOffset":23872,"count":5}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":23878,"endOffset":24105,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24111,"endOffset":24245,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24251,"endOffset":24295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:internal/options","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2000,"count":1}],"isBlockCoverage":false},{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":481,"endOffset":620,"count":1137},{"startOffset":539,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":624,"endOffset":760,"count":0}],"isBlockCoverage":false},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":764,"endOffset":913,"count":4},{"startOffset":821,"endOffset":883,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":917,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":1005,"endOffset":1278,"count":1137},{"startOffset":1129,"endOffset":1233,"count":8},{"startOffset":1233,"endOffset":1274,"count":1129}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":1282,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"get options","ranges":[{"startOffset":1785,"endOffset":1845,"count":0}],"isBlockCoverage":false},{"functionName":"get aliases","ranges":[{"startOffset":1850,"endOffset":1907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"node:internal/util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2579,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":139,"endOffset":244,"count":75}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":1687}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":360,"endOffset":482,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":486,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":600,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":714,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":824,"endOffset":932,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":936,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":1048,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1164,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":594}],"isBlockCoverage":true},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1398,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":2013,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":2340,"endOffset":2565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"node:internal/linkedlist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1183,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":17,"endOffset":109,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":142,"endOffset":237,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":275,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":572,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1041,"endOffset":1103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"node:internal/priority_queue","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2682,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":407,"endOffset":2679,"count":1}],"isBlockCoverage":false},{"functionName":"#compare","ranges":[{"startOffset":443,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":522,"endOffset":711,"count":1}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":717,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":915,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":961,"endOffset":1647,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1653,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2165,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2513,"endOffset":2676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/util/inspect","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83985,"count":1}],"isBlockCoverage":false},{"functionName":"pathToFileUrlHref","ranges":[{"startOffset":3402,"endOffset":3539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3653,"endOffset":3714,"count":62}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":3815,"endOffset":3865,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":7426,"endOffset":9016,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":9317,"endOffset":11399,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11515,"endOffset":11562,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":11567,"endOffset":11685,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":13466,"endOffset":13742,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13585,"endOffset":13627,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":13634,"endOffset":13682,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":14787,"endOffset":14953,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":14957,"endOffset":15135,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":15251,"endOffset":17468,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":17472,"endOffset":17746,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":17750,"endOffset":17798,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":17880,"endOffset":17929,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceof","ranges":[{"startOffset":17933,"endOffset":18057,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":18061,"endOffset":19376,"count":0}],"isBlockCoverage":false},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":19568,"endOffset":21454,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":21458,"endOffset":21857,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":21897,"endOffset":22914,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":22918,"endOffset":23190,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":23194,"endOffset":23657,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":23844,"endOffset":26677,"count":0}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":26681,"endOffset":37788,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorBraces","ranges":[{"startOffset":37792,"endOffset":37981,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":37985,"endOffset":39211,"count":0}],"isBlockCoverage":false},{"functionName":"getClassBase","ranges":[{"startOffset":39215,"endOffset":39834,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":39838,"endOffset":41108,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":41112,"endOffset":41749,"count":0}],"isBlockCoverage":false},{"functionName":"getStackString","ranges":[{"startOffset":41753,"endOffset":41865,"count":0}],"isBlockCoverage":false},{"functionName":"getStackFrames","ranges":[{"startOffset":41869,"endOffset":42785,"count":0}],"isBlockCoverage":false},{"functionName":"improveStack","ranges":[{"startOffset":42789,"endOffset":44025,"count":0}],"isBlockCoverage":false},{"functionName":"removeDuplicateErrorKeys","ranges":[{"startOffset":44029,"endOffset":44462,"count":0}],"isBlockCoverage":false},{"functionName":"markNodeModules","ranges":[{"startOffset":44466,"endOffset":44950,"count":0}],"isBlockCoverage":false},{"functionName":"markCwd","ranges":[{"startOffset":44954,"endOffset":45955,"count":0}],"isBlockCoverage":false},{"functionName":"safeGetCWD","ranges":[{"startOffset":45959,"endOffset":46117,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":46121,"endOffset":48582,"count":0}],"isBlockCoverage":false},{"functionName":"groupArrayElements","ranges":[{"startOffset":48586,"endOffset":53033,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":53037,"endOffset":53438,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":53442,"endOffset":53854,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparatorEnd","ranges":[{"startOffset":53858,"endOffset":54166,"count":0}],"isBlockCoverage":false},{"functionName":"remainingText","ranges":[{"startOffset":54192,"endOffset":54262,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":54267,"endOffset":55081,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":55085,"endOffset":55307,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":55311,"endOffset":56750,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":56754,"endOffset":57929,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":57979,"endOffset":59276,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":59280,"endOffset":59946,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":59950,"endOffset":60566,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":60570,"endOffset":61629,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":61633,"endOffset":62173,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":62177,"endOffset":62797,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":62801,"endOffset":63624,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":63628,"endOffset":64972,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":64976,"endOffset":65070,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":65074,"endOffset":65234,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":65238,"endOffset":65398,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":65402,"endOffset":65832,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":65836,"endOffset":66326,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":66330,"endOffset":68973,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":68977,"endOffset":69957,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":69961,"endOffset":72923,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":72927,"endOffset":74036,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":74063,"endOffset":74121,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":74153,"endOffset":74678,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":74682,"endOffset":74765,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":74769,"endOffset":74964,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumberNoColor","ranges":[{"startOffset":74968,"endOffset":75156,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigIntNoColor","ranges":[{"startOffset":75160,"endOffset":75348,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":75352,"endOffset":79500,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":79504,"endOffset":80088,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":80526,"endOffset":81134,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":81254,"endOffset":81738,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":81912,"endOffset":83557,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":83655,"endOffset":83786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"node:internal/util/debuglog","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3516,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":523,"endOffset":1008,"count":1},{"startOffset":617,"endOffset":961,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":898,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":988,"endOffset":999,"count":7}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":1086,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1449,"endOffset":1457,"count":936}],"isBlockCoverage":true},{"functionName":"lazyUtilColors","ranges":[{"startOffset":1479,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1586,"endOffset":2160,"count":7},{"startOffset":1662,"endOffset":2130,"count":5},{"startOffset":1682,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1774,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2386,"endOffset":3452,"count":18}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":2418,"endOffset":2517,"count":7}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2533,"endOffset":2939,"count":7},{"startOffset":2788,"endOffset":2818,"count":4},{"startOffset":2826,"endOffset":2865,"count":2},{"startOffset":2873,"endOffset":2927,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2971,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3064,"endOffset":3265,"count":7},{"startOffset":3114,"endOffset":3144,"count":4},{"startOffset":3152,"endOffset":3191,"count":2},{"startOffset":3199,"endOffset":3253,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3339,"endOffset":3375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"node:events","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37622,"count":1}],"isBlockCoverage":false},{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":3120,"endOffset":6541,"count":2},{"startOffset":3211,"endOffset":6501,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3682,"endOffset":3789,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3852,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4346,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5029,"endOffset":5406,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5472,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5729,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5989,"endOffset":6198,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6293,"endOffset":6486,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6682,"endOffset":6753,"count":230}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7253,"endOffset":7311,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7316,"endOffset":7445,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8257,"endOffset":8337,"count":33}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8450,"endOffset":8500,"count":298}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8510,"endOffset":8614,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.setMaxListeners","ranges":[{"startOffset":9194,"endOffset":10029,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":10200,"endOffset":10817,"count":230},{"startOffset":10253,"endOffset":10314,"count":0},{"startOffset":10466,"endOffset":10485,"count":2},{"startOffset":10487,"endOffset":10623,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":10822,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":11405,"endOffset":12081,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12240,"endOffset":12359,"count":0}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12364,"endOffset":12517,"count":3},{"startOffset":12484,"endOffset":12516,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxListeners","ranges":[{"startOffset":12660,"endOffset":12725,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":12730,"endOffset":13512,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13716,"endOffset":16098,"count":350},{"startOffset":13866,"endOffset":13904,"count":0},{"startOffset":13913,"endOffset":13947,"count":0},{"startOffset":13972,"endOffset":14001,"count":0},{"startOffset":14008,"endOffset":14046,"count":0},{"startOffset":14121,"endOffset":15122,"count":0},{"startOffset":15195,"endOffset":15208,"count":227},{"startOffset":15208,"endOffset":15539,"count":123},{"startOffset":15463,"endOffset":15481,"count":0},{"startOffset":15483,"endOffset":15534,"count":0},{"startOffset":15539,"endOffset":16077,"count":0},{"startOffset":16077,"endOffset":16097,"count":123}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":16103,"endOffset":18052,"count":14},{"startOffset":16291,"endOffset":16379,"count":0},{"startOffset":16567,"endOffset":16835,"count":12},{"startOffset":16646,"endOffset":16657,"count":8},{"startOffset":16904,"endOffset":17046,"count":11},{"startOffset":17046,"endOffset":18029,"count":3},{"startOffset":17209,"endOffset":17231,"count":0},{"startOffset":17316,"endOffset":17424,"count":0},{"startOffset":17532,"endOffset":17551,"count":0},{"startOffset":17553,"endOffset":18024,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":18238,"endOffset":18332,"count":11}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":18631,"endOffset":18736,"count":3}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":18741,"endOffset":19013,"count":0}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":19017,"endOffset":19264,"count":4}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19463,"endOffset":19594,"count":4}],"isBlockCoverage":true},{"functionName":"prependOnceListener","ranges":[{"startOffset":19837,"endOffset":20012,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":20228,"endOffset":21571,"count":15},{"startOffset":20382,"endOffset":20394,"count":0},{"startOffset":20471,"endOffset":20483,"count":5},{"startOffset":20483,"endOffset":20515,"count":10},{"startOffset":20515,"endOffset":20544,"count":7},{"startOffset":20546,"endOffset":20815,"count":7},{"startOffset":20599,"endOffset":20634,"count":0},{"startOffset":20782,"endOffset":20793,"count":3},{"startOffset":20815,"endOffset":21542,"count":3},{"startOffset":20975,"endOffset":21007,"count":0},{"startOffset":21122,"endOffset":21134,"count":0},{"startOffset":21177,"endOffset":21190,"count":0},{"startOffset":21260,"endOffset":21307,"count":1},{"startOffset":21542,"endOffset":21570,"count":10}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":21903,"endOffset":23275,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":23280,"endOffset":23690,"count":3},{"startOffset":23394,"endOffset":23404,"count":0},{"startOffset":23481,"endOffset":23491,"count":0},{"startOffset":23592,"endOffset":23606,"count":0},{"startOffset":23607,"endOffset":23661,"count":0},{"startOffset":23662,"endOffset":23686,"count":0}],"isBlockCoverage":true},{"functionName":"listeners","ranges":[{"startOffset":23888,"endOffset":23957,"count":3}],"isBlockCoverage":true},{"functionName":"rawListeners","ranges":[{"startOffset":24172,"endOffset":24245,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":24497,"endOffset":24688,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":24932,"endOffset":25667,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":25830,"endOffset":25925,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":25930,"endOffset":26414,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapListeners","ranges":[{"startOffset":26418,"endOffset":26640,"count":0}],"isBlockCoverage":false},{"functionName":"getEventListeners","ranges":[{"startOffset":26859,"endOffset":27755,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxListeners","ranges":[{"startOffset":27882,"endOffset":28327,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":28557,"endOffset":30316,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30397,"endOffset":30418,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":30435,"endOffset":30505,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticRemoveListener","ranges":[{"startOffset":30509,"endOffset":30902,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":30906,"endOffset":31350,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":31669,"endOffset":36222,"count":0}],"isBlockCoverage":false},{"functionName":"listenersController","ranges":[{"startOffset":36226,"endOffset":36686,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortListener","ranges":[{"startOffset":36713,"endOffset":37620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"node:buffer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42611,"count":1}],"isBlockCoverage":false},{"functionName":"validateOffset","ranges":[{"startOffset":3375,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"createPool","ranges":[{"startOffset":4225,"endOffset":4389,"count":1}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4408,"endOffset":4536,"count":7}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4848,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5548,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5778,"endOffset":6944,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6948,"endOffset":7494,"count":2},{"startOffset":7091,"endOffset":7145,"count":0},{"startOffset":7263,"endOffset":7278,"count":0},{"startOffset":7341,"endOffset":7417,"count":0}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":8082,"endOffset":8425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8543,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8840,"endOffset":9837,"count":4},{"startOffset":8971,"endOffset":9024,"count":0},{"startOffset":9026,"endOffset":9836,"count":0}],"isBlockCoverage":true},{"functionName":"copyBytesFrom","ranges":[{"startOffset":10101,"endOffset":11014,"count":0}],"isBlockCoverage":false},{"functionName":"of","ranges":[{"startOffset":11393,"endOffset":11550,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11847,"endOffset":11909,"count":309}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":12018,"endOffset":12270,"count":72},{"startOffset":12104,"endOffset":12117,"count":0},{"startOffset":12118,"endOffset":12129,"count":0},{"startOffset":12131,"endOffset":12235,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":12455,"endOffset":12533,"count":11}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12781,"endOffset":12873,"count":226}],"isBlockCoverage":true},{"functionName":"SlowBuffer","ranges":[{"startOffset":12973,"endOffset":13066,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":13185,"endOffset":13530,"count":11},{"startOffset":13229,"endOffset":13265,"count":0},{"startOffset":13305,"endOffset":13491,"count":4},{"startOffset":13355,"endOffset":13368,"count":0},{"startOffset":13491,"endOffset":13529,"count":7}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13534,"endOffset":14097,"count":4},{"startOffset":13664,"endOffset":13713,"count":1},{"startOffset":13713,"endOffset":13762,"count":3},{"startOffset":13762,"endOffset":13775,"count":0},{"startOffset":13775,"endOffset":13911,"count":3},{"startOffset":13911,"endOffset":14040,"count":0},{"startOffset":14040,"endOffset":14096,"count":3}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":14101,"endOffset":14542,"count":4},{"startOffset":14189,"endOffset":14213,"count":2},{"startOffset":14215,"endOffset":14312,"count":2},{"startOffset":14254,"endOffset":14278,"count":0},{"startOffset":14312,"endOffset":14500,"count":2},{"startOffset":14392,"endOffset":14433,"count":0},{"startOffset":14471,"endOffset":14495,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":14546,"endOffset":15272,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayLike","ranges":[{"startOffset":15276,"endOffset":15683,"count":0}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":15687,"endOffset":16004,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":16047,"endOffset":16103,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":16125,"endOffset":16464,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16489,"endOffset":16643,"count":294}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":16712,"endOffset":17898,"count":1},{"startOffset":16809,"endOffset":16833,"count":0},{"startOffset":16927,"endOffset":17008,"count":2},{"startOffset":17013,"endOffset":17064,"count":0},{"startOffset":17170,"endOffset":17527,"count":2},{"startOffset":17227,"endOffset":17464,"count":0},{"startOffset":17621,"endOffset":17875,"count":0}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":17903,"endOffset":18180,"count":1},{"startOffset":18114,"endOffset":18122,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18322,"endOffset":18386,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18400,"endOffset":18446,"count":371}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":18462,"endOffset":18559,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18658,"endOffset":18687,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18701,"endOffset":18765,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18779,"endOffset":18825,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18841,"endOffset":18941,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19046,"endOffset":19075,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19089,"endOffset":19153,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19167,"endOffset":19213,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19229,"endOffset":19329,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19431,"endOffset":19456,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19470,"endOffset":19536,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19550,"endOffset":19598,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19614,"endOffset":19713,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19812,"endOffset":19837,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19851,"endOffset":19916,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19930,"endOffset":19977,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19993,"endOffset":20210,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":20312,"endOffset":20363,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":20377,"endOffset":20443,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":20457,"endOffset":20505,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":20521,"endOffset":20740,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":20851,"endOffset":20902,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20916,"endOffset":20992,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":21006,"endOffset":21057,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":21073,"endOffset":21298,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":21391,"endOffset":21422,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":21436,"endOffset":21499,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":21513,"endOffset":21558,"count":2}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":21574,"endOffset":21787,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":21800,"endOffset":23672,"count":375},{"startOffset":21890,"endOffset":22195,"count":372},{"startOffset":21954,"endOffset":22195,"count":0},{"startOffset":22201,"endOffset":22628,"count":0},{"startOffset":22634,"endOffset":22792,"count":0},{"startOffset":22798,"endOffset":22958,"count":0},{"startOffset":22964,"endOffset":23353,"count":1},{"startOffset":23040,"endOffset":23066,"count":0},{"startOffset":23127,"endOffset":23241,"count":0},{"startOffset":23252,"endOffset":23353,"count":0},{"startOffset":23359,"endOffset":23494,"count":2},{"startOffset":23397,"endOffset":23446,"count":0},{"startOffset":23480,"endOffset":23494,"count":0},{"startOffset":23500,"endOffset":23664,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":23676,"endOffset":24204,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24371,"endOffset":24469,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24572,"endOffset":24674,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":24711,"endOffset":24846,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":25133,"endOffset":25742,"count":377},{"startOffset":25206,"endOffset":25256,"count":4},{"startOffset":25256,"endOffset":25313,"count":373},{"startOffset":25313,"endOffset":25323,"count":0},{"startOffset":25323,"endOffset":25390,"count":373},{"startOffset":25355,"endOffset":25365,"count":0},{"startOffset":25390,"endOffset":25418,"count":373},{"startOffset":25418,"endOffset":25430,"count":0},{"startOffset":25437,"endOffset":25447,"count":373},{"startOffset":25447,"endOffset":25470,"count":0},{"startOffset":25470,"endOffset":25499,"count":373},{"startOffset":25499,"endOffset":25509,"count":0},{"startOffset":25509,"endOffset":25548,"count":373},{"startOffset":25548,"endOffset":25582,"count":0},{"startOffset":25582,"endOffset":25657,"count":373},{"startOffset":25657,"endOffset":25698,"count":0},{"startOffset":25698,"endOffset":25741,"count":373}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":25773,"endOffset":26140,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":26272,"endOffset":27446,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":27545,"endOffset":28732,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":29171,"endOffset":30522,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":30553,"endOffset":30672,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":30708,"endOffset":30832,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":30865,"endOffset":30972,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":31156,"endOffset":31257,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":31262,"endOffset":33277,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":33306,"endOffset":34357,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":34388,"endOffset":34630,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":34635,"endOffset":35084,"count":4},{"startOffset":34879,"endOffset":34900,"count":1},{"startOffset":34900,"endOffset":34920,"count":3},{"startOffset":34920,"endOffset":34986,"count":0},{"startOffset":34986,"endOffset":35011,"count":3},{"startOffset":35011,"endOffset":35037,"count":2},{"startOffset":35037,"endOffset":35068,"count":1},{"startOffset":35068,"endOffset":35071,"count":0},{"startOffset":35072,"endOffset":35080,"count":1}],"isBlockCoverage":true},{"functionName":"subarray","ranges":[{"startOffset":35116,"endOffset":35425,"count":2},{"startOffset":35283,"endOffset":35294,"count":0},{"startOffset":35343,"endOffset":35346,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":35455,"endOffset":35523,"count":2}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":35528,"endOffset":35603,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":35633,"endOffset":36050,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":36081,"endOffset":36540,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":36571,"endOffset":37096,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":37423,"endOffset":38141,"count":0}],"isBlockCoverage":false},{"functionName":"btoa","ranges":[{"startOffset":38149,"endOffset":38700,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38982,"endOffset":39026,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39087,"endOffset":39131,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39189,"endOffset":39233,"count":10}],"isBlockCoverage":true},{"functionName":"atob","ranges":[{"startOffset":39418,"endOffset":41427,"count":0}],"isBlockCoverage":false},{"functionName":"isUtf8","ranges":[{"startOffset":41431,"endOffset":41633,"count":0}],"isBlockCoverage":false},{"functionName":"isAscii","ranges":[{"startOffset":41637,"endOffset":41856,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":42274,"endOffset":42309,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":42316,"endOffset":42417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:internal/buffer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32012,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":1229,"endOffset":1449,"count":0}],"isBlockCoverage":false},{"functionName":"checkInt","ranges":[{"startOffset":1453,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"boundsError","ranges":[{"startOffset":2096,"endOffset":2511,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2534,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":3055,"endOffset":3572,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3576,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":4097,"endOffset":4608,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4612,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":5185,"endOffset":5580,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5584,"endOffset":5952,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5956,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":6297,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6597,"endOffset":6865,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6869,"endOffset":7056,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":7060,"endOffset":7629,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7633,"endOffset":8028,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":8032,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":8404,"endOffset":8741,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":8745,"endOffset":9041,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":9045,"endOffset":9313,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":9317,"endOffset":9879,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9883,"endOffset":10327,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":10331,"endOffset":10730,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10734,"endOffset":11080,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":11084,"endOffset":11425,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":11429,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11748,"endOffset":11963,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11967,"endOffset":12529,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":12533,"endOffset":12975,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12979,"endOffset":13379,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":13383,"endOffset":13729,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13733,"endOffset":14074,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":14078,"endOffset":14393,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":14413,"endOffset":14830,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14834,"endOffset":15250,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":15254,"endOffset":15840,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15844,"endOffset":16429,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":16453,"endOffset":16955,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16959,"endOffset":17083,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":17087,"endOffset":17605,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":17609,"endOffset":17733,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":17737,"endOffset":17884,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17888,"endOffset":18035,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":18039,"endOffset":18663,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":18667,"endOffset":19095,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":19099,"endOffset":19492,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":19496,"endOffset":19815,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19819,"endOffset":19927,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19931,"endOffset":20200,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":20204,"endOffset":20407,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16LE","ranges":[{"startOffset":20411,"endOffset":20515,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int8","ranges":[{"startOffset":20519,"endOffset":20943,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20947,"endOffset":21043,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":21047,"endOffset":21671,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":21675,"endOffset":22111,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":22115,"endOffset":22490,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":22494,"endOffset":22821,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":22825,"endOffset":22933,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":22937,"endOffset":23212,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":23216,"endOffset":23419,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":23423,"endOffset":23527,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":23531,"endOffset":24208,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":24212,"endOffset":24329,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":24333,"endOffset":24442,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":24446,"endOffset":24545,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":24549,"endOffset":25226,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":25230,"endOffset":25347,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":25351,"endOffset":25460,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":25482,"endOffset":25962,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":25966,"endOffset":26447,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":26451,"endOffset":26762,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":26766,"endOffset":27078,"count":0}],"isBlockCoverage":false},{"functionName":"FastBuffer","ranges":[{"startOffset":27324,"endOffset":27426,"count":318}],"isBlockCoverage":true},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":27433,"endOffset":30653,"count":1},{"startOffset":29574,"endOffset":29594,"count":0},{"startOffset":29649,"endOffset":29668,"count":0},{"startOffset":29725,"endOffset":29746,"count":0},{"startOffset":29803,"endOffset":29823,"count":0},{"startOffset":29881,"endOffset":29902,"count":0},{"startOffset":29959,"endOffset":29979,"count":0},{"startOffset":30038,"endOffset":30060,"count":0},{"startOffset":30119,"endOffset":30140,"count":0}],"isBlockCoverage":true},{"functionName":"markAsUntransferable","ranges":[{"startOffset":30813,"endOffset":31066,"count":1},{"startOffset":30882,"endOffset":30910,"count":0},{"startOffset":30934,"endOffset":30941,"count":0}],"isBlockCoverage":true},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31351,"endOffset":31494,"count":234}],"isBlockCoverage":true},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":31755,"endOffset":31829,"count":1}],"isBlockCoverage":true}]},{"scriptId":"97","url":"node:internal/worker/js_transferable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2274,"count":1}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":500,"endOffset":1350,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":785,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"makeTransferable","ranges":[{"startOffset":1354,"endOffset":2023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/process/per_thread","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12894,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":1198,"endOffset":1288,"count":0}],"isBlockCoverage":false},{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1451,"endOffset":1927,"count":2}],"isBlockCoverage":true},{"functionName":"hrtime","ranges":[{"startOffset":1981,"endOffset":2502,"count":289},{"startOffset":2055,"endOffset":2415,"count":0}],"isBlockCoverage":true},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":2506,"endOffset":2590,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2594,"endOffset":2611,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":2692,"endOffset":7747,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":2867,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":3177,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":4520,"endOffset":4661,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4709,"endOffset":4945,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4979,"endOffset":6146,"count":0}],"isBlockCoverage":false},{"functionName":"kill","ranges":[{"startOffset":6152,"endOffset":6823,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":6877,"endOffset":7631,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7966,"endOffset":12193,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12389,"endOffset":12729,"count":1},{"startOffset":12470,"endOffset":12651,"count":0},{"startOffset":12683,"endOffset":12726,"count":0}],"isBlockCoverage":true}]},{"scriptId":"99","url":"node:internal/process/task_queues","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4458,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":1028,"endOffset":1105,"count":164}],"isBlockCoverage":true},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1109,"endOffset":1197,"count":2},{"startOffset":1186,"endOffset":1189,"count":1},{"startOffset":1190,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1304,"endOffset":1507,"count":82},{"startOffset":1470,"endOffset":1506,"count":0}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1511,"endOffset":2522,"count":1},{"startOffset":1823,"endOffset":1858,"count":0},{"startOffset":1995,"endOffset":2037,"count":0},{"startOffset":2051,"endOffset":2102,"count":0},{"startOffset":2116,"endOffset":2176,"count":0},{"startOffset":2190,"endOffset":2217,"count":0},{"startOffset":2306,"endOffset":2327,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2670,"endOffset":3575,"count":1},{"startOffset":2775,"endOffset":2782,"count":0},{"startOffset":2834,"endOffset":2848,"count":0},{"startOffset":2897,"endOffset":2948,"count":0},{"startOffset":2954,"endOffset":3019,"count":0},{"startOffset":3025,"endOffset":3172,"count":0},{"startOffset":3485,"endOffset":3545,"count":0}],"isBlockCoverage":true},{"functionName":"runMicrotask","ranges":[{"startOffset":3579,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":3840,"endOffset":4139,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4165,"endOffset":4432,"count":1}],"isBlockCoverage":true}]},{"scriptId":"100","url":"node:internal/process/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11399,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2232,"endOffset":2324,"count":1},{"startOffset":2313,"endOffset":2316,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":2328,"endOffset":2409,"count":164}],"isBlockCoverage":true},{"functionName":"isErrorLike","ranges":[{"startOffset":2413,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2557,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":3110,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3749,"endOffset":3757,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":3832,"endOffset":4137,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":4141,"endOffset":4719,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":4723,"endOffset":5573,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":5648,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6892,"endOffset":10162,"count":1},{"startOffset":7053,"endOffset":7237,"count":0},{"startOffset":7305,"endOffset":10063,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":10166,"endOffset":10696,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":10700,"endOffset":11181,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":11185,"endOffset":11271,"count":1}],"isBlockCoverage":true}]},{"scriptId":"101","url":"node:internal/fixed_queue","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4326,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":3018,"endOffset":3137,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":4}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":1}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":2},{"startOffset":3470,"endOffset":3595,"count":1}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3642,"endOffset":3718,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":1},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4320,"count":2},{"startOffset":4174,"endOffset":4297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"102","url":"node:async_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10679,"count":1}],"isBlockCoverage":false},{"functionName":"AsyncHook","ranges":[{"startOffset":1612,"endOffset":2463,"count":2},{"startOffset":1742,"endOffset":1784,"count":0},{"startOffset":1815,"endOffset":1846,"count":1},{"startOffset":1855,"endOffset":1899,"count":0},{"startOffset":1929,"endOffset":1959,"count":1},{"startOffset":1968,"endOffset":2011,"count":0},{"startOffset":2043,"endOffset":2075,"count":1},{"startOffset":2084,"endOffset":2129,"count":0},{"startOffset":2168,"endOffset":2207,"count":0},{"startOffset":2216,"endOffset":2268,"count":0}],"isBlockCoverage":true},{"functionName":"enable","ranges":[{"startOffset":2469,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":3751,"endOffset":4557,"count":0}],"isBlockCoverage":false},{"functionName":"createHook","ranges":[{"startOffset":4566,"endOffset":4625,"count":2}],"isBlockCoverage":true},{"functionName":"AsyncResource","ranges":[{"startOffset":4726,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"runInAsyncScope","ranges":[{"startOffset":5964,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":6299,"endOffset":6480,"count":0}],"isBlockCoverage":false},{"functionName":"asyncId","ranges":[{"startOffset":6486,"endOffset":6537,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":6543,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":6615,"endOffset":7685,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":7698,"endOffset":7838,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":7906,"endOffset":8200,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncLocalStorage","ranges":[{"startOffset":8239,"endOffset":8339,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":8352,"endOffset":8403,"count":0}],"isBlockCoverage":false},{"functionName":"snapshot","ranges":[{"startOffset":8416,"endOffset":8499,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":8505,"endOffset":8840,"count":0}],"isBlockCoverage":false},{"functionName":"_enable","ranges":[{"startOffset":8846,"endOffset":8998,"count":0}],"isBlockCoverage":false},{"functionName":"_propagate","ranges":[{"startOffset":9070,"endOffset":9255,"count":0}],"isBlockCoverage":false},{"functionName":"enterWith","ranges":[{"startOffset":9261,"endOffset":9397,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":9403,"endOffset":9919,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":9925,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"getStore","ranges":[{"startOffset":10173,"endOffset":10317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10014,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1877,"endOffset":1904,"count":0}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2420,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"enroll","ranges":[{"startOffset":3851,"endOffset":4113,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":4368,"endOffset":5053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5153,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":5390,"endOffset":5769,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":6018,"endOffset":6705,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":6809,"endOffset":7112,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":7142,"endOffset":7196,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":7236,"endOffset":7274,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":7390,"endOffset":7558,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7786,"endOffset":8363,"count":1170},{"startOffset":7981,"endOffset":8024,"count":0},{"startOffset":8030,"endOffset":8079,"count":0},{"startOffset":8085,"endOffset":8312,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8465,"endOffset":8596,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":8695,"endOffset":9265,"count":784},{"startOffset":8750,"endOffset":8773,"count":783},{"startOffset":8780,"endOffset":8787,"count":101},{"startOffset":8787,"endOffset":8877,"count":683},{"startOffset":8877,"endOffset":8912,"count":0},{"startOffset":8914,"endOffset":9031,"count":0},{"startOffset":9031,"endOffset":9090,"count":683},{"startOffset":9090,"endOffset":9133,"count":0},{"startOffset":9135,"endOffset":9187,"count":0},{"startOffset":9187,"endOffset":9264,"count":683}],"isBlockCoverage":true},{"functionName":"Immediate.<computed>","ranges":[{"startOffset":9306,"endOffset":9346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/process/execution","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8016,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":931,"endOffset":1270,"count":1},{"startOffset":995,"endOffset":1267,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":1274,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1680,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":4300,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":5016,"endOffset":5119,"count":4}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":5123,"endOffset":5141,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":5694,"endOffset":7565,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5967,"endOffset":7561,"count":0}],"isBlockCoverage":false},{"functionName":"readStdin","ranges":[{"startOffset":7569,"endOffset":7785,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"node:path","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":48397,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":509285},{"startOffset":1841,"endOffset":1872,"count":508399}],"isBlockCoverage":true},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1880,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":12980},{"startOffset":2036,"endOffset":2063,"count":12747},{"startOffset":2065,"endOffset":2132,"count":749},{"startOffset":2104,"endOffset":2131,"count":516}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":6204},{"startOffset":2425,"endOffset":4194,"count":469771},{"startOffset":2460,"endOffset":2502,"count":463567},{"startOffset":2502,"endOffset":2597,"count":6204},{"startOffset":2547,"endOffset":2553,"count":6118},{"startOffset":2553,"endOffset":2597,"count":86},{"startOffset":2597,"endOffset":2632,"count":463653},{"startOffset":2632,"endOffset":4090,"count":41586},{"startOffset":2665,"endOffset":2678,"count":40866},{"startOffset":2680,"endOffset":2707,"count":839},{"startOffset":2707,"endOffset":4044,"count":40747},{"startOffset":2729,"endOffset":3793,"count":25},{"startOffset":2759,"endOffset":2785,"count":15},{"startOffset":2786,"endOffset":2861,"count":0},{"startOffset":2862,"endOffset":2937,"count":0},{"startOffset":2972,"endOffset":3462,"count":15},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3462,"endOffset":3637,"count":10},{"startOffset":3490,"endOffset":3637,"count":0},{"startOffset":3648,"endOffset":3784,"count":10},{"startOffset":3713,"endOffset":3731,"count":0},{"startOffset":3793,"endOffset":4044,"count":40722},{"startOffset":3841,"endOffset":3910,"count":34885},{"startOffset":3910,"endOffset":3987,"count":5837},{"startOffset":4044,"endOffset":4090,"count":41571},{"startOffset":4090,"endOffset":4189,"count":422067},{"startOffset":4118,"endOffset":4132,"count":3182},{"startOffset":4134,"endOffset":4157,"count":171},{"startOffset":4157,"endOffset":4189,"count":421896}],"isBlockCoverage":true},{"functionName":"formatExt","ranges":[{"startOffset":4216,"endOffset":4303,"count":0}],"isBlockCoverage":false},{"functionName":"_format","ranges":[{"startOffset":4494,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4964,"endOffset":9889,"count":6119},{"startOffset":5127,"endOffset":9422,"count":6629},{"startOffset":5165,"endOffset":5345,"count":6621},{"startOffset":5303,"endOffset":5336,"count":0},{"startOffset":5345,"endOffset":6310,"count":8},{"startOffset":5425,"endOffset":6310,"count":0},{"startOffset":6310,"endOffset":6534,"count":6628},{"startOffset":6534,"endOffset":6699,"count":0},{"startOffset":6699,"endOffset":8719,"count":6628},{"startOffset":6732,"endOffset":8254,"count":32},{"startOffset":7174,"endOffset":7247,"count":64},{"startOffset":7514,"endOffset":7588,"count":64},{"startOffset":7805,"endOffset":7882,"count":96},{"startOffset":7884,"endOffset":7924,"count":64},{"startOffset":8203,"endOffset":8245,"count":0},{"startOffset":8254,"endOffset":8719,"count":6596},{"startOffset":8290,"endOffset":8361,"count":6508},{"startOffset":8363,"endOffset":8719,"count":6086},{"startOffset":8719,"endOffset":8752,"count":6628},{"startOffset":8752,"endOffset":9080,"count":6118},{"startOffset":8794,"endOffset":9017,"count":0},{"startOffset":9080,"endOffset":9112,"count":6628},{"startOffset":9112,"endOffset":9180,"count":0},{"startOffset":9180,"endOffset":9415,"count":6628},{"startOffset":9346,"endOffset":9374,"count":6118},{"startOffset":9376,"endOffset":9406,"count":6118},{"startOffset":9422,"endOffset":9832,"count":6118},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":9961,"endOffset":13124,"count":86},{"startOffset":10071,"endOffset":10082,"count":0},{"startOffset":10255,"endOffset":10412,"count":0},{"startOffset":10445,"endOffset":12177,"count":0},{"startOffset":12213,"endOffset":12281,"count":18},{"startOffset":12283,"endOffset":12619,"count":18},{"startOffset":12773,"endOffset":12784,"count":0},{"startOffset":12813,"endOffset":12827,"count":0},{"startOffset":12836,"endOffset":12847,"count":0},{"startOffset":12951,"endOffset":12964,"count":0},{"startOffset":12996,"endOffset":13051,"count":68},{"startOffset":13023,"endOffset":13036,"count":0},{"startOffset":13051,"endOffset":13097,"count":18},{"startOffset":13098,"endOffset":13118,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":13197,"endOffset":13626,"count":210},{"startOffset":13308,"endOffset":13321,"count":0},{"startOffset":13462,"endOffset":13497,"count":209},{"startOffset":13498,"endOffset":13557,"count":132},{"startOffset":13558,"endOffset":13619,"count":40}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":13701,"endOffset":15911,"count":18},{"startOffset":13752,"endOffset":13763,"count":0},{"startOffset":13846,"endOffset":14075,"count":40},{"startOffset":13987,"endOffset":14012,"count":18},{"startOffset":14012,"endOffset":14059,"count":22},{"startOffset":14116,"endOffset":14127,"count":0},{"startOffset":15016,"endOffset":15479,"count":0},{"startOffset":15690,"endOffset":15723,"count":0},{"startOffset":15803,"endOffset":15860,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":16218,"endOffset":20101,"count":2},{"startOffset":16336,"endOffset":16346,"count":0},{"startOffset":16470,"endOffset":16480,"count":0},{"startOffset":16610,"endOffset":16620,"count":0},{"startOffset":16803,"endOffset":16831,"count":0},{"startOffset":17059,"endOffset":17085,"count":0},{"startOffset":17300,"endOffset":17326,"count":0},{"startOffset":17533,"endOffset":17557,"count":0},{"startOffset":17706,"endOffset":17713,"count":0},{"startOffset":17789,"endOffset":18031,"count":100},{"startOffset":17940,"endOffset":17946,"count":0},{"startOffset":18006,"endOffset":18024,"count":8},{"startOffset":18171,"endOffset":18236,"count":0},{"startOffset":18584,"endOffset":18789,"count":0},{"startOffset":18798,"endOffset":19343,"count":0},{"startOffset":19350,"endOffset":20100,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20173,"endOffset":21304,"count":4770},{"startOffset":20313,"endOffset":20325,"count":0},{"startOffset":20419,"endOffset":20431,"count":0},{"startOffset":20511,"endOffset":20930,"count":32},{"startOffset":20729,"endOffset":20749,"count":0},{"startOffset":20751,"endOffset":20914,"count":0},{"startOffset":20930,"endOffset":21279,"count":4738},{"startOffset":21279,"endOffset":21303,"count":32}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":21376,"endOffset":24011,"count":337},{"startOffset":21484,"endOffset":21495,"count":4},{"startOffset":21495,"endOffset":21616,"count":333},{"startOffset":21616,"endOffset":21780,"count":0},{"startOffset":21780,"endOffset":21843,"count":333},{"startOffset":21843,"endOffset":23263,"count":0},{"startOffset":23263,"endOffset":23500,"count":333},{"startOffset":23369,"endOffset":23500,"count":331},{"startOffset":23464,"endOffset":23467,"count":0},{"startOffset":23500,"endOffset":23597,"count":333},{"startOffset":23597,"endOffset":23854,"count":5934},{"startOffset":23663,"endOffset":23752,"count":333},{"startOffset":23752,"endOffset":23847,"count":5601},{"startOffset":23854,"endOffset":23878,"count":333},{"startOffset":23878,"endOffset":23958,"count":0},{"startOffset":23958,"endOffset":24010,"count":333}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":24114,"endOffset":26969,"count":84},{"startOffset":24177,"endOffset":24207,"count":0},{"startOffset":24705,"endOffset":24725,"count":0},{"startOffset":24726,"endOffset":24757,"count":0},{"startOffset":24759,"endOffset":26325,"count":0},{"startOffset":26378,"endOffset":26871,"count":1504},{"startOffset":26444,"endOffset":26675,"count":84},{"startOffset":26675,"endOffset":26864,"count":1420},{"startOffset":26697,"endOffset":26864,"count":84},{"startOffset":26902,"endOffset":26912,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":27041,"endOffset":29176,"count":1026},{"startOffset":27622,"endOffset":27689,"count":862},{"startOffset":27691,"endOffset":27729,"count":862},{"startOffset":27784,"endOffset":28768,"count":16651},{"startOffset":27876,"endOffset":28130,"count":1026},{"startOffset":28102,"endOffset":28130,"count":0},{"startOffset":28130,"endOffset":28154,"count":15625},{"startOffset":28154,"endOffset":28316,"count":1026},{"startOffset":28316,"endOffset":28347,"count":15625},{"startOffset":28347,"endOffset":28553,"count":1031},{"startOffset":28466,"endOffset":28479,"count":1026},{"startOffset":28479,"endOffset":28544,"count":5},{"startOffset":28553,"endOffset":28761,"count":14594},{"startOffset":28580,"endOffset":28761,"count":12486},{"startOffset":29014,"endOffset":29047,"count":0},{"startOffset":29048,"endOffset":29087,"count":0},{"startOffset":29090,"endOffset":29116,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":29412,"endOffset":34318,"count":72},{"startOffset":29567,"endOffset":29578,"count":0},{"startOffset":29707,"endOffset":29971,"count":0},{"startOffset":30032,"endOffset":31247,"count":0},{"startOffset":31407,"endOffset":31570,"count":0},{"startOffset":31681,"endOffset":31854,"count":0},{"startOffset":32314,"endOffset":33292,"count":1085},{"startOffset":32400,"endOffset":32654,"count":72},{"startOffset":32626,"endOffset":32654,"count":0},{"startOffset":32654,"endOffset":32678,"count":1013},{"startOffset":32678,"endOffset":32840,"count":72},{"startOffset":32840,"endOffset":32871,"count":1013},{"startOffset":32871,"endOffset":33077,"count":73},{"startOffset":32990,"endOffset":33003,"count":72},{"startOffset":33003,"endOffset":33068,"count":1},{"startOffset":33077,"endOffset":33285,"count":940},{"startOffset":33104,"endOffset":33285,"count":794},{"startOffset":33548,"endOffset":33583,"count":0},{"startOffset":33584,"endOffset":33625,"count":0},{"startOffset":33628,"endOffset":33713,"count":0},{"startOffset":34257,"endOffset":34294,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34412,"endOffset":34868,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34604,"endOffset":34764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34845,"endOffset":34864,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":34998,"endOffset":35950,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":36022,"endOffset":36658,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":36731,"endOffset":36891,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":36966,"endOffset":37397,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":37494,"endOffset":39924,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":39996,"endOffset":40075,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":40147,"endOffset":40847,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":40950,"endOffset":43450,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":43522,"endOffset":45262,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":45503,"endOffset":48054,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:internal/constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1639,"count":1}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5078,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":539,"endOffset":666,"count":6}],"isBlockCoverage":true},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":670,"endOffset":1836,"count":7},{"startOffset":785,"endOffset":1006,"count":0},{"startOffset":1284,"endOffset":1835,"count":0}],"isBlockCoverage":true},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":1840,"endOffset":2213,"count":81}],"isBlockCoverage":true},{"functionName":"internalCompileFunction","ranges":[{"startOffset":2217,"endOffset":3134,"count":81},{"startOffset":2680,"endOffset":2755,"count":0},{"startOffset":2784,"endOffset":2843,"count":0},{"startOffset":2901,"endOffset":2976,"count":0}],"isBlockCoverage":true},{"functionName":"makeContextifyScript","ranges":[{"startOffset":3138,"endOffset":4397,"count":0}],"isBlockCoverage":false},{"functionName":"runScriptInThisContext","ranges":[{"startOffset":4501,"endOffset":4893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"node:internal/process/warning","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5573,"count":1}],"isBlockCoverage":false},{"functionName":"resetForSerialization","ranges":[{"startOffset":474,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":682,"endOffset":1251,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":1357,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"closeFdOnExit","ranges":[{"startOffset":1488,"endOffset":1605,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":1609,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1957,"endOffset":2030,"count":0}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":2034,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":3343,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarningSync","ranges":[{"startOffset":4576,"endOffset":4708,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":4712,"endOffset":5469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10460,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":371,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":852,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1643,"endOffset":1708,"count":121}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1712,"endOffset":2272,"count":3},{"startOffset":1984,"endOffset":2239,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2276,"endOffset":2892,"count":118},{"startOffset":2583,"endOffset":2618,"count":0},{"startOffset":2674,"endOffset":2812,"count":0},{"startOffset":2814,"endOffset":2891,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMapURLMagicComment","ranges":[{"startOffset":2896,"endOffset":3351,"count":79},{"startOffset":3222,"endOffset":3252,"count":77},{"startOffset":3279,"endOffset":3303,"count":3},{"startOffset":3303,"endOffset":3350,"count":76}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3355,"endOffset":5189,"count":109},{"startOffset":3559,"endOffset":3579,"count":0},{"startOffset":3582,"endOffset":3589,"count":0},{"startOffset":3727,"endOffset":3855,"count":0},{"startOffset":3893,"endOffset":3961,"count":79},{"startOffset":4053,"endOffset":4072,"count":3},{"startOffset":4072,"endOffset":4251,"count":106},{"startOffset":4252,"endOffset":4266,"count":0},{"startOffset":4294,"endOffset":4488,"count":0},{"startOffset":4488,"endOffset":5186,"count":106},{"startOffset":4517,"endOffset":4795,"count":0},{"startOffset":5125,"endOffset":5181,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheGeneratedSourceMap","ranges":[{"startOffset":5193,"endOffset":5736,"count":12},{"startOffset":5333,"endOffset":5353,"count":0},{"startOffset":5356,"endOffset":5363,"count":0},{"startOffset":5472,"endOffset":5733,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5740,"endOffset":6276,"count":106},{"startOffset":5881,"endOffset":5957,"count":0},{"startOffset":5965,"endOffset":6047,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6471,"endOffset":6823,"count":106}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6777,"endOffset":6818,"count":18124}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6827,"endOffset":7117,"count":106},{"startOffset":7061,"endOffset":7114,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":7215,"endOffset":7905,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8095,"endOffset":8431,"count":106}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8174,"endOffset":8283,"count":113}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":8878,"endOffset":9139,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":9143,"endOffset":9378,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":9382,"endOffset":10280,"count":7},{"startOffset":9558,"endOffset":9634,"count":1},{"startOffset":9805,"endOffset":10004,"count":0},{"startOffset":10067,"endOffset":10279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"node:internal/url","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44958,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBlob","ranges":[{"startOffset":2908,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"lazyCryptoRandom","ranges":[{"startOffset":2990,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3623,"endOffset":4453,"count":1253}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3753,"endOffset":3781,"count":1}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4221,"endOffset":4288,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4294,"endOffset":4371,"count":3995}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4377,"endOffset":4450,"count":3995}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4545,"endOffset":6965,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7370,"endOffset":20652,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7467,"endOffset":7815,"count":1}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsContext","ranges":[{"startOffset":7509,"endOffset":7558,"count":0}],"isBlockCoverage":false},{"functionName":"getURLSearchParamsList","ranges":[{"startOffset":7590,"endOffset":7616,"count":0}],"isBlockCoverage":false},{"functionName":"setURLSearchParams","ranges":[{"startOffset":7644,"endOffset":7809,"count":0}],"isBlockCoverage":false},{"functionName":"isURL","ranges":[{"startOffset":22025,"endOffset":22152,"count":3120},{"startOffset":22077,"endOffset":22093,"count":1591},{"startOffset":22094,"endOffset":22120,"count":1591},{"startOffset":22121,"endOffset":22147,"count":1591}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22156,"endOffset":30253,"count":2190}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":22223,"endOffset":22536,"count":3543},{"startOffset":22295,"endOffset":22345,"count":0},{"startOffset":22439,"endOffset":22472,"count":985}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22542,"endOffset":23287,"count":0}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":23293,"endOffset":24232,"count":3855},{"startOffset":24034,"endOffset":24227,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24238,"endOffset":24287,"count":855}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":24293,"endOffset":24342,"count":2426}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":24348,"endOffset":24566,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":24587,"endOffset":25485,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":25491,"endOffset":25597,"count":4694}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":25603,"endOffset":25781,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":25787,"endOffset":26019,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":26025,"endOffset":26203,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":26209,"endOffset":26437,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":26443,"endOffset":26621,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":26627,"endOffset":27069,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":27075,"endOffset":27245,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":27251,"endOffset":27540,"count":2153},{"startOffset":27420,"endOffset":27447,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":27546,"endOffset":27724,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":27730,"endOffset":27843,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":27849,"endOffset":28019,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":28025,"endOffset":28325,"count":3723},{"startOffset":28093,"endOffset":28145,"count":0},{"startOffset":28178,"endOffset":28228,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":28331,"endOffset":28509,"count":274}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":28515,"endOffset":28856,"count":272},{"startOffset":28579,"endOffset":28855,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":28862,"endOffset":29044,"count":272}],"isBlockCoverage":true},{"functionName":"get searchParams","ranges":[{"startOffset":29065,"endOffset":29371,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":29377,"endOffset":29597,"count":272},{"startOffset":29422,"endOffset":29484,"count":0},{"startOffset":29512,"endOffset":29596,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":29603,"endOffset":29773,"count":272}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":29779,"endOffset":29826,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":29839,"endOffset":30250,"count":0}],"isBlockCoverage":false},{"functionName":"installObjectURLMethods","ranges":[{"startOffset":30992,"endOffset":31970,"count":1}],"isBlockCoverage":true},{"functionName":"createObjectURL","ranges":[{"startOffset":31082,"endOffset":31515,"count":0}],"isBlockCoverage":false},{"functionName":"revokeObjectURL","ranges":[{"startOffset":31521,"endOffset":31601,"count":0}],"isBlockCoverage":false},{"functionName":"parseParams","ranges":[{"startOffset":32083,"endOffset":34526,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":35530,"endOffset":36106,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":36129,"endOffset":36785,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":36789,"endOffset":36980,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":36984,"endOffset":37179,"count":0}],"isBlockCoverage":false},{"functionName":"urlToHttpOptions","ranges":[{"startOffset":37397,"endOffset":38120,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":38124,"endOffset":39654,"count":2153},{"startOffset":38271,"endOffset":38650,"count":223463},{"startOffset":38303,"endOffset":38645,"count":0},{"startOffset":38808,"endOffset":39254,"count":0},{"startOffset":39538,"endOffset":39606,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":39658,"endOffset":40195,"count":0}],"isBlockCoverage":false},{"functionName":"fileURLToPath","ranges":[{"startOffset":40199,"endOffset":40546,"count":2153},{"startOffset":40268,"endOffset":40289,"count":721},{"startOffset":40289,"endOffset":40385,"count":1432},{"startOffset":40321,"endOffset":40385,"count":0},{"startOffset":40425,"endOffset":40466,"count":0},{"startOffset":40515,"endOffset":40542,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":41380,"endOffset":42169,"count":364},{"startOffset":41475,"endOffset":41546,"count":0},{"startOffset":41622,"endOffset":41670,"count":0},{"startOffset":41677,"endOffset":41750,"count":0},{"startOffset":41810,"endOffset":41881,"count":0},{"startOffset":41941,"endOffset":42019,"count":0},{"startOffset":42079,"endOffset":42146,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":42173,"endOffset":44196,"count":364},{"startOffset":42273,"endOffset":43061,"count":0},{"startOffset":43348,"endOffset":43410,"count":363},{"startOffset":43412,"endOffset":43464,"count":2},{"startOffset":43471,"endOffset":43487,"count":2},{"startOffset":43953,"endOffset":44025,"count":0},{"startOffset":44084,"endOffset":44152,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":44200,"endOffset":44341,"count":1685},{"startOffset":44277,"endOffset":44298,"count":1526},{"startOffset":44298,"endOffset":44340,"count":159}],"isBlockCoverage":true},{"functionName":"getURLOrigin","ranges":[{"startOffset":44536,"endOffset":44604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/querystring","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3435,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1578,"endOffset":3365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:querystring","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15067,"count":1}],"isBlockCoverage":false},{"functionName":"unescapeBuffer","ranges":[{"startOffset":3229,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"qsUnescape","ranges":[{"startOffset":4530,"endOffset":4701,"count":0}],"isBlockCoverage":false},{"functionName":"qsEscape","ranges":[{"startOffset":5580,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyPrimitive","ranges":[{"startOffset":5896,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStringified","ranges":[{"startOffset":6304,"endOffset":6806,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStringifiedCustom","ranges":[{"startOffset":6932,"endOffset":7021,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":7291,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"charCodes","ranges":[{"startOffset":8461,"endOffset":8736,"count":0}],"isBlockCoverage":false},{"functionName":"addKeyVal","ranges":[{"startOffset":8803,"endOffset":9444,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":9708,"endOffset":14650,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStr","ranges":[{"startOffset":14936,"endOffset":15065,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/bootstrap/web/exposed-wildcard","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3553,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":932,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1190,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"createGlobalConsole","ranges":[{"startOffset":1957,"endOffset":2509,"count":1}],"isBlockCoverage":true}]},{"scriptId":"114","url":"node:internal/console/global","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1862,"count":1}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:internal/console/constructor","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22330,"count":1}],"isBlockCoverage":false},{"functionName":"lazyUtilColors","ranges":[{"startOffset":1957,"endOffset":2060,"count":0}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2824,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5221,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5558,"endOffset":5804,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6036,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6253,"endOffset":6351,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6364,"endOffset":6394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6530,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6645,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6803,"endOffset":8247,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":8344,"endOffset":9834,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9934,"endOffset":10359,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10457,"endOffset":10641,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":10739,"endOffset":10923,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":11018,"endOffset":11925,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11921,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11957,"endOffset":12046,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":12055,"endOffset":12145,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":12154,"endOffset":12346,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":12353,"endOffset":12720,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":12727,"endOffset":13024,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":13031,"endOffset":13274,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":13288,"endOffset":13482,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":13489,"endOffset":13735,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":13799,"endOffset":14284,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":14348,"endOffset":14817,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":14886,"endOffset":15182,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":15189,"endOffset":15380,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":15387,"endOffset":15562,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":15614,"endOffset":19043,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":19088,"endOffset":19624,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":19628,"endOffset":19707,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":19711,"endOffset":20515,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":20656,"endOffset":20712,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":20717,"endOffset":20735,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":21114,"endOffset":22184,"count":1},{"startOffset":21495,"endOffset":22183,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22074,"endOffset":22179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:internal/util/inspector","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4044,"count":1}],"isBlockCoverage":false},{"functionName":"isUsingInspector","ranges":[{"startOffset":720,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"getInspectPort","ranges":[{"startOffset":1140,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":1547,"endOffset":2108,"count":0}],"isBlockCoverage":false},{"functionName":"isInspectorMessage","ranges":[{"startOffset":2112,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":2317,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":3053,"endOffset":3883,"count":1},{"startOffset":3222,"endOffset":3880,"count":24},{"startOffset":3457,"endOffset":3754,"count":19},{"startOffset":3754,"endOffset":3875,"count":5}],"isBlockCoverage":true}]},{"scriptId":"117","url":"node:internal/process/permission","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":954,"count":1}],"isBlockCoverage":false},{"functionName":"isEnabled","ranges":[{"startOffset":330,"endOffset":580,"count":1608},{"startOffset":391,"endOffset":539,"count":1}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":585,"endOffset":946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/event_target","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32811,"count":1}],"isBlockCoverage":false},{"functionName":"get isTrusted","ranges":[{"startOffset":2229,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"isEvent","ranges":[{"startOffset":2435,"endOffset":2509,"count":576}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2513,"endOffset":7437,"count":288}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":2845,"endOffset":3343,"count":288},{"startOffset":2929,"endOffset":2964,"count":0},{"startOffset":3231,"endOffset":3270,"count":0}],"isBlockCoverage":true},{"functionName":"initEvent","ranges":[{"startOffset":3459,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3761,"endOffset":4293,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":4299,"endOffset":4426,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":4432,"endOffset":4560,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":4606,"endOffset":4721,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":4767,"endOffset":4889,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":4935,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":5095,"endOffset":5206,"count":288},{"startOffset":5140,"endOffset":5176,"count":0}],"isBlockCoverage":true},{"functionName":"get cancelable","ranges":[{"startOffset":5248,"endOffset":5370,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":5412,"endOffset":5566,"count":288},{"startOffset":5469,"endOffset":5505,"count":0},{"startOffset":5535,"endOffset":5560,"count":0}],"isBlockCoverage":true},{"functionName":"get timeStamp","ranges":[{"startOffset":5607,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":5954,"endOffset":6105,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":6147,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":6340,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":6498,"endOffset":6616,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":6657,"endOffset":6818,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":6860,"endOffset":6992,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":7034,"endOffset":7189,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":7195,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":7408,"endOffset":7433,"count":1}],"isBlockCoverage":false},{"functionName":"isCustomEvent","ranges":[{"startOffset":8603,"endOffset":8699,"count":0}],"isBlockCoverage":false},{"functionName":"CustomEvent","ranges":[{"startOffset":8942,"endOffset":9139,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":9177,"endOffset":9304,"count":0}],"isBlockCoverage":false},{"functionName":"NodeCustomEvent","ranges":[{"startOffset":9592,"endOffset":9724,"count":0}],"isBlockCoverage":false},{"functionName":"weakListeners","ranges":[{"startOffset":9983,"endOffset":10316,"count":0}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":11014,"endOffset":12525,"count":688},{"startOffset":11359,"endOffset":11378,"count":0},{"startOffset":11404,"endOffset":11426,"count":0},{"startOffset":11452,"endOffset":11474,"count":0},{"startOffset":11559,"endOffset":11578,"count":0},{"startOffset":11618,"endOffset":11654,"count":0},{"startOffset":11731,"endOffset":12199,"count":0},{"startOffset":12315,"endOffset":12520,"count":0}],"isBlockCoverage":true},{"functionName":"Listener.callback","ranges":[{"startOffset":12346,"endOffset":12479,"count":0}],"isBlockCoverage":false},{"functionName":"get once","ranges":[{"startOffset":12531,"endOffset":12593,"count":15}],"isBlockCoverage":true},{"functionName":"get capture","ranges":[{"startOffset":12597,"endOffset":12665,"count":101}],"isBlockCoverage":true},{"functionName":"get passive","ranges":[{"startOffset":12669,"endOffset":12737,"count":15}],"isBlockCoverage":true},{"functionName":"get isNodeStyleListener","ranges":[{"startOffset":12741,"endOffset":12823,"count":30}],"isBlockCoverage":true},{"functionName":"get weak","ranges":[{"startOffset":12827,"endOffset":12889,"count":905}],"isBlockCoverage":true},{"functionName":"get resistStopPropagation","ranges":[{"startOffset":12893,"endOffset":12989,"count":0}],"isBlockCoverage":false},{"functionName":"get removed","ranges":[{"startOffset":12993,"endOffset":13061,"count":15}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":13065,"endOffset":13187,"count":789},{"startOffset":13109,"endOffset":13136,"count":101},{"startOffset":13136,"endOffset":13182,"count":688}],"isBlockCoverage":true},{"functionName":"same","ranges":[{"startOffset":13193,"endOffset":13363,"count":101},{"startOffset":13253,"endOffset":13276,"count":0}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":13369,"endOffset":13634,"count":101},{"startOffset":13498,"endOffset":13533,"count":0},{"startOffset":13587,"endOffset":13629,"count":0}],"isBlockCoverage":true},{"functionName":"initEventTarget","ranges":[{"startOffset":13641,"endOffset":13865,"count":293}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":14079,"endOffset":14109,"count":1}],"isBlockCoverage":false},{"functionName":"EventTarget","ranges":[{"startOffset":14116,"endOffset":14164,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14170,"endOffset":14992,"count":688},{"startOffset":14333,"endOffset":14382,"count":0},{"startOffset":14384,"endOffset":14987,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14996,"endOffset":15047,"count":101}],"isBlockCoverage":true},{"functionName":"addEventListener","ranges":[{"startOffset":15457,"endOffset":18257,"count":688},{"startOffset":15554,"endOffset":15596,"count":0},{"startOffset":15635,"endOffset":15682,"count":0},{"startOffset":16090,"endOffset":16554,"count":0},{"startOffset":16621,"endOffset":17014,"count":0},{"startOffset":17596,"endOffset":17792,"count":0},{"startOffset":17794,"endOffset":18256,"count":0}],"isBlockCoverage":true},{"functionName":"signal.addEventListener.__proto__","ranges":[{"startOffset":16842,"endOffset":16918,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":18424,"endOffset":19292,"count":582},{"startOffset":18524,"endOffset":18566,"count":0},{"startOffset":18605,"endOffset":18652,"count":0},{"startOffset":18703,"endOffset":18710,"count":0},{"startOffset":18881,"endOffset":18907,"count":101},{"startOffset":18916,"endOffset":18923,"count":481},{"startOffset":18923,"endOffset":19287,"count":101},{"startOffset":19249,"endOffset":19287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19298,"endOffset":19939,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":19986,"endOffset":20462,"count":288},{"startOffset":20047,"endOffset":20089,"count":0},{"startOffset":20128,"endOffset":20164,"count":0},{"startOffset":20210,"endOffset":20266,"count":0},{"startOffset":20312,"endOffset":20354,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20468,"endOffset":22840,"count":303},{"startOffset":20776,"endOffset":20855,"count":288},{"startOffset":20929,"endOffset":20955,"count":15},{"startOffset":20957,"endOffset":21061,"count":288},{"startOffset":21061,"endOffset":22761,"count":15},{"startOffset":21494,"endOffset":21503,"count":0},{"startOffset":21513,"endOffset":21546,"count":0},{"startOffset":21549,"endOffset":21886,"count":0},{"startOffset":21912,"endOffset":22087,"count":0},{"startOffset":22203,"endOffset":22253,"count":0},{"startOffset":22293,"endOffset":22330,"count":0},{"startOffset":22506,"endOffset":22566,"count":0},{"startOffset":22612,"endOffset":22630,"count":12},{"startOffset":22643,"endOffset":22660,"count":12},{"startOffset":22670,"endOffset":22729,"count":0},{"startOffset":22761,"endOffset":22801,"count":15},{"startOffset":22801,"endOffset":22835,"count":0}],"isBlockCoverage":true},{"functionName":"createEvent","ranges":[{"startOffset":20537,"endOffset":20744,"count":0}],"isBlockCoverage":false},{"functionName":"iterationCondition","ranges":[{"startOffset":21143,"endOffset":21313,"count":30},{"startOffset":21185,"endOffset":21278,"count":15},{"startOffset":21279,"endOffset":21305,"count":15},{"startOffset":21287,"endOffset":21296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22846,"endOffset":22946,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22950,"endOffset":23341,"count":0}],"isBlockCoverage":false},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":23682,"endOffset":23747,"count":292}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":23837,"endOffset":23868,"count":1}],"isBlockCoverage":false},{"functionName":"NodeEventTarget","ranges":[{"startOffset":23875,"endOffset":23941,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":23985,"endOffset":24143,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxListeners","ranges":[{"startOffset":24187,"endOffset":24344,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":24390,"endOffset":24543,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":24614,"endOffset":24828,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":25028,"endOffset":25226,"count":582},{"startOffset":25101,"endOffset":25147,"count":0}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":25426,"endOffset":25635,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":25773,"endOffset":25983,"count":688},{"startOffset":25836,"endOffset":25882,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":26121,"endOffset":26340,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":26435,"endOffset":26702,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":26840,"endOffset":27091,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":27173,"endOffset":27438,"count":0}],"isBlockCoverage":false},{"functionName":"validateEventListener","ranges":[{"startOffset":27922,"endOffset":28309,"count":1270},{"startOffset":28003,"endOffset":28056,"count":0},{"startOffset":28082,"endOffset":28308,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":28313,"endOffset":28916,"count":688},{"startOffset":28404,"endOffset":28432,"count":0},{"startOffset":28465,"endOffset":28485,"count":0}],"isBlockCoverage":true},{"functionName":"isEventTarget","ranges":[{"startOffset":29228,"endOffset":29306,"count":1558}],"isBlockCoverage":true},{"functionName":"isNodeEventTarget","ranges":[{"startOffset":29310,"endOffset":29396,"count":1270}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":29400,"endOffset":29723,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29549,"endOffset":29713,"count":0}],"isBlockCoverage":false},{"functionName":"emitUncaughtException","ranges":[{"startOffset":29727,"endOffset":29810,"count":0}],"isBlockCoverage":false},{"functionName":"makeEventHandler","ranges":[{"startOffset":29814,"endOffset":30234,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":30238,"endOffset":31749,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30401,"endOffset":30540,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30645,"endOffset":31503,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":31779,"endOffset":32487,"count":1},{"startOffset":32221,"endOffset":32387,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":31850,"endOffset":31995,"count":226}],"isBlockCoverage":true}]},{"scriptId":"119","url":"node:util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11330,"count":1}],"isBlockCoverage":false},{"functionName":"lazyAbortController","ranges":[{"startOffset":2451,"endOffset":2574,"count":12}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":2694,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2849,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":3003,"endOffset":3084,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":3177,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":3303,"endOffset":3365,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":3458,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":3616,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":3779,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":3947,"endOffset":4052,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":4147,"endOffset":4213,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":4355,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":4535,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":4786,"endOffset":5075,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":5241,"endOffset":5399,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":6148,"endOffset":6805,"count":0}],"isBlockCoverage":false},{"functionName":"_extend","ranges":[{"startOffset":6968,"endOffset":7266,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7316,"endOffset":7750,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":8013,"endOffset":9544,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":9604,"endOffset":9826,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":10247,"endOffset":10458,"count":0}],"isBlockCoverage":false},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10728,"endOffset":10823,"count":4}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10828,"endOffset":10931,"count":4}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":10936,"endOffset":10999,"count":4}],"isBlockCoverage":true}]},{"scriptId":"120","url":"node:internal/webidl","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4816,"count":1}],"isBlockCoverage":false},{"functionName":"evenRound","ranges":[{"startOffset":858,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"pow2","ranges":[{"startOffset":1201,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"modulo","ranges":[{"startOffset":1592,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"convertToInt","ranges":[{"startOffset":1781,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"DOMString","ranges":[{"startOffset":4605,"endOffset":4741,"count":1270},{"startOffset":4659,"endOffset":4715,"count":0}],"isBlockCoverage":true}]},{"scriptId":"121","url":"node:internal/perf/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":820,"count":1}],"isBlockCoverage":false},{"functionName":"getTimeOrigin","ranges":[{"startOffset":147,"endOffset":329,"count":289}],"isBlockCoverage":true},{"functionName":"now","ranges":[{"startOffset":406,"endOffset":515,"count":289}],"isBlockCoverage":true},{"functionName":"getMilestoneTimestamp","ranges":[{"startOffset":597,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"node:internal/bootstrap/web/exposed-window-or-worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2245,"count":1}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/bootstrap/switches/is_not_main_thread","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1231,"count":1}],"isBlockCoverage":false},{"functionName":"defineStream","ranges":[{"startOffset":126,"endOffset":302,"count":3}],"isBlockCoverage":true},{"functionName":"lazyWorkerStdio","ranges":[{"startOffset":938,"endOffset":1048,"count":6},{"startOffset":988,"endOffset":1022,"count":1}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":1052,"endOffset":1109,"count":2}],"isBlockCoverage":true},{"functionName":"getStderr","ranges":[{"startOffset":1113,"endOffset":1170,"count":3}],"isBlockCoverage":true},{"functionName":"getStdin","ranges":[{"startOffset":1174,"endOffset":1229,"count":1}],"isBlockCoverage":true}]},{"scriptId":"124","url":"node:internal/process/signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":948,"endOffset":1149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16035,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3800,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3890,"endOffset":4031,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":4035,"endOffset":4113,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4155,"endOffset":4689,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4783,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5028,"endOffset":5158,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5280,"endOffset":5415,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5532,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5778,"endOffset":5907,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6162,"endOffset":6487,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6633,"endOffset":6780,"count":292}],"isBlockCoverage":true},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":7095,"endOffset":7136,"count":288}],"isBlockCoverage":true},{"functionName":"onclose","ranges":[{"startOffset":7213,"endOffset":7288,"count":288}],"isBlockCoverage":true},{"functionName":"MessagePort.close","ranges":[{"startOffset":7478,"endOffset":7617,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7756,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8409,"endOffset":9808,"count":292}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8776,"endOffset":8873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8913,"endOffset":9013,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9117,"endOffset":9265,"count":104}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9378,"endOffset":9528,"count":101}],"isBlockCoverage":true},{"functionName":"newListener","ranges":[{"startOffset":9536,"endOffset":9682,"count":104}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":9688,"endOffset":9805,"count":101}],"isBlockCoverage":true},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9862,"endOffset":10223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10046,"endOffset":10216,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":10229,"endOffset":10546,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10601,"endOffset":10755,"count":2}],"isBlockCoverage":true},{"functionName":"_writev","ranges":[{"startOffset":10761,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":11153,"endOffset":11340,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11346,"endOffset":11599,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11491,"endOffset":11503,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11606,"endOffset":11884,"count":1}],"isBlockCoverage":true},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11888,"endOffset":12072,"count":487},{"startOffset":12029,"endOffset":12046,"count":208},{"startOffset":12046,"endOffset":12071,"count":279}],"isBlockCoverage":true},{"functionName":"onMessageEvent","ranges":[{"startOffset":12076,"endOffset":12173,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":12177,"endOffset":12265,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":12358,"endOffset":12884,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12890,"endOffset":13318,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":13359,"endOffset":13492,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13534,"endOffset":13943,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":14018,"endOffset":14437,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14729,"endOffset":14902,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":15196,"endOffset":15373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4937,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2466,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3069,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4228,"endOffset":4262,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4366,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4508,"endOffset":4551,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4723,"endOffset":4934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11229,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1062,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1669,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4924,"endOffset":5414,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5418,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5575,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5916,"endOffset":6063,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":6067,"endOffset":6448,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6452,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":7012,"endOffset":7129,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":7136,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8628,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":9077,"endOffset":9278,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":9282,"endOffset":9615,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9619,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":10193,"endOffset":10890,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1710,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1850,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2496,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2768,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3488,"endOffset":3902,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3949,"endOffset":4011,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":4053,"endOffset":4139,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":4177,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4265,"endOffset":4386,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4392,"endOffset":4525,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4609,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4840,"endOffset":5110,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5203,"endOffset":6576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6582,"endOffset":7364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7370,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7736,"endOffset":8366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8372,"endOffset":8636,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8642,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9112,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9244,"endOffset":9252,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9755,"endOffset":10181,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":10185,"endOffset":10559,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10563,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11403,"endOffset":11599,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11676,"endOffset":11767,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11868,"endOffset":12466,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8687,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":939,"endOffset":1036,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1052,"endOffset":1060,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1065,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7224,"endOffset":8140,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8144,"endOffset":8623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8754,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":795,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1228,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1459,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1669,"endOffset":1950,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":1954,"endOffset":2176,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2180,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2359,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2537,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2655,"endOffset":2991,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":2995,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3291,"endOffset":3589,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3620,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":4059,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4395,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4756,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":5067,"endOffset":5371,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5375,"endOffset":5707,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5711,"endOffset":5933,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":5937,"endOffset":6159,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":6163,"endOffset":6692,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6696,"endOffset":6955,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6959,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":7095,"endOffset":7289,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7293,"endOffset":7644,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":7648,"endOffset":7798,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7802,"endOffset":8117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5703,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":566,"endOffset":5700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12793,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1107,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1558,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1896,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2195,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2379,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3483,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4112,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4211,"endOffset":10885,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10889,"endOffset":12743,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7166,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":382,"endOffset":705,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":819,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1646,"endOffset":2296,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2300,"endOffset":2390,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2394,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2660,"endOffset":2951,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2955,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3678,"endOffset":4629,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4633,"endOffset":5062,"count":3},{"startOffset":4733,"endOffset":5061,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":5066,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"emitConstructNT","ranges":[{"startOffset":5854,"endOffset":5919,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5923,"endOffset":6021,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6025,"endOffset":6087,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6091,"endOffset":6214,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6252,"endOffset":7065,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5085,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2049,"endOffset":2741,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3913,"endOffset":4131,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4138,"endOffset":4406,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4487,"endOffset":4655,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4676,"endOffset":4798,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4818,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4946,"endOffset":5082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50703,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1849,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2696,"endOffset":2704,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3855,"endOffset":4086,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3933,"endOffset":3977,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3984,"endOffset":4076,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6305,"endOffset":6395,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6402,"endOffset":6575,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6658,"endOffset":6758,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6765,"endOffset":7002,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7077,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7174,"endOffset":7347,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7423,"endOffset":7515,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7522,"endOffset":7698,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7773,"endOffset":7878,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7885,"endOffset":8161,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8179,"endOffset":10777,"count":1},{"startOffset":8585,"endOffset":8628,"count":0},{"startOffset":8956,"endOffset":8977,"count":0},{"startOffset":8979,"endOffset":9007,"count":0},{"startOffset":9026,"endOffset":9036,"count":0},{"startOffset":9037,"endOffset":9066,"count":0},{"startOffset":9073,"endOffset":9101,"count":0},{"startOffset":9280,"endOffset":9353,"count":0},{"startOffset":9718,"endOffset":9748,"count":0},{"startOffset":9750,"endOffset":9778,"count":0},{"startOffset":9870,"endOffset":9902,"count":0},{"startOffset":9904,"endOffset":9934,"count":0},{"startOffset":10169,"endOffset":10186,"count":0},{"startOffset":10219,"endOffset":10248,"count":0},{"startOffset":10249,"endOffset":10279,"count":0},{"startOffset":10330,"endOffset":10493,"count":0},{"startOffset":10651,"endOffset":10670,"count":0},{"startOffset":10672,"endOffset":10774,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":10783,"endOffset":11702,"count":1},{"startOffset":10853,"endOffset":10882,"count":0},{"startOffset":11161,"endOffset":11517,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11584,"endOffset":11697,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":11843,"endOffset":11877,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11930,"endOffset":11970,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":12016,"endOffset":12279,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12514,"endOffset":12790,"count":1},{"startOffset":12719,"endOffset":12786,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":12889,"endOffset":13162,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":13169,"endOffset":14251,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14255,"endOffset":14504,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14508,"endOffset":14835,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14839,"endOffset":16265,"count":1},{"startOffset":15024,"endOffset":15614,"count":0},{"startOffset":15616,"endOffset":16023,"count":0},{"startOffset":16025,"endOffset":16264,"count":0}],"isBlockCoverage":true},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16269,"endOffset":16890,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16894,"endOffset":17230,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":17234,"endOffset":18073,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18107,"endOffset":18265,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18332,"endOffset":18910,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18975,"endOffset":19341,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19458,"endOffset":19923,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":20023,"endOffset":24883,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":24888,"endOffset":25876,"count":1},{"startOffset":24988,"endOffset":24995,"count":0},{"startOffset":25048,"endOffset":25070,"count":0},{"startOffset":25095,"endOffset":25288,"count":0},{"startOffset":25564,"endOffset":25873,"count":0}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":26082,"endOffset":26422,"count":1}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":26426,"endOffset":27097,"count":1},{"startOffset":27013,"endOffset":27056,"count":0},{"startOffset":27057,"endOffset":27072,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":27456,"endOffset":27668,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27672,"endOffset":29536,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":29813,"endOffset":29881,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29912,"endOffset":34520,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34525,"endOffset":35190,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35224,"endOffset":35956,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":36086,"endOffset":37020,"count":1},{"startOffset":36222,"endOffset":36562,"count":0},{"startOffset":36591,"endOffset":37000,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37118,"endOffset":37698,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":37804,"endOffset":38413,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":38418,"endOffset":39048,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39052,"endOffset":39143,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39301,"endOffset":39806,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":39811,"endOffset":39966,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":39970,"endOffset":40295,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":40326,"endOffset":40614,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":40619,"endOffset":40774,"count":1},{"startOffset":40744,"endOffset":40769,"count":0},{"startOffset":40770,"endOffset":40771,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":40963,"endOffset":42031,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42078,"endOffset":42132,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42167,"endOffset":42315,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42320,"endOffset":42577,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":42581,"endOffset":43705,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43932,"endOffset":44329,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44336,"endOffset":44471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44559,"endOffset":44625,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44713,"endOffset":44927,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45021,"endOffset":45089,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45176,"endOffset":45260,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45348,"endOffset":45410,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45422,"endOffset":45535,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45617,"endOffset":45673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45759,"endOffset":45849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45933,"endOffset":46020,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46095,"endOffset":46181,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46231,"endOffset":46317,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46394,"endOffset":46483,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46490,"endOffset":46789,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46870,"endOffset":46960,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47110,"endOffset":47157,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47243,"endOffset":47303,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47310,"endOffset":47478,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":47795,"endOffset":48380,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":48384,"endOffset":48655,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":48659,"endOffset":49606,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":49610,"endOffset":49776,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":49796,"endOffset":49867,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":49937,"endOffset":50105,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":50128,"endOffset":50266,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":50288,"endOffset":50426,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":50447,"endOffset":50700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3048,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":121,"endOffset":171,"count":3}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":289,"endOffset":2169,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2174,"endOffset":2997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":581,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":782,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1146,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4241,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":267,"endOffset":355,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":361,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":562,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":732,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":975,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":1052,"endOffset":1242,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1248,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1630,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2104,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2152,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2330,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":3069,"endOffset":3947,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":4031,"endOffset":4235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1382,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":300,"endOffset":470,"count":2},{"startOffset":399,"endOffset":422,"count":0},{"startOffset":439,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":474,"endOffset":606,"count":3},{"startOffset":542,"endOffset":574,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":610,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":832,"endOffset":1277,"count":2},{"startOffset":981,"endOffset":1199,"count":0}],"isBlockCoverage":true}]},{"scriptId":"140","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5380,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2190,"endOffset":2460,"count":72},{"startOffset":2304,"endOffset":2441,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2786,"endOffset":2989,"count":72}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3321,"endOffset":3717,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":4003,"endOffset":4201,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4421,"endOffset":4582,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4727,"endOffset":4944,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5042,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5206,"endOffset":5324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2727,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":2699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34885,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2461,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3859,"endOffset":4090,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3937,"endOffset":3981,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7133,"endOffset":7211,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7218,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7467,"endOffset":7567,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7574,"endOffset":7856,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7939,"endOffset":8039,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8046,"endOffset":8283,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8431,"endOffset":8508,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8515,"endOffset":8688,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8883,"endOffset":8983,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8990,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9272,"endOffset":9350,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9357,"endOffset":9531,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9549,"endOffset":12276,"count":2},{"startOffset":9951,"endOffset":9994,"count":0},{"startOffset":10223,"endOffset":10251,"count":0},{"startOffset":10268,"endOffset":10278,"count":0},{"startOffset":10279,"endOffset":10308,"count":0},{"startOffset":10310,"endOffset":10338,"count":0},{"startOffset":10635,"endOffset":10672,"count":0},{"startOffset":10728,"endOffset":10759,"count":0},{"startOffset":10869,"endOffset":10897,"count":0},{"startOffset":11023,"endOffset":11053,"count":0},{"startOffset":11338,"endOffset":11367,"count":0},{"startOffset":11368,"endOffset":11398,"count":0},{"startOffset":11449,"endOffset":11663,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":12280,"endOffset":12449,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12489,"endOffset":12620,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12720,"endOffset":12833,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12843,"endOffset":14491,"count":2},{"startOffset":13558,"endOffset":13587,"count":0},{"startOffset":13732,"endOffset":13760,"count":0},{"startOffset":13817,"endOffset":13847,"count":0},{"startOffset":13905,"endOffset":13937,"count":0},{"startOffset":13993,"endOffset":14021,"count":0},{"startOffset":14081,"endOffset":14117,"count":0},{"startOffset":14152,"endOffset":14189,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14261,"endOffset":14486,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":14577,"endOffset":14786,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14891,"endOffset":14961,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14966,"endOffset":16535,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":16566,"endOffset":16654,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":16685,"endOffset":16788,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":16821,"endOffset":17072,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":17117,"endOffset":17450,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":17645,"endOffset":18864,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":18868,"endOffset":19318,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":19322,"endOffset":19718,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19722,"endOffset":22390,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":22394,"endOffset":22585,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":22589,"endOffset":23118,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":23193,"endOffset":23762,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23831,"endOffset":25514,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":25546,"endOffset":25721,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25789,"endOffset":27489,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":27494,"endOffset":27937,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":27941,"endOffset":28587,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":28591,"endOffset":29135,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":29139,"endOffset":29657,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":29661,"endOffset":30326,"count":0}],"isBlockCoverage":false},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":30330,"endOffset":30659,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30748,"endOffset":30853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30906,"endOffset":31014,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":31021,"endOffset":31277,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31329,"endOffset":31743,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":31750,"endOffset":31889,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31949,"endOffset":32070,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32132,"endOffset":32255,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32313,"endOffset":32411,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32468,"endOffset":32587,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32648,"endOffset":32804,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32869,"endOffset":32969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33027,"endOffset":33123,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33181,"endOffset":33274,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33349,"endOffset":33449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33513,"endOffset":33777,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33860,"endOffset":34134,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":34225,"endOffset":34259,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":34312,"endOffset":34352,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":34422,"endOffset":34590,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":34613,"endOffset":34751,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34773,"endOffset":34882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7576,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5874,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5878,"endOffset":6348,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6352,"endOffset":6437,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6513,"endOffset":6610,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6644,"endOffset":7409,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7442,"endOffset":7573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"node:internal/bootstrap/switches/does_not_own_process_state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1314,"count":1}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":1075,"endOffset":1312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"node:internal/process/worker_thread_only","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":447,"count":1}],"isBlockCoverage":false},{"functionName":"unavailable","ranges":[{"startOffset":203,"endOffset":403,"count":2}],"isBlockCoverage":true},{"functionName":"unavailableInWorker","ranges":[{"startOffset":235,"endOffset":327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"148","url":"node:internal/main/worker_thread","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7574,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1146,"endOffset":1173,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2286,"endOffset":6007,"count":3},{"startOffset":2338,"endOffset":5578,"count":1},{"startOffset":2607,"endOffset":2858,"count":0},{"startOffset":3592,"endOffset":3675,"count":0},{"startOffset":4368,"endOffset":4911,"count":0},{"startOffset":4921,"endOffset":5171,"count":0},{"startOffset":5181,"endOffset":5566,"count":0},{"startOffset":5578,"endOffset":6004,"count":2},{"startOffset":5620,"endOffset":5784,"count":0}],"isBlockCoverage":true},{"functionName":"process.cwd","ranges":[{"startOffset":3254,"endOffset":3512,"count":23},{"startOffset":3384,"endOffset":3401,"count":22},{"startOffset":3401,"endOffset":3511,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5072,"endOffset":5144,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5698,"endOffset":5777,"count":0}],"isBlockCoverage":false},{"functionName":"workerOnGlobalUncaughtException","ranges":[{"startOffset":6013,"endOffset":7253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"node:internal/process/pre_execution","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24825,"count":1}],"isBlockCoverage":false},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1144,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"prepareWorkerThreadExecution","ranges":[{"startOffset":1338,"endOffset":1543,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1547,"endOffset":3807,"count":1},{"startOffset":2358,"endOffset":3555,"count":0},{"startOffset":3750,"endOffset":3781,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":3811,"endOffset":4569,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":4573,"endOffset":5013,"count":1},{"startOffset":4907,"endOffset":5012,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":5017,"endOffset":5075,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":5511,"endOffset":7999,"count":1},{"startOffset":6350,"endOffset":6368,"count":0},{"startOffset":6369,"endOffset":6427,"count":0},{"startOffset":6429,"endOffset":6678,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":8003,"endOffset":8295,"count":13},{"startOffset":8126,"endOffset":8292,"count":2}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":8299,"endOffset":8837,"count":1},{"startOffset":8467,"endOffset":8511,"count":0},{"startOffset":8513,"endOffset":8834,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8715,"endOffset":8820,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":8916,"endOffset":10350,"count":1},{"startOffset":8987,"endOffset":9006,"count":0},{"startOffset":10244,"endOffset":10347,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":9027,"endOffset":9179,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":9185,"endOffset":9437,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9290,"endOffset":9342,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9351,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":9560,"endOffset":9655,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10066,"endOffset":10183,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":10458,"endOffset":11441,"count":1},{"startOffset":10595,"endOffset":10614,"count":0},{"startOffset":11121,"endOffset":11438,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":10796,"endOffset":10976,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":11286,"endOffset":11387,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":11445,"endOffset":11977,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":12087,"endOffset":12371,"count":1},{"startOffset":12228,"endOffset":12247,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":12375,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"initializeReport","ranges":[{"startOffset":12612,"endOffset":12871,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12762,"endOffset":12860,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":12875,"endOffset":13111,"count":1},{"startOffset":13028,"endOffset":13108,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":13176,"endOffset":13369,"count":0}],"isBlockCoverage":false},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":13373,"endOffset":14130,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":14134,"endOffset":14397,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":14401,"endOffset":14996,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":15196,"endOffset":17207,"count":1},{"startOffset":15933,"endOffset":16243,"count":16},{"startOffset":15979,"endOffset":16216,"count":0},{"startOffset":16567,"endOffset":16772,"count":0},{"startOffset":16802,"endOffset":17204,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":17211,"endOffset":17793,"count":0}],"isBlockCoverage":false},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":17797,"endOffset":18074,"count":0}],"isBlockCoverage":false},{"functionName":"initializePermission","ranges":[{"startOffset":18078,"endOffset":20021,"count":1},{"startOffset":18222,"endOffset":19627,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":18247,"endOffset":18336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19846,"endOffset":20011,"count":4},{"startOffset":19926,"endOffset":20004,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":20025,"endOffset":21892,"count":0}],"isBlockCoverage":false},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":21896,"endOffset":22020,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":22024,"endOffset":22614,"count":1},{"startOffset":22358,"endOffset":22611,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":22618,"endOffset":22821,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":22825,"endOffset":23088,"count":1},{"startOffset":22911,"endOffset":23085,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":23092,"endOffset":23451,"count":1},{"startOffset":23289,"endOffset":23448,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":23455,"endOffset":23551,"count":1}],"isBlockCoverage":true},{"functionName":"getHeapSnapshotFilename","ranges":[{"startOffset":23712,"endOffset":24632,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3502,"count":1}],"isBlockCoverage":false},{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":3}],"isBlockCoverage":true},{"functionName":"throwIfNotBuildingSnapshot","ranges":[{"startOffset":530,"endOffset":653,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfBuildingSnapshot","ranges":[{"startOffset":657,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"addDeserializeCallback","ranges":[{"startOffset":1051,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"runSerializeCallbacks","ranges":[{"startOffset":1634,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"addSerializeCallback","ranges":[{"startOffset":1810,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"initializeCallbacks","ranges":[{"startOffset":1986,"endOffset":2201,"count":0}],"isBlockCoverage":false},{"functionName":"setDeserializeMainFunction","ranges":[{"startOffset":2240,"endOffset":3211,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"node:internal/inspector_async_hook","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2049,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":84,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1308,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1909,"endOffset":1998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"node:internal/source_map/prepare_stack_trace","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7618,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":348,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":926,"endOffset":3989,"count":1},{"startOffset":1161,"endOffset":1281,"count":0},{"startOffset":1412,"endOffset":1434,"count":0},{"startOffset":1487,"endOffset":1563,"count":0},{"startOffset":1655,"endOffset":1686,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1801,"endOffset":3926,"count":10},{"startOffset":1838,"endOffset":1851,"count":9},{"startOffset":1852,"endOffset":1856,"count":1},{"startOffset":2094,"endOffset":2143,"count":0},{"startOffset":2188,"endOffset":2212,"count":3},{"startOffset":2213,"endOffset":2247,"count":7},{"startOffset":2323,"endOffset":3848,"count":0},{"startOffset":3856,"endOffset":3895,"count":0}],"isBlockCoverage":true},{"functionName":"getOriginalSymbolName","ranges":[{"startOffset":4144,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSource","ranges":[{"startOffset":5077,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalSource","ranges":[{"startOffset":6198,"endOffset":7116,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapErrorSource","ranges":[{"startOffset":7120,"endOffset":7512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"node:fs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88235,"count":1}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":4182,"endOffset":4477,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":4481,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"makeCallback","ranges":[{"startOffset":4767,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":5069,"endOffset":5243,"count":0}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":5272,"endOffset":5539,"count":3803},{"startOffset":5476,"endOffset":5496,"count":2661}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":5765,"endOffset":6136,"count":0}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":6333,"endOffset":6505,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6675,"endOffset":6925,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":7016,"endOffset":7150,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":7712,"endOffset":7891,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":7895,"endOffset":8189,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterStat","ranges":[{"startOffset":8193,"endOffset":9099,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":9103,"endOffset":9282,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":9631,"endOffset":10613,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10617,"endOffset":10855,"count":10},{"startOffset":10763,"endOffset":10775,"count":0},{"startOffset":10777,"endOffset":10835,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10859,"endOffset":11183,"count":10},{"startOffset":10981,"endOffset":11035,"count":0},{"startOffset":11126,"endOffset":11138,"count":0},{"startOffset":11140,"endOffset":11157,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11187,"endOffset":11452,"count":10},{"startOffset":11392,"endOffset":11404,"count":0},{"startOffset":11406,"endOffset":11423,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11687,"endOffset":13383,"count":232},{"startOffset":11812,"endOffset":11843,"count":10},{"startOffset":11845,"endOffset":12021,"count":222},{"startOffset":12021,"endOffset":12108,"count":10},{"startOffset":12108,"endOffset":12114,"count":0},{"startOffset":12115,"endOffset":12155,"count":10},{"startOffset":12246,"endOffset":12256,"count":10},{"startOffset":12257,"endOffset":12260,"count":0},{"startOffset":12395,"endOffset":12420,"count":0},{"startOffset":12420,"endOffset":12683,"count":10},{"startOffset":12683,"endOffset":13063,"count":0},{"startOffset":13063,"endOffset":13128,"count":10},{"startOffset":13128,"endOffset":13227,"count":0},{"startOffset":13227,"endOffset":13291,"count":10},{"startOffset":13249,"endOffset":13291,"count":0},{"startOffset":13291,"endOffset":13319,"count":10},{"startOffset":13319,"endOffset":13362,"count":0},{"startOffset":13362,"endOffset":13382,"count":10}],"isBlockCoverage":true},{"functionName":"defaultCloseCallback","ranges":[{"startOffset":13387,"endOffset":13457,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13591,"endOffset":13852,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":13955,"endOffset":14041,"count":10}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":14297,"endOffset":14896,"count":0}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":15077,"endOffset":15292,"count":11}],"isBlockCoverage":true},{"functionName":"openAsBlob","ranges":[{"startOffset":15430,"endOffset":15921,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":16301,"endOffset":18354,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":18825,"endOffset":19895,"count":10},{"startOffset":19053,"endOffset":19329,"count":0},{"startOffset":19361,"endOffset":19384,"count":0},{"startOffset":19481,"endOffset":19502,"count":0},{"startOffset":19537,"endOffset":19670,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":20255,"endOffset":20688,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":21104,"endOffset":21423,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":21848,"endOffset":23450,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":23924,"endOffset":25094,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":25436,"endOffset":25979,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":26363,"endOffset":26642,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":26893,"endOffset":27283,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":27492,"endOffset":27747,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":27914,"endOffset":28600,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":28738,"endOffset":29160,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":29321,"endOffset":29671,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":29803,"endOffset":29960,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadCp","ranges":[{"startOffset":29964,"endOffset":30176,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":30180,"endOffset":30302,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":30573,"endOffset":31469,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":31696,"endOffset":32233,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":32586,"endOffset":32978,"count":0}],"isBlockCoverage":false},{"functionName":"rmSync","ranges":[{"startOffset":33287,"endOffset":33503,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":33744,"endOffset":33920,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":34132,"endOffset":34224,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":34420,"endOffset":34588,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":34755,"endOffset":34839,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":35095,"endOffset":35832,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":36053,"endOffset":36667,"count":1},{"startOffset":36171,"endOffset":36201,"count":0},{"startOffset":36230,"endOffset":36400,"count":0},{"startOffset":36638,"endOffset":36664,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSyncRecursive","ranges":[{"startOffset":37010,"endOffset":38750,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":39065,"endOffset":39870,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":40146,"endOffset":40672,"count":36},{"startOffset":40286,"endOffset":40354,"count":0},{"startOffset":40383,"endOffset":40438,"count":0},{"startOffset":40660,"endOffset":40668,"count":0}],"isBlockCoverage":true},{"functionName":"fstat","ranges":[{"startOffset":40926,"endOffset":41283,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":41562,"endOffset":41958,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":42200,"endOffset":42594,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":42598,"endOffset":43107,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoEntryError","ranges":[{"startOffset":43111,"endOffset":43337,"count":0}],"isBlockCoverage":false},{"functionName":"fstatSync","ranges":[{"startOffset":43524,"endOffset":43769,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":44029,"endOffset":44463,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":44690,"endOffset":45042,"count":792},{"startOffset":44972,"endOffset":45001,"count":198},{"startOffset":45001,"endOffset":45041,"count":594}],"isBlockCoverage":true},{"functionName":"statfsSync","ranges":[{"startOffset":45046,"endOffset":45262,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":45553,"endOffset":45904,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":46127,"endOffset":46344,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":46596,"endOffset":48291,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":48516,"endOffset":49077,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":49314,"endOffset":49727,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":49935,"endOffset":50213,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":50382,"endOffset":50615,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":50740,"endOffset":50865,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":51037,"endOffset":51284,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":51427,"endOffset":51545,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":51735,"endOffset":52244,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":52405,"endOffset":52739,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":52944,"endOffset":53228,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":53389,"endOffset":53574,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":53780,"endOffset":54129,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":54306,"endOffset":54561,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":54741,"endOffset":55053,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":55204,"endOffset":55468,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":55695,"endOffset":56044,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":56227,"endOffset":56480,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":56760,"endOffset":57111,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":57362,"endOffset":57563,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":57855,"endOffset":58169,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":58436,"endOffset":58606,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":58901,"endOffset":59257,"count":0}],"isBlockCoverage":false},{"functionName":"lutimesSync","ranges":[{"startOffset":59527,"endOffset":59730,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":59734,"endOffset":61229,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":61624,"endOffset":62658,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":62981,"endOffset":63886,"count":1},{"startOffset":63421,"endOffset":63427,"count":0},{"startOffset":63515,"endOffset":63521,"count":0},{"startOffset":63650,"endOffset":63825,"count":0},{"startOffset":63831,"endOffset":63883,"count":0}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":64205,"endOffset":64657,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":64932,"endOffset":65322,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":65707,"endOffset":67507,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":67876,"endOffset":68934,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":69092,"endOffset":69852,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":70076,"endOffset":70174,"count":357}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":70201,"endOffset":70417,"count":0}],"isBlockCoverage":false},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":70425,"endOffset":70720,"count":357},{"startOffset":70511,"endOffset":70541,"count":0},{"startOffset":70562,"endOffset":70719,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":70848,"endOffset":71116,"count":3227},{"startOffset":70905,"endOffset":71095,"count":35699},{"startOffset":71040,"endOffset":71068,"count":32829},{"startOffset":71079,"endOffset":71088,"count":2870},{"startOffset":71095,"endOffset":71115,"count":357}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":71142,"endOffset":71219,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":71402,"endOffset":75299,"count":361},{"startOffset":71529,"endOffset":71549,"count":0},{"startOffset":71680,"endOffset":71685,"count":90},{"startOffset":71716,"endOffset":71753,"count":4},{"startOffset":71753,"endOffset":72654,"count":357},{"startOffset":72654,"endOffset":75222,"count":3227},{"startOffset":72770,"endOffset":72906,"count":357},{"startOffset":72906,"endOffset":73068,"count":2870},{"startOffset":73166,"endOffset":73171,"count":708},{"startOffset":73188,"endOffset":73331,"count":566},{"startOffset":73281,"endOffset":73307,"count":0},{"startOffset":73331,"endOffset":73395,"count":2661},{"startOffset":73395,"endOffset":73400,"count":142},{"startOffset":73438,"endOffset":73489,"count":0},{"startOffset":73489,"endOffset":74703,"count":2661},{"startOffset":73896,"endOffset":73901,"count":142},{"startOffset":73942,"endOffset":74621,"count":0},{"startOffset":74666,"endOffset":74696,"count":0},{"startOffset":74703,"endOffset":75028,"count":0},{"startOffset":75030,"endOffset":75217,"count":0},{"startOffset":75222,"endOffset":75233,"count":357},{"startOffset":75233,"endOffset":75238,"count":86}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":75496,"endOffset":75684,"count":36}],"isBlockCoverage":true},{"functionName":"realpath","ranges":[{"startOffset":76004,"endOffset":79660,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":80000,"endOffset":80302,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":80559,"endOffset":81086,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":81275,"endOffset":81652,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":81927,"endOffset":82405,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":82647,"endOffset":82916,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":83220,"endOffset":83636,"count":0}],"isBlockCoverage":false},{"functionName":"cpSync","ranges":[{"startOffset":83907,"endOffset":84177,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":84181,"endOffset":84378,"count":56},{"startOffset":84230,"endOffset":84375,"count":1}],"isBlockCoverage":true},{"functionName":"createReadStream","ranges":[{"startOffset":84827,"endOffset":84935,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":85310,"endOffset":85420,"count":0}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":86758,"endOffset":86829,"count":14}],"isBlockCoverage":true},{"functionName":"set ReadStream","ranges":[{"startOffset":86836,"endOffset":86885,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":86892,"endOffset":86965,"count":14}],"isBlockCoverage":true},{"functionName":"set WriteStream","ranges":[{"startOffset":86972,"endOffset":87023,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":87165,"endOffset":87244,"count":14}],"isBlockCoverage":true},{"functionName":"set FileReadStream","ranges":[{"startOffset":87251,"endOffset":87308,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":87315,"endOffset":87396,"count":14}],"isBlockCoverage":true},{"functionName":"set FileWriteStream","ranges":[{"startOffset":87403,"endOffset":87462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":88122,"endOffset":88221,"count":14}],"isBlockCoverage":true}]},{"scriptId":"154","url":"node:internal/blob","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13156,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableStream","ranges":[{"startOffset":1984,"endOffset":2201,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":2255,"endOffset":2326,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":2330,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"Blob","ranges":[{"startOffset":3295,"endOffset":4444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4450,"endOffset":4733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4739,"endOffset":5204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5210,"endOffset":5340,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":5397,"endOffset":5506,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":5563,"endOffset":5674,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":5810,"endOffset":6622,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":6680,"endOffset":7718,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":7771,"endOffset":7943,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":7995,"endOffset":11143,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedBlob","ranges":[{"startOffset":11150,"endOffset":11247,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedBlob.<computed>","ranges":[{"startOffset":11286,"endOffset":11294,"count":0}],"isBlockCoverage":false},{"functionName":"createBlob","ranges":[{"startOffset":11299,"endOffset":11508,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObjectURL","ranges":[{"startOffset":11878,"endOffset":12523,"count":0}],"isBlockCoverage":false},{"functionName":"createBlobFromFilePath","ranges":[{"startOffset":12650,"endOffset":13018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"node:internal/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17972,"count":1}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1406,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1538,"endOffset":1666,"count":79},{"startOffset":1621,"endOffset":1663,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":9204,"endOffset":9722,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":9726,"endOffset":9909,"count":2},{"startOffset":9839,"endOffset":9908,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":9936,"endOffset":9984,"count":1}],"isBlockCoverage":true},{"functionName":"get encoding","ranges":[{"startOffset":9990,"endOffset":10060,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":10066,"endOffset":10161,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":10167,"endOffset":10584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10590,"endOffset":10998,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":11527,"endOffset":13450,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":11672,"endOffset":12581,"count":2},{"startOffset":11934,"endOffset":11981,"count":0},{"startOffset":12069,"endOffset":12092,"count":0},{"startOffset":12134,"endOffset":12162,"count":0},{"startOffset":12529,"endOffset":12574,"count":0}],"isBlockCoverage":true},{"functionName":"#prepareConverter","ranges":[{"startOffset":12589,"endOffset":12860,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12868,"endOffset":13417,"count":79},{"startOffset":13110,"endOffset":13416,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":13454,"endOffset":16272,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":16373,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":16458,"endOffset":16582,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":16589,"endOffset":16742,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":16749,"endOffset":17348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"node:internal/webstreams/queuingstrategies","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4031,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":983,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1094,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1172,"endOffset":1264,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1307,"endOffset":2397,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2668,"endOffset":3729,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"node:internal/webstreams/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7850,"count":1}],"isBlockCoverage":false},{"functionName":"extractHighWaterMark","ranges":[{"startOffset":1138,"endOffset":1439,"count":0}],"isBlockCoverage":false},{"functionName":"extractSizeAlgorithm","ranges":[{"startOffset":1443,"endOffset":1586,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":1590,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetBuffer","ranges":[{"startOffset":2022,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetByteLength","ranges":[{"startOffset":2136,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetByteOffset","ranges":[{"startOffset":2258,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"cloneAsUint8Array","ranges":[{"startOffset":2380,"endOffset":2692,"count":0}],"isBlockCoverage":false},{"functionName":"isBrandCheck","ranges":[{"startOffset":2696,"endOffset":2866,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2737,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"transferArrayBuffer","ranges":[{"startOffset":2870,"endOffset":3100,"count":0}],"isBlockCoverage":false},{"functionName":"isViewedArrayBufferDetached","ranges":[{"startOffset":3104,"endOffset":3277,"count":0}],"isBlockCoverage":false},{"functionName":"dequeueValue","ranges":[{"startOffset":3281,"endOffset":3677,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":3681,"endOffset":3904,"count":0}],"isBlockCoverage":false},{"functionName":"peekQueueValue","ranges":[{"startOffset":3908,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueValueWithSize","ranges":[{"startOffset":4152,"endOffset":4629,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIsPromise","ranges":[{"startOffset":4633,"endOffset":4879,"count":0}],"isBlockCoverage":false},{"functionName":"isPromisePending","ranges":[{"startOffset":4883,"endOffset":5050,"count":0}],"isBlockCoverage":false},{"functionName":"setPromiseHandled","ranges":[{"startOffset":5054,"endOffset":5339,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpFlush","ranges":[{"startOffset":5343,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpStart","ranges":[{"startOffset":5377,"endOffset":5401,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpPull","ranges":[{"startOffset":5405,"endOffset":5434,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpCancel","ranges":[{"startOffset":5438,"endOffset":5469,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpWrite","ranges":[{"startOffset":5473,"endOffset":5503,"count":0}],"isBlockCoverage":false},{"functionName":"lazyTransfer","ranges":[{"startOffset":5522,"endOffset":5658,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncFromSyncIterator","ranges":[{"startOffset":5662,"endOffset":6012,"count":0}],"isBlockCoverage":false},{"functionName":"getIterator","ranges":[{"startOffset":6016,"endOffset":6764,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorNext","ranges":[{"startOffset":6768,"endOffset":7241,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"node:internal/fs/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27826,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":3701,"endOffset":3785,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":3789,"endOffset":3994,"count":692},{"startOffset":3841,"endOffset":3872,"count":294},{"startOffset":3874,"endOffset":3991,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":4016,"endOffset":4123,"count":108}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":4129,"endOffset":4192,"count":40}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":4198,"endOffset":4257,"count":108}],"isBlockCoverage":true},{"functionName":"isBlockDevice","ranges":[{"startOffset":4263,"endOffset":4330,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":4336,"endOffset":4406,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":4412,"endOffset":4479,"count":108}],"isBlockCoverage":true},{"functionName":"isFIFO","ranges":[{"startOffset":4485,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":4550,"endOffset":4613,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":4662,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":4908,"endOffset":4959,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":4967,"endOffset":5100,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":5154,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":5786,"endOffset":6944,"count":36},{"startOffset":5897,"endOffset":6784,"count":0},{"startOffset":6854,"endOffset":6917,"count":108}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6363,"endOffset":6623,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":6948,"endOffset":7756,"count":108},{"startOffset":7036,"endOffset":7510,"count":0},{"startOffset":7548,"endOffset":7699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7258,"endOffset":7429,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7760,"endOffset":8407,"count":892},{"startOffset":7845,"endOffset":7877,"count":692},{"startOffset":7879,"endOffset":7913,"count":200},{"startOffset":7913,"endOffset":7952,"count":692},{"startOffset":7952,"endOffset":8074,"count":294},{"startOffset":8074,"endOffset":8198,"count":398},{"startOffset":8113,"endOffset":8198,"count":0},{"startOffset":8198,"endOffset":8317,"count":692},{"startOffset":8317,"endOffset":8383,"count":0},{"startOffset":8383,"endOffset":8406,"count":692}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8470,"endOffset":9012,"count":3018},{"startOffset":8541,"endOffset":8680,"count":0},{"startOffset":8713,"endOffset":9009,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9157,"endOffset":9773,"count":1685},{"startOffset":9392,"endOffset":9412,"count":0},{"startOffset":9483,"endOffset":9552,"count":0},{"startOffset":9573,"endOffset":9772,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":9779,"endOffset":10503,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":10539,"endOffset":10858,"count":595}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10896,"endOffset":10955,"count":514}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10989,"endOffset":11048,"count":547}],"isBlockCoverage":true},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":11089,"endOffset":11148,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":11193,"endOffset":11252,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":11294,"endOffset":11353,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":11387,"endOffset":11446,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":11482,"endOffset":11542,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11673,"endOffset":11757,"count":2376}],"isBlockCoverage":true},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":11761,"endOffset":11846,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":12257,"endOffset":12371,"count":2380}],"isBlockCoverage":true},{"functionName":"BigIntStats","ranges":[{"startOffset":12375,"endOffset":13156,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":13319,"endOffset":13571,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":13576,"endOffset":14131,"count":595}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":14481,"endOffset":14717,"count":1061},{"startOffset":14600,"endOffset":14669,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14842,"endOffset":15944,"count":594},{"startOffset":14923,"endOffset":15460,"count":0}],"isBlockCoverage":true},{"functionName":"StatFs","ranges":[{"startOffset":15966,"endOffset":16211,"count":0}],"isBlockCoverage":false},{"functionName":"getStatFsFromBinding","ranges":[{"startOffset":16218,"endOffset":16362,"count":0}],"isBlockCoverage":false},{"functionName":"stringToFlags","ranges":[{"startOffset":16366,"endOffset":17662,"count":459},{"startOffset":16448,"endOffset":16506,"count":0},{"startOffset":16531,"endOffset":16559,"count":0},{"startOffset":16587,"endOffset":16614,"count":458},{"startOffset":16620,"endOffset":16631,"count":0},{"startOffset":16654,"endOffset":16691,"count":0},{"startOffset":16697,"endOffset":16723,"count":0},{"startOffset":16729,"endOffset":16741,"count":0},{"startOffset":16764,"endOffset":16800,"count":0},{"startOffset":16808,"endOffset":16855,"count":0},{"startOffset":16861,"endOffset":16872,"count":1},{"startOffset":16895,"endOffset":16952,"count":1},{"startOffset":16960,"endOffset":17006,"count":0},{"startOffset":17012,"endOffset":17023,"count":0},{"startOffset":17046,"endOffset":17101,"count":0},{"startOffset":17109,"endOffset":17157,"count":0},{"startOffset":17163,"endOffset":17174,"count":0},{"startOffset":17197,"endOffset":17255,"count":0},{"startOffset":17261,"endOffset":17272,"count":0},{"startOffset":17295,"endOffset":17353,"count":0},{"startOffset":17361,"endOffset":17408,"count":0},{"startOffset":17414,"endOffset":17425,"count":0},{"startOffset":17448,"endOffset":17504,"count":0},{"startOffset":17510,"endOffset":17521,"count":0},{"startOffset":17544,"endOffset":17600,"count":0},{"startOffset":17605,"endOffset":17661,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17710,"endOffset":18087,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":18152,"endOffset":18623,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18680,"endOffset":19070,"count":10},{"startOffset":18737,"endOffset":18806,"count":0},{"startOffset":18828,"endOffset":18897,"count":0},{"startOffset":18939,"endOffset":19065,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19133,"endOffset":19551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19597,"endOffset":19877,"count":1685},{"startOffset":19660,"endOffset":19682,"count":0},{"startOffset":19684,"endOffset":19772,"count":0},{"startOffset":19852,"endOffset":19874,"count":0}],"isBlockCoverage":true},{"functionName":"possiblyTransformPath","ranges":[{"startOffset":20256,"endOffset":20577,"count":1324},{"startOffset":20326,"endOffset":20558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20622,"endOffset":20784,"count":1324}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20829,"endOffset":20958,"count":20},{"startOffset":20881,"endOffset":20902,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21008,"endOffset":21349,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":21394,"endOffset":22004,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22454,"endOffset":23360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23408,"endOffset":24114,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24166,"endOffset":24807,"count":0}],"isBlockCoverage":false},{"functionName":"emitRecursiveRmdirWarning","ranges":[{"startOffset":24864,"endOffset":25208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25261,"endOffset":25670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25713,"endOffset":26097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26162,"endOffset":26354,"count":1},{"startOffset":26217,"endOffset":26351,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26401,"endOffset":26883,"count":10},{"startOffset":26504,"endOffset":26880,"count":0}],"isBlockCoverage":true}]},{"scriptId":"159","url":"node:internal/dns/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9942,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBinding","ranges":[{"startOffset":530,"endOffset":622,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":1002,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"validateTries","ranges":[{"startOffset":1157,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"ResolverBase","ranges":[{"startOffset":1701,"endOffset":2059,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2065,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":2210,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"getServers","ranges":[{"startOffset":2259,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"setServers","ranges":[{"startOffset":2541,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3994,"endOffset":4564,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalAddress","ranges":[{"startOffset":4572,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4993,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5224,"endOffset":5582,"count":0}],"isBlockCoverage":false},{"functionName":"initializeDns","ranges":[{"startOffset":5628,"endOffset":6030,"count":1},{"startOffset":5775,"endOffset":5888,"count":0},{"startOffset":5940,"endOffset":6029,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5967,"endOffset":6025,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6311,"endOffset":6599,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultResolver","ranges":[{"startOffset":6603,"endOffset":6676,"count":0}],"isBlockCoverage":false},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6680,"endOffset":6907,"count":0}],"isBlockCoverage":false},{"functionName":"validateHints","ranges":[{"startOffset":6911,"endOffset":7135,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidHostnameWarning","ranges":[{"startOffset":7183,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultVerbatim","ranges":[{"startOffset":7551,"endOffset":7621,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultResultOrder","ranges":[{"startOffset":7625,"endOffset":7752,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResultOrder","ranges":[{"startOffset":7756,"endOffset":7813,"count":0}],"isBlockCoverage":false},{"functionName":"createResolverClass","ranges":[{"startOffset":7817,"endOffset":8948,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"node:internal/net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2324,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":1053,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1335,"endOffset":1613,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1617,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1711,"endOffset":2141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16945,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2562,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":3091,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":3182,"endOffset":3334,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3338,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3415,"endOffset":3570,"count":1},{"startOffset":3481,"endOffset":3488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3505,"endOffset":3565,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3613,"endOffset":9519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9525,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10179,"endOffset":10277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10462,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11387,"endOffset":11871,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":11877,"endOffset":12026,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":12032,"endOffset":12890,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":12896,"endOffset":13007,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":13013,"endOffset":13130,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":13136,"endOffset":13239,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":13245,"endOffset":13305,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":13311,"endOffset":13373,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":13379,"endOffset":13441,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":13447,"endOffset":13587,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":13593,"endOffset":14113,"count":0}],"isBlockCoverage":false},{"functionName":"InternalWorker","ranges":[{"startOffset":14314,"endOffset":14395,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageSync","ranges":[{"startOffset":14401,"endOffset":14481,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":14488,"endOffset":14820,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":14897,"endOffset":15525,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":15529,"endOffset":15823,"count":1}],"isBlockCoverage":true},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":15827,"endOffset":16652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5914,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":1084,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":2224,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":2687,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2840,"endOffset":3015,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3035,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"fromBuffer","ranges":[{"startOffset":4371,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":4618,"endOffset":5854,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10205,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":768,"endOffset":1198,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":849,"endOffset":887,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":895,"endOffset":1015,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1021,"endOffset":1071,"count":5},{"startOffset":1058,"endOffset":1063,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1077,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1139,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1202,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1416,"endOffset":1792,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1796,"endOffset":1848,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1852,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2280,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2460,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2753,"endOffset":2925,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2931,"endOffset":3141,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3147,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3198,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3524,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3902,"endOffset":4049,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4062,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4257,"endOffset":4345,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4351,"endOffset":4390,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4396,"endOffset":4492,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4498,"endOffset":4537,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4543,"endOffset":4589,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":4595,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4613,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4747,"endOffset":5022,"count":5},{"startOffset":4827,"endOffset":4842,"count":0},{"startOffset":4877,"endOffset":4904,"count":0},{"startOffset":4906,"endOffset":4988,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":5026,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":5122,"endOffset":5218,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5222,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5461,"endOffset":5607,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5637,"endOffset":6810,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6816,"endOffset":6974,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6980,"endOffset":7225,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7231,"endOffset":7673,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7679,"endOffset":8816,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8822,"endOffset":9988,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9995,"endOffset":10085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"node:internal/modules/esm/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultConditions","ranges":[{"startOffset":966,"endOffset":1075,"count":404}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1212,"endOffset":1330,"count":3}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1486,"endOffset":1880,"count":1},{"startOffset":1672,"endOffset":1676,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":1956,"endOffset":2324,"count":3},{"startOffset":2070,"endOffset":2284,"count":0}],"isBlockCoverage":true},{"functionName":"registerModule","ranges":[{"startOffset":4131,"endOffset":4687,"count":160},{"startOffset":4339,"endOffset":4558,"count":0}],"isBlockCoverage":true},{"functionName":"initializeImportMetaObject","ranges":[{"startOffset":4904,"endOffset":5202,"count":4}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":5707,"endOffset":6233,"count":0}],"isBlockCoverage":false},{"functionName":"initializeESM","ranges":[{"startOffset":6559,"endOffset":6942,"count":1}],"isBlockCoverage":true},{"functionName":"isLoaderWorker","ranges":[{"startOffset":7089,"endOffset":7146,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHooks","ranges":[{"startOffset":7201,"endOffset":8342,"count":1}],"isBlockCoverage":true}]},{"scriptId":"166","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53616,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2259,"endOffset":2328,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3589,"endOffset":3680,"count":1},{"startOffset":3636,"endOffset":3672,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3731,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3818,"endOffset":3872,"count":1}],"isBlockCoverage":true},{"functionName":"internalRequire","ranges":[{"startOffset":4957,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5438,"endOffset":5864,"count":350},{"startOffset":5538,"endOffset":5639,"count":44},{"startOffset":5616,"endOffset":5634,"count":13},{"startOffset":5639,"endOffset":5714,"count":337},{"startOffset":5714,"endOffset":5728,"count":31},{"startOffset":5730,"endOffset":5843,"count":21},{"startOffset":5843,"endOffset":5863,"count":337}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5950,"endOffset":5973,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5978,"endOffset":6077,"count":0}],"isBlockCoverage":false},{"functionName":"updateChildren","ranges":[{"startOffset":6375,"endOffset":6582,"count":165},{"startOffset":6448,"endOffset":6458,"count":146},{"startOffset":6476,"endOffset":6529,"count":146},{"startOffset":6486,"endOffset":6528,"count":67},{"startOffset":6531,"endOffset":6579,"count":138}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":6705,"endOffset":6865,"count":333},{"startOffset":6787,"endOffset":6802,"count":0},{"startOffset":6804,"endOffset":6862,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":7056,"endOffset":7299,"count":11},{"startOffset":7158,"endOffset":7173,"count":0},{"startOffset":7175,"endOffset":7296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7244,"endOffset":7286,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":7479,"endOffset":8256,"count":93},{"startOffset":7802,"endOffset":7812,"count":0},{"startOffset":7831,"endOffset":8202,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":8788,"endOffset":8901,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9077,"endOffset":9202,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":9209,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9417,"endOffset":9447,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9454,"endOffset":9511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9586,"endOffset":9624,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9631,"endOffset":9696,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9733,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleParent","ranges":[{"startOffset":9994,"endOffset":10064,"count":0}],"isBlockCoverage":false},{"functionName":"setModuleParent","ranges":[{"startOffset":10159,"endOffset":10234,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10303,"endOffset":10330,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":11074,"endOffset":11588,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11950,"endOffset":11980,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11985,"endOffset":12112,"count":0}],"isBlockCoverage":false},{"functionName":"tryPackage","ranges":[{"startOffset":12504,"endOffset":13818,"count":12},{"startOffset":12629,"endOffset":12712,"count":1},{"startOffset":12712,"endOffset":12809,"count":11},{"startOffset":12809,"endOffset":12854,"count":0},{"startOffset":12855,"endOffset":12923,"count":0},{"startOffset":12950,"endOffset":13797,"count":0},{"startOffset":13797,"endOffset":13817,"count":11}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":14135,"endOffset":14378,"count":145},{"startOffset":14226,"endOffset":14237,"count":78},{"startOffset":14237,"endOffset":14283,"count":67},{"startOffset":14283,"endOffset":14293,"count":0},{"startOffset":14295,"endOffset":14340,"count":0},{"startOffset":14340,"endOffset":14377,"count":67}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":14651,"endOffset":14880,"count":75},{"startOffset":14741,"endOffset":14860,"count":130},{"startOffset":14823,"endOffset":14855,"count":52},{"startOffset":14860,"endOffset":14879,"count":23}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":15070,"endOffset":15558,"count":84},{"startOffset":15299,"endOffset":15538,"count":87},{"startOffset":15352,"endOffset":15365,"count":0},{"startOffset":15505,"endOffset":15533,"count":84},{"startOffset":15538,"endOffset":15557,"count":0}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":15687,"endOffset":15992,"count":98},{"startOffset":15740,"endOffset":15757,"count":5},{"startOffset":15757,"endOffset":15819,"count":93},{"startOffset":15819,"endOffset":15989,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":16207,"endOffset":17163,"count":98},{"startOffset":16267,"endOffset":16284,"count":5},{"startOffset":16284,"endOffset":16409,"count":93},{"startOffset":16410,"endOffset":16435,"count":87},{"startOffset":16437,"endOffset":16462,"count":6},{"startOffset":16462,"endOffset":16512,"count":87},{"startOffset":16512,"endOffset":16540,"count":0},{"startOffset":16540,"endOffset":16710,"count":87},{"startOffset":16602,"endOffset":16679,"count":0},{"startOffset":16710,"endOffset":17160,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":17525,"endOffset":18363,"count":94},{"startOffset":17735,"endOffset":17750,"count":68},{"startOffset":17766,"endOffset":17777,"count":68},{"startOffset":17777,"endOffset":17881,"count":26},{"startOffset":17881,"endOffset":17903,"count":16},{"startOffset":17905,"endOffset":18360,"count":4},{"startOffset":18191,"endOffset":18355,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":18665,"endOffset":22882,"count":98},{"startOffset":18777,"endOffset":18802,"count":8},{"startOffset":18802,"endOffset":18867,"count":90},{"startOffset":18842,"endOffset":18867,"count":0},{"startOffset":19004,"endOffset":19029,"count":8},{"startOffset":19029,"endOffset":19626,"count":90},{"startOffset":19256,"endOffset":19618,"count":0},{"startOffset":19703,"endOffset":20168,"count":68},{"startOffset":19812,"endOffset":19898,"count":10},{"startOffset":19899,"endOffset":20161,"count":10},{"startOffset":20071,"endOffset":20159,"count":0},{"startOffset":20215,"endOffset":20374,"count":68},{"startOffset":20334,"endOffset":20369,"count":10},{"startOffset":20374,"endOffset":20439,"count":90},{"startOffset":20439,"endOffset":22860,"count":125},{"startOffset":20584,"endOffset":20594,"count":115},{"startOffset":20595,"endOffset":20692,"count":109},{"startOffset":20630,"endOffset":20668,"count":0},{"startOffset":20700,"endOffset":20725,"count":25},{"startOffset":20725,"endOffset":20755,"count":100},{"startOffset":20755,"endOffset":20900,"count":94},{"startOffset":20850,"endOffset":20893,"count":4},{"startOffset":20900,"endOffset":22307,"count":96},{"startOffset":21059,"endOffset":22063,"count":22},{"startOffset":21149,"endOffset":21211,"count":0},{"startOffset":21288,"endOffset":22054,"count":0},{"startOffset":22088,"endOffset":22300,"count":74},{"startOffset":22170,"endOffset":22232,"count":66},{"startOffset":22307,"endOffset":22329,"count":96},{"startOffset":22329,"endOffset":22340,"count":23},{"startOffset":22342,"endOffset":22574,"count":12},{"startOffset":22446,"endOffset":22504,"count":0},{"startOffset":22574,"endOffset":22596,"count":96},{"startOffset":22596,"endOffset":22675,"count":85},{"startOffset":22675,"endOffset":22860,"count":11},{"startOffset":22860,"endOffset":22881,"count":1}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23226,"endOffset":24837,"count":103},{"startOffset":23731,"endOffset":23806,"count":0},{"startOffset":23808,"endOffset":23855,"count":0},{"startOffset":23985,"endOffset":24811,"count":8649},{"startOffset":24379,"endOffset":24420,"count":7926},{"startOffset":24421,"endOffset":24454,"count":7926},{"startOffset":24456,"endOffset":24674,"count":826},{"startOffset":24484,"endOffset":24630,"count":729},{"startOffset":24674,"endOffset":24804,"count":7823},{"startOffset":24694,"endOffset":24804,"count":2035},{"startOffset":24730,"endOffset":24758,"count":1306},{"startOffset":24758,"endOffset":24795,"count":729}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":25021,"endOffset":26247,"count":0}],"isBlockCoverage":false},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":26390,"endOffset":27718,"count":102},{"startOffset":26471,"endOffset":26540,"count":0},{"startOffset":26628,"endOffset":26831,"count":72},{"startOffset":26710,"endOffset":26761,"count":58},{"startOffset":26762,"endOffset":26830,"count":0},{"startOffset":26833,"endOffset":27173,"count":30},{"startOffset":26897,"endOffset":26912,"count":25},{"startOffset":26914,"endOffset":27027,"count":25},{"startOffset":27027,"endOffset":27069,"count":5},{"startOffset":27161,"endOffset":27167,"count":0},{"startOffset":27173,"endOffset":27244,"count":72},{"startOffset":27245,"endOffset":27264,"count":72},{"startOffset":27266,"endOffset":27522,"count":0},{"startOffset":27522,"endOffset":27717,"count":72}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":27906,"endOffset":28095,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28315,"endOffset":28698,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":28705,"endOffset":28960,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":29216,"endOffset":29875,"count":4},{"startOffset":29688,"endOffset":29844,"count":0}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":30554,"endOffset":33804,"count":254},{"startOffset":30639,"endOffset":31486,"count":249},{"startOffset":31106,"endOffset":31481,"count":59},{"startOffset":31290,"endOffset":31364,"count":4},{"startOffset":31364,"endOffset":31411,"count":55},{"startOffset":31411,"endOffset":31481,"count":0},{"startOffset":31486,"endOffset":31541,"count":195},{"startOffset":31541,"endOffset":31823,"count":0},{"startOffset":31823,"endOffset":31980,"count":195},{"startOffset":31980,"endOffset":32361,"count":13},{"startOffset":32062,"endOffset":32306,"count":5},{"startOffset":32189,"endOffset":32259,"count":0},{"startOffset":32306,"endOffset":32356,"count":8},{"startOffset":32361,"endOffset":32423,"count":186},{"startOffset":32423,"endOffset":32509,"count":102},{"startOffset":32509,"endOffset":32611,"count":84},{"startOffset":32611,"endOffset":32642,"count":79},{"startOffset":32661,"endOffset":32806,"count":0},{"startOffset":32806,"endOffset":32915,"count":84},{"startOffset":32915,"endOffset":32986,"count":79},{"startOffset":32986,"endOffset":33773,"count":84},{"startOffset":33098,"endOffset":33513,"count":0},{"startOffset":33698,"endOffset":33768,"count":0},{"startOffset":33773,"endOffset":33803,"count":84}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":34277,"endOffset":37503,"count":200},{"startOffset":34375,"endOffset":34402,"count":102},{"startOffset":34402,"endOffset":34456,"count":98},{"startOffset":34456,"endOffset":34475,"count":4},{"startOffset":34477,"endOffset":35601,"count":4},{"startOffset":34798,"endOffset":34840,"count":0},{"startOffset":34979,"endOffset":35387,"count":8},{"startOffset":35222,"endOffset":35376,"count":74},{"startOffset":35289,"endOffset":35363,"count":46},{"startOffset":35403,"endOffset":35596,"count":0},{"startOffset":35601,"endOffset":35671,"count":94},{"startOffset":35671,"endOffset":35700,"count":98},{"startOffset":35700,"endOffset":35748,"count":0},{"startOffset":35750,"endOffset":36409,"count":0},{"startOffset":36409,"endOffset":36575,"count":98},{"startOffset":36575,"endOffset":36776,"count":0},{"startOffset":36776,"endOffset":36920,"count":98},{"startOffset":36920,"endOffset":36940,"count":97},{"startOffset":36940,"endOffset":37056,"count":1},{"startOffset":37056,"endOffset":37131,"count":5},{"startOffset":37112,"endOffset":37124,"count":0},{"startOffset":37131,"endOffset":37502,"count":1}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":37940,"endOffset":38535,"count":4},{"startOffset":38140,"endOffset":38272,"count":0},{"startOffset":38396,"endOffset":38534,"count":0}],"isBlockCoverage":true},{"functionName":"createEsmNotFoundErr","ranges":[{"startOffset":38746,"endOffset":39051,"count":0}],"isBlockCoverage":false},{"functionName":"Module.load","ranges":[{"startOffset":39206,"endOffset":40080,"count":84},{"startOffset":39550,"endOffset":39580,"count":0},{"startOffset":39582,"endOffset":39636,"count":0},{"startOffset":39925,"endOffset":39974,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":40375,"endOffset":40686,"count":249},{"startOffset":40437,"endOffset":40558,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":41278,"endOffset":43936,"count":81},{"startOffset":41681,"endOffset":42469,"count":0},{"startOffset":43330,"endOffset":43377,"count":0},{"startOffset":43378,"endOffset":43420,"count":0},{"startOffset":43422,"endOffset":43487,"count":0},{"startOffset":43576,"endOffset":43676,"count":30},{"startOffset":43713,"endOffset":43933,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":41408,"endOffset":41664,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":44265,"endOffset":46143,"count":81},{"startOffset":44359,"endOffset":44369,"count":0},{"startOffset":44388,"endOffset":44545,"count":0},{"startOffset":44683,"endOffset":44707,"count":0},{"startOffset":44709,"endOffset":45466,"count":0},{"startOffset":45696,"endOffset":45726,"count":5},{"startOffset":45752,"endOffset":45894,"count":0},{"startOffset":46101,"endOffset":46122,"count":5}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":46328,"endOffset":48304,"count":82},{"startOffset":46493,"endOffset":46501,"count":5},{"startOffset":46503,"endOffset":46571,"count":5},{"startOffset":46571,"endOffset":46633,"count":77},{"startOffset":46747,"endOffset":46769,"count":0},{"startOffset":46867,"endOffset":48257,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":48493,"endOffset":48914,"count":2},{"startOffset":48606,"endOffset":48616,"count":0},{"startOffset":48635,"endOffset":48740,"count":0},{"startOffset":48827,"endOffset":48911,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":49103,"endOffset":49454,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":49612,"endOffset":50088,"count":3},{"startOffset":49878,"endOffset":49915,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":50525,"endOffset":51087,"count":3},{"startOffset":50674,"endOffset":50877,"count":1},{"startOffset":50737,"endOffset":50872,"count":0},{"startOffset":50877,"endOffset":51041,"count":2},{"startOffset":50917,"endOffset":51003,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":51214,"endOffset":52207,"count":1},{"startOffset":51282,"endOffset":51302,"count":0},{"startOffset":51358,"endOffset":51383,"count":0},{"startOffset":51613,"endOffset":51662,"count":0},{"startOffset":51921,"endOffset":52068,"count":0}],"isBlockCoverage":true},{"functionName":"Module._preloadModules","ranges":[{"startOffset":52347,"endOffset":52965,"count":2},{"startOffset":52400,"endOffset":52411,"count":0},{"startOffset":52742,"endOffset":52842,"count":0},{"startOffset":52888,"endOffset":52937,"count":0}],"isBlockCoverage":true},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":53171,"endOffset":53358,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":53447,"endOffset":53507,"count":1},{"startOffset":53481,"endOffset":53492,"count":0}],"isBlockCoverage":true}]},{"scriptId":"167","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9712,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1068,"endOffset":1095,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1579,"endOffset":1715,"count":89}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1838,"endOffset":2241,"count":1},{"startOffset":2020,"endOffset":2024,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2313,"endOffset":2445,"count":4},{"startOffset":2379,"endOffset":2417,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2679,"endOffset":3069,"count":112},{"startOffset":2769,"endOffset":2788,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3169,"endOffset":3285,"count":84},{"startOffset":3214,"endOffset":3262,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3888,"endOffset":6504,"count":84},{"startOffset":4030,"endOffset":4095,"count":0},{"startOffset":4166,"endOffset":5474,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4313,"endOffset":5468,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5497,"endOffset":5640,"count":241}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5834,"endOffset":5983,"count":5}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":6136,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6724,"endOffset":6884,"count":2},{"startOffset":6807,"endOffset":6862,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":7164,"endOffset":9181,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9316,"endOffset":9509,"count":109},{"startOffset":9424,"endOffset":9472,"count":30},{"startOffset":9472,"endOffset":9508,"count":79}],"isBlockCoverage":true}]},{"scriptId":"168","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5303,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1159,"endOffset":3995,"count":369},{"startOffset":1256,"endOffset":1295,"count":325},{"startOffset":1295,"endOffset":1996,"count":44},{"startOffset":1996,"endOffset":2005,"count":0},{"startOffset":2006,"endOffset":2020,"count":0},{"startOffset":2021,"endOffset":2043,"count":44},{"startOffset":2069,"endOffset":3942,"count":24},{"startOffset":2141,"endOffset":2751,"count":0},{"startOffset":2914,"endOffset":2948,"count":22},{"startOffset":2950,"endOffset":2992,"count":22},{"startOffset":3050,"endOffset":3084,"count":20},{"startOffset":3086,"endOffset":3128,"count":20},{"startOffset":3190,"endOffset":3238,"count":7},{"startOffset":3300,"endOffset":3348,"count":0},{"startOffset":3462,"endOffset":3521,"count":3},{"startOffset":3493,"endOffset":3520,"count":2},{"startOffset":3523,"endOffset":3565,"count":3},{"startOffset":3601,"endOffset":3802,"count":1},{"startOffset":3724,"endOffset":3778,"count":0},{"startOffset":3831,"endOffset":3937,"count":0},{"startOffset":3942,"endOffset":3994,"count":44}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":4069,"endOffset":4161,"count":367}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4385,"endOffset":5229,"count":175},{"startOffset":4576,"endOffset":5164,"count":329},{"startOffset":4830,"endOffset":4876,"count":0},{"startOffset":4878,"endOffset":4907,"count":0},{"startOffset":4975,"endOffset":5004,"count":0},{"startOffset":5077,"endOffset":5159,"count":175},{"startOffset":5164,"endOffset":5228,"count":0}],"isBlockCoverage":true}]},{"scriptId":"169","url":"node:internal/modules/run_main","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5100,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":334,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1691,"endOffset":3179,"count":0}],"isBlockCoverage":false},{"functionName":"runMainESM","ranges":[{"startOffset":3316,"endOffset":3637,"count":0}],"isBlockCoverage":false},{"functionName":"handleMainPromise","ranges":[{"startOffset":3775,"endOffset":4059,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":4616,"endOffset":5024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"node:internal/modules/esm/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9392,"count":1}],"isBlockCoverage":false},{"functionName":"transferArrayBuffer","ranges":[{"startOffset":1044,"endOffset":1349,"count":291},{"startOffset":1128,"endOffset":1139,"count":216},{"startOffset":1139,"endOffset":1170,"count":75},{"startOffset":1170,"endOffset":1190,"count":0},{"startOffset":1190,"endOffset":1270,"count":75},{"startOffset":1270,"endOffset":1346,"count":0}],"isBlockCoverage":true},{"functionName":"wrapMessage","ranges":[{"startOffset":1554,"endOffset":2100,"count":292},{"startOffset":1619,"endOffset":1635,"count":0},{"startOffset":1636,"endOffset":1743,"count":0},{"startOffset":1781,"endOffset":2099,"count":0}],"isBlockCoverage":true},{"functionName":"customizedModuleWorker","ranges":[{"startOffset":2644,"endOffset":8091,"count":1},{"startOffset":3429,"endOffset":3757,"count":0},{"startOffset":3839,"endOffset":3919,"count":0}],"isBlockCoverage":true},{"functionName":"process.exit","ranges":[{"startOffset":2993,"endOffset":3275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4020,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"checkForMessages","ranges":[{"startOffset":4331,"endOffset":4735,"count":487},{"startOffset":4635,"endOffset":4730,"count":279}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4817,"endOffset":5547,"count":101},{"startOffset":4873,"endOffset":4935,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5532,"endOffset":5540,"count":101}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":5911,"endOffset":8088,"count":291},{"startOffset":6241,"endOffset":6282,"count":3},{"startOffset":6284,"endOffset":6493,"count":3},{"startOffset":6952,"endOffset":6967,"count":3},{"startOffset":7075,"endOffset":7154,"count":0},{"startOffset":7197,"endOffset":7212,"count":3},{"startOffset":7309,"endOffset":7324,"count":3},{"startOffset":7369,"endOffset":7378,"count":0},{"startOffset":7450,"endOffset":7458,"count":288},{"startOffset":7478,"endOffset":7653,"count":0},{"startOffset":7821,"endOffset":7884,"count":3}],"isBlockCoverage":true},{"functionName":"setupModuleWorker","ranges":[{"startOffset":8473,"endOffset":9389,"count":1}],"isBlockCoverage":true},{"functionName":"errorHandler","ranges":[{"startOffset":8781,"endOffset":9248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"node:util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":67,"count":1}],"isBlockCoverage":false}]},{"scriptId":"172","url":"node:internal/modules/esm/shared_constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":658,"count":1}],"isBlockCoverage":false}]},{"scriptId":"173","url":"node:internal/modules/esm/hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27332,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1780,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"emitImportAssertionWarning","ranges":[{"startOffset":1886,"endOffset":2120,"count":0}],"isBlockCoverage":false},{"functionName":"defineImportAssertionAlias","ranges":[{"startOffset":2124,"endOffset":2506,"count":186}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2285,"endOffset":2373,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2380,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2964,"endOffset":15348,"count":1}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":4325,"endOffset":4647,"count":4}],"isBlockCoverage":true},{"functionName":"addCustomLoader","ranges":[{"startOffset":5134,"endOffset":5983,"count":4},{"startOffset":5310,"endOffset":5324,"count":0},{"startOffset":5326,"endOffset":5569,"count":0},{"startOffset":5588,"endOffset":5765,"count":3},{"startOffset":5969,"endOffset":5977,"count":2}],"isBlockCoverage":true},{"functionName":"initializeGlobalPreload","ranges":[{"startOffset":6043,"endOffset":7026,"count":1},{"startOffset":6173,"endOffset":6993,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":7728,"endOffset":11071,"count":400},{"startOffset":9144,"endOffset":9175,"count":397},{"startOffset":9207,"endOffset":9230,"count":356},{"startOffset":9232,"endOffset":9305,"count":0},{"startOffset":9440,"endOffset":9702,"count":0},{"startOffset":9807,"endOffset":10128,"count":99},{"startOffset":9915,"endOffset":10082,"count":0},{"startOffset":10215,"endOffset":10323,"count":0},{"startOffset":10453,"endOffset":10507,"count":0},{"startOffset":10515,"endOffset":10699,"count":0},{"startOffset":10734,"endOffset":10770,"count":3},{"startOffset":10785,"endOffset":10940,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":8224,"endOffset":8504,"count":478}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":8534,"endOffset":8779,"count":878},{"startOffset":8625,"endOffset":8772,"count":0}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":11077,"endOffset":11206,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":11712,"endOffset":15062,"count":186},{"startOffset":13481,"endOffset":13512,"count":183},{"startOffset":13544,"endOffset":13567,"count":30},{"startOffset":13569,"endOffset":13642,"count":0},{"startOffset":13786,"endOffset":13820,"count":183},{"startOffset":13962,"endOffset":14044,"count":0},{"startOffset":14101,"endOffset":14298,"count":0},{"startOffset":14326,"endOffset":14417,"count":0},{"startOffset":14457,"endOffset":14619,"count":0},{"startOffset":14654,"endOffset":14690,"count":154},{"startOffset":14691,"endOffset":14726,"count":154},{"startOffset":14727,"endOffset":14763,"count":154},{"startOffset":14771,"endOffset":14959,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":11967,"endOffset":12845,"count":563},{"startOffset":12046,"endOffset":12308,"count":0},{"startOffset":12421,"endOffset":12763,"count":0}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":12875,"endOffset":13120,"count":749},{"startOffset":12966,"endOffset":13113,"count":0}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":15068,"endOffset":15105,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":15111,"endOffset":15345,"count":4}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15562,"endOffset":23825,"count":0}],"isBlockCoverage":false},{"functionName":"pluckHooks","ranges":[{"startOffset":24045,"endOffset":24468,"count":4},{"startOffset":24197,"endOffset":24253,"count":0},{"startOffset":24270,"endOffset":24314,"count":3},{"startOffset":24388,"endOffset":24438,"count":2}],"isBlockCoverage":true},{"functionName":"nextHookFactory","ranges":[{"startOffset":25538,"endOffset":27268,"count":1799},{"startOffset":25940,"endOffset":26029,"count":1213},{"startOffset":26029,"endOffset":26287,"count":586}],"isBlockCoverage":true},{"functionName":"chainAdvancedTooFar","ranges":[{"startOffset":26109,"endOffset":26281,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.__proto__","ranges":[{"startOffset":26327,"endOffset":27198,"count":1041},{"startOffset":26793,"endOffset":26823,"count":200},{"startOffset":27136,"endOffset":27167,"count":841}],"isBlockCoverage":true}]},{"scriptId":"174","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":728,"count":1}],"isBlockCoverage":false}]},{"scriptId":"175","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45662,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2784,"endOffset":3382,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3909,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5063,"endOffset":6222,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7358,"endOffset":8135,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":8933,"endOffset":10447,"count":1},{"startOffset":9070,"endOffset":9227,"count":0},{"startOffset":9294,"endOffset":9483,"count":0},{"startOffset":9574,"endOffset":9611,"count":0},{"startOffset":9680,"endOffset":9774,"count":0},{"startOffset":9797,"endOffset":10092,"count":0},{"startOffset":10346,"endOffset":10351,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":10870,"endOffset":11085,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11490,"endOffset":11689,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12338,"endOffset":12727,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13194,"endOffset":13582,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":14960,"endOffset":17791,"count":5},{"startOffset":15141,"endOffset":15152,"count":0},{"startOffset":15153,"endOffset":15189,"count":0},{"startOffset":15191,"endOffset":15277,"count":0},{"startOffset":15329,"endOffset":15899,"count":0},{"startOffset":15993,"endOffset":16617,"count":0},{"startOffset":16842,"endOffset":16928,"count":0},{"startOffset":16974,"endOffset":17790,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15667,"endOffset":15680,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16206,"endOffset":16219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16355,"endOffset":16368,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17112,"endOffset":17125,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17356,"endOffset":17369,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17720,"endOffset":17733,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":17990,"endOffset":18138,"count":15},{"startOffset":18088,"endOffset":18134,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":18948,"endOffset":21264,"count":12},{"startOffset":19143,"endOffset":19301,"count":5},{"startOffset":19301,"endOffset":21144,"count":7},{"startOffset":19333,"endOffset":20212,"count":2},{"startOffset":19365,"endOffset":19393,"count":0},{"startOffset":19723,"endOffset":19877,"count":0},{"startOffset":19918,"endOffset":19947,"count":0},{"startOffset":19983,"endOffset":20043,"count":0},{"startOffset":20079,"endOffset":20142,"count":0},{"startOffset":20144,"endOffset":20212,"count":0},{"startOffset":20212,"endOffset":21144,"count":5},{"startOffset":20367,"endOffset":20602,"count":15},{"startOffset":20427,"endOffset":20595,"count":0},{"startOffset":20646,"endOffset":21065,"count":12},{"startOffset":20705,"endOffset":20727,"count":11},{"startOffset":20729,"endOffset":21058,"count":5},{"startOffset":21005,"endOffset":21018,"count":0},{"startOffset":21065,"endOffset":21144,"count":0},{"startOffset":21144,"endOffset":21263,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21556,"endOffset":22520,"count":5},{"startOffset":21689,"endOffset":21705,"count":0},{"startOffset":21762,"endOffset":21779,"count":0},{"startOffset":21924,"endOffset":22487,"count":39},{"startOffset":22037,"endOffset":22096,"count":5},{"startOffset":22096,"endOffset":22482,"count":34},{"startOffset":22152,"endOffset":22482,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23028,"endOffset":25678,"count":5},{"startOffset":23239,"endOffset":23278,"count":0},{"startOffset":23691,"endOffset":23767,"count":0},{"startOffset":23801,"endOffset":25677,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":26061,"endOffset":26628,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":27126,"endOffset":29641,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":29761,"endOffset":29877,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":30049,"endOffset":31139,"count":1},{"startOffset":30244,"endOffset":30480,"count":0},{"startOffset":30528,"endOffset":30544,"count":0},{"startOffset":30774,"endOffset":30811,"count":0},{"startOffset":30840,"endOffset":30962,"count":0},{"startOffset":31020,"endOffset":31024,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":31472,"endOffset":33600,"count":3},{"startOffset":31587,"endOffset":31635,"count":2},{"startOffset":31635,"endOffset":32107,"count":1},{"startOffset":31943,"endOffset":31980,"count":0},{"startOffset":31982,"endOffset":32102,"count":0},{"startOffset":32107,"endOffset":33380,"count":1},{"startOffset":32547,"endOffset":32831,"count":0},{"startOffset":33136,"endOffset":33380,"count":0},{"startOffset":33380,"endOffset":33599,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33717,"endOffset":33829,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33954,"endOffset":34241,"count":47},{"startOffset":34025,"endOffset":34221,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34396,"endOffset":34591,"count":47},{"startOffset":34483,"endOffset":34500,"count":0},{"startOffset":34530,"endOffset":34546,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":34963,"endOffset":35777,"count":3},{"startOffset":35295,"endOffset":35343,"count":0},{"startOffset":35388,"endOffset":35462,"count":0},{"startOffset":35682,"endOffset":35710,"count":2},{"startOffset":35710,"endOffset":35776,"count":1}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":35946,"endOffset":37441,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":37831,"endOffset":39244,"count":44},{"startOffset":38144,"endOffset":39236,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":39390,"endOffset":39670,"count":444},{"startOffset":39468,"endOffset":39521,"count":1},{"startOffset":39521,"endOffset":39559,"count":443},{"startOffset":39559,"endOffset":39579,"count":0},{"startOffset":39581,"endOffset":39667,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":40305,"endOffset":44045,"count":44},{"startOffset":40465,"endOffset":40475,"count":0},{"startOffset":40477,"endOffset":41309,"count":0},{"startOffset":41419,"endOffset":41460,"count":0},{"startOffset":41553,"endOffset":41614,"count":0},{"startOffset":41664,"endOffset":41948,"count":41},{"startOffset":41847,"endOffset":41939,"count":0},{"startOffset":41956,"endOffset":42017,"count":0},{"startOffset":42023,"endOffset":42060,"count":3},{"startOffset":42405,"endOffset":42428,"count":0},{"startOffset":42496,"endOffset":42526,"count":41},{"startOffset":42528,"endOffset":42575,"count":41},{"startOffset":42575,"endOffset":42638,"count":3},{"startOffset":42638,"endOffset":43155,"count":0},{"startOffset":43155,"endOffset":43320,"count":3},{"startOffset":43320,"endOffset":43342,"count":0},{"startOffset":43343,"endOffset":43361,"count":3},{"startOffset":43376,"endOffset":43810,"count":0},{"startOffset":43810,"endOffset":44044,"count":3}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":44316,"endOffset":44804,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":45251,"endOffset":45656,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2284,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1099,"endOffset":2228,"count":1},{"startOffset":1355,"endOffset":1377,"count":0},{"startOffset":1610,"endOffset":1956,"count":0},{"startOffset":1961,"endOffset":2227,"count":0}],"isBlockCoverage":true}]},{"scriptId":"177","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6880,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":984,"endOffset":1015,"count":2}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1087,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1597,"endOffset":1968,"count":1},{"startOffset":1699,"endOffset":1951,"count":4},{"startOffset":1763,"endOffset":1799,"count":0},{"startOffset":1809,"endOffset":1939,"count":1},{"startOffset":1898,"endOffset":1902,"count":0},{"startOffset":1951,"endOffset":1967,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2206,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2580,"endOffset":5490,"count":1},{"startOffset":2753,"endOffset":3994,"count":0},{"startOffset":4016,"endOffset":5189,"count":0},{"startOffset":5268,"endOffset":5489,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":5633,"endOffset":5988,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":6140,"endOffset":6381,"count":3},{"startOffset":6296,"endOffset":6320,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":6533,"endOffset":6762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1861,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":687,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1413,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1236,"count":1}],"isBlockCoverage":false},{"functionName":"get esmLoader","ranges":[{"startOffset":402,"endOffset":476,"count":21}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":481,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22653,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":960,"endOffset":1093,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1255,"endOffset":1379,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":1547,"endOffset":1672,"count":95}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2386,"endOffset":15691,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":3702,"endOffset":3900,"count":1},{"startOffset":3791,"endOffset":3850,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5490,"endOffset":5741,"count":2},{"startOffset":5595,"endOffset":5736,"count":1}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5747,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7528,"endOffset":7766,"count":204}],"isBlockCoverage":true},{"functionName":"getModuleJobSync","ranges":[{"startOffset":7772,"endOffset":8012,"count":0}],"isBlockCoverage":false},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":8018,"endOffset":8617,"count":204},{"startOffset":8398,"endOffset":8462,"count":0},{"startOffset":8493,"endOffset":8593,"count":94}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":9268,"endOffset":10499,"count":94},{"startOffset":9773,"endOffset":9850,"count":0},{"startOffset":9997,"endOffset":10038,"count":0},{"startOffset":10096,"endOffset":10111,"count":0},{"startOffset":10113,"endOffset":10169,"count":0}],"isBlockCoverage":true},{"functionName":"callTranslator","ranges":[{"startOffset":9363,"endOffset":9685,"count":94},{"startOffset":9510,"endOffset":9592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9782,"endOffset":9850,"count":0}],"isBlockCoverage":false},{"functionName":"moduleProvider","ranges":[{"startOffset":9860,"endOffset":9936,"count":94}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":10972,"endOffset":11201,"count":4}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":11272,"endOffset":11804,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":12274,"endOffset":12872,"count":204},{"startOffset":12463,"endOffset":12871,"count":0}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":13036,"endOffset":13319,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":13538,"endOffset":13889,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":14181,"endOffset":14492,"count":94},{"startOffset":14375,"endOffset":14415,"count":0},{"startOffset":14416,"endOffset":14457,"count":0}],"isBlockCoverage":true},{"functionName":"loadSync","ranges":[{"startOffset":14498,"endOffset":15045,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":15051,"endOffset":15206,"count":94},{"startOffset":15110,"endOffset":15201,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":15212,"endOffset":15554,"count":4},{"startOffset":15367,"endOffset":15553,"count":0}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":15620,"endOffset":15688,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15748,"endOffset":18322,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":18828,"endOffset":20542,"count":1},{"startOffset":19191,"endOffset":20493,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":19377,"endOffset":19879,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20203,"endOffset":20291,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":20662,"endOffset":20845,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":22160,"endOffset":22571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3999,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":292,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":875,"endOffset":903,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1259,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1893,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2297,"endOffset":2401,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2548,"endOffset":2680,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2686,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2933,"endOffset":2961,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3011,"endOffset":3158,"count":204},{"startOffset":3144,"endOffset":3152,"count":110}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3162,"endOffset":3772,"count":94},{"startOffset":3386,"endOffset":3423,"count":0},{"startOffset":3425,"endOffset":3497,"count":0},{"startOffset":3583,"endOffset":3589,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3776,"endOffset":3937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3993,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1369,"endOffset":1407,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1840,"endOffset":3252,"count":156},{"startOffset":2039,"endOffset":2170,"count":0},{"startOffset":2246,"endOffset":2394,"count":0},{"startOffset":2666,"endOffset":2727,"count":0},{"startOffset":2735,"endOffset":2845,"count":0},{"startOffset":2853,"endOffset":3244,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3491,"endOffset":3916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19863,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":549,"endOffset":668,"count":158},{"startOffset":596,"endOffset":614,"count":157},{"startOffset":614,"endOffset":667,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1195,"endOffset":1222,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":2094,"endOffset":2505,"count":3},{"startOffset":2169,"endOffset":2246,"count":0},{"startOffset":2410,"endOffset":2497,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":3134,"endOffset":3569,"count":158},{"startOffset":3212,"endOffset":3239,"count":79},{"startOffset":3241,"endOffset":3260,"count":0},{"startOffset":3356,"endOffset":3381,"count":0},{"startOffset":3402,"endOffset":3483,"count":0},{"startOffset":3484,"endOffset":3488,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":3800,"endOffset":4084,"count":84},{"startOffset":3860,"endOffset":3876,"count":5},{"startOffset":3876,"endOffset":4019,"count":79},{"startOffset":4019,"endOffset":4038,"count":1},{"startOffset":4039,"endOffset":4048,"count":78}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":4210,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":4847,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":5072,"endOffset":5610,"count":79}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":5495,"endOffset":5551,"count":4}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":5843,"endOffset":6376,"count":0}],"isBlockCoverage":false},{"functionName":"loadCJSModule","ranges":[{"startOffset":6980,"endOffset":9765,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":10261,"endOffset":11696,"count":5},{"startOffset":10465,"endOffset":10470,"count":0},{"startOffset":10669,"endOffset":10692,"count":0},{"startOffset":10741,"endOffset":10799,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10861,"endOffset":11689,"count":5},{"startOffset":11184,"endOffset":11229,"count":0},{"startOffset":11273,"endOffset":11643,"count":15},{"startOffset":11378,"endOffset":11407,"count":0},{"startOffset":11536,"endOffset":11594,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11860,"endOffset":11956,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":12148,"endOffset":13063,"count":5},{"startOffset":12282,"endOffset":12315,"count":3},{"startOffset":12800,"endOffset":12815,"count":0},{"startOffset":12945,"endOffset":12995,"count":0}],"isBlockCoverage":true},{"functionName":"cjsLoader","ranges":[{"startOffset":12567,"endOffset":12799,"count":5},{"startOffset":12710,"endOffset":12794,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":13259,"endOffset":15823,"count":5},{"startOffset":13445,"endOffset":13583,"count":0},{"startOffset":13902,"endOffset":13907,"count":0},{"startOffset":13916,"endOffset":13968,"count":0},{"startOffset":14151,"endOffset":15783,"count":0}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":15951,"endOffset":16368,"count":10},{"startOffset":16236,"endOffset":16290,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":16484,"endOffset":18816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18885,"endOffset":19859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7774,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1204,"endOffset":2464,"count":154},{"startOffset":1479,"endOffset":2325,"count":0},{"startOffset":2339,"endOffset":2349,"count":0},{"startOffset":2351,"endOffset":2409,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceSync","ranges":[{"startOffset":2654,"endOffset":3414,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":3544,"endOffset":4991,"count":156},{"startOffset":3736,"endOffset":3771,"count":0},{"startOffset":3772,"endOffset":3804,"count":0},{"startOffset":3806,"endOffset":4021,"count":0},{"startOffset":4179,"endOffset":4232,"count":2},{"startOffset":4232,"endOffset":4846,"count":154},{"startOffset":4617,"endOffset":4679,"count":0},{"startOffset":4681,"endOffset":4841,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoadSync","ranges":[{"startOffset":5524,"endOffset":6193,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":6390,"endOffset":7044,"count":156},{"startOffset":6625,"endOffset":6653,"count":2},{"startOffset":6654,"endOffset":6682,"count":2},{"startOffset":6683,"endOffset":6819,"count":0},{"startOffset":6825,"endOffset":7041,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":7432,"endOffset":7679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12296,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":2121,"endOffset":3679,"count":7},{"startOffset":2226,"endOffset":2274,"count":0},{"startOffset":2785,"endOffset":2850,"count":1},{"startOffset":3473,"endOffset":3544,"count":0},{"startOffset":3595,"endOffset":3674,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":3685,"endOffset":3986,"count":1},{"startOffset":3809,"endOffset":3847,"count":0},{"startOffset":3849,"endOffset":3923,"count":0}],"isBlockCoverage":true},{"functionName":"runInContext","ranges":[{"startOffset":3992,"endOffset":4387,"count":2},{"startOffset":4210,"endOffset":4248,"count":0},{"startOffset":4250,"endOffset":4324,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4393,"endOffset":4567,"count":2}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":4574,"endOffset":4798,"count":2},{"startOffset":4660,"endOffset":4795,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":4802,"endOffset":5510,"count":3},{"startOffset":5007,"endOffset":5074,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5514,"endOffset":6608,"count":4},{"startOffset":5574,"endOffset":5584,"count":1},{"startOffset":5584,"endOffset":5809,"count":3},{"startOffset":5809,"endOffset":5868,"count":2},{"startOffset":5868,"endOffset":5918,"count":3},{"startOffset":5918,"endOffset":5981,"count":0},{"startOffset":5981,"endOffset":6034,"count":3},{"startOffset":6034,"endOffset":6466,"count":0},{"startOffset":6466,"endOffset":6516,"count":3},{"startOffset":6516,"endOffset":6579,"count":0},{"startOffset":6579,"endOffset":6607,"count":3}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":6646,"endOffset":7742,"count":4},{"startOffset":6748,"endOffset":7038,"count":2},{"startOffset":7038,"endOffset":7079,"count":0},{"startOffset":7079,"endOffset":7122,"count":2},{"startOffset":7122,"endOffset":7179,"count":0},{"startOffset":7179,"endOffset":7262,"count":2},{"startOffset":7262,"endOffset":7449,"count":0},{"startOffset":7449,"endOffset":7741,"count":2}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":7746,"endOffset":7824,"count":2}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":7982,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8461,"endOffset":8871,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":8875,"endOffset":9234,"count":2},{"startOffset":8968,"endOffset":9012,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":9238,"endOffset":9429,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9433,"endOffset":11070,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11359,"endOffset":11943,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"187","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9043,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":958,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1338,"endOffset":3397,"count":94},{"startOffset":1877,"endOffset":1983,"count":0}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":2159,"endOffset":3004,"count":94}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2624,"endOffset":2833,"count":200}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3403,"endOffset":3553,"count":4}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3559,"endOffset":7296,"count":4},{"startOffset":4032,"endOffset":4213,"count":0},{"startOffset":4273,"endOffset":7042,"count":0},{"startOffset":7091,"endOffset":7291,"count":103}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3660,"endOffset":3927,"count":204},{"startOffset":3722,"endOffset":3749,"count":101},{"startOffset":3749,"endOffset":3926,"count":103}],"isBlockCoverage":true},{"functionName":"runSync","ranges":[{"startOffset":7302,"endOffset":7714,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":7720,"endOffset":8959,"count":4},{"startOffset":7901,"endOffset":8900,"count":0}],"isBlockCoverage":true}]},{"scriptId":"188","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31626,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3151,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3311,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3400,"endOffset":9756,"count":226}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3545,"endOffset":3729,"count":226},{"startOffset":3662,"endOffset":3666,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3735,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3800,"endOffset":3838,"count":452}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3844,"endOffset":3928,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3934,"endOffset":3992,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3998,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4070,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4130,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4182,"endOffset":4293,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":4299,"endOffset":4382,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":4388,"endOffset":4457,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4463,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4617,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4685,"endOffset":4751,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4757,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4839,"endOffset":4952,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4958,"endOffset":5043,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5049,"endOffset":5132,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5146,"endOffset":5969,"count":226},{"startOffset":5181,"endOffset":5221,"count":0},{"startOffset":5254,"endOffset":5297,"count":0},{"startOffset":5532,"endOffset":5904,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5472,"endOffset":5514,"count":226}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5619,"endOffset":5734,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5737,"endOffset":5886,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5976,"endOffset":6037,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":6242,"endOffset":7990,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":8303,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":8744,"endOffset":8901,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8907,"endOffset":9322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9328,"endOffset":9383,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9389,"endOffset":9479,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9485,"endOffset":9520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9526,"endOffset":9753,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":9760,"endOffset":10142,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9874,"endOffset":9933,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9920,"endOffset":9932,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9940,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10146,"endOffset":10439,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":10443,"endOffset":10921,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":10925,"endOffset":11048,"count":904},{"startOffset":10970,"endOffset":10979,"count":0},{"startOffset":10986,"endOffset":11045,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11052,"endOffset":12227,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":12231,"endOffset":14449,"count":226},{"startOffset":12386,"endOffset":12416,"count":72},{"startOffset":12708,"endOffset":12746,"count":72},{"startOffset":12747,"endOffset":12753,"count":154},{"startOffset":12781,"endOffset":12831,"count":0},{"startOffset":12867,"endOffset":12905,"count":0},{"startOffset":13159,"endOffset":13233,"count":0},{"startOffset":13380,"endOffset":13384,"count":0},{"startOffset":13473,"endOffset":13530,"count":0},{"startOffset":13627,"endOffset":13638,"count":0},{"startOffset":13697,"endOffset":13759,"count":0},{"startOffset":13784,"endOffset":13972,"count":154},{"startOffset":13810,"endOffset":13824,"count":0},{"startOffset":13826,"endOffset":13939,"count":0},{"startOffset":13972,"endOffset":14051,"count":72},{"startOffset":14051,"endOffset":14441,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":14606,"endOffset":14833,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":14837,"endOffset":15111,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":15115,"endOffset":15481,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":15605,"endOffset":15937,"count":226}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":15941,"endOffset":17373,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":17377,"endOffset":17723,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17727,"endOffset":19011,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":19015,"endOffset":19470,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":19474,"endOffset":19786,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":19790,"endOffset":19926,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":19930,"endOffset":20093,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":20097,"endOffset":20305,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":20309,"endOffset":20693,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":20697,"endOffset":20788,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":20792,"endOffset":20875,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":20879,"endOffset":21370,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":21374,"endOffset":23109,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":23113,"endOffset":23555,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":23559,"endOffset":23803,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":23807,"endOffset":24548,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":24552,"endOffset":24733,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":24737,"endOffset":25012,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":25016,"endOffset":25288,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":25292,"endOffset":25571,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":25575,"endOffset":25904,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":25908,"endOffset":26049,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":26053,"endOffset":26189,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":26193,"endOffset":26383,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":26387,"endOffset":26621,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":26625,"endOffset":26907,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":26911,"endOffset":27112,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":27116,"endOffset":27395,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":27399,"endOffset":27677,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":27681,"endOffset":27884,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":27888,"endOffset":28171,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":28175,"endOffset":28352,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":28356,"endOffset":28749,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":28753,"endOffset":29658,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":29662,"endOffset":29778,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":29782,"endOffset":30028,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":30032,"endOffset":30387,"count":226},{"startOffset":30151,"endOffset":30157,"count":0},{"startOffset":30201,"endOffset":30238,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":30391,"endOffset":31074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7764,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1218,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1702,"endOffset":2589,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2595,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":3051,"endOffset":3360,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3366,"endOffset":4085,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":4091,"endOffset":4298,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4304,"endOffset":5017,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":5023,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5679,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":7229,"endOffset":7700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8409,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1224,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":2070,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2121,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2196,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3994,"endOffset":4259,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4265,"endOffset":4861,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4867,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5886,"endOffset":6603,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6609,"endOffset":7000,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":7006,"endOffset":7281,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7472,"endOffset":8077,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":8081,"endOffset":8345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11629,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1486,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1540,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1902,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2666,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3755,"endOffset":3763,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4015,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4398,"endOffset":4840,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4873,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5197,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5460,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7003,"endOffset":7942,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8165,"endOffset":8173,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8300,"endOffset":8648,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8679,"endOffset":8751,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8784,"endOffset":8858,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8863,"endOffset":8917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9147,"endOffset":9183,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9188,"endOffset":9229,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9270,"endOffset":11487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7922,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsPromises","ranges":[{"startOffset":847,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":961,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":1083,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1690,"endOffset":7862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40434,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3912,"endOffset":9623,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9871,"endOffset":9973,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9977,"endOffset":10092,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10208,"endOffset":10261,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10361,"endOffset":10406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10412,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10757,"endOffset":11019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11025,"endOffset":11344,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11350,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11607,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11702,"endOffset":11876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11882,"endOffset":12085,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12091,"endOffset":13303,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13309,"endOffset":14352,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14442,"endOffset":14621,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14708,"endOffset":14845,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14943,"endOffset":15085,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15370,"endOffset":15536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15542,"endOffset":17321,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17327,"endOffset":18020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18026,"endOffset":18438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18444,"endOffset":20720,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20726,"endOffset":21199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21205,"endOffset":21469,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21475,"endOffset":21969,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21975,"endOffset":22470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22476,"endOffset":23258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23264,"endOffset":23701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23707,"endOffset":23992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23998,"endOffset":24262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24268,"endOffset":24534,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24540,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24706,"endOffset":25400,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25406,"endOffset":25561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25567,"endOffset":25727,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25733,"endOffset":25925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25931,"endOffset":26252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26258,"endOffset":26579,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27023,"endOffset":27678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27684,"endOffset":28413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28491,"endOffset":29462,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29649,"endOffset":29822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29945,"endOffset":30525,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30565,"endOffset":39103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39422,"endOffset":39813,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12802,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":403,"endOffset":605,"count":4},{"startOffset":567,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":996,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1271,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2298,"endOffset":12217,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12250,"endOffset":12679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/esm.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true}]},{"scriptId":"197","url":"node:url","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33687,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":2217,"endOffset":2506,"count":913}],"isBlockCoverage":true},{"functionName":"urlParse","ranges":[{"startOffset":3555,"endOffset":4177,"count":913},{"startOffset":3684,"endOffset":4016,"count":0},{"startOffset":4046,"endOffset":4057,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":4181,"endOffset":4410,"count":565},{"startOffset":4302,"endOffset":4401,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5249,"endOffset":15656,"count":913},{"startOffset":5733,"endOffset":6842,"count":58106},{"startOffset":6003,"endOffset":6075,"count":913},{"startOffset":6031,"endOffset":6040,"count":0},{"startOffset":6075,"endOffset":6230,"count":57193},{"startOffset":6091,"endOffset":6170,"count":0},{"startOffset":6186,"endOffset":6230,"count":0},{"startOffset":6357,"endOffset":6413,"count":209},{"startOffset":6423,"endOffset":6465,"count":0},{"startOffset":6500,"endOffset":6567,"count":0},{"startOffset":6577,"endOffset":6748,"count":0},{"startOffset":6764,"endOffset":6837,"count":0},{"startOffset":7094,"endOffset":7144,"count":0},{"startOffset":7153,"endOffset":7208,"count":0},{"startOffset":7215,"endOffset":7551,"count":0},{"startOffset":7608,"endOffset":8193,"count":704},{"startOffset":7714,"endOffset":8188,"count":0},{"startOffset":8272,"endOffset":8411,"count":565},{"startOffset":8685,"endOffset":8710,"count":348},{"startOffset":8712,"endOffset":8968,"count":565},{"startOffset":8771,"endOffset":8830,"count":469},{"startOffset":8849,"endOffset":8896,"count":469},{"startOffset":8898,"endOffset":8963,"count":469},{"startOffset":9031,"endOffset":9072,"count":444},{"startOffset":9041,"endOffset":9071,"count":96},{"startOffset":9075,"endOffset":13753,"count":565},{"startOffset":9610,"endOffset":11083,"count":976},{"startOffset":9658,"endOffset":9672,"count":0},{"startOffset":9682,"endOffset":9702,"count":0},{"startOffset":9712,"endOffset":9921,"count":0},{"startOffset":9931,"endOffset":9947,"count":0},{"startOffset":9957,"endOffset":9980,"count":0},{"startOffset":9990,"endOffset":10008,"count":0},{"startOffset":10018,"endOffset":10041,"count":0},{"startOffset":10051,"endOffset":10071,"count":0},{"startOffset":10081,"endOffset":10110,"count":0},{"startOffset":10120,"endOffset":10150,"count":0},{"startOffset":10160,"endOffset":10185,"count":0},{"startOffset":10195,"endOffset":10223,"count":0},{"startOffset":10233,"endOffset":10256,"count":0},{"startOffset":10266,"endOffset":10295,"count":0},{"startOffset":10305,"endOffset":10329,"count":0},{"startOffset":10339,"endOffset":10525,"count":0},{"startOffset":10535,"endOffset":10550,"count":0},{"startOffset":10560,"endOffset":10584,"count":481},{"startOffset":10594,"endOffset":10785,"count":481},{"startOffset":10795,"endOffset":11024,"count":0},{"startOffset":11070,"endOffset":11076,"count":481},{"startOffset":11124,"endOffset":11221,"count":0},{"startOffset":11247,"endOffset":11311,"count":84},{"startOffset":11311,"endOffset":11407,"count":481},{"startOffset":11612,"endOffset":11631,"count":469},{"startOffset":11983,"endOffset":12018,"count":0},{"startOffset":12161,"endOffset":13395,"count":96},{"startOffset":12188,"endOffset":12311,"count":0},{"startOffset":13324,"endOffset":13379,"count":0},{"startOffset":13423,"endOffset":13440,"count":0},{"startOffset":13476,"endOffset":13481,"count":469},{"startOffset":13622,"endOffset":13748,"count":0},{"startOffset":14148,"endOffset":14391,"count":53848},{"startOffset":14217,"endOffset":14293,"count":0},{"startOffset":14331,"endOffset":14352,"count":0},{"startOffset":14354,"endOffset":14386,"count":0},{"startOffset":14421,"endOffset":14770,"count":0},{"startOffset":14798,"endOffset":14930,"count":0},{"startOffset":14983,"endOffset":15027,"count":0},{"startOffset":15064,"endOffset":15077,"count":0},{"startOffset":15148,"endOffset":15169,"count":829},{"startOffset":15174,"endOffset":15250,"count":0},{"startOffset":15290,"endOffset":15313,"count":469},{"startOffset":15314,"endOffset":15331,"count":0},{"startOffset":15333,"endOffset":15365,"count":0},{"startOffset":15419,"endOffset":15433,"count":84},{"startOffset":15435,"endOffset":15535,"count":829},{"startOffset":15466,"endOffset":15471,"count":0}],"isBlockCoverage":true},{"functionName":"getHostname","ranges":[{"startOffset":15690,"endOffset":16658,"count":565},{"startOffset":15785,"endOffset":16639,"count":495},{"startOffset":16098,"endOffset":16634,"count":0}],"isBlockCoverage":true},{"functionName":"autoEscapeStr","ranges":[{"startOffset":17738,"endOffset":18466,"count":913},{"startOffset":17858,"endOffset":18234,"count":53848},{"startOffset":18012,"endOffset":18229,"count":0},{"startOffset":18311,"endOffset":18465,"count":0}],"isBlockCoverage":true},{"functionName":"urlFormat","ranges":[{"startOffset":18515,"endOffset":19726,"count":1},{"startOffset":18780,"endOffset":18824,"count":0},{"startOffset":18887,"endOffset":19012,"count":0},{"startOffset":19168,"endOffset":19586,"count":0},{"startOffset":19673,"endOffset":19725,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":20452,"endOffset":22913,"count":913},{"startOffset":20516,"endOffset":20593,"count":0},{"startOffset":20628,"endOffset":20633,"count":348},{"startOffset":20667,"endOffset":20672,"count":84},{"startOffset":20762,"endOffset":20798,"count":96},{"startOffset":20798,"endOffset":21050,"count":817},{"startOffset":20823,"endOffset":21050,"count":0},{"startOffset":21080,"endOffset":21113,"count":0},{"startOffset":21115,"endOffset":21169,"count":0},{"startOffset":21210,"endOffset":21226,"count":0},{"startOffset":21253,"endOffset":21303,"count":565},{"startOffset":21317,"endOffset":21333,"count":0},{"startOffset":21426,"endOffset":21847,"count":53848},{"startOffset":21474,"endOffset":21646,"count":0},{"startOffset":21654,"endOffset":21835,"count":0},{"startOffset":21868,"endOffset":22010,"count":0},{"startOffset":22145,"endOffset":22177,"count":444},{"startOffset":22179,"endOffset":22646,"count":469},{"startOffset":22203,"endOffset":22210,"count":0},{"startOffset":22293,"endOffset":22319,"count":0},{"startOffset":22353,"endOffset":22641,"count":0},{"startOffset":22704,"endOffset":22739,"count":0},{"startOffset":22746,"endOffset":22764,"count":0},{"startOffset":22779,"endOffset":22825,"count":0},{"startOffset":22832,"endOffset":22854,"count":0}],"isBlockCoverage":true},{"functionName":"urlResolve","ranges":[{"startOffset":22918,"endOffset":23019,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23047,"endOffset":23150,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":23155,"endOffset":23301,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":23335,"endOffset":32729,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":32760,"endOffset":33044,"count":565},{"startOffset":32859,"endOffset":33006,"count":0},{"startOffset":33020,"endOffset":33041,"count":96}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":33270,"endOffset":33370,"count":320}],"isBlockCoverage":true}]},{"scriptId":"198","url":"node:internal/idna","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":128,"count":1}],"isBlockCoverage":false}]},{"scriptId":"199","url":"node:module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":408,"count":1}],"isBlockCoverage":false}]},{"scriptId":"200","url":"node:internal/source_map/source_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12453,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":4090,"endOffset":4169,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":4212,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4335,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4457,"endOffset":4523,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4672,"endOffset":10340,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":10401,"endOffset":10472,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":10568,"endOffset":11527,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":11600,"endOffset":11922,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":12125,"endOffset":12411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2025,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":629,"endOffset":1408,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1682,"endOffset":1972,"count":4},{"startOffset":1835,"endOffset":1930,"count":0}],"isBlockCoverage":true}]},{"scriptId":"202","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/esm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11087,"count":1}],"isBlockCoverage":true},{"functionName":"filterHooksByAPIVersion","ranges":[{"startOffset":571,"endOffset":945,"count":1},{"startOffset":863,"endOffset":921,"count":0}],"isBlockCoverage":true},{"functionName":"registerAndCreateEsmHooks","ranges":[{"startOffset":1022,"endOffset":1240,"count":1}],"isBlockCoverage":true},{"functionName":"createEsmHooks","ranges":[{"startOffset":1304,"endOffset":10760,"count":1}],"isBlockCoverage":true},{"functionName":"isFileUrlOrNodeStyleSpecifier","ranges":[{"startOffset":1845,"endOffset":2102,"count":217},{"startOffset":2072,"endOffset":2095,"count":210}],"isBlockCoverage":true},{"functionName":"isProbablyEntrypoint","ranges":[{"startOffset":2265,"endOffset":2399,"count":53},{"startOffset":2358,"endOffset":2392,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2574,"endOffset":5265,"count":53}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":2657,"endOffset":2782,"count":41}],"isBlockCoverage":true},{"functionName":"entrypointFallback","ranges":[{"startOffset":2977,"endOffset":4392,"count":53},{"startOffset":3148,"endOffset":3156,"count":0},{"startOffset":3270,"endOffset":3319,"count":0},{"startOffset":3381,"endOffset":4382,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4428,"endOffset":5257,"count":53},{"startOffset":4615,"endOffset":4680,"count":41},{"startOffset":4680,"endOffset":4715,"count":12},{"startOffset":4715,"endOffset":4738,"count":5},{"startOffset":4740,"endOffset":4805,"count":0},{"startOffset":4805,"endOffset":4907,"count":12},{"startOffset":4907,"endOffset":5073,"count":0},{"startOffset":5073,"endOffset":5256,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5163,"endOffset":5245,"count":12}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":5351,"endOffset":6885,"count":155}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5435,"endOffset":6877,"count":155},{"startOffset":5749,"endOffset":5753,"count":144},{"startOffset":5754,"endOffset":5840,"count":11},{"startOffset":5915,"endOffset":5939,"count":153},{"startOffset":5941,"endOffset":6828,"count":153},{"startOffset":6238,"endOffset":6370,"count":0}],"isBlockCoverage":true},{"functionName":"defaultTransformSource","ranges":[{"startOffset":6538,"endOffset":6603,"count":153}],"isBlockCoverage":true},{"functionName":"getFormat","ranges":[{"startOffset":6890,"endOffset":9928,"count":11},{"startOffset":7660,"endOffset":7717,"count":2},{"startOffset":7717,"endOffset":8344,"count":9},{"startOffset":8344,"endOffset":8361,"count":0},{"startOffset":8363,"endOffset":8513,"count":0},{"startOffset":8513,"endOffset":9272,"count":9},{"startOffset":8633,"endOffset":9262,"count":0},{"startOffset":9272,"endOffset":9451,"count":9},{"startOffset":9451,"endOffset":9530,"count":0},{"startOffset":9532,"endOffset":9897,"count":0},{"startOffset":9897,"endOffset":9927,"count":9}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":6971,"endOffset":7050,"count":11}],"isBlockCoverage":true},{"functionName":"entrypointFallback","ranges":[{"startOffset":7245,"endOffset":7561,"count":11},{"startOffset":7364,"endOffset":7551,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8413,"endOffset":8501,"count":0}],"isBlockCoverage":false},{"functionName":"transformSource","ranges":[{"startOffset":9933,"endOffset":10737,"count":153},{"startOffset":10060,"endOffset":10113,"count":0},{"startOffset":10265,"endOffset":10273,"count":0},{"startOffset":10432,"endOffset":10471,"count":0},{"startOffset":10616,"endOffset":10736,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":10136,"endOffset":10205,"count":153}],"isBlockCoverage":true},{"functionName":"addShortCircuitFlag","ranges":[{"startOffset":10802,"endOffset":11055,"count":208},{"startOffset":10978,"endOffset":10989,"count":0}],"isBlockCoverage":true}]},{"scriptId":"203","url":"node:internal/vm/module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12679,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1739,"endOffset":4163,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":4169,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4317,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":4461,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4752,"endOffset":4910,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4916,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":5180,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5604,"endOffset":6381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6387,"endOffset":7162,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7273,"endOffset":10579,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10625,"endOffset":11749,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11755,"endOffset":12066,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":12073,"endOffset":12567,"count":81}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":12179,"endOffset":12521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45984,"count":1},{"startOffset":1784,"endOffset":1818,"count":0},{"startOffset":2053,"endOffset":2065,"count":0},{"startOffset":2211,"endOffset":2287,"count":0},{"startOffset":2343,"endOffset":2490,"count":0},{"startOffset":2799,"endOffset":2803,"count":0},{"startOffset":3983,"endOffset":3987,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1105,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"assertScriptCanLoadAsCJS","ranges":[{"startOffset":1786,"endOffset":1818,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debug","ranges":[{"startOffset":2213,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debug","ranges":[{"startOffset":2294,"endOffset":2309,"count":0}],"isBlockCoverage":false},{"functionName":"debugFn","ranges":[{"startOffset":2345,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"debugFn","ranges":[{"startOffset":2497,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"TSError","ranges":[{"startOffset":4136,"endOffset":4674,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4712,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":4875,"endOffset":5752,"count":1},{"startOffset":5060,"endOffset":5098,"count":0},{"startOffset":5217,"endOffset":5232,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5852,"endOffset":6027,"count":1}],"isBlockCoverage":true},{"functionName":"createFromPreloadedConfig","ranges":[{"startOffset":6070,"endOffset":39588,"count":1},{"startOffset":6642,"endOffset":6663,"count":0},{"startOffset":6665,"endOffset":6773,"count":0},{"startOffset":6944,"endOffset":6968,"count":0},{"startOffset":6970,"endOffset":7087,"count":0},{"startOffset":7451,"endOffset":7472,"count":0},{"startOffset":7474,"endOffset":7827,"count":0},{"startOffset":8097,"endOffset":8120,"count":0},{"startOffset":8261,"endOffset":8366,"count":0},{"startOffset":8393,"endOffset":8512,"count":0},{"startOffset":8868,"endOffset":9032,"count":0},{"startOffset":9363,"endOffset":9369,"count":0},{"startOffset":9454,"endOffset":9458,"count":0},{"startOffset":9511,"endOffset":9515,"count":0},{"startOffset":9568,"endOffset":9573,"count":0},{"startOffset":9680,"endOffset":9685,"count":0},{"startOffset":9730,"endOffset":9804,"count":0},{"startOffset":9907,"endOffset":9911,"count":0},{"startOffset":10265,"endOffset":10275,"count":0},{"startOffset":10390,"endOffset":10488,"count":0},{"startOffset":13980,"endOffset":13996,"count":0},{"startOffset":14059,"endOffset":14124,"count":0},{"startOffset":14882,"endOffset":14918,"count":0},{"startOffset":16164,"endOffset":16172,"count":0},{"startOffset":16420,"endOffset":32255,"count":0},{"startOffset":35436,"endOffset":35459,"count":0},{"startOffset":35460,"endOffset":35483,"count":0}],"isBlockCoverage":true},{"functionName":"isScoped","ranges":[{"startOffset":9732,"endOffset":9804,"count":0}],"isBlockCoverage":false},{"functionName":"isScoped","ranges":[{"startOffset":9815,"endOffset":9825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9971,"endOffset":9995,"count":1}],"isBlockCoverage":true},{"functionName":"getNewLine","ranges":[{"startOffset":10048,"endOffset":10068,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":10099,"endOffset":10108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10267,"endOffset":10275,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticHost.getCanonicalFileName","ranges":[{"startOffset":10290,"endOffset":10312,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTranspilerFactory","ranges":[{"startOffset":10551,"endOffset":12085,"count":1},{"startOffset":10632,"endOffset":12079,"count":0}],"isBlockCoverage":true},{"functionName":"createTranspiler","ranges":[{"startOffset":11428,"endOffset":12069,"count":0}],"isBlockCoverage":false},{"functionName":"enableExperimentalEsmLoaderInterop","ranges":[{"startOffset":12289,"endOffset":12380,"count":1}],"isBlockCoverage":true},{"functionName":"installSourceMapSupport","ranges":[{"startOffset":12478,"endOffset":13892,"count":1}],"isBlockCoverage":true},{"functionName":"retrieveFile","ranges":[{"startOffset":12670,"endOffset":13462,"count":0}],"isBlockCoverage":false},{"functionName":"onConflictingLibraryRedirect","ranges":[{"startOffset":13522,"endOffset":13873,"count":0}],"isBlockCoverage":false},{"functionName":"createTSError","ranges":[{"startOffset":14161,"endOffset":14421,"count":0}],"isBlockCoverage":false},{"functionName":"reportTSError","ranges":[{"startOffset":14426,"endOffset":14796,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitExtension","ranges":[{"startOffset":15104,"endOffset":15746,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16795,"endOffset":16822,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomTransformers","ranges":[{"startOffset":16868,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectVersion","ranges":[{"startOffset":17262,"endOffset":17290,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":17328,"endOffset":17359,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptVersion","ranges":[{"startOffset":17395,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptSnapshot","ranges":[{"startOffset":17572,"endOffset":18286,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":18879,"endOffset":18899,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":18944,"endOffset":18982,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":19021,"endOffset":19030,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilationSettings","ranges":[{"startOffset":19072,"endOffset":19092,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":19133,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"updateMemoryCache","ranges":[{"startOffset":20311,"endOffset":21420,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":21491,"endOffset":23359,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":23387,"endOffset":23883,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":24024,"endOffset":24422,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":25272,"endOffset":25568,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibLocation","ranges":[{"startOffset":25613,"endOffset":25678,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":25723,"endOffset":25848,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":25897,"endOffset":25932,"count":0}],"isBlockCoverage":false},{"functionName":"updateMemoryCache","ranges":[{"startOffset":27504,"endOffset":28548,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":28574,"endOffset":30621,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":30649,"endOffset":31912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32074,"endOffset":32223,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":32289,"endOffset":32396,"count":0}],"isBlockCoverage":false},{"functionName":"createTranspileOnlyGetOutputFunction","ranges":[{"startOffset":32408,"endOffset":34086,"count":5},{"startOffset":32609,"endOffset":32653,"count":4},{"startOffset":32751,"endOffset":32806,"count":0},{"startOffset":33102,"endOffset":33113,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33130,"endOffset":34079,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":35615,"endOffset":37687,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":37731,"endOffset":37797,"count":0}],"isBlockCoverage":false},{"functionName":"ignored","ranges":[{"startOffset":37819,"endOffset":38083,"count":221},{"startOffset":37868,"endOffset":37880,"count":0},{"startOffset":37979,"endOffset":38056,"count":0}],"isBlockCoverage":true},{"functionName":"addDiagnosticFilter","ranges":[{"startOffset":38089,"endOffset":38302,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38351,"endOffset":38588,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38640,"endOffset":38784,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38833,"endOffset":39030,"count":0}],"isBlockCoverage":false},{"functionName":"createIgnore","ranges":[{"startOffset":39704,"endOffset":39966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39762,"endOffset":39963,"count":0}],"isBlockCoverage":false},{"functionName":"registerExtensions","ranges":[{"startOffset":40035,"endOffset":41330,"count":1},{"startOffset":40482,"endOffset":40741,"count":4},{"startOffset":40516,"endOffset":40577,"count":2},{"startOffset":40579,"endOffset":40735,"count":2},{"startOffset":40802,"endOffset":40869,"count":2},{"startOffset":40892,"endOffset":41328,"count":0}],"isBlockCoverage":true},{"functionName":"registerExtension","ranges":[{"startOffset":41375,"endOffset":41999,"count":2},{"startOffset":41475,"endOffset":41493,"count":1}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":41525,"endOffset":41996,"count":50},{"startOffset":41625,"endOffset":41995,"count":0}],"isBlockCoverage":true},{"functionName":"m._compile","ranges":[{"startOffset":41740,"endOffset":41956,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutput","ranges":[{"startOffset":42055,"endOffset":44103,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceMap","ranges":[{"startOffset":44167,"endOffset":44407,"count":0}],"isBlockCoverage":false},{"functionName":"filterDiagnostics","ranges":[{"startOffset":44439,"endOffset":44788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44520,"endOffset":44784,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":44967,"endOffset":45442,"count":0}],"isBlockCoverage":false},{"functionName":"createEsmHooks","ranges":[{"startOffset":45843,"endOffset":45908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13310,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1192,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1951,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2753,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3893,"endOffset":4739,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":5075,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":5535,"endOffset":9630,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9652,"endOffset":13267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6422,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":718,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":898,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1323,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1778,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":2005,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2419,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2776,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3847,"endOffset":4240,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4560,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5333,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5976,"endOffset":6149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11555,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":611,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":906,"endOffset":2561,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2683,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3122,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3360,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3610,"endOffset":9499,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9977,"endOffset":11339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/make-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3854,"count":1},{"startOffset":180,"endOffset":191,"count":0},{"startOffset":396,"endOffset":1049,"count":0}],"isBlockCoverage":true},{"functionName":"captureStackTrace","ranges":[{"startOffset":420,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"BaseError","ranges":[{"startOffset":1123,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1933,"endOffset":2230,"count":1},{"startOffset":2216,"endOffset":2228,"count":0}],"isBlockCoverage":true},{"functionName":"setFunctionName","ranges":[{"startOffset":1948,"endOffset":2081,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":2102,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"makeError","ranges":[{"startOffset":2308,"endOffset":3784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6140,"count":1},{"startOffset":675,"endOffset":707,"count":0},{"startOffset":740,"endOffset":767,"count":0}],"isBlockCoverage":true},{"functionName":"yn","ranges":[{"startOffset":954,"endOffset":1066,"count":13},{"startOffset":1030,"endOffset":1046,"count":1},{"startOffset":1047,"endOffset":1051,"count":1},{"startOffset":1052,"endOffset":1063,"count":12}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":1169,"endOffset":1459,"count":2},{"startOffset":1247,"endOffset":1432,"count":5},{"startOffset":1296,"endOffset":1426,"count":46},{"startOffset":1390,"endOffset":1416,"count":6}],"isBlockCoverage":true},{"functionName":"split","ranges":[{"startOffset":1594,"endOffset":1733,"count":2},{"startOffset":1663,"endOffset":1710,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1694,"endOffset":1709,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1805,"endOffset":1900,"count":1},{"startOffset":1866,"endOffset":1885,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSlashes","ranges":[{"startOffset":2053,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":2244,"endOffset":2356,"count":2}],"isBlockCoverage":true},{"functionName":"cachedLookup","ranges":[{"startOffset":2438,"endOffset":2681,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2506,"endOffset":2678,"count":1},{"startOffset":2641,"endOffset":2677,"count":0}],"isBlockCoverage":true},{"functionName":"attemptRequireWithV8CompileCache","ranges":[{"startOffset":2937,"endOffset":3310,"count":2},{"startOffset":3205,"endOffset":3213,"count":0},{"startOffset":3254,"endOffset":3308,"count":0}],"isBlockCoverage":true},{"functionName":"createProjectLocalResolveHelper","ranges":[{"startOffset":3701,"endOffset":4035,"count":3}],"isBlockCoverage":true},{"functionName":"projectLocalResolveHelper","ranges":[{"startOffset":3771,"endOffset":4032,"count":2},{"startOffset":3995,"endOffset":4013,"count":0}],"isBlockCoverage":true},{"functionName":"getBasePathForProjectLocalDependencyResolution","ranges":[{"startOffset":4286,"endOffset":4925,"count":2},{"startOffset":4462,"endOffset":4591,"count":1},{"startOffset":4592,"endOffset":4616,"count":0},{"startOffset":4617,"endOffset":4632,"count":1},{"startOffset":4643,"endOffset":4659,"count":1},{"startOffset":4660,"endOffset":4664,"count":0},{"startOffset":4665,"endOffset":4676,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":5048,"endOffset":5275,"count":3}],"isBlockCoverage":true},{"functionName":"onceFn","ranges":[{"startOffset":5108,"endOffset":5254,"count":3},{"startOffset":5164,"endOffset":5177,"count":1},{"startOffset":5177,"endOffset":5253,"count":2}],"isBlockCoverage":true},{"functionName":"versionGteLt","ranges":[{"startOffset":5314,"endOffset":6070,"count":11},{"startOffset":5536,"endOffset":5646,"count":0},{"startOffset":5692,"endOffset":5931,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5962,"endOffset":6068,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6038,"endOffset":6060,"count":66}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/yn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":711,"count":1}],"isBlockCoverage":true},{"functionName":"yn","ranges":[{"startOffset":64,"endOffset":610,"count":13},{"startOffset":224,"endOffset":263,"count":0},{"startOffset":265,"endOffset":388,"count":0},{"startOffset":430,"endOffset":449,"count":1},{"startOffset":449,"endOffset":491,"count":12},{"startOffset":491,"endOffset":511,"count":0},{"startOffset":511,"endOffset":544,"count":12},{"startOffset":544,"endOffset":582,"count":0},{"startOffset":582,"endOffset":609,"count":12}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/yn/lenient.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1440,"count":1}],"isBlockCoverage":true},{"functionName":"getYesMatchScore","ranges":[{"startOffset":766,"endOffset":1016,"count":0}],"isBlockCoverage":false},{"functionName":"getNoMatchScore","ranges":[{"startOffset":1018,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1231,"endOffset":1438,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13874,"count":1}],"isBlockCoverage":true},{"functionName":"fixConfig","ranges":[{"startOffset":796,"endOffset":1517,"count":1},{"startOffset":1221,"endOffset":1281,"count":0},{"startOffset":1433,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"findAndReadConfig","ranges":[{"startOffset":1535,"endOffset":3427,"count":1},{"startOffset":1700,"endOffset":1704,"count":0},{"startOffset":1749,"endOffset":1753,"count":0},{"startOffset":1804,"endOffset":1808,"count":0},{"startOffset":1905,"endOffset":1909,"count":0},{"startOffset":2520,"endOffset":2525,"count":0},{"startOffset":3222,"endOffset":3226,"count":0}],"isBlockCoverage":true},{"functionName":"readConfig","ranges":[{"startOffset":3786,"endOffset":10026,"count":1},{"startOffset":4160,"endOffset":4164,"count":0},{"startOffset":4661,"endOffset":4669,"count":0},{"startOffset":4691,"endOffset":4794,"count":0},{"startOffset":5215,"endOffset":5514,"count":0},{"startOffset":5871,"endOffset":6751,"count":0},{"startOffset":7308,"endOffset":7627,"count":0},{"startOffset":7658,"endOffset":7749,"count":0},{"startOffset":7853,"endOffset":7916,"count":0},{"startOffset":7957,"endOffset":8019,"count":0},{"startOffset":8058,"endOffset":8118,"count":0},{"startOffset":8152,"endOffset":8207,"count":0},{"startOffset":8392,"endOffset":8396,"count":0},{"startOffset":8463,"endOffset":8487,"count":0},{"startOffset":8754,"endOffset":8886,"count":0},{"startOffset":9765,"endOffset":9775,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7568,"endOffset":7615,"count":0}],"isBlockCoverage":false},{"functionName":"ts.parseJsonConfigFileContent.readDirectory","ranges":[{"startOffset":9767,"endOffset":9775,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAndLoadCompiler","ranges":[{"startOffset":10220,"endOffset":10409,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCompiler","ranges":[{"startOffset":10467,"endOffset":10717,"count":2}],"isBlockCoverage":true},{"functionName":"loadCompiler","ranges":[{"startOffset":10735,"endOffset":10846,"count":2}],"isBlockCoverage":true},{"functionName":"filterRecognizedTsConfigTsNodeOptions","ranges":[{"startOffset":11016,"endOffset":12319,"count":1},{"startOffset":11113,"endOffset":11157,"count":0}],"isBlockCoverage":true},{"functionName":"getTsConfigDefaults","ranges":[{"startOffset":12573,"endOffset":13781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/ts-internals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13675,"count":1}],"isBlockCoverage":true},{"functionName":"createTsInternalsUncached","ranges":[{"startOffset":796,"endOffset":2654,"count":1}],"isBlockCoverage":true},{"functionName":"getExtendsConfigPath","ranges":[{"startOffset":1003,"endOffset":2615,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":2740,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":2817,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":2960,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":3192,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":3274,"endOffset":3441,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":3795,"endOffset":3974,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":4024,"endOffset":5174,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":5526,"endOffset":5616,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":5762,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":5853,"endOffset":5993,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":5994,"endOffset":6156,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":6157,"endOffset":6832,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":6833,"endOffset":6970,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedRootLength","ranges":[{"startOffset":6971,"endOffset":9834,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":9835,"endOffset":9999,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":10000,"endOffset":10139,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":10140,"endOffset":10293,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":10294,"endOffset":10463,"count":0}],"isBlockCoverage":false},{"functionName":"isVolumeCharacter","ranges":[{"startOffset":10566,"endOffset":10794,"count":0}],"isBlockCoverage":false},{"functionName":"getFileUrlVolumeSeparatorEnd","ranges":[{"startOffset":10795,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":11262,"endOffset":11573,"count":0}],"isBlockCoverage":false},{"functionName":"pathComponents","ranges":[{"startOffset":11574,"endOffset":11833,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":11834,"endOffset":11938,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":11939,"endOffset":12040,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":12041,"endOffset":12250,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":12432,"endOffset":12523,"count":0}],"isBlockCoverage":false},{"functionName":"getUseDefineForClassFields","ranges":[{"startOffset":12815,"endOffset":13060,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitScriptTarget","ranges":[{"startOffset":13247,"endOffset":13583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/tsconfigs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1435,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTsconfigJsonForNodeVersion","ranges":[{"startOffset":331,"endOffset":1312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/module-type-classifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2363,"count":1}],"isBlockCoverage":true},{"functionName":"createModuleTypeClassifier","ranges":[{"startOffset":402,"endOffset":1724,"count":1},{"startOffset":557,"endOffset":617,"count":0},{"startOffset":724,"endOffset":734,"count":0},{"startOffset":1665,"endOffset":1681,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":745,"endOffset":905,"count":0}],"isBlockCoverage":false},{"functionName":"classifyModuleNonCached","ranges":[{"startOffset":1206,"endOffset":1425,"count":0}],"isBlockCoverage":false},{"functionName":"classifyModuleAuto","ranges":[{"startOffset":1508,"endOffset":1570,"count":0}],"isBlockCoverage":false},{"functionName":"parsePattern","ranges":[{"startOffset":1790,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1991,"endOffset":2312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/resolver-functions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7574,"count":1}],"isBlockCoverage":true},{"functionName":"createResolverFunctions","ranges":[{"startOffset":268,"endOffset":7468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/cjs-resolve-hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"installCommonjsResolveHooksIfNecessary","ranges":[{"startOffset":155,"endOffset":1196,"count":1},{"startOffset":467,"endOffset":1194,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveFilename","ranges":[{"startOffset":661,"endOffset":982,"count":0}],"isBlockCoverage":false},{"functionName":"_findPath","ranges":[{"startOffset":991,"endOffset":1188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"218","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/node-module-type-classifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1515,"count":1}],"isBlockCoverage":true},{"functionName":"classifyModule","ranges":[{"startOffset":674,"endOffset":1418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-modules-cjs-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19220,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":1684,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2716,"endOffset":3526,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageScope","ranges":[{"startOffset":3528,"endOffset":4071,"count":0}],"isBlockCoverage":false},{"functionName":"createCjsLoader","ranges":[{"startOffset":4287,"endOffset":17772,"count":0}],"isBlockCoverage":false},{"functionName":"assertScriptCanLoadAsCJSImpl","ranges":[{"startOffset":18029,"endOffset":19125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-primordials.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2306,"count":1}],"isBlockCoverage":true},{"functionName":"ArrayPrototypeShift","ranges":[{"startOffset":98,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeForEach","ranges":[{"startOffset":165,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeIncludes","ranges":[{"startOffset":251,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeJoin","ranges":[{"startOffset":334,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypePop","ranges":[{"startOffset":412,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypePush","ranges":[{"startOffset":490,"endOffset":545,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPrototypeHasOwnProperty","ranges":[{"startOffset":841,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpPrototypeExec","ranges":[{"startOffset":928,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpPrototypeTest","ranges":[{"startOffset":1009,"endOffset":1065,"count":10}],"isBlockCoverage":true},{"functionName":"RegExpPrototypeSymbolReplace","ranges":[{"startOffset":1099,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeEndsWith","ranges":[{"startOffset":1251,"endOffset":1311,"count":25}],"isBlockCoverage":true},{"functionName":"StringPrototypeIncludes","ranges":[{"startOffset":1340,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeLastIndexOf","ranges":[{"startOffset":1432,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeIndexOf","ranges":[{"startOffset":1523,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeRepeat","ranges":[{"startOffset":1609,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeReplace","ranges":[{"startOffset":1695,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeSlice","ranges":[{"startOffset":1780,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeSplit","ranges":[{"startOffset":1863,"endOffset":1920,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeStartsWith","ranges":[{"startOffset":1951,"endOffset":2013,"count":21}],"isBlockCoverage":true},{"functionName":"StringPrototypeSubstr","ranges":[{"startOffset":2040,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeCharCodeAt","ranges":[{"startOffset":2129,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeMatch","ranges":[{"startOffset":2217,"endOffset":2274,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-nativemodule.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":246,"count":1}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":115,"endOffset":205,"count":12}],"isBlockCoverage":true}]},{"scriptId":"222","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15837,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1129,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2163,"endOffset":3282,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3287,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":3542,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3673,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4706,"endOffset":6514,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6709,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6771,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6869,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":7077,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":8291,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8898,"endOffset":8987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9071,"endOffset":9105,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":9138,"endOffset":11211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11409,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11471,"endOffset":11530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11570,"endOffset":11597,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":11753,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":12577,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":13456,"endOffset":13855,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":13892,"endOffset":14480,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":14518,"endOffset":15091,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":15126,"endOffset":15526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15715,"endOffset":15749,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internalBinding-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1},{"startOffset":1547,"endOffset":1608,"count":0},{"startOffset":1726,"endOffset":1757,"count":0}],"isBlockCoverage":true},{"functionName":"internalModuleReadJSON","ranges":[{"startOffset":262,"endOffset":737,"count":2},{"startOffset":370,"endOffset":436,"count":0}],"isBlockCoverage":true},{"functionName":"internalModuleStat","ranges":[{"startOffset":980,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"internalModuleStatInefficient","ranges":[{"startOffset":1257,"endOffset":1464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-modules-package_json_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":522,"endOffset":1235,"count":2},{"startOffset":575,"endOffset":612,"count":0},{"startOffset":812,"endOffset":1050,"count":1},{"startOffset":1078,"endOffset":1181,"count":0}],"isBlockCoverage":true}]},{"scriptId":"225","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-modules-cjs-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2739,"count":1},{"startOffset":495,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":787,"endOffset":2641,"count":0}],"isBlockCoverage":false}]},{"scriptId":"226","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2988,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":103,"endOffset":176,"count":12}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":191,"endOffset":661,"count":12},{"startOffset":233,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"parseArgv","ranges":[{"startOffset":663,"endOffset":1242,"count":2}],"isBlockCoverage":true},{"functionName":"getNodeOptionsEnvArgv","ranges":[{"startOffset":1244,"endOffset":1469,"count":1},{"startOffset":1366,"endOffset":1371,"count":0},{"startOffset":1409,"endOffset":1449,"count":0}],"isBlockCoverage":true},{"functionName":"ParseNodeOptionsEnvVar","ranges":[{"startOffset":1619,"endOffset":2720,"count":1},{"startOffset":1820,"endOffset":2580,"count":121},{"startOffset":1931,"endOffset":1946,"count":0},{"startOffset":1948,"endOffset":2214,"count":0},{"startOffset":2234,"endOffset":2250,"count":0},{"startOffset":2252,"endOffset":2318,"count":0},{"startOffset":2339,"endOffset":2408,"count":2},{"startOffset":2408,"endOffset":2440,"count":119},{"startOffset":2440,"endOffset":2515,"count":1},{"startOffset":2515,"endOffset":2576,"count":118},{"startOffset":2602,"endOffset":2699,"count":0}],"isBlockCoverage":true},{"functionName":"getOptionValuesFromOtherEnvVars","ranges":[{"startOffset":2799,"endOffset":2987,"count":1},{"startOffset":2917,"endOffset":2967,"count":0}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/arg/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3893,"count":1}],"isBlockCoverage":true},{"functionName":"arg","ranges":[{"startOffset":40,"endOffset":3716,"count":2},{"startOffset":156,"endOffset":224,"count":0},{"startOffset":334,"endOffset":1466,"count":20},{"startOffset":348,"endOffset":419,"count":0},{"startOffset":443,"endOffset":528,"count":0},{"startOffset":554,"endOffset":659,"count":0},{"startOffset":698,"endOffset":745,"count":2},{"startOffset":745,"endOffset":820,"count":18},{"startOffset":820,"endOffset":840,"count":2},{"startOffset":841,"endOffset":873,"count":2},{"startOffset":875,"endOffset":1075,"count":2},{"startOffset":1075,"endOffset":1274,"count":16},{"startOffset":1144,"endOffset":1172,"count":6},{"startOffset":1177,"endOffset":1274,"count":0},{"startOffset":1274,"endOffset":1297,"count":18},{"startOffset":1297,"endOffset":1314,"count":0},{"startOffset":1316,"endOffset":1428,"count":0},{"startOffset":1428,"endOffset":1466,"count":18},{"startOffset":1518,"endOffset":3697,"count":8},{"startOffset":1572,"endOffset":1594,"count":0},{"startOffset":1596,"endOffset":1657,"count":0},{"startOffset":1684,"endOffset":1749,"count":0},{"startOffset":1801,"endOffset":3655,"count":7},{"startOffset":1897,"endOffset":1921,"count":0},{"startOffset":1944,"endOffset":1991,"count":0},{"startOffset":2209,"endOffset":2227,"count":0},{"startOffset":2296,"endOffset":2336,"count":0},{"startOffset":2443,"endOffset":2594,"count":0},{"startOffset":2600,"endOffset":2705,"count":0},{"startOffset":2707,"endOffset":3646,"count":0},{"startOffset":3655,"endOffset":3694,"count":1},{"startOffset":3697,"endOffset":3715,"count":8}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":909,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1978,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"arg.flag","ranges":[{"startOffset":3729,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3815,"endOffset":3867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"228","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":630,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"joinArgs","ranges":[{"startOffset":1197,"endOffset":1289,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1232,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"createErrorCtor","ranges":[{"startOffset":1291,"endOffset":1462,"count":12}],"isBlockCoverage":true},{"functionName":"CustomError","ranges":[{"startOffset":1386,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"createErrRequireEsm","ranges":[{"startOffset":2208,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"getErrRequireEsmMessage","ranges":[{"startOffset":2974,"endOffset":3875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"229","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":140,"count":1}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/file-extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5702,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":1038,"endOffset":5619,"count":1},{"startOffset":1340,"endOffset":1409,"count":0},{"startOffset":1516,"endOffset":1539,"count":0},{"startOffset":1736,"endOffset":1769,"count":0},{"startOffset":1881,"endOffset":2093,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2240,"endOffset":2279,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2353,"endOffset":2384,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2812,"endOffset":2895,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2937,"endOffset":2990,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3033,"endOffset":3072,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3115,"endOffset":3154,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3197,"endOffset":3236,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3283,"endOffset":3352,"count":6}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/ts-transpile-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4941,"count":1}],"isBlockCoverage":true},{"functionName":"createTsTranspileModule","ranges":[{"startOffset":136,"endOffset":4834,"count":5},{"startOffset":731,"endOffset":735,"count":0},{"startOffset":861,"endOffset":1004,"count":10},{"startOffset":939,"endOffset":998,"count":5},{"startOffset":1067,"endOffset":1134,"count":95}],"isBlockCoverage":true},{"functionName":"getSourceFile","ranges":[{"startOffset":1583,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":1684,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":2131,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":2184,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalFileName","ranges":[{"startOffset":2226,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":2279,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":2309,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":2344,"endOffset":2420,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2440,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"directoryExists","ranges":[{"startOffset":2554,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":2590,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":2780,"endOffset":4832,"count":0}],"isBlockCoverage":false}]},{"scriptId":"232","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/repl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21715,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessTopLevelAwait","ranges":[{"startOffset":655,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"getDiffLines","ranges":[{"startOffset":921,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"createRepl","ranges":[{"startOffset":1787,"endOffset":11850,"count":0}],"isBlockCoverage":false},{"functionName":"EvalState","ranges":[{"startOffset":11972,"endOffset":12224,"count":0}],"isBlockCoverage":false},{"functionName":"createEvalAwarePartialHost","ranges":[{"startOffset":12258,"endOffset":13159,"count":0}],"isBlockCoverage":false},{"functionName":"appendCompileAndEvalInput","ranges":[{"startOffset":13485,"endOffset":18607,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":18661,"endOffset":18932,"count":0}],"isBlockCoverage":false},{"functionName":"appendToEvalState","ranges":[{"startOffset":19001,"endOffset":19445,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":19484,"endOffset":19648,"count":0}],"isBlockCoverage":false},{"functionName":"isRecoverable","ranges":[{"startOffset":20997,"endOffset":21246,"count":0}],"isBlockCoverage":false},{"functionName":"setupContext","ranges":[{"startOffset":21340,"endOffset":21645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"233","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10174,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2088,"endOffset":2322,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2148,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2721,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2787,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2853,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2920,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2983,"endOffset":3014,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3049,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3103,"endOffset":3122,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3159,"endOffset":3179,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3213,"endOffset":3230,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3267,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3322,"endOffset":3340,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3381,"endOffset":3405,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3441,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3494,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3658,"endOffset":3761,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4058,"endOffset":4506,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4542,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4614,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4669,"endOffset":4721,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4753,"endOffset":4775,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4812,"endOffset":5436,"count":4},{"startOffset":4894,"endOffset":4924,"count":0},{"startOffset":4925,"endOffset":4997,"count":0},{"startOffset":5063,"endOffset":5112,"count":0},{"startOffset":5121,"endOffset":5162,"count":0},{"startOffset":5167,"endOffset":5415,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5466,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5522,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5605,"endOffset":5622,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5714,"endOffset":5972,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5976,"endOffset":6964,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":7188,"endOffset":7909,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":8000,"endOffset":8302,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8366,"endOffset":8634,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8952,"endOffset":9256,"count":0}],"isBlockCoverage":false}]},{"scriptId":"234","url":"node:repl","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":62787,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4208,"endOffset":4249,"count":68}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4322,"endOffset":4344,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4419,"endOffset":4484,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4589,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"getREPLResourceName","ranges":[{"startOffset":5975,"endOffset":6055,"count":0}],"isBlockCoverage":false},{"functionName":"writer","ranges":[{"startOffset":7227,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"toDynamicImport","ranges":[{"startOffset":7424,"endOffset":8431,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer","ranges":[{"startOffset":8436,"endOffset":35897,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":36141,"endOffset":36314,"count":0}],"isBlockCoverage":false},{"functionName":"setupHistory","ranges":[{"startOffset":36354,"endOffset":36432,"count":0}],"isBlockCoverage":false},{"functionName":"clearBufferedCommand","ranges":[{"startOffset":36481,"endOffset":36555,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":36589,"endOffset":36922,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.createContext","ranges":[{"startOffset":36964,"endOffset":38613,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.resetContext","ranges":[{"startOffset":38654,"endOffset":39700,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.displayPrompt","ranges":[{"startOffset":39742,"endOffset":40186,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":40284,"endOffset":40412,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":40818,"endOffset":41284,"count":0}],"isBlockCoverage":false},{"functionName":"isNotLegacyObjectPrototypeMethod","ranges":[{"startOffset":41288,"endOffset":41508,"count":0}],"isBlockCoverage":false},{"functionName":"filteredOwnPropertyNames","ranges":[{"startOffset":41512,"endOffset":42342,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalLexicalScopeNames","ranges":[{"startOffset":42346,"endOffset":42672,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.complete","ranges":[{"startOffset":42708,"endOffset":42773,"count":0}],"isBlockCoverage":false},{"functionName":"gracefulReaddir","ranges":[{"startOffset":42778,"endOffset":42935,"count":0}],"isBlockCoverage":false},{"functionName":"completeFSFunctions","ranges":[{"startOffset":42939,"endOffset":43511,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":43885,"endOffset":55125,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.completeOnEditorMode","ranges":[{"startOffset":55173,"endOffset":55496,"count":0}],"isBlockCoverage":false},{"functionName":"REPLServer.defineCommand","ranges":[{"startOffset":55538,"endOffset":55728,"count":0}],"isBlockCoverage":false},{"functionName":"_memory","ranges":[{"startOffset":55911,"endOffset":58015,"count":0}],"isBlockCoverage":false},{"functionName":"addCommonWords","ranges":[{"startOffset":58019,"endOffset":58556,"count":0}],"isBlockCoverage":false},{"functionName":"_turnOnEditorMode","ranges":[{"startOffset":58560,"endOffset":58684,"count":0}],"isBlockCoverage":false},{"functionName":"_turnOffEditorMode","ranges":[{"startOffset":58688,"endOffset":58794,"count":0}],"isBlockCoverage":false},{"functionName":"defineDefaultCommands","ranges":[{"startOffset":58798,"endOffset":61785,"count":0}],"isBlockCoverage":false},{"functionName":"Recoverable","ranges":[{"startOffset":61789,"endOffset":61838,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62164,"endOffset":62182,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":62192,"endOffset":62219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62393,"endOffset":62411,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.get","ranges":[{"startOffset":62513,"endOffset":62531,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":62578,"endOffset":62605,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.set","ranges":[{"startOffset":62707,"endOffset":62734,"count":0}],"isBlockCoverage":false}]},{"scriptId":"235","url":"node:internal/deps/acorn/acorn/dist/acorn","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236665,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1,"endOffset":303,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":312,"endOffset":236660,"count":1}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":12318,"endOffset":12582,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":12654,"endOffset":13072,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":13143,"endOffset":13674,"count":0}],"isBlockCoverage":false},{"functionName":"TokenType","ranges":[{"startOffset":14716,"endOffset":15150,"count":77},{"startOffset":14778,"endOffset":14788,"count":8},{"startOffset":15105,"endOffset":15112,"count":62}],"isBlockCoverage":true},{"functionName":"binop","ranges":[{"startOffset":15157,"endOffset":15255,"count":12}],"isBlockCoverage":true},{"functionName":"kw","ranges":[{"startOffset":15450,"endOffset":15617,"count":35},{"startOffset":15510,"endOffset":15523,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":19961,"endOffset":20069,"count":0}],"isBlockCoverage":false},{"functionName":"nextLineBreak","ranges":[{"startOffset":20075,"endOffset":20393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20677,"endOffset":20760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20800,"endOffset":20878,"count":0}],"isBlockCoverage":false},{"functionName":"wordsRegexp","ranges":[{"startOffset":20886,"endOffset":20985,"count":24}],"isBlockCoverage":true},{"functionName":"codePointToString","ranges":[{"startOffset":20991,"endOffset":21217,"count":0}],"isBlockCoverage":false},{"functionName":"Position","ranges":[{"startOffset":21448,"endOffset":21530,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":21565,"endOffset":21644,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":21672,"endOffset":21827,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":22110,"endOffset":22363,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":27814,"endOffset":29021,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":29027,"endOffset":29479,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":29883,"endOffset":30021,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":30476,"endOffset":33937,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":34345,"endOffset":34487,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inFunction.get","ranges":[{"startOffset":34530,"endOffset":34604,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inGenerator.get","ranges":[{"startOffset":34648,"endOffset":34767,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inAsync.get","ranges":[{"startOffset":34807,"endOffset":34922,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.canAwait.get","ranges":[{"startOffset":34963,"endOffset":35370,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowSuper.get","ranges":[{"startOffset":35413,"endOffset":35651,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowDirectSuper.get","ranges":[{"startOffset":35700,"endOffset":35779,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.treatFunctionsAsVar.get","ranges":[{"startOffset":35831,"endOffset":35906,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowNewDotTarget.get","ranges":[{"startOffset":35956,"endOffset":36186,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inClassStaticBlock.get","ranges":[{"startOffset":36237,"endOffset":36329,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":36352,"endOffset":36596,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":36618,"endOffset":36701,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":36735,"endOffset":36901,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":36927,"endOffset":37006,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.strictDirective","ranges":[{"startOffset":37235,"endOffset":38267,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.eat","ranges":[{"startOffset":38407,"endOffset":38539,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.isContextual","ranges":[{"startOffset":38626,"endOffset":38730,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.eatContextual","ranges":[{"startOffset":38807,"endOffset":38915,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.expectContextual","ranges":[{"startOffset":39012,"endOffset":39092,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.canInsertSemicolon","ranges":[{"startOffset":39199,"endOffset":39365,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.insertSemicolon","ranges":[{"startOffset":39395,"endOffset":39605,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.semicolon","ranges":[{"startOffset":39759,"endOffset":39860,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.afterTrailingComma","ranges":[{"startOffset":39893,"endOffset":40158,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.expect","ranges":[{"startOffset":40291,"endOffset":40354,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.unexpected","ranges":[{"startOffset":40420,"endOffset":40509,"count":0}],"isBlockCoverage":false},{"functionName":"DestructuringErrors","ranges":[{"startOffset":40542,"endOffset":40730,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkPatternErrors","ranges":[{"startOffset":40763,"endOffset":41263,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkExpressionErrors","ranges":[{"startOffset":41299,"endOffset":41855,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.checkYieldAwaitInDefaultParams","ranges":[{"startOffset":41900,"endOffset":42186,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.isSimpleAssignTarget","ranges":[{"startOffset":42221,"endOffset":42428,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseTopLevel","ranges":[{"startOffset":42782,"endOffset":43462,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isLet","ranges":[{"startOffset":43551,"endOffset":44695,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isAsyncFunction","ranges":[{"startOffset":44863,"endOffset":45388,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseStatement","ranges":[{"startOffset":45681,"endOffset":49407,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseBreakContinueStatement","ranges":[{"startOffset":49449,"endOffset":50322,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDebuggerStatement","ranges":[{"startOffset":50359,"endOffset":50476,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseDoStatement","ranges":[{"startOffset":50507,"endOffset":50896,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForStatement","ranges":[{"startOffset":51367,"endOffset":53555,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunctionStatement","ranges":[{"startOffset":53592,"endOffset":53783,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseIfStatement","ranges":[{"startOffset":53814,"endOffset":54157,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseReturnStatement","ranges":[{"startOffset":54192,"endOffset":54749,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseSwitchStatement","ranges":[{"startOffset":54784,"endOffset":56144,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseThrowStatement","ranges":[{"startOffset":56178,"endOffset":56480,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseCatchClauseParam","ranges":[{"startOffset":56611,"endOffset":56904,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseTryStatement","ranges":[{"startOffset":56936,"endOffset":57760,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVarStatement","ranges":[{"startOffset":57792,"endOffset":58006,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWhileStatement","ranges":[{"startOffset":58040,"endOffset":58282,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseWithStatement","ranges":[{"startOffset":58315,"endOffset":58574,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseEmptyStatement","ranges":[{"startOffset":58608,"endOffset":58699,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseLabeledStatement","ranges":[{"startOffset":58735,"endOffset":59742,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExpressionStatement","ranges":[{"startOffset":59781,"endOffset":59917,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseBlock","ranges":[{"startOffset":60102,"endOffset":60694,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFor","ranges":[{"startOffset":60868,"endOffset":61316,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseForIn","ranges":[{"startOffset":61444,"endOffset":62304,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVar","ranges":[{"startOffset":62374,"endOffset":63293,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseVarId","ranges":[{"startOffset":63318,"endOffset":63471,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunction","ranges":[{"startOffset":63759,"endOffset":65526,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseFunctionParams","ranges":[{"startOffset":65560,"endOffset":65755,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClass","ranges":[{"startOffset":65875,"endOffset":67258,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassElement","ranges":[{"startOffset":67290,"endOffset":69842,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isClassElementNameStart","ranges":[{"startOffset":69880,"endOffset":70138,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassElementName","ranges":[{"startOffset":70174,"endOffset":70522,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassMethod","ranges":[{"startOffset":70553,"endOffset":71698,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassField","ranges":[{"startOffset":71728,"endOffset":72519,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassStaticBlock","ranges":[{"startOffset":72555,"endOffset":72965,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassId","ranges":[{"startOffset":72992,"endOffset":73299,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseClassSuper","ranges":[{"startOffset":73329,"endOffset":73448,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.enterClassBody","ranges":[{"startOffset":73477,"endOffset":73627,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.exitClassBody","ranges":[{"startOffset":73655,"endOffset":74279,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateNameConflicted","ranges":[{"startOffset":74286,"endOffset":75062,"count":0}],"isBlockCoverage":false},{"functionName":"checkKeyName","ranges":[{"startOffset":75068,"endOffset":75311,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportAllDeclaration","ranges":[{"startOffset":75392,"endOffset":75912,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExport","ranges":[{"startOffset":75938,"endOffset":77756,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportDeclaration","ranges":[{"startOffset":77793,"endOffset":77852,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportDefaultDeclaration","ranges":[{"startOffset":77896,"endOffset":78456,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkExport","ranges":[{"startOffset":78482,"endOffset":78786,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkPatternExport","ranges":[{"startOffset":78819,"endOffset":79809,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.checkVariableExport","ranges":[{"startOffset":79843,"endOffset":80059,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.shouldParseExportStatement","ranges":[{"startOffset":80100,"endOffset":80336,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportSpecifier","ranges":[{"startOffset":80428,"endOffset":80778,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseExportSpecifiers","ranges":[{"startOffset":80814,"endOffset":81227,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImport","ranges":[{"startOffset":81288,"endOffset":81754,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportSpecifier","ranges":[{"startOffset":81846,"endOffset":82234,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportDefaultSpecifier","ranges":[{"startOffset":82276,"endOffset":82529,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportNamespaceSpecifier","ranges":[{"startOffset":82573,"endOffset":82828,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseImportSpecifiers","ranges":[{"startOffset":82864,"endOffset":83499,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.parseModuleExportName","ranges":[{"startOffset":83535,"endOffset":83910,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.adaptDirectivePrologue","ranges":[{"startOffset":84023,"endOffset":84228,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.isDirectiveCandidate","ranges":[{"startOffset":84261,"endOffset":84631,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.toAssignable","ranges":[{"startOffset":84774,"endOffset":87755,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.toAssignableList","ranges":[{"startOffset":87844,"endOffset":88307,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseSpread","ranges":[{"startOffset":88364,"endOffset":88581,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseRestBinding","ranges":[{"startOffset":88612,"endOffset":88956,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingAtom","ranges":[{"startOffset":89028,"endOffset":89449,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingList","ranges":[{"startOffset":89480,"endOffset":90322,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseAssignableListItem","ranges":[{"startOffset":90360,"endOffset":90513,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseBindingListItem","ranges":[{"startOffset":90548,"endOffset":90588,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.parseMaybeDefault","ranges":[{"startOffset":90685,"endOffset":91026,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValSimple","ranges":[{"startOffset":94106,"endOffset":95607,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValPattern","ranges":[{"startOffset":95638,"endOffset":96330,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.checkLValInnerPattern","ranges":[{"startOffset":96366,"endOffset":96976,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":97206,"endOffset":97446,"count":10}],"isBlockCoverage":true},{"functionName":"types.q_tmpl","ranges":[{"startOffset":97716,"endOffset":97765,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.initialContext","ranges":[{"startOffset":98065,"endOffset":98109,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.curContext","ranges":[{"startOffset":98134,"endOffset":98201,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.braceIsBlock","ranges":[{"startOffset":98228,"endOffset":99238,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.inGeneratorContext","ranges":[{"startOffset":99271,"endOffset":99488,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.updateContext","ranges":[{"startOffset":99516,"endOffset":99804,"count":0}],"isBlockCoverage":false},{"functionName":"pp$6.overrideContext","ranges":[{"startOffset":99945,"endOffset":100077,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.parenR.updateContext.types$1.braceR.updateContext","ranges":[{"startOffset":100189,"endOffset":100484,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.braceL.updateContext","ranges":[{"startOffset":100522,"endOffset":100660,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.dollarBraceL.updateContext","ranges":[{"startOffset":100704,"endOffset":100789,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.parenL.updateContext","ranges":[{"startOffset":100827,"endOffset":101096,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.incDec.updateContext","ranges":[{"startOffset":101134,"endOffset":101190,"count":0}],"isBlockCoverage":false},{"functionName":"types$1._function.updateContext.types$1._class.updateContext","ranges":[{"startOffset":101262,"endOffset":101777,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.backQuote.updateContext","ranges":[{"startOffset":101818,"endOffset":101996,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.star.updateContext","ranges":[{"startOffset":102032,"endOffset":102343,"count":0}],"isBlockCoverage":false},{"functionName":"types$1.name.updateContext","ranges":[{"startOffset":102379,"endOffset":102688,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkPropClash","ranges":[{"startOffset":104020,"endOffset":105528,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExpression","ranges":[{"startOffset":106328,"endOffset":106840,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeAssign","ranges":[{"startOffset":106968,"endOffset":109552,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeConditional","ranges":[{"startOffset":109641,"endOffset":110238,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprOps","ranges":[{"startOffset":110302,"endOffset":110714,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprOp","ranges":[{"startOffset":111083,"endOffset":112480,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.buildBinary","ranges":[{"startOffset":112506,"endOffset":112919,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMaybeUnary","ranges":[{"startOffset":113005,"endOffset":115319,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateFieldAccess","ranges":[{"startOffset":115326,"endOffset":115558,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprSubscripts","ranges":[{"startOffset":115648,"endOffset":116497,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscripts","ranges":[{"startOffset":116527,"endOffset":117446,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.shouldParseAsyncArrow","ranges":[{"startOffset":117482,"endOffset":117565,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscriptAsyncArrow","ranges":[{"startOffset":117604,"endOffset":117759,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseSubscript","ranges":[{"startOffset":117788,"endOffset":120835,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprAtom","ranges":[{"startOffset":121090,"endOffset":125432,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprAtomDefault","ranges":[{"startOffset":125467,"endOffset":125508,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprImport","ranges":[{"startOffset":125538,"endOffset":126170,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseDynamicImport","ranges":[{"startOffset":126203,"endOffset":126701,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseImportMeta","ranges":[{"startOffset":126731,"endOffset":127382,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseLiteral","ranges":[{"startOffset":127409,"endOffset":127727,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenExpression","ranges":[{"startOffset":127762,"endOffset":127902,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.shouldParseArrow","ranges":[{"startOffset":127933,"endOffset":127997,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenAndDistinguishExpression","ranges":[{"startOffset":128046,"endOffset":130771,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenItem","ranges":[{"startOffset":130800,"endOffset":130838,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseParenArrowList","ranges":[{"startOffset":130872,"endOffset":131028,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseNew","ranges":[{"startOffset":131379,"endOffset":132633,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseTemplateElement","ranges":[{"startOffset":132703,"endOffset":133332,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseTemplate","ranges":[{"startOffset":133360,"endOffset":134092,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.isAsyncProp","ranges":[{"startOffset":134118,"endOffset":134522,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseObj","ranges":[{"startOffset":134597,"endOffset":135273,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseProperty","ranges":[{"startOffset":135301,"endOffset":137062,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseGetterSetter","ranges":[{"startOffset":137094,"endOffset":137764,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePropertyValue","ranges":[{"startOffset":137797,"endOffset":139740,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePropertyName","ranges":[{"startOffset":139772,"endOffset":140243,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.initFunction","ranges":[{"startOffset":140310,"endOffset":140502,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseMethod","ranges":[{"startOffset":140566,"endOffset":141542,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseArrowExpression","ranges":[{"startOffset":141640,"endOffset":142329,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseFunctionBody","ranges":[{"startOffset":142411,"endOffset":144225,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.isSimpleParamList","ranges":[{"startOffset":144257,"endOffset":144461,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkParams","ranges":[{"startOffset":144618,"endOffset":144896,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseExprList","ranges":[{"startOffset":145229,"endOffset":146075,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkUnreserved","ranges":[{"startOffset":146105,"endOffset":147386,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseIdent","ranges":[{"startOffset":147571,"endOffset":147886,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseIdentNode","ranges":[{"startOffset":147915,"endOffset":148772,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parsePrivateIdent","ranges":[{"startOffset":148804,"endOffset":149419,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseYield","ranges":[{"startOffset":149494,"endOffset":149989,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.parseAwait","ranges":[{"startOffset":150014,"endOffset":150273,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.raise","ranges":[{"startOffset":150617,"endOffset":150865,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.curPosition","ranges":[{"startOffset":150932,"endOffset":151059,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":151112,"endOffset":151567,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.enterScope","ranges":[{"startOffset":151728,"endOffset":151795,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.exitScope","ranges":[{"startOffset":151819,"endOffset":151864,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.treatFunctionsAsVarInScope","ranges":[{"startOffset":152080,"endOffset":152192,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.declareName","ranges":[{"startOffset":152218,"endOffset":153813,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.checkLocalExport","ranges":[{"startOffset":153844,"endOffset":154107,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentScope","ranges":[{"startOffset":154134,"endOffset":154207,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentVarScope","ranges":[{"startOffset":154237,"endOffset":154407,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.currentThisScope","ranges":[{"startOffset":154538,"endOffset":154740,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":154758,"endOffset":155119,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.startNode","ranges":[{"startOffset":155230,"endOffset":155301,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.startNodeAt","ranges":[{"startOffset":155327,"endOffset":155389,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":155460,"endOffset":155697,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.finishNode","ranges":[{"startOffset":155721,"endOffset":155833,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.finishNodeAt","ranges":[{"startOffset":155898,"endOffset":155993,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.copyNode","ranges":[{"startOffset":156016,"endOffset":156179,"count":0}],"isBlockCoverage":false},{"functionName":"buildUnicodeData","ranges":[{"startOffset":162174,"endOffset":162818,"count":6}],"isBlockCoverage":true},{"functionName":"RegExpValidationState","ranges":[{"startOffset":163041,"endOffset":163839,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":163886,"endOffset":164455,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":164502,"endOffset":164649,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":164886,"endOffset":165310,"count":0}],"isBlockCoverage":false},{"functionName":"nextIndex","ranges":[{"startOffset":165361,"endOffset":165769,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":165818,"endOffset":165938,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":165989,"endOffset":166135,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":166184,"endOffset":166316,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":166361,"endOffset":166556,"count":0}],"isBlockCoverage":false},{"functionName":"eatChars","ranges":[{"startOffset":166606,"endOffset":167016,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.validateRegExpFlags","ranges":[{"startOffset":167221,"endOffset":167900,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.validateRegExpPattern","ranges":[{"startOffset":168109,"endOffset":168710,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_pattern","ranges":[{"startOffset":168807,"endOffset":169790,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_disjunction","ranges":[{"startOffset":169895,"endOffset":170268,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_alternative","ranges":[{"startOffset":170373,"endOffset":170481,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatTerm","ranges":[{"startOffset":170582,"endOffset":171261,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAssertion","ranges":[{"startOffset":171372,"endOffset":172324,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatQuantifier","ranges":[{"startOffset":172430,"endOffset":172647,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatQuantifierPrefix","ranges":[{"startOffset":172765,"endOffset":172974,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBracedQuantifier","ranges":[{"startOffset":173013,"endOffset":173801,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtom","ranges":[{"startOffset":173895,"endOffset":174219,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatReverseSolidusAtomEscape","ranges":[{"startOffset":174266,"endOffset":174480,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUncapturingGroup","ranges":[{"startOffset":174519,"endOffset":174889,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCapturingGroup","ranges":[{"startOffset":174926,"endOffset":175388,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedAtom","ranges":[{"startOffset":175505,"endOffset":175892,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatInvalidBracedQuantifier","ranges":[{"startOffset":176031,"endOffset":176176,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatSyntaxCharacter","ranges":[{"startOffset":176292,"endOffset":176479,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxCharacter","ranges":[{"startOffset":176484,"endOffset":176782,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatPatternCharacters","ranges":[{"startOffset":176921,"endOffset":177122,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatExtendedPatternCharacter","ranges":[{"startOffset":177263,"endOffset":177654,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_groupSpecifier","ranges":[{"startOffset":177752,"endOffset":178118,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatGroupName","ranges":[{"startOffset":178287,"endOffset":178567,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierName","ranges":[{"startOffset":178801,"endOffset":179169,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierStart","ranges":[{"startOffset":179337,"endOffset":179778,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierStart","ranges":[{"startOffset":179783,"endOffset":179912,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpIdentifierPart","ranges":[{"startOffset":180109,"endOffset":180549,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierPart","ranges":[{"startOffset":180554,"endOffset":180740,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatAtomEscape","ranges":[{"startOffset":180852,"endOffset":181357,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatBackReference","ranges":[{"startOffset":181393,"endOffset":181897,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatKGroupName","ranges":[{"startOffset":181930,"endOffset":182199,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterEscape","ranges":[{"startOffset":182322,"endOffset":182734,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCControlLetter","ranges":[{"startOffset":182771,"endOffset":182988,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatZero","ranges":[{"startOffset":183015,"endOffset":183219,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlEscape","ranges":[{"startOffset":183331,"endOffset":184027,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatControlLetter","ranges":[{"startOffset":184139,"endOffset":184331,"count":0}],"isBlockCoverage":false},{"functionName":"isControlLetter","ranges":[{"startOffset":184336,"endOffset":184495,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatRegExpUnicodeEscapeSequence","ranges":[{"startOffset":184634,"endOffset":185863,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicode","ranges":[{"startOffset":185868,"endOffset":185940,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatIdentityEscape","ranges":[{"startOffset":186060,"endOffset":186539,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalEscape","ranges":[{"startOffset":186651,"endOffset":187023,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClassEscape","ranges":[{"startOffset":187449,"endOffset":188247,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterClassEscape","ranges":[{"startOffset":188254,"endOffset":188494,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValueExpression","ranges":[{"startOffset":188680,"endOffset":189418,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameAndValue","ranges":[{"startOffset":189475,"endOffset":189731,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_validateUnicodePropertyNameOrValue","ranges":[{"startOffset":189787,"endOffset":190055,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyName","ranges":[{"startOffset":190166,"endOffset":190433,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyNameCharacter","ranges":[{"startOffset":190440,"endOffset":190545,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatUnicodePropertyValue","ranges":[{"startOffset":190658,"endOffset":190926,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyValueCharacter","ranges":[{"startOffset":190931,"endOffset":191051,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":191184,"endOffset":191261,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatCharacterClass","ranges":[{"startOffset":191375,"endOffset":191791,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classContents","ranges":[{"startOffset":191948,"endOffset":192174,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_nonEmptyClassRanges","ranges":[{"startOffset":192381,"endOffset":192879,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassAtom","ranges":[{"startOffset":193059,"endOffset":193699,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassEscape","ranges":[{"startOffset":193814,"endOffset":194391,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classSetExpression","ranges":[{"startOffset":194640,"endOffset":196059,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetRange","ranges":[{"startOffset":196147,"endOffset":196626,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetOperand","ranges":[{"startOffset":196718,"endOffset":196905,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatNestedClass","ranges":[{"startOffset":196989,"endOffset":197619,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassStringDisjunction","ranges":[{"startOffset":197725,"endOffset":198168,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classStringDisjunctionContents","ranges":[{"startOffset":198287,"endOffset":198513,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_classString","ranges":[{"startOffset":198650,"endOffset":198810,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetCharacter","ranges":[{"startOffset":198906,"endOffset":199591,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetReservedDoublePunctuatorCharacter","ranges":[{"startOffset":199667,"endOffset":200051,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetSyntaxCharacter","ranges":[{"startOffset":200117,"endOffset":200402,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassSetReservedPunctuator","ranges":[{"startOffset":200515,"endOffset":200713,"count":0}],"isBlockCoverage":false},{"functionName":"isClassSetReservedPunctuator","ranges":[{"startOffset":200783,"endOffset":201170,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatClassControlLetter","ranges":[{"startOffset":201298,"endOffset":201512,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexEscapeSequence","ranges":[{"startOffset":201632,"endOffset":201930,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatDecimalDigits","ranges":[{"startOffset":202042,"endOffset":202328,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalDigit","ranges":[{"startOffset":202333,"endOffset":202420,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatHexDigits","ranges":[{"startOffset":202523,"endOffset":202798,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":202803,"endOffset":203010,"count":0}],"isBlockCoverage":false},{"functionName":"hexToInt","ranges":[{"startOffset":203014,"endOffset":203270,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatLegacyOctalEscapeSequence","ranges":[{"startOffset":203464,"endOffset":203960,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatOctalDigit","ranges":[{"startOffset":204066,"endOffset":204292,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":204297,"endOffset":204382,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.regexp_eatFixedHexDigits","ranges":[{"startOffset":204663,"endOffset":205028,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":205252,"endOffset":205544,"count":0}],"isBlockCoverage":false},{"functionName":"pp.next","ranges":[{"startOffset":205645,"endOffset":206128,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getToken","ranges":[{"startOffset":206149,"endOffset":206212,"count":0}],"isBlockCoverage":false},{"functionName":"pp.<computed>","ranges":[{"startOffset":206343,"endOffset":206607,"count":0}],"isBlockCoverage":false},{"functionName":"pp.nextToken","ranges":[{"startOffset":206851,"endOffset":207291,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken","ranges":[{"startOffset":207313,"endOffset":207618,"count":0}],"isBlockCoverage":false},{"functionName":"pp.fullCharCodeAtPos","ranges":[{"startOffset":207648,"endOffset":207912,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipBlockComment","ranges":[{"startOffset":207941,"endOffset":208617,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipLineComment","ranges":[{"startOffset":208645,"endOffset":209139,"count":0}],"isBlockCoverage":false},{"functionName":"pp.skipSpace","ranges":[{"startOffset":209267,"endOffset":210271,"count":0}],"isBlockCoverage":false},{"functionName":"pp.finishToken","ranges":[{"startOffset":210519,"endOffset":210756,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_dot","ranges":[{"startOffset":211076,"endOffset":211512,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_slash","ranges":[{"startOffset":211540,"endOffset":211795,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_mult_modulo_exp","ranges":[{"startOffset":211833,"endOffset":212345,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_pipe_amp","ranges":[{"startOffset":212376,"endOffset":212910,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_caret","ranges":[{"startOffset":212938,"endOffset":213130,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_plus_min","ranges":[{"startOffset":213161,"endOffset":213762,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_lt_gt","ranges":[{"startOffset":213790,"endOffset":214591,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_eq_excl","ranges":[{"startOffset":214621,"endOffset":215047,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_question","ranges":[{"startOffset":215078,"endOffset":215739,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readToken_numberSign","ranges":[{"startOffset":215772,"endOffset":216203,"count":0}],"isBlockCoverage":false},{"functionName":"pp.getTokenFromCode","ranges":[{"startOffset":216232,"endOffset":219043,"count":0}],"isBlockCoverage":false},{"functionName":"pp.finishOp","ranges":[{"startOffset":219064,"endOffset":219214,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRegexp","ranges":[{"startOffset":219237,"endOffset":220688,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readInt","ranges":[{"startOffset":220921,"endOffset":222736,"count":0}],"isBlockCoverage":false},{"functionName":"stringToNumber","ranges":[{"startOffset":222743,"endOffset":223034,"count":0}],"isBlockCoverage":false},{"functionName":"stringToBigInt","ranges":[{"startOffset":223040,"endOffset":223273,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readRadixNumber","ranges":[{"startOffset":223300,"endOffset":223841,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readNumber","ranges":[{"startOffset":223930,"endOffset":225371,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readCodePoint","ranges":[{"startOffset":225458,"endOffset":225921,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readString","ranges":[{"startOffset":225944,"endOffset":226913,"count":0}],"isBlockCoverage":false},{"functionName":"pp.tryReadTemplateToken","ranges":[{"startOffset":227029,"endOffset":227327,"count":0}],"isBlockCoverage":false},{"functionName":"pp.invalidStringToken","ranges":[{"startOffset":227358,"endOffset":227562,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readTmplToken","ranges":[{"startOffset":227588,"endOffset":229117,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readInvalidTemplateToken","ranges":[{"startOffset":229246,"endOffset":229742,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readEscapedChar","ranges":[{"startOffset":229810,"endOffset":231877,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readHexChar","ranges":[{"startOffset":231969,"endOffset":232160,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord1","ranges":[{"startOffset":232420,"endOffset":233480,"count":0}],"isBlockCoverage":false},{"functionName":"pp.readWord","ranges":[{"startOffset":233598,"endOffset":233794,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":235246,"endOffset":235324,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":235507,"endOffset":235619,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":235768,"endOffset":235854,"count":0}],"isBlockCoverage":false}]},{"scriptId":"236","url":"node:internal/deps/acorn/acorn-walk/dist/walk","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16465,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1,"endOffset":296,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":304,"endOffset":16459,"count":1}],"isBlockCoverage":false},{"functionName":"simple","ranges":[{"startOffset":1024,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"ancestor","ranges":[{"startOffset":1569,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"recursive","ranges":[{"startOffset":2390,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"makeTest","ranges":[{"startOffset":2667,"endOffset":2893,"count":0}],"isBlockCoverage":false},{"functionName":"Found","ranges":[{"startOffset":2911,"endOffset":2980,"count":0}],"isBlockCoverage":false},{"functionName":"full","ranges":[{"startOffset":3040,"endOffset":3413,"count":0}],"isBlockCoverage":false},{"functionName":"fullAncestor","ranges":[{"startOffset":3517,"endOffset":4062,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAt","ranges":[{"startOffset":4265,"endOffset":4941,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAround","ranges":[{"startOffset":5066,"endOffset":5574,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeAfter","ranges":[{"startOffset":5643,"endOffset":6151,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeBefore","ranges":[{"startOffset":6221,"endOffset":6699,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":6814,"endOffset":6991,"count":0}],"isBlockCoverage":false},{"functionName":"skipThrough","ranges":[{"startOffset":6997,"endOffset":7047,"count":0}],"isBlockCoverage":false},{"functionName":"ignore","ranges":[{"startOffset":7051,"endOffset":7085,"count":0}],"isBlockCoverage":false},{"functionName":"base.Program.base.BlockStatement.base.StaticBlock","ranges":[{"startOffset":7189,"endOffset":7360,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExpressionStatement.base.ParenthesizedExpression.base.ChainExpression","ranges":[{"startOffset":7517,"endOffset":7588,"count":0}],"isBlockCoverage":false},{"functionName":"base.IfStatement","ranges":[{"startOffset":7612,"endOffset":7785,"count":0}],"isBlockCoverage":false},{"functionName":"base.LabeledStatement","ranges":[{"startOffset":7814,"endOffset":7878,"count":0}],"isBlockCoverage":false},{"functionName":"base.WithStatement","ranges":[{"startOffset":7962,"endOffset":8066,"count":0}],"isBlockCoverage":false},{"functionName":"base.SwitchStatement","ranges":[{"startOffset":8094,"endOffset":8493,"count":0}],"isBlockCoverage":false},{"functionName":"base.SwitchCase","ranges":[{"startOffset":8516,"endOffset":8749,"count":0}],"isBlockCoverage":false},{"functionName":"base.ReturnStatement.base.YieldExpression.base.AwaitExpression","ranges":[{"startOffset":8823,"endOffset":8916,"count":0}],"isBlockCoverage":false},{"functionName":"base.ThrowStatement.base.SpreadElement","ranges":[{"startOffset":8969,"endOffset":9038,"count":0}],"isBlockCoverage":false},{"functionName":"base.TryStatement","ranges":[{"startOffset":9063,"endOffset":9242,"count":0}],"isBlockCoverage":false},{"functionName":"base.CatchClause","ranges":[{"startOffset":9266,"endOffset":9386,"count":0}],"isBlockCoverage":false},{"functionName":"base.WhileStatement.base.DoWhileStatement","ranges":[{"startOffset":9437,"endOffset":9539,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForStatement","ranges":[{"startOffset":9564,"endOffset":9798,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForInStatement.base.ForOfStatement","ranges":[{"startOffset":9847,"endOffset":9984,"count":0}],"isBlockCoverage":false},{"functionName":"base.ForInit","ranges":[{"startOffset":10004,"endOffset":10137,"count":0}],"isBlockCoverage":false},{"functionName":"base.FunctionDeclaration","ranges":[{"startOffset":10207,"endOffset":10265,"count":0}],"isBlockCoverage":false},{"functionName":"base.VariableDeclaration","ranges":[{"startOffset":10297,"endOffset":10463,"count":0}],"isBlockCoverage":false},{"functionName":"base.VariableDeclarator","ranges":[{"startOffset":10494,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"base.Function","ranges":[{"startOffset":10634,"endOffset":10925,"count":0}],"isBlockCoverage":false},{"functionName":"base.Pattern","ranges":[{"startOffset":10947,"endOffset":11179,"count":0}],"isBlockCoverage":false},{"functionName":"base.RestElement","ranges":[{"startOffset":11274,"endOffset":11340,"count":0}],"isBlockCoverage":false},{"functionName":"base.ArrayPattern","ranges":[{"startOffset":11365,"endOffset":11542,"count":0}],"isBlockCoverage":false},{"functionName":"base.ObjectPattern","ranges":[{"startOffset":11568,"endOffset":11946,"count":0}],"isBlockCoverage":false},{"functionName":"base.ArrayExpression","ranges":[{"startOffset":12076,"endOffset":12256,"count":0}],"isBlockCoverage":false},{"functionName":"base.ObjectExpression","ranges":[{"startOffset":12285,"endOffset":12449,"count":0}],"isBlockCoverage":false},{"functionName":"base.SequenceExpression","ranges":[{"startOffset":12566,"endOffset":12745,"count":0}],"isBlockCoverage":false},{"functionName":"base.TemplateLiteral","ranges":[{"startOffset":12773,"endOffset":13101,"count":0}],"isBlockCoverage":false},{"functionName":"base.UnaryExpression.base.UpdateExpression","ranges":[{"startOffset":13187,"endOffset":13257,"count":0}],"isBlockCoverage":false},{"functionName":"base.BinaryExpression.base.LogicalExpression","ranges":[{"startOffset":13311,"endOffset":13415,"count":0}],"isBlockCoverage":false},{"functionName":"base.AssignmentExpression.base.AssignmentPattern","ranges":[{"startOffset":13473,"endOffset":13574,"count":0}],"isBlockCoverage":false},{"functionName":"base.ConditionalExpression","ranges":[{"startOffset":13608,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"base.NewExpression.base.CallExpression","ranges":[{"startOffset":13807,"endOffset":14066,"count":0}],"isBlockCoverage":false},{"functionName":"base.MemberExpression","ranges":[{"startOffset":14095,"endOffset":14227,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExportNamedDeclaration.base.ExportDefaultDeclaration","ranges":[{"startOffset":14294,"endOffset":14538,"count":0}],"isBlockCoverage":false},{"functionName":"base.ExportAllDeclaration","ranges":[{"startOffset":14571,"endOffset":14696,"count":0}],"isBlockCoverage":false},{"functionName":"base.ImportDeclaration","ranges":[{"startOffset":14726,"endOffset":14929,"count":0}],"isBlockCoverage":false},{"functionName":"base.ImportExpression","ranges":[{"startOffset":14958,"endOffset":15026,"count":0}],"isBlockCoverage":false},{"functionName":"base.TaggedTemplateExpression","ranges":[{"startOffset":15219,"endOffset":15322,"count":0}],"isBlockCoverage":false},{"functionName":"base.ClassDeclaration.base.ClassExpression","ranges":[{"startOffset":15374,"endOffset":15429,"count":0}],"isBlockCoverage":false},{"functionName":"base.Class","ranges":[{"startOffset":15447,"endOffset":15616,"count":0}],"isBlockCoverage":false},{"functionName":"base.ClassBody","ranges":[{"startOffset":15638,"endOffset":15794,"count":0}],"isBlockCoverage":false},{"functionName":"base.MethodDefinition.base.PropertyDefinition.base.Property","ranges":[{"startOffset":15865,"endOffset":16011,"count":0}],"isBlockCoverage":false}]},{"scriptId":"237","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13300,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2691,"endOffset":3456,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":3787,"endOffset":4584,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4636,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":5984,"endOffset":6110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6310,"endOffset":6356,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6407,"endOffset":6449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6507,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6611,"endOffset":6657,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6816,"endOffset":6863,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6920,"endOffset":6968,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7024,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7124,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7222,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7322,"endOffset":7368,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7424,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7530,"endOffset":7580,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7640,"endOffset":7691,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7750,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7860,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7960,"endOffset":8000,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8056,"endOffset":8103,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8159,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8264,"endOffset":8313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8368,"endOffset":8414,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8467,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8657,"endOffset":8701,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8708,"endOffset":8758,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8812,"endOffset":8860,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8867,"endOffset":8921,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8973,"endOffset":9019,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9026,"endOffset":9078,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9132,"endOffset":9180,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9187,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9290,"endOffset":9333,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9340,"endOffset":9389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9448,"endOffset":9501,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9508,"endOffset":9567,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9621,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9676,"endOffset":9730,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9784,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9839,"endOffset":9893,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":10501,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":12080,"endOffset":13140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"238","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2762,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":677,"endOffset":2720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1704,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":560,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":666,"endOffset":1496,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1503,"endOffset":1629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3651,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":472,"endOffset":3610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"node:console","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1226,"count":1}],"isBlockCoverage":false}]},{"scriptId":"242","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":260,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":532,"endOffset":1126,"count":1},{"startOffset":575,"endOffset":1121,"count":0}],"isBlockCoverage":true}]},{"scriptId":"243","url":"node:domain","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17268,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2276,"endOffset":2317,"count":122}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2327,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2492,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":3469,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"after","ranges":[{"startOffset":3966,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":4187,"endOffset":4255,"count":0}],"isBlockCoverage":false},{"functionName":"process.setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":4779,"endOffset":4959,"count":0}],"isBlockCoverage":false},{"functionName":"emitMakeCallbackDeprecation","ranges":[{"startOffset":5008,"endOffset":5505,"count":0}],"isBlockCoverage":false},{"functionName":"topLevelDomainCallback","ranges":[{"startOffset":5509,"endOffset":5821,"count":0}],"isBlockCoverage":false},{"functionName":"updateExceptionCapture","ranges":[{"startOffset":6025,"endOffset":6397,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6429,"endOffset":6781,"count":12},{"startOffset":6487,"endOffset":6538,"count":6},{"startOffset":6540,"endOffset":6778,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6816,"endOffset":7223,"count":10},{"startOffset":6874,"endOffset":6925,"count":6},{"startOffset":6927,"endOffset":7220,"count":3}],"isBlockCoverage":true},{"functionName":"domainUncaughtExceptionClear","ranges":[{"startOffset":7229,"endOffset":7366,"count":0}],"isBlockCoverage":false},{"functionName":"Domain","ranges":[{"startOffset":7411,"endOffset":7651,"count":0}],"isBlockCoverage":false},{"functionName":"createDomain","ranges":[{"startOffset":7726,"endOffset":7778,"count":0}],"isBlockCoverage":false},{"functionName":"Domain._errorHandler","ranges":[{"startOffset":8013,"endOffset":11015,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.enter","ranges":[{"startOffset":11047,"endOffset":11288,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.exit","ranges":[{"startOffset":11319,"endOffset":11705,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.add","ranges":[{"startOffset":11776,"endOffset":12583,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.remove","ranges":[{"startOffset":12616,"endOffset":12784,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.run","ranges":[{"startOffset":12814,"endOffset":12955,"count":0}],"isBlockCoverage":false},{"functionName":"intercepted","ranges":[{"startOffset":12962,"endOffset":13487,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.intercept","ranges":[{"startOffset":13522,"endOffset":13679,"count":0}],"isBlockCoverage":false},{"functionName":"bound","ranges":[{"startOffset":13686,"endOffset":13828,"count":0}],"isBlockCoverage":false},{"functionName":"Domain.bind","ranges":[{"startOffset":13858,"endOffset":14162,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":14321,"endOffset":14659,"count":225},{"startOffset":14519,"endOffset":14555,"count":0},{"startOffset":14557,"endOffset":14598,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":14742,"endOffset":17265,"count":122},{"startOffset":14869,"endOffset":14927,"count":0},{"startOffset":15099,"endOffset":15122,"count":0},{"startOffset":15123,"endOffset":15149,"count":0},{"startOffset":15206,"endOffset":17264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"244","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2043,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":388,"endOffset":1892,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":541,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1074,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1138,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1195,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1448,"endOffset":1889,"count":7}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1543,"endOffset":1802,"count":7},{"startOffset":1628,"endOffset":1801,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1827,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1896,"endOffset":1951,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"node:internal/repl/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25956,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1073,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"isRecoverableError","ranges":[{"startOffset":1481,"endOffset":4499,"count":0}],"isBlockCoverage":false},{"functionName":"setupPreview","ranges":[{"startOffset":4503,"endOffset":17228,"count":0}],"isBlockCoverage":false},{"functionName":"setupReverseSearch","ranges":[{"startOffset":17232,"endOffset":25753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"node:internal/repl/history","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4673,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":350,"endOffset":377,"count":0}],"isBlockCoverage":false},{"functionName":"_writeToOutput","ranges":[{"startOffset":739,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"setupHistory","ranges":[{"startOffset":843,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"_replHistoryMessage","ranges":[{"startOffset":4300,"endOffset":4671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38,"count":1}],"isBlockCoverage":true}]},{"scriptId":"248","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32949,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2787,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3572,"endOffset":3620,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4192,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4482,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5624,"endOffset":6589,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6593,"endOffset":8273,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8277,"endOffset":9732,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9736,"endOffset":12921,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12925,"endOffset":13557,"count":164},{"startOffset":12987,"endOffset":13554,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":13698,"endOffset":13761,"count":164}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":14031,"endOffset":14417,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14646,"endOffset":15036,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":15245,"endOffset":15624,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15839,"endOffset":16226,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":16480,"endOffset":16883,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":17143,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17768,"endOffset":18094,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":18315,"endOffset":18649,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18676,"endOffset":19071,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":19078,"endOffset":19823,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19827,"endOffset":23335,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":23339,"endOffset":23487,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":23491,"endOffset":23863,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23867,"endOffset":24604,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":24608,"endOffset":26275,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":26279,"endOffset":26915,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26919,"endOffset":27593,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":27759,"endOffset":27855,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":28042,"endOffset":28156,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":28326,"endOffset":28422,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":28596,"endOffset":28710,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":28845,"endOffset":30687,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":30692,"endOffset":31808,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":32013,"endOffset":32107,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":32324,"endOffset":32432,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":32632,"endOffset":32703,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17596,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1496,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1802,"endOffset":2429,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2433,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11405,"endOffset":11717,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11761,"endOffset":16588,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16594,"endOffset":16671,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16677,"endOffset":17555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":489,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1568,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/v8-compile-cache-lib/v8-compile-cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11535,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemBlobStore","ranges":[{"startOffset":465,"endOffset":794,"count":2},{"startOffset":550,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":798,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1092,"endOffset":1511,"count":1},{"startOffset":1173,"endOffset":1288,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1515,"endOffset":1666,"count":1}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":1670,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"isDirty","ranges":[{"startOffset":2069,"endOffset":2108,"count":2}],"isBlockCoverage":true},{"functionName":"save","ranges":[{"startOffset":2112,"endOffset":2681,"count":1},{"startOffset":2473,"endOffset":2680,"count":0}],"isBlockCoverage":true},{"functionName":"_load","ranges":[{"startOffset":2685,"endOffset":3022,"count":2},{"startOffset":2845,"endOffset":2932,"count":0}],"isBlockCoverage":true},{"functionName":"_getDump","ranges":[{"startOffset":3026,"endOffset":3801,"count":1},{"startOffset":3555,"endOffset":3766,"count":2},{"startOffset":3601,"endOffset":3766,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3111,"endOffset":3292,"count":2}],"isBlockCoverage":true},{"functionName":"NativeCompileCache","ranges":[{"startOffset":4019,"endOffset":4107,"count":2}],"isBlockCoverage":true},{"functionName":"setCacheStore","ranges":[{"startOffset":4111,"endOffset":4177,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":4181,"endOffset":5948,"count":2}],"isBlockCoverage":true},{"functionName":"_ownModuleCompile","ranges":[{"startOffset":4462,"endOffset":5944,"count":1},{"startOffset":4534,"endOffset":4592,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4624,"endOffset":4686,"count":6}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4788,"endOffset":4902,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":5142,"endOffset":5242,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":5952,"endOffset":6215,"count":2}],"isBlockCoverage":true},{"functionName":"_moduleCompile","ranges":[{"startOffset":6219,"endOffset":8037,"count":1},{"startOffset":6449,"endOffset":6490,"count":0},{"startOffset":6497,"endOffset":7203,"count":0},{"startOffset":7761,"endOffset":7846,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirpSync","ranges":[{"startOffset":8365,"endOffset":8432,"count":1}],"isBlockCoverage":true},{"functionName":"_mkdirpSync","ranges":[{"startOffset":8434,"endOffset":8785,"count":1},{"startOffset":8552,"endOffset":8617,"count":0},{"startOffset":8707,"endOffset":8722,"count":0},{"startOffset":8731,"endOffset":8773,"count":0}],"isBlockCoverage":true},{"functionName":"slashEscape","ranges":[{"startOffset":8787,"endOffset":9072,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9039,"endOffset":9068,"count":12}],"isBlockCoverage":true},{"functionName":"supportsCachedData","ranges":[{"startOffset":9074,"endOffset":9267,"count":2}],"isBlockCoverage":true},{"functionName":"getCacheDir","ranges":[{"startOffset":9269,"endOffset":9935,"count":2},{"startOffset":9405,"endOffset":9449,"count":0},{"startOffset":9562,"endOffset":9602,"count":0},{"startOffset":9717,"endOffset":9852,"count":0}],"isBlockCoverage":true},{"functionName":"getMainName","ranges":[{"startOffset":9937,"endOffset":10288,"count":2},{"startOffset":10174,"endOffset":10218,"count":0},{"startOffset":10223,"endOffset":10246,"count":0}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":10290,"endOffset":11170,"count":2}],"isBlockCoverage":true},{"functionName":"uninstall","ranges":[{"startOffset":10880,"endOffset":11103,"count":2},{"startOffset":10910,"endOffset":10917,"count":0},{"startOffset":11024,"endOffset":11059,"count":1}],"isBlockCoverage":true}]},{"scriptId":"252","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9218,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3207,"endOffset":3312,"count":18}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3339,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3618,"endOffset":3702,"count":1}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3706,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3812,"endOffset":3916,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3920,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":4030,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":4142,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4304,"endOffset":4388,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4392,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4454,"endOffset":4538,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4542,"endOffset":4626,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4630,"endOffset":4718,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5831,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5922,"endOffset":6216,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":6220,"endOffset":6313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6395,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6664,"endOffset":6861,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6915,"endOffset":7789,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7017,"endOffset":7529,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7536,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8565,"endOffset":8605,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8725,"endOffset":8772,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8906,"endOffset":8927,"count":9}],"isBlockCoverage":true}]},{"scriptId":"253","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16859,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1328,"endOffset":1704,"count":2},{"startOffset":1568,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1708,"endOffset":2183,"count":4},{"startOffset":1891,"endOffset":2012,"count":0},{"startOffset":2046,"endOffset":2133,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2187,"endOffset":2748,"count":2},{"startOffset":2301,"endOffset":2352,"count":0},{"startOffset":2490,"endOffset":2747,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2597,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2752,"endOffset":3452,"count":2},{"startOffset":2831,"endOffset":2857,"count":0},{"startOffset":2859,"endOffset":2972,"count":0},{"startOffset":3120,"endOffset":3163,"count":0},{"startOffset":3269,"endOffset":3280,"count":0},{"startOffset":3422,"endOffset":3432,"count":0}],"isBlockCoverage":true},{"functionName":"randomFill","ranges":[{"startOffset":3456,"endOffset":4544,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":5109,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7421,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8328,"endOffset":8493,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8732,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9745,"endOffset":10053,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":10057,"endOffset":10806,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10810,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":11125,"endOffset":11369,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11373,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11707,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12996,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13476,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":14024,"endOffset":14068,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":14149,"endOffset":14588,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14592,"endOffset":14897,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14901,"endOffset":15826,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15830,"endOffset":16658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3149,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":503,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1198,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1624,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2152,"endOffset":3074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15550,"count":1}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1810,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2032,"endOffset":2075,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2110,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2187,"endOffset":2229,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2235,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2705,"endOffset":3191,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":6771,"endOffset":6990,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":7223,"endOffset":9731,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":9735,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":9881,"endOffset":10035,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":10039,"endOffset":10193,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":10197,"endOffset":10341,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":10345,"endOffset":10699,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":10703,"endOffset":10905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10952,"endOffset":11237,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":11243,"endOffset":11482,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":11486,"endOffset":11766,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12311,"endOffset":12602,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":12606,"endOffset":12851,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":12855,"endOffset":13025,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":13029,"endOffset":13248,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":13252,"endOffset":13440,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":13592,"endOffset":14587,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":14591,"endOffset":14983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2604,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1958,"endOffset":2207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3466,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":665,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1358,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1780,"endOffset":3412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3476,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":866,"endOffset":1346,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1352,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1808,"endOffset":2293,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2297,"endOffset":2650,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2692,"endOffset":3407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"259","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22182,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2430,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2543,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3110,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3174,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3327,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3849,"endOffset":3909,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3917,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":4007,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4504,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4895,"endOffset":4957,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4965,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":5128,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5586,"endOffset":5646,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5654,"endOffset":5954,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":6023,"endOffset":6084,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":6092,"endOffset":6621,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6712,"endOffset":7107,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":7111,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7989,"endOffset":8113,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":8117,"endOffset":8834,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8838,"endOffset":8979,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8983,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10586,"endOffset":10724,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10929,"endOffset":11047,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":11051,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11652,"endOffset":12173,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":12177,"endOffset":14834,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14838,"endOffset":16423,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":16427,"endOffset":16517,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":16521,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16622,"endOffset":17341,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":17345,"endOffset":17554,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":17558,"endOffset":17906,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17910,"endOffset":18262,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":18266,"endOffset":18350,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18782,"endOffset":18844,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18850,"endOffset":19214,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":19220,"endOffset":19359,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":19365,"endOffset":19508,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":19514,"endOffset":19653,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":19659,"endOffset":19806,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":20405,"endOffset":20899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20905,"endOffset":21272,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21278,"endOffset":21487,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":21621,"endOffset":21707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"260","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11121,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1248,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1324,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1488,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2297,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2420,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2817,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4112,"endOffset":9576,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9611,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":10171,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10386,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10876,"endOffset":11013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"261","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10275,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1301,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3165,"endOffset":3501,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3619,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3858,"endOffset":4122,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4228,"endOffset":4340,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4458,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4704,"endOffset":4820,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4941,"endOffset":5059,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5104,"endOffset":5250,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5297,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5452,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5930,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6091,"endOffset":6246,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6269,"endOffset":6541,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6546,"endOffset":6685,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6689,"endOffset":7022,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7100,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8317,"endOffset":10160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"262","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10532,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1297,"endOffset":2062,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1366,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2574,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2954,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3200,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3634,"endOffset":3874,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3878,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4473,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4827,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4977,"endOffset":5123,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5154,"endOffset":5686,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5718,"endOffset":5971,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6012,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6198,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6370,"endOffset":6587,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6617,"endOffset":6966,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7221,"endOffset":7436,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7440,"endOffset":8043,"count":3},{"startOffset":7842,"endOffset":7917,"count":1},{"startOffset":7917,"endOffset":7981,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8455,"endOffset":8668,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9084,"endOffset":9306,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9474,"endOffset":10360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1597,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":416,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":616,"endOffset":950,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":654,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":954,"endOffset":1183,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":992,"endOffset":1179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7243,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":922,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1317,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1441,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1769,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1850,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1937,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2304,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2584,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3225,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4499,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":5010,"endOffset":5612,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5617,"endOffset":7161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4742,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1012,"endOffset":1546,"count":1},{"startOffset":1085,"endOffset":1121,"count":0},{"startOffset":1251,"endOffset":1270,"count":0},{"startOffset":1271,"endOffset":1298,"count":0},{"startOffset":1346,"endOffset":1393,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1682,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1889,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2026,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2138,"endOffset":2617,"count":1},{"startOffset":2234,"endOffset":2272,"count":0},{"startOffset":2353,"endOffset":2502,"count":0},{"startOffset":2556,"endOffset":2598,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2648,"endOffset":2978,"count":1},{"startOffset":2744,"endOffset":2782,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":2983,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3583,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4191,"endOffset":4680,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10277,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1218,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1307,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2583,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2756,"endOffset":10019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"267","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1599,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":401,"endOffset":524,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":528,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":663,"endOffset":794,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1161,"endOffset":1258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"268","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32080,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1258,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1889,"endOffset":2002,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":2006,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4590,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":6199,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6847,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":9101,"endOffset":10116,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":10120,"endOffset":11144,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":11148,"endOffset":12118,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":12122,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13712,"endOffset":14598,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":14602,"endOffset":15994,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":15998,"endOffset":18835,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":18932,"endOffset":20516,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":20615,"endOffset":22653,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":22657,"endOffset":23794,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":23798,"endOffset":24444,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":24448,"endOffset":25229,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":25233,"endOffset":26680,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":26684,"endOffset":27431,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":27435,"endOffset":28182,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":28344,"endOffset":28406,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28443,"endOffset":28456,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":28498,"endOffset":28560,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":28566,"endOffset":28669,"count":9},{"startOffset":28607,"endOffset":28644,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28706,"endOffset":28719,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":28737,"endOffset":29078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/typescript/lib/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9141133,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9141131,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":899,"endOffset":9141006,"count":1}],"isBlockCoverage":false},{"functionName":"__esm","ranges":[{"startOffset":1016,"endOffset":1125,"count":267}],"isBlockCoverage":true},{"functionName":"__init","ranges":[{"startOffset":1029,"endOffset":1125,"count":620},{"startOffset":1063,"endOffset":1115,"count":267}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":1146,"endOffset":1289,"count":1}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":1159,"endOffset":1289,"count":1}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":1308,"endOffset":1425,"count":32},{"startOffset":1359,"endOffset":1421,"count":5040}],"isBlockCoverage":true},{"functionName":"src/compiler/corePublic.ts","ranges":[{"startOffset":1542,"endOffset":1963,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1689,"endOffset":1937,"count":1}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":1999,"endOffset":2064,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":2067,"endOffset":2306,"count":85},{"startOffset":2165,"endOffset":2277,"count":80},{"startOffset":2277,"endOffset":2305,"count":5}],"isBlockCoverage":true},{"functionName":"forEachRight","ranges":[{"startOffset":2309,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":2561,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefinedIterator","ranges":[{"startOffset":2839,"endOffset":3047,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeftIterator","ranges":[{"startOffset":3050,"endOffset":3296,"count":0}],"isBlockCoverage":false},{"functionName":"zipWith","ranges":[{"startOffset":3299,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"intersperse","ranges":[{"startOffset":3551,"endOffset":3820,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":3823,"endOffset":4027,"count":18},{"startOffset":3919,"endOffset":4000,"count":3},{"startOffset":3957,"endOffset":3992,"count":2},{"startOffset":4000,"endOffset":4026,"count":16}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":4030,"endOffset":4303,"count":0}],"isBlockCoverage":false},{"functionName":"findLast","ranges":[{"startOffset":4306,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":4591,"endOffset":4830,"count":40},{"startOffset":4674,"endOffset":4684,"count":0},{"startOffset":4811,"endOffset":4829,"count":0}],"isBlockCoverage":true},{"functionName":"findLastIndex","ranges":[{"startOffset":4833,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"findMap","ranges":[{"startOffset":5084,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5297,"endOffset":5522,"count":104},{"startOffset":5410,"endOffset":5494,"count":206},{"startOffset":5452,"endOffset":5486,"count":2},{"startOffset":5494,"endOffset":5521,"count":102}],"isBlockCoverage":true},{"functionName":"arraysEqual","ranges":[{"startOffset":5525,"endOffset":5672,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfAnyCharCode","ranges":[{"startOffset":5675,"endOffset":5885,"count":2},{"startOffset":5780,"endOffset":5866,"count":104},{"startOffset":5833,"endOffset":5860,"count":2},{"startOffset":5866,"endOffset":5884,"count":0}],"isBlockCoverage":true},{"functionName":"countWhere","ranges":[{"startOffset":5888,"endOffset":6134,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6137,"endOffset":6567,"count":3},{"startOffset":6180,"endOffset":6545,"count":1},{"startOffset":6276,"endOffset":6280,"count":0},{"startOffset":6381,"endOffset":6508,"count":120},{"startOffset":6439,"endOffset":6483,"count":7},{"startOffset":6545,"endOffset":6566,"count":2}],"isBlockCoverage":true},{"functionName":"filterMutate","ranges":[{"startOffset":6570,"endOffset":6808,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":6811,"endOffset":6860,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":6863,"endOffset":7060,"count":2}],"isBlockCoverage":true},{"functionName":"mapIterator","ranges":[{"startOffset":7063,"endOffset":7159,"count":1},{"startOffset":7126,"endOffset":7155,"count":5}],"isBlockCoverage":true},{"functionName":"sameMap","ranges":[{"startOffset":7162,"endOffset":7595,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":7598,"endOffset":7837,"count":6},{"startOffset":7674,"endOffset":7814,"count":14},{"startOffset":7757,"endOffset":7800,"count":0}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":7840,"endOffset":8209,"count":10},{"startOffset":8034,"endOffset":8089,"count":0},{"startOffset":8191,"endOffset":8204,"count":0}],"isBlockCoverage":true},{"functionName":"flatMapToMutable","ranges":[{"startOffset":8212,"endOffset":8562,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapIterator","ranges":[{"startOffset":8565,"endOffset":8729,"count":0}],"isBlockCoverage":false},{"functionName":"sameFlatMap","ranges":[{"startOffset":8732,"endOffset":9246,"count":0}],"isBlockCoverage":false},{"functionName":"mapAllOrFail","ranges":[{"startOffset":9249,"endOffset":9513,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefined","ranges":[{"startOffset":9516,"endOffset":9792,"count":1},{"startOffset":9637,"endOffset":9763,"count":1987},{"startOffset":9713,"endOffset":9755,"count":1244}],"isBlockCoverage":true},{"functionName":"mapDefinedIterator","ranges":[{"startOffset":9795,"endOffset":9965,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedEntries","ranges":[{"startOffset":9968,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"getOrUpdate","ranges":[{"startOffset":10385,"endOffset":10565,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddToSet","ranges":[{"startOffset":10568,"endOffset":10698,"count":0}],"isBlockCoverage":false},{"functionName":"singleIterator","ranges":[{"startOffset":10701,"endOffset":10755,"count":0}],"isBlockCoverage":false},{"functionName":"spanMap","ranges":[{"startOffset":10758,"endOffset":11521,"count":0}],"isBlockCoverage":false},{"functionName":"mapEntries","ranges":[{"startOffset":11524,"endOffset":11794,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":11797,"endOffset":12064,"count":21},{"startOffset":11869,"endOffset":11988,"count":1},{"startOffset":11902,"endOffset":11980,"count":7},{"startOffset":11932,"endOffset":11970,"count":0},{"startOffset":11988,"endOffset":12036,"count":20},{"startOffset":12042,"endOffset":12063,"count":1}],"isBlockCoverage":true},{"functionName":"getRangesWhere","ranges":[{"startOffset":12067,"endOffset":12417,"count":0}],"isBlockCoverage":false},{"functionName":"concatenate","ranges":[{"startOffset":12420,"endOffset":12585,"count":0}],"isBlockCoverage":false},{"functionName":"selectIndex","ranges":[{"startOffset":12588,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"indicesOf","ranges":[{"startOffset":12637,"endOffset":12703,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicateRelational","ranges":[{"startOffset":12706,"endOffset":13235,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicateEquality","ranges":[{"startOffset":13238,"endOffset":13429,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicate","ranges":[{"startOffset":13432,"endOffset":13683,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicateSorted","ranges":[{"startOffset":13686,"endOffset":14191,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":14194,"endOffset":14243,"count":0}],"isBlockCoverage":false},{"functionName":"insertSorted","ranges":[{"startOffset":14246,"endOffset":14678,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicate","ranges":[{"startOffset":14681,"endOffset":14863,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsSorted","ranges":[{"startOffset":14866,"endOffset":15135,"count":0}],"isBlockCoverage":false},{"functionName":"detectSortCaseSensitivity","ranges":[{"startOffset":15138,"endOffset":15853,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEqualTo","ranges":[{"startOffset":15856,"endOffset":16226,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":16229,"endOffset":16582,"count":0}],"isBlockCoverage":false},{"functionName":"relativeComplement","ranges":[{"startOffset":16585,"endOffset":17624,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":17627,"endOffset":17782,"count":10},{"startOffset":17688,"endOffset":17698,"count":0},{"startOffset":17743,"endOffset":17781,"count":0}],"isBlockCoverage":true},{"functionName":"combine","ranges":[{"startOffset":17785,"endOffset":18052,"count":0}],"isBlockCoverage":false},{"functionName":"toOffset","ranges":[{"startOffset":18055,"endOffset":18149,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":18152,"endOffset":18586,"count":14},{"startOffset":18246,"endOffset":18256,"count":0},{"startOffset":18286,"endOffset":18316,"count":0},{"startOffset":18350,"endOffset":18373,"count":0},{"startOffset":18414,"endOffset":18435,"count":0},{"startOffset":18469,"endOffset":18487,"count":65},{"startOffset":18494,"endOffset":18567,"count":65}],"isBlockCoverage":true},{"functionName":"pushIfUnique","ranges":[{"startOffset":18589,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfUnique","ranges":[{"startOffset":18786,"endOffset":18977,"count":0}],"isBlockCoverage":false},{"functionName":"stableSortIndices","ranges":[{"startOffset":18980,"endOffset":19119,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":19122,"endOffset":19228,"count":72},{"startOffset":19185,"endOffset":19192,"count":26},{"startOffset":19193,"endOffset":19223,"count":46}],"isBlockCoverage":true},{"functionName":"arrayReverseIterator","ranges":[{"startOffset":19231,"endOffset":19352,"count":0}],"isBlockCoverage":false},{"functionName":"stableSort","ranges":[{"startOffset":19355,"endOffset":19525,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEquals","ranges":[{"startOffset":19528,"endOffset":19711,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefined","ranges":[{"startOffset":19714,"endOffset":19823,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefinedIterator","ranges":[{"startOffset":19826,"endOffset":19976,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":19979,"endOffset":20065,"count":0}],"isBlockCoverage":false},{"functionName":"firstIterator","ranges":[{"startOffset":20068,"endOffset":20197,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":20200,"endOffset":20323,"count":16},{"startOffset":20284,"endOffset":20292,"count":0}],"isBlockCoverage":true},{"functionName":"last","ranges":[{"startOffset":20326,"endOffset":20426,"count":10}],"isBlockCoverage":true},{"functionName":"singleOrUndefined","ranges":[{"startOffset":20429,"endOffset":20528,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":20531,"endOffset":20616,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrMany","ranges":[{"startOffset":20619,"endOffset":20712,"count":0}],"isBlockCoverage":false},{"functionName":"replaceElement","ranges":[{"startOffset":20715,"endOffset":20846,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":20849,"endOffset":21013,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearchKey","ranges":[{"startOffset":21016,"endOffset":21613,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeft","ranges":[{"startOffset":21616,"endOffset":22236,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":22239,"endOffset":22319,"count":257}],"isBlockCoverage":true},{"functionName":"getProperty","ranges":[{"startOffset":22322,"endOffset":22423,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnKeys","ranges":[{"startOffset":22426,"endOffset":22607,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":22610,"endOffset":22870,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnValues","ranges":[{"startOffset":22873,"endOffset":23092,"count":1},{"startOffset":22966,"endOffset":23069,"count":3}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":23095,"endOffset":23251,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFrom","ranges":[{"startOffset":23254,"endOffset":23425,"count":6},{"startOffset":23348,"endOffset":23402,"count":40},{"startOffset":23373,"endOffset":23386,"count":0}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":23428,"endOffset":23662,"count":0}],"isBlockCoverage":false},{"functionName":"equalOwnProperties","ranges":[{"startOffset":23665,"endOffset":24244,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMap","ranges":[{"startOffset":24247,"endOffset":24517,"count":3},{"startOffset":24384,"endOffset":24494,"count":131}],"isBlockCoverage":true},{"functionName":"arrayToNumericMap","ranges":[{"startOffset":24520,"endOffset":24720,"count":1},{"startOffset":24641,"endOffset":24697,"count":13}],"isBlockCoverage":true},{"functionName":"arrayToMultiMap","ranges":[{"startOffset":24723,"endOffset":24940,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":24943,"endOffset":25094,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":25097,"endOffset":25379,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":25382,"endOffset":25575,"count":10},{"startOffset":25459,"endOffset":25552,"count":140}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":25578,"endOffset":25903,"count":2},{"startOffset":25664,"endOffset":25757,"count":28},{"startOffset":25787,"endOffset":25880,"count":0}],"isBlockCoverage":true},{"functionName":"copyProperties","ranges":[{"startOffset":25906,"endOffset":26074,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind","ranges":[{"startOffset":26077,"endOffset":26149,"count":0}],"isBlockCoverage":false},{"functionName":"createMultiMap","ranges":[{"startOffset":26152,"endOffset":26306,"count":1}],"isBlockCoverage":true},{"functionName":"multiMapAdd","ranges":[{"startOffset":26309,"endOffset":26500,"count":1438},{"startOffset":26392,"endOffset":26425,"count":177},{"startOffset":26425,"endOffset":26477,"count":1261}],"isBlockCoverage":true},{"functionName":"multiMapRemove","ranges":[{"startOffset":26503,"endOffset":26706,"count":0}],"isBlockCoverage":false},{"functionName":"createQueue","ranges":[{"startOffset":26709,"endOffset":27570,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":27573,"endOffset":30718,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":30721,"endOffset":30783,"count":35}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":30786,"endOffset":30860,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":30863,"endOffset":30929,"count":78}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":30932,"endOffset":30992,"count":0}],"isBlockCoverage":false},{"functionName":"tryCast","ranges":[{"startOffset":30995,"endOffset":31091,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":31094,"endOffset":31311,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":31314,"endOffset":31336,"count":2}],"isBlockCoverage":true},{"functionName":"returnFalse","ranges":[{"startOffset":31339,"endOffset":31385,"count":0}],"isBlockCoverage":false},{"functionName":"returnTrue","ranges":[{"startOffset":31388,"endOffset":31432,"count":0}],"isBlockCoverage":false},{"functionName":"returnUndefined","ranges":[{"startOffset":31435,"endOffset":31486,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":31489,"endOffset":31529,"count":153}],"isBlockCoverage":true},{"functionName":"toLowerCase","ranges":[{"startOffset":31532,"endOffset":31589,"count":766}],"isBlockCoverage":true},{"functionName":"toFileNameLowerCase","ranges":[{"startOffset":31592,"endOffset":31727,"count":160},{"startOffset":31719,"endOffset":31722,"count":0}],"isBlockCoverage":true},{"functionName":"notImplemented","ranges":[{"startOffset":31730,"endOffset":31801,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":31804,"endOffset":31982,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31859,"endOffset":31977,"count":22},{"startOffset":31887,"endOffset":31951,"count":1}],"isBlockCoverage":true},{"functionName":"memoizeOne","ranges":[{"startOffset":31985,"endOffset":32305,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32072,"endOffset":32300,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeWeak","ranges":[{"startOffset":32308,"endOffset":32591,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCached","ranges":[{"startOffset":32594,"endOffset":32852,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32647,"endOffset":32847,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":32855,"endOffset":33322,"count":0}],"isBlockCoverage":false},{"functionName":"equateValues","ranges":[{"startOffset":33325,"endOffset":33378,"count":286}],"isBlockCoverage":true},{"functionName":"equateStringsCaseInsensitive","ranges":[{"startOffset":33381,"endOffset":33521,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseSensitive","ranges":[{"startOffset":33524,"endOffset":33602,"count":80}],"isBlockCoverage":true},{"functionName":"compareComparableValues","ranges":[{"startOffset":33605,"endOffset":33809,"count":70},{"startOffset":33665,"endOffset":33668,"count":4},{"startOffset":33683,"endOffset":33786,"count":66},{"startOffset":33698,"endOffset":33702,"count":0},{"startOffset":33733,"endOffset":33736,"count":0},{"startOffset":33763,"endOffset":33767,"count":0}],"isBlockCoverage":true},{"functionName":"compareValues","ranges":[{"startOffset":33812,"endOffset":33888,"count":8}],"isBlockCoverage":true},{"functionName":"compareTextSpans","ranges":[{"startOffset":33891,"endOffset":34093,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":34096,"endOffset":34215,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitive","ranges":[{"startOffset":34218,"endOffset":34561,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitiveEslintCompatible","ranges":[{"startOffset":34564,"endOffset":34923,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitive","ranges":[{"startOffset":34926,"endOffset":35016,"count":62}],"isBlockCoverage":true},{"functionName":"getStringComparer","ranges":[{"startOffset":35019,"endOffset":35148,"count":2},{"startOffset":35114,"endOffset":35143,"count":0}],"isBlockCoverage":true},{"functionName":"getUILocale","ranges":[{"startOffset":35151,"endOffset":35200,"count":0}],"isBlockCoverage":false},{"functionName":"setUILocale","ranges":[{"startOffset":35203,"endOffset":35336,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitiveUI","ranges":[{"startOffset":35339,"endOffset":35526,"count":0}],"isBlockCoverage":false},{"functionName":"compareProperties","ranges":[{"startOffset":35529,"endOffset":35719,"count":0}],"isBlockCoverage":false},{"functionName":"compareBooleans","ranges":[{"startOffset":35722,"endOffset":35806,"count":0}],"isBlockCoverage":false},{"functionName":"getSpellingSuggestion","ranges":[{"startOffset":35809,"endOffset":36735,"count":0}],"isBlockCoverage":false},{"functionName":"levenshteinWithMax","ranges":[{"startOffset":36738,"endOffset":38099,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":38102,"endOffset":38361,"count":558},{"startOffset":38242,"endOffset":38304,"count":0}],"isBlockCoverage":true},{"functionName":"removeSuffix","ranges":[{"startOffset":38364,"endOffset":38487,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveSuffix","ranges":[{"startOffset":38490,"endOffset":38619,"count":0}],"isBlockCoverage":false},{"functionName":"removeMinAndVersionNumbers","ranges":[{"startOffset":38622,"endOffset":39596,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItem","ranges":[{"startOffset":39599,"endOffset":39812,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItemAt","ranges":[{"startOffset":39815,"endOffset":39970,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItemAt","ranges":[{"startOffset":39973,"endOffset":40084,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItem","ranges":[{"startOffset":40087,"endOffset":40214,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveFirstItemWhere","ranges":[{"startOffset":40217,"endOffset":40451,"count":0}],"isBlockCoverage":false},{"functionName":"createGetCanonicalFileName","ranges":[{"startOffset":40454,"endOffset":40595,"count":7},{"startOffset":40558,"endOffset":40568,"count":0}],"isBlockCoverage":true},{"functionName":"patternText","ranges":[{"startOffset":40598,"endOffset":40678,"count":0}],"isBlockCoverage":false},{"functionName":"matchedText","ranges":[{"startOffset":40681,"endOffset":40878,"count":0}],"isBlockCoverage":false},{"functionName":"findBestPatternMatch","ranges":[{"startOffset":40881,"endOffset":41298,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":41301,"endOffset":41477,"count":724},{"startOffset":41370,"endOffset":41437,"count":0}],"isBlockCoverage":true},{"functionName":"removePrefix","ranges":[{"startOffset":41480,"endOffset":41590,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemovePrefix","ranges":[{"startOffset":41593,"endOffset":41789,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternMatch","ranges":[{"startOffset":41792,"endOffset":41978,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":41981,"endOffset":42043,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42013,"endOffset":42038,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":42046,"endOffset":42284,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42078,"endOffset":42279,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":42287,"endOffset":42347,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":42350,"endOffset":42378,"count":0}],"isBlockCoverage":false},{"functionName":"singleElementArray","ranges":[{"startOffset":42381,"endOffset":42457,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateInsertsAndDeletes","ranges":[{"startOffset":42460,"endOffset":43517,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProduct","ranges":[{"startOffset":43520,"endOffset":43702,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProductWorker","ranges":[{"startOffset":43705,"endOffset":44125,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":44128,"endOffset":44362,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhile","ranges":[{"startOffset":44365,"endOffset":44596,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLikeSystem","ranges":[{"startOffset":44599,"endOffset":44747,"count":1}],"isBlockCoverage":true},{"functionName":"src/compiler/core.ts","ranges":[{"startOffset":44953,"endOffset":47097,"count":1},{"startOffset":45578,"endOffset":45791,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45163,"endOffset":45457,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45517,"endOffset":45577,"count":0}],"isBlockCoverage":false},{"functionName":"elementAt","ranges":[{"startOffset":45580,"endOffset":45791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45963,"endOffset":46313,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46386,"endOffset":47087,"count":1}],"isBlockCoverage":true},{"functionName":"compareWithCallback","ranges":[{"startOffset":46451,"endOffset":46840,"count":0}],"isBlockCoverage":false},{"functionName":"createIntlCollatorStringComparer","ranges":[{"startOffset":46849,"endOffset":47079,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/debug.ts","ranges":[{"startOffset":47186,"endOffset":91641,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47304,"endOffset":47621,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47647,"endOffset":91610,"count":1},{"startOffset":48701,"endOffset":48721,"count":0}],"isBlockCoverage":true},{"functionName":"shouldLog","ranges":[{"startOffset":47805,"endOffset":47892,"count":0}],"isBlockCoverage":false},{"functionName":"logMessage","ranges":[{"startOffset":47939,"endOffset":48094,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":48103,"endOffset":48169,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48205,"endOffset":48682,"count":1}],"isBlockCoverage":true},{"functionName":"error2","ranges":[{"startOffset":48227,"endOffset":48301,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":48343,"endOffset":48417,"count":0}],"isBlockCoverage":false},{"functionName":"log2","ranges":[{"startOffset":48456,"endOffset":48527,"count":0}],"isBlockCoverage":false},{"functionName":"trace2","ranges":[{"startOffset":48565,"endOffset":48641,"count":0}],"isBlockCoverage":false},{"functionName":"getAssertionLevel","ranges":[{"startOffset":48767,"endOffset":48847,"count":0}],"isBlockCoverage":false},{"functionName":"setAssertionLevel","ranges":[{"startOffset":48910,"endOffset":49456,"count":1},{"startOffset":49089,"endOffset":49446,"count":0}],"isBlockCoverage":true},{"functionName":"shouldAssert","ranges":[{"startOffset":49519,"endOffset":49608,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAssertFunction","ranges":[{"startOffset":49661,"endOffset":49918,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":49927,"endOffset":50222,"count":0}],"isBlockCoverage":false},{"functionName":"failBadSyntaxKind","ranges":[{"startOffset":50259,"endOffset":50514,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":50577,"endOffset":51030,"count":318},{"startOffset":50677,"endOffset":51020,"count":0}],"isBlockCoverage":true},{"functionName":"assertEqual","ranges":[{"startOffset":51071,"endOffset":51330,"count":0}],"isBlockCoverage":false},{"functionName":"assertLessThan","ranges":[{"startOffset":51381,"endOffset":51569,"count":0}],"isBlockCoverage":false},{"functionName":"assertLessThanOrEqual","ranges":[{"startOffset":51626,"endOffset":51809,"count":0}],"isBlockCoverage":false},{"functionName":"assertGreaterThanOrEqual","ranges":[{"startOffset":51880,"endOffset":52069,"count":0}],"isBlockCoverage":false},{"functionName":"assertIsDefined","ranges":[{"startOffset":52146,"endOffset":52340,"count":29},{"startOffset":52255,"endOffset":52330,"count":0}],"isBlockCoverage":true},{"functionName":"checkDefined","ranges":[{"startOffset":52399,"endOffset":52563,"count":29}],"isBlockCoverage":true},{"functionName":"assertEachIsDefined","ranges":[{"startOffset":52616,"endOffset":52815,"count":0}],"isBlockCoverage":false},{"functionName":"checkEachDefined","ranges":[{"startOffset":52882,"endOffset":53058,"count":0}],"isBlockCoverage":false},{"functionName":"assertNever","ranges":[{"startOffset":53119,"endOffset":53469,"count":0}],"isBlockCoverage":false},{"functionName":"assertEachNode","ranges":[{"startOffset":53520,"endOffset":53937,"count":0}],"isBlockCoverage":false},{"functionName":"assertNode","ranges":[{"startOffset":53994,"endOffset":54460,"count":0}],"isBlockCoverage":false},{"functionName":"assertNotNode","ranges":[{"startOffset":54509,"endOffset":54969,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalNode","ranges":[{"startOffset":55024,"endOffset":55512,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalToken","ranges":[{"startOffset":55577,"endOffset":56075,"count":0}],"isBlockCoverage":false},{"functionName":"assertMissingNode","ranges":[{"startOffset":56142,"endOffset":56535,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":56598,"endOffset":56631,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionName","ranges":[{"startOffset":56668,"endOffset":57061,"count":0}],"isBlockCoverage":false},{"functionName":"formatSymbol","ranges":[{"startOffset":57120,"endOffset":57366,"count":0}],"isBlockCoverage":false},{"functionName":"formatEnum","ranges":[{"startOffset":57419,"endOffset":58389,"count":0}],"isBlockCoverage":false},{"functionName":"getEnumMembers","ranges":[{"startOffset":58497,"endOffset":59058,"count":0}],"isBlockCoverage":false},{"functionName":"formatSyntaxKind","ranges":[{"startOffset":59067,"endOffset":59236,"count":0}],"isBlockCoverage":false},{"functionName":"formatSnippetKind","ranges":[{"startOffset":59297,"endOffset":59468,"count":0}],"isBlockCoverage":false},{"functionName":"formatScriptKind","ranges":[{"startOffset":59531,"endOffset":59700,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeFlags","ranges":[{"startOffset":59761,"endOffset":59929,"count":0}],"isBlockCoverage":false},{"functionName":"formatModifierFlags","ranges":[{"startOffset":59988,"endOffset":60164,"count":0}],"isBlockCoverage":false},{"functionName":"formatTransformFlags","ranges":[{"startOffset":60231,"endOffset":60409,"count":0}],"isBlockCoverage":false},{"functionName":"formatEmitFlags","ranges":[{"startOffset":60478,"endOffset":60646,"count":0}],"isBlockCoverage":false},{"functionName":"formatSymbolFlags","ranges":[{"startOffset":60705,"endOffset":60877,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypeFlags","ranges":[{"startOffset":60940,"endOffset":61108,"count":0}],"isBlockCoverage":false},{"functionName":"formatSignatureFlags","ranges":[{"startOffset":61167,"endOffset":61345,"count":0}],"isBlockCoverage":false},{"functionName":"formatObjectFlags","ranges":[{"startOffset":61414,"endOffset":61586,"count":0}],"isBlockCoverage":false},{"functionName":"formatFlowFlags","ranges":[{"startOffset":61649,"endOffset":61817,"count":0}],"isBlockCoverage":false},{"functionName":"formatRelationComparisonResult","ranges":[{"startOffset":61876,"endOffset":62076,"count":0}],"isBlockCoverage":false},{"functionName":"formatCheckMode","ranges":[{"startOffset":62165,"endOffset":62331,"count":0}],"isBlockCoverage":false},{"functionName":"formatSignatureCheckMode","ranges":[{"startOffset":62390,"endOffset":62574,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypeFacts","ranges":[{"startOffset":62651,"endOffset":62819,"count":0}],"isBlockCoverage":false},{"functionName":"attachFlowNodeDebugInfoWorker","ranges":[{"startOffset":62945,"endOffset":64586,"count":0}],"isBlockCoverage":false},{"functionName":"attachFlowNodeDebugInfo","ranges":[{"startOffset":64595,"endOffset":65091,"count":0}],"isBlockCoverage":false},{"functionName":"attachNodeArrayDebugInfoWorker","ranges":[{"startOffset":65194,"endOffset":65636,"count":0}],"isBlockCoverage":false},{"functionName":"attachNodeArrayDebugInfo","ranges":[{"startOffset":65645,"endOffset":66138,"count":16},{"startOffset":65722,"endOffset":66128,"count":0}],"isBlockCoverage":true},{"functionName":"enableDebugInfo","ranges":[{"startOffset":66215,"endOffset":74819,"count":0}],"isBlockCoverage":false},{"functionName":"formatVariance","ranges":[{"startOffset":74878,"endOffset":75482,"count":0}],"isBlockCoverage":false},{"functionName":"__debugToString","ranges":[{"startOffset":75573,"endOffset":76829,"count":0}],"isBlockCoverage":false},{"functionName":"attachDebugPrototypeIfDebug","ranges":[{"startOffset":76898,"endOffset":77104,"count":0}],"isBlockCoverage":false},{"functionName":"printControlFlowGraph","ranges":[{"startOffset":77187,"endOffset":77303,"count":0}],"isBlockCoverage":false},{"functionName":"formatControlFlowGraph","ranges":[{"startOffset":77374,"endOffset":91538,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseComponents","ranges":[{"startOffset":91679,"endOffset":92189,"count":7},{"startOffset":91781,"endOffset":91795,"count":0},{"startOffset":91900,"endOffset":91937,"count":0},{"startOffset":91945,"endOffset":91959,"count":0},{"startOffset":91975,"endOffset":92003,"count":0},{"startOffset":92011,"endOffset":92025,"count":0}],"isBlockCoverage":true},{"functionName":"comparePrereleaseIdentifiers","ranges":[{"startOffset":92192,"endOffset":93346,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":93349,"endOffset":94039,"count":0}],"isBlockCoverage":false},{"functionName":"parsePartial","ranges":[{"startOffset":94042,"endOffset":94574,"count":0}],"isBlockCoverage":false},{"functionName":"parseHyphen","ranges":[{"startOffset":94577,"endOffset":95257,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":95260,"endOffset":97398,"count":0}],"isBlockCoverage":false},{"functionName":"isWildcard","ranges":[{"startOffset":97401,"endOffset":97489,"count":0}],"isBlockCoverage":false},{"functionName":"createComparator","ranges":[{"startOffset":97492,"endOffset":97576,"count":0}],"isBlockCoverage":false},{"functionName":"testDisjunction","ranges":[{"startOffset":97579,"endOffset":97828,"count":0}],"isBlockCoverage":false},{"functionName":"testAlternative","ranges":[{"startOffset":97831,"endOffset":98051,"count":0}],"isBlockCoverage":false},{"functionName":"testComparator","ranges":[{"startOffset":98054,"endOffset":98452,"count":0}],"isBlockCoverage":false},{"functionName":"formatDisjunction","ranges":[{"startOffset":98455,"endOffset":98570,"count":0}],"isBlockCoverage":false},{"functionName":"formatAlternative","ranges":[{"startOffset":98573,"endOffset":98675,"count":0}],"isBlockCoverage":false},{"functionName":"formatComparator","ranges":[{"startOffset":98678,"endOffset":98779,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/semver.ts","ranges":[{"startOffset":99038,"endOffset":103740,"count":1}],"isBlockCoverage":true},{"functionName":"_Version","ranges":[{"startOffset":99578,"endOffset":100676,"count":8},{"startOffset":99692,"endOffset":99873,"count":7},{"startOffset":100108,"endOffset":100166,"count":1},{"startOffset":100143,"endOffset":100166,"count":0},{"startOffset":100167,"endOffset":100179,"count":7},{"startOffset":100217,"endOffset":100263,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100324,"endOffset":100359,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100436,"endOffset":100466,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":100692,"endOffset":100968,"count":0}],"isBlockCoverage":false},{"functionName":"compareTo","ranges":[{"startOffset":100977,"endOffset":101351,"count":4},{"startOffset":101038,"endOffset":101061,"count":0},{"startOffset":101106,"endOffset":101133,"count":0},{"startOffset":101232,"endOffset":101273,"count":0},{"startOffset":101274,"endOffset":101340,"count":0}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":101360,"endOffset":101771,"count":0}],"isBlockCoverage":false},{"functionName":"with","ranges":[{"startOffset":101780,"endOffset":102093,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":102102,"endOffset":102391,"count":2},{"startOffset":102232,"endOffset":102274,"count":0},{"startOffset":102319,"endOffset":102356,"count":0}],"isBlockCoverage":true},{"functionName":"_VersionRange","ranges":[{"startOffset":102530,"endOffset":102671,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":102687,"endOffset":102928,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":103124,"endOffset":103304,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":103313,"endOffset":103391,"count":0}],"isBlockCoverage":false},{"functionName":"hasRequiredAPI","ranges":[{"startOffset":103787,"endOffset":104222,"count":1}],"isBlockCoverage":true},{"functionName":"tryGetWebPerformanceHooks","ranges":[{"startOffset":104225,"endOffset":104768,"count":1}],"isBlockCoverage":true},{"functionName":"tryGetNodePerformanceHooks","ranges":[{"startOffset":104771,"endOffset":105351,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNativePerformanceHooks","ranges":[{"startOffset":105354,"endOffset":105434,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/performanceCore.ts","ranges":[{"startOffset":105536,"endOffset":105940,"count":1},{"startOffset":105671,"endOffset":105702,"count":0},{"startOffset":105761,"endOffset":105769,"count":0},{"startOffset":105876,"endOffset":105933,"count":0}],"isBlockCoverage":true},{"functionName":"timestamp","ranges":[{"startOffset":105846,"endOffset":105875,"count":1}],"isBlockCoverage":true},{"functionName":"timestamp","ranges":[{"startOffset":105900,"endOffset":105933,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/perfLogger.ts","ranges":[{"startOffset":106045,"endOffset":106414,"count":1},{"startOffset":106365,"endOffset":106385,"count":0},{"startOffset":106387,"endOffset":106398,"count":0}],"isBlockCoverage":true},{"functionName":"createTimerIf","ranges":[{"startOffset":106457,"endOffset":106626,"count":0}],"isBlockCoverage":false},{"functionName":"createTimer","ranges":[{"startOffset":106629,"endOffset":107106,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":107109,"endOffset":107456,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":107459,"endOffset":107977,"count":0}],"isBlockCoverage":false},{"functionName":"getCount","ranges":[{"startOffset":107980,"endOffset":108051,"count":0}],"isBlockCoverage":false},{"functionName":"getDuration","ranges":[{"startOffset":108054,"endOffset":108137,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMeasure","ranges":[{"startOffset":108140,"endOffset":108250,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMark","ranges":[{"startOffset":108253,"endOffset":108337,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":108340,"endOffset":108539,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":108542,"endOffset":108788,"count":0}],"isBlockCoverage":false},{"functionName":"isEnabled","ranges":[{"startOffset":108791,"endOffset":108837,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":108840,"endOffset":109361,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":109364,"endOffset":109536,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/performance.ts","ranges":[{"startOffset":109666,"endOffset":109973,"count":1}],"isBlockCoverage":true},{"functionName":"clearMarks","ranges":[{"startOffset":110117,"endOffset":110133,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":110154,"endOffset":110173,"count":0}],"isBlockCoverage":false},{"functionName":"createTimer","ranges":[{"startOffset":110192,"endOffset":110209,"count":0}],"isBlockCoverage":false},{"functionName":"createTimerIf","ranges":[{"startOffset":110230,"endOffset":110249,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":110264,"endOffset":110277,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":110291,"endOffset":110303,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMark","ranges":[{"startOffset":110322,"endOffset":110339,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMeasure","ranges":[{"startOffset":110361,"endOffset":110381,"count":0}],"isBlockCoverage":false},{"functionName":"getCount","ranges":[{"startOffset":110397,"endOffset":110411,"count":0}],"isBlockCoverage":false},{"functionName":"getDuration","ranges":[{"startOffset":110430,"endOffset":110447,"count":0}],"isBlockCoverage":false},{"functionName":"isEnabled","ranges":[{"startOffset":110464,"endOffset":110479,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":110491,"endOffset":110501,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":110516,"endOffset":110529,"count":0}],"isBlockCoverage":false},{"functionName":"nullTimer","ranges":[{"startOffset":110546,"endOffset":110561,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/_namespaces/ts.performance.ts","ranges":[{"startOffset":110608,"endOffset":110708,"count":1}],"isBlockCoverage":true},{"functionName":"src/compiler/tracing.ts","ranges":[{"startOffset":110842,"endOffset":122979,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110946,"endOffset":122827,"count":1}],"isBlockCoverage":true},{"functionName":"startTracing2","ranges":[{"startOffset":111147,"endOffset":112706,"count":0}],"isBlockCoverage":false},{"functionName":"stopTracing","ranges":[{"startOffset":112769,"endOffset":113198,"count":0}],"isBlockCoverage":false},{"functionName":"recordType","ranges":[{"startOffset":113258,"endOffset":113378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113456,"endOffset":113752,"count":1}],"isBlockCoverage":true},{"functionName":"instant","ranges":[{"startOffset":113826,"endOffset":113930,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":114013,"endOffset":114279,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":114325,"endOffset":114514,"count":0}],"isBlockCoverage":false},{"functionName":"popAll","ranges":[{"startOffset":114558,"endOffset":114779,"count":0}],"isBlockCoverage":false},{"functionName":"writeStackEvent","ranges":[{"startOffset":114870,"endOffset":115537,"count":0}],"isBlockCoverage":false},{"functionName":"writeEvent","ranges":[{"startOffset":115546,"endOffset":116180,"count":0}],"isBlockCoverage":false},{"functionName":"getLocation","ranges":[{"startOffset":116189,"endOffset":116673,"count":0}],"isBlockCoverage":false},{"functionName":"dumpTypes","ranges":[{"startOffset":116682,"endOffset":122603,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLegend","ranges":[{"startOffset":122612,"endOffset":122770,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticCategoryName","ranges":[{"startOffset":123016,"endOffset":123173,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/types.ts","ranges":[{"startOffset":124456,"endOffset":253834,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":124540,"endOffset":156999,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":157055,"endOffset":160410,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160469,"endOffset":163621,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":163679,"endOffset":164029,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164098,"endOffset":164855,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164940,"endOffset":165959,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":166030,"endOffset":167841,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":167897,"endOffset":168930,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168996,"endOffset":169238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":169362,"endOffset":170249,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":170333,"endOffset":170902,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":170979,"endOffset":171125,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":171187,"endOffset":171486,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":171550,"endOffset":172119,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172186,"endOffset":172527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172598,"endOffset":172861,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172924,"endOffset":173349,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":173414,"endOffset":177078,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177146,"endOffset":179656,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":179725,"endOffset":180518,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180591,"endOffset":180930,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181005,"endOffset":181257,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181330,"endOffset":181726,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181810,"endOffset":183310,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":183388,"endOffset":188647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188703,"endOffset":188867,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188922,"endOffset":190804,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":190869,"endOffset":192008,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":192077,"endOffset":194576,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":194636,"endOffset":199919,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":199976,"endOffset":203791,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":203852,"endOffset":204609,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":204671,"endOffset":205258,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":205318,"endOffset":206249,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":206307,"endOffset":206645,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":206708,"endOffset":206995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":207061,"endOffset":207253,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":207317,"endOffset":208360,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208420,"endOffset":208586,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208643,"endOffset":209077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":209142,"endOffset":210619,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":210687,"endOffset":211059,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":211117,"endOffset":211372,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":211441,"endOffset":212613,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":212693,"endOffset":213073,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":213148,"endOffset":213707,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":213783,"endOffset":214080,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":214149,"endOffset":214777,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":214845,"endOffset":215315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":215386,"endOffset":215804,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":215867,"endOffset":216632,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":216686,"endOffset":217074,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":217140,"endOffset":217469,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":217539,"endOffset":217753,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":217811,"endOffset":218315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":218374,"endOffset":219280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219344,"endOffset":219544,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219615,"endOffset":219843,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219913,"endOffset":228258,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228318,"endOffset":228859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":228919,"endOffset":235622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":235684,"endOffset":236000,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":236057,"endOffset":238311,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":238374,"endOffset":239109,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239182,"endOffset":242580,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242644,"endOffset":243282,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243347,"endOffset":244106,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":244186,"endOffset":244573,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":244654,"endOffset":245387,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245455,"endOffset":251491,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":251553,"endOffset":252063,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":253398,"endOffset":253802,"count":1}],"isBlockCoverage":true},{"functionName":"generateDjb2Hash","ranges":[{"startOffset":253869,"endOffset":254054,"count":0}],"isBlockCoverage":false},{"functionName":"setStackTraceLimit","ranges":[{"startOffset":254057,"endOffset":254172,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":254175,"endOffset":254291,"count":0}],"isBlockCoverage":false},{"functionName":"createPollingIntervalBasedLevels","ranges":[{"startOffset":254294,"endOffset":254481,"count":2}],"isBlockCoverage":true},{"functionName":"setCustomPollingValues","ranges":[{"startOffset":254484,"endOffset":256164,"count":1},{"startOffset":254566,"endOffset":254587,"count":0}],"isBlockCoverage":true},{"functionName":"getLevel","ranges":[{"startOffset":254955,"endOffset":255075,"count":9}],"isBlockCoverage":true},{"functionName":"getCustomLevels","ranges":[{"startOffset":255080,"endOffset":255489,"count":3}],"isBlockCoverage":true},{"functionName":"setCustomLevel","ranges":[{"startOffset":255269,"endOffset":255483,"count":9},{"startOffset":255386,"endOffset":255475,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomLevels","ranges":[{"startOffset":255494,"endOffset":255863,"count":1},{"startOffset":255625,"endOffset":255734,"count":0}],"isBlockCoverage":true},{"functionName":"setLevel","ranges":[{"startOffset":255761,"endOffset":255857,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomPollingBasedLevels","ranges":[{"startOffset":255868,"endOffset":256160,"count":2},{"startOffset":256048,"endOffset":256153,"count":0}],"isBlockCoverage":true},{"functionName":"pollWatchedFileQueue","ranges":[{"startOffset":256167,"endOffset":257447,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicPriorityPollingWatchFile","ranges":[{"startOffset":257450,"endOffset":261644,"count":0}],"isBlockCoverage":false},{"functionName":"createUseFsEventsOnParentDirectoryWatchFile","ranges":[{"startOffset":261647,"endOffset":264652,"count":0}],"isBlockCoverage":false},{"functionName":"createFixedChunkSizePollingWatchFile","ranges":[{"startOffset":264655,"endOffset":265549,"count":0}],"isBlockCoverage":false},{"functionName":"createSingleWatcherPerName","ranges":[{"startOffset":265552,"endOffset":266581,"count":0}],"isBlockCoverage":false},{"functionName":"onWatchedFileStat","ranges":[{"startOffset":266584,"endOffset":266957,"count":0}],"isBlockCoverage":false},{"functionName":"getFileWatcherEventKind","ranges":[{"startOffset":266960,"endOffset":267112,"count":0}],"isBlockCoverage":false},{"functionName":"sysLog","ranges":[{"startOffset":267115,"endOffset":267164,"count":0}],"isBlockCoverage":false},{"functionName":"setSysLog","ranges":[{"startOffset":267167,"endOffset":267223,"count":0}],"isBlockCoverage":false},{"functionName":"createDirectoryWatcherSupportingRecursive","ranges":[{"startOffset":267226,"endOffset":275277,"count":0}],"isBlockCoverage":false},{"functionName":"createFileWatcherCallback","ranges":[{"startOffset":275280,"endOffset":275462,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchCallbackForFileWatcherCallback","ranges":[{"startOffset":275465,"endOffset":275963,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredByWatchOptions","ranges":[{"startOffset":275966,"endOffset":276468,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchCallbackForDirectoryWatcherCallback","ranges":[{"startOffset":276471,"endOffset":277006,"count":0}],"isBlockCoverage":false},{"functionName":"createSystemWatchFunctions","ranges":[{"startOffset":277009,"endOffset":290626,"count":1}],"isBlockCoverage":true},{"functionName":"watchFile2","ranges":[{"startOffset":277948,"endOffset":279848,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDynamicPollingWatchFile","ranges":[{"startOffset":279853,"endOffset":280072,"count":0}],"isBlockCoverage":false},{"functionName":"ensureFixedChunkSizePollingWatchFile","ranges":[{"startOffset":280077,"endOffset":280316,"count":0}],"isBlockCoverage":false},{"functionName":"updateOptionsForWatchFile","ranges":[{"startOffset":280321,"endOffset":281455,"count":0}],"isBlockCoverage":false},{"functionName":"generateWatchFileOptions","ranges":[{"startOffset":281460,"endOffset":281785,"count":0}],"isBlockCoverage":false},{"functionName":"watchDirectory","ranges":[{"startOffset":281790,"endOffset":282793,"count":0}],"isBlockCoverage":false},{"functionName":"nonRecursiveWatchDirectory","ranges":[{"startOffset":282798,"endOffset":284345,"count":0}],"isBlockCoverage":false},{"functionName":"updateOptionsForWatchDirectory","ranges":[{"startOffset":284350,"endOffset":285066,"count":0}],"isBlockCoverage":false},{"functionName":"pollingWatchFile","ranges":[{"startOffset":285071,"endOffset":285375,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatch","ranges":[{"startOffset":285380,"endOffset":285808,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchHandlingExistenceOnHost","ranges":[{"startOffset":285813,"endOffset":289896,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchWorkerHandlingTimestamp","ranges":[{"startOffset":289901,"endOffset":290622,"count":0}],"isBlockCoverage":false},{"functionName":"patchWriteFileEnsuringDirectory","ranges":[{"startOffset":290629,"endOffset":291052,"count":1}],"isBlockCoverage":true},{"functionName":"sys2.writeFile","ranges":[{"startOffset":290745,"endOffset":291047,"count":0}],"isBlockCoverage":false},{"functionName":"setSys","ranges":[{"startOffset":291055,"endOffset":291092,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/sys.ts","ranges":[{"startOffset":291306,"endOffset":310554,"count":1},{"startOffset":310422,"endOffset":310425,"count":0},{"startOffset":310505,"endOffset":310548,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":291416,"endOffset":291733,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":291805,"endOffset":292072,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":292514,"endOffset":292742,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":292785,"endOffset":310228,"count":1}],"isBlockCoverage":true},{"functionName":"getNodeSystem","ranges":[{"startOffset":292850,"endOffset":310024,"count":1},{"startOffset":293181,"endOffset":293230,"count":0},{"startOffset":293727,"endOffset":293752,"count":0},{"startOffset":293753,"endOffset":293771,"count":0},{"startOffset":293839,"endOffset":293892,"count":0},{"startOffset":293981,"endOffset":293991,"count":0},{"startOffset":296654,"endOffset":296672,"count":0},{"startOffset":296731,"endOffset":296739,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":294039,"endOffset":294058,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessibleSortedChildDirectories","ranges":[{"startOffset":294772,"endOffset":294830,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":295343,"endOffset":295406,"count":0}],"isBlockCoverage":false},{"functionName":"getWidthOfTerminal","ranges":[{"startOffset":295420,"endOffset":295501,"count":0}],"isBlockCoverage":false},{"functionName":"writeOutputIsTTY","ranges":[{"startOffset":295515,"endOffset":295592,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":295739,"endOffset":295768,"count":0}],"isBlockCoverage":false},{"functionName":"createDirectory","ranges":[{"startOffset":295879,"endOffset":296217,"count":0}],"isBlockCoverage":false},{"functionName":"getExecutingFilePath","ranges":[{"startOffset":296231,"endOffset":296309,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentVariable","ranges":[{"startOffset":296384,"endOffset":296474,"count":10}],"isBlockCoverage":true},{"functionName":"getMemoryUsage","ranges":[{"startOffset":296753,"endOffset":296914,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSize","ranges":[{"startOffset":296928,"endOffset":297205,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":297219,"endOffset":297313,"count":0}],"isBlockCoverage":false},{"functionName":"cpuProfilingEnabled","ranges":[{"startOffset":297411,"endOffset":297516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":297664,"endOffset":297719,"count":7}],"isBlockCoverage":true},{"functionName":"tryEnableSourceMapsForHost","ranges":[{"startOffset":297760,"endOffset":297921,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreen","ranges":[{"startOffset":297998,"endOffset":298064,"count":0}],"isBlockCoverage":false},{"functionName":"setBlocking","ranges":[{"startOffset":298091,"endOffset":298324,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":298376,"endOffset":298431,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":298459,"endOffset":298506,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":298529,"endOffset":298884,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":298937,"endOffset":299040,"count":2}],"isBlockCoverage":true},{"functionName":"enableCPUProfiler","ranges":[{"startOffset":299051,"endOffset":299709,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupPaths","ranges":[{"startOffset":299720,"endOffset":300948,"count":0}],"isBlockCoverage":false},{"functionName":"disableCPUProfiler","ranges":[{"startOffset":300959,"endOffset":302103,"count":0}],"isBlockCoverage":false},{"functionName":"bufferFrom","ranges":[{"startOffset":302114,"endOffset":302295,"count":0}],"isBlockCoverage":false},{"functionName":"isFileSystemCaseSensitive","ranges":[{"startOffset":302306,"endOffset":302516,"count":1},{"startOffset":302382,"endOffset":302405,"count":0},{"startOffset":302450,"endOffset":302515,"count":0}],"isBlockCoverage":true},{"functionName":"swapCase","ranges":[{"startOffset":302527,"endOffset":302722,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchFileWorker","ranges":[{"startOffset":302733,"endOffset":303678,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchWorker","ranges":[{"startOffset":303689,"endOffset":303974,"count":0}],"isBlockCoverage":false},{"functionName":"readFileWorker","ranges":[{"startOffset":303985,"endOffset":304923,"count":2},{"startOffset":304139,"endOffset":304193,"count":0},{"startOffset":304277,"endOffset":304297,"count":0},{"startOffset":304299,"endOffset":304577,"count":0},{"startOffset":304624,"endOffset":304644,"count":0},{"startOffset":304646,"endOffset":304713,"count":0},{"startOffset":304760,"endOffset":304780,"count":0},{"startOffset":304781,"endOffset":304801,"count":0},{"startOffset":304803,"endOffset":304867,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":304934,"endOffset":305248,"count":2},{"startOffset":305046,"endOffset":305077,"count":0},{"startOffset":305188,"endOffset":305210,"count":0}],"isBlockCoverage":true},{"functionName":"writeFile2","ranges":[{"startOffset":305259,"endOffset":305914,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessibleFileSystemEntries","ranges":[{"startOffset":305925,"endOffset":307361,"count":36},{"startOffset":306040,"endOffset":306082,"count":0},{"startOffset":306153,"endOffset":306159,"count":0},{"startOffset":306301,"endOffset":307157,"count":108},{"startOffset":306360,"endOffset":306368,"count":0},{"startOffset":306437,"endOffset":306484,"count":0},{"startOffset":306586,"endOffset":306899,"count":0},{"startOffset":306993,"endOffset":307049,"count":68},{"startOffset":307049,"endOffset":307141,"count":40},{"startOffset":307279,"endOffset":307349,"count":0}],"isBlockCoverage":true},{"functionName":"readDirectory","ranges":[{"startOffset":307372,"endOffset":307614,"count":2}],"isBlockCoverage":true},{"functionName":"fileSystemEntryExists","ranges":[{"startOffset":307625,"endOffset":308349,"count":2},{"startOffset":307914,"endOffset":308024,"count":0},{"startOffset":308041,"endOffset":308109,"count":0},{"startOffset":308126,"endOffset":308166,"count":0},{"startOffset":308197,"endOffset":308251,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":308360,"endOffset":308461,"count":2}],"isBlockCoverage":true},{"functionName":"directoryExists","ranges":[{"startOffset":308472,"endOffset":308583,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":308594,"endOffset":308714,"count":0}],"isBlockCoverage":false},{"functionName":"fsRealPathHandlingLongPath","ranges":[{"startOffset":308725,"endOffset":308875,"count":36},{"startOffset":308838,"endOffset":308862,"count":0}],"isBlockCoverage":true},{"functionName":"realpath","ranges":[{"startOffset":308886,"endOffset":309043,"count":36},{"startOffset":308983,"endOffset":309031,"count":0}],"isBlockCoverage":true},{"functionName":"getModifiedTime3","ranges":[{"startOffset":309054,"endOffset":309471,"count":0}],"isBlockCoverage":false},{"functionName":"setModifiedTime","ranges":[{"startOffset":309482,"endOffset":309660,"count":0}],"isBlockCoverage":false},{"functionName":"deleteFile","ranges":[{"startOffset":309671,"endOffset":309833,"count":0}],"isBlockCoverage":false},{"functionName":"createSHA256Hash","ranges":[{"startOffset":309844,"endOffset":310014,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":310590,"endOffset":310713,"count":335},{"startOffset":310674,"endOffset":310692,"count":319}],"isBlockCoverage":true},{"functionName":"isUrl","ranges":[{"startOffset":310716,"endOffset":310785,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":310788,"endOffset":310868,"count":2}],"isBlockCoverage":true},{"functionName":"isDiskPathRoot","ranges":[{"startOffset":310871,"endOffset":311014,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsAbsolute","ranges":[{"startOffset":311017,"endOffset":311097,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsRelative","ranges":[{"startOffset":311100,"endOffset":311176,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsBareSpecifier","ranges":[{"startOffset":311179,"endOffset":311278,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":311281,"endOffset":311370,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIs","ranges":[{"startOffset":311373,"endOffset":311492,"count":556}],"isBlockCoverage":true},{"functionName":"fileExtensionIsOneOf","ranges":[{"startOffset":311495,"endOffset":311689,"count":148},{"startOffset":311585,"endOffset":311667,"count":316},{"startOffset":311631,"endOffset":311661,"count":120},{"startOffset":311667,"endOffset":311688,"count":28}],"isBlockCoverage":true},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":311692,"endOffset":311831,"count":335}],"isBlockCoverage":true},{"functionName":"isVolumeCharacter","ranges":[{"startOffset":311834,"endOffset":311990,"count":273},{"startOffset":311907,"endOffset":311925,"count":184},{"startOffset":311934,"endOffset":311977,"count":89},{"startOffset":311960,"endOffset":311977,"count":42}],"isBlockCoverage":true},{"functionName":"getFileUrlVolumeSeparatorEnd","ranges":[{"startOffset":311993,"endOffset":312368,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedRootLength","ranges":[{"startOffset":312371,"endOffset":314035,"count":273},{"startOffset":312430,"endOffset":312439,"count":0},{"startOffset":312538,"endOffset":312771,"count":0},{"startOffset":312803,"endOffset":312831,"count":222},{"startOffset":312845,"endOffset":313019,"count":38},{"startOffset":312918,"endOffset":312931,"count":0},{"startOffset":312966,"endOffset":313013,"count":0},{"startOffset":313019,"endOffset":313102,"count":235},{"startOffset":313102,"endOffset":314017,"count":0},{"startOffset":314017,"endOffset":314034,"count":235}],"isBlockCoverage":true},{"functionName":"getRootLength","ranges":[{"startOffset":314038,"endOffset":314177,"count":271},{"startOffset":314146,"endOffset":314159,"count":0}],"isBlockCoverage":true},{"functionName":"getDirectoryPath","ranges":[{"startOffset":314180,"endOffset":314488,"count":2},{"startOffset":314335,"endOffset":314347,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseFileName","ranges":[{"startOffset":314491,"endOffset":315048,"count":4},{"startOffset":314669,"endOffset":314679,"count":0},{"startOffset":314877,"endOffset":314901,"count":0},{"startOffset":314902,"endOffset":314957,"count":0},{"startOffset":314989,"endOffset":315036,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetExtensionFromPath","ranges":[{"startOffset":315051,"endOffset":315491,"count":640},{"startOffset":315170,"endOffset":315198,"count":0},{"startOffset":315308,"endOffset":315487,"count":80}],"isBlockCoverage":true},{"functionName":"getAnyExtensionFromPathWorker","ranges":[{"startOffset":315494,"endOffset":315905,"count":80},{"startOffset":315617,"endOffset":315710,"count":0},{"startOffset":315751,"endOffset":315886,"count":640},{"startOffset":315866,"endOffset":315880,"count":80},{"startOffset":315886,"endOffset":315904,"count":0}],"isBlockCoverage":true},{"functionName":"getAnyExtensionFromPath","ranges":[{"startOffset":315908,"endOffset":316383,"count":80},{"startOffset":316101,"endOffset":316131,"count":0},{"startOffset":316168,"endOffset":316382,"count":0}],"isBlockCoverage":true},{"functionName":"pathComponents","ranges":[{"startOffset":316386,"endOffset":316645,"count":16},{"startOffset":316602,"endOffset":316613,"count":0}],"isBlockCoverage":true},{"functionName":"getPathComponents","ranges":[{"startOffset":316648,"endOffset":316812,"count":16}],"isBlockCoverage":true},{"functionName":"getPathFromPathComponents","ranges":[{"startOffset":316815,"endOffset":317107,"count":6},{"startOffset":316922,"endOffset":316932,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSlashes","ranges":[{"startOffset":317110,"endOffset":317238,"count":520},{"startOffset":317175,"endOffset":317226,"count":20},{"startOffset":317227,"endOffset":317233,"count":500}],"isBlockCoverage":true},{"functionName":"reducePathComponents","ranges":[{"startOffset":317241,"endOffset":317842,"count":16},{"startOffset":317318,"endOffset":317328,"count":0},{"startOffset":317414,"endOffset":317818,"count":86},{"startOffset":317485,"endOffset":317494,"count":0},{"startOffset":317532,"endOffset":317541,"count":0},{"startOffset":317572,"endOffset":317781,"count":0}],"isBlockCoverage":true},{"functionName":"combinePaths","ranges":[{"startOffset":317845,"endOffset":318274,"count":245},{"startOffset":318007,"endOffset":318016,"count":0},{"startOffset":318124,"endOffset":318162,"count":12},{"startOffset":318162,"endOffset":318247,"count":233}],"isBlockCoverage":true},{"functionName":"resolvePath","ranges":[{"startOffset":318277,"endOffset":318414,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":318417,"endOffset":318559,"count":16}],"isBlockCoverage":true},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":318562,"endOffset":318725,"count":6}],"isBlockCoverage":true},{"functionName":"normalizePath","ranges":[{"startOffset":318728,"endOffset":319306,"count":18},{"startOffset":318867,"endOffset":319241,"count":0},{"startOffset":319242,"endOffset":319288,"count":0},{"startOffset":319289,"endOffset":319301,"count":0}],"isBlockCoverage":true},{"functionName":"getPathWithoutRoot","ranges":[{"startOffset":319309,"endOffset":319476,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePathWithoutRoot","ranges":[{"startOffset":319479,"endOffset":319646,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":319649,"endOffset":319902,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":319905,"endOffset":320074,"count":96},{"startOffset":320000,"endOffset":320053,"count":10},{"startOffset":320053,"endOffset":320073,"count":86}],"isBlockCoverage":true},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":320077,"endOffset":320241,"count":239},{"startOffset":320173,"endOffset":320220,"count":233},{"startOffset":320220,"endOffset":320240,"count":6}],"isBlockCoverage":true},{"functionName":"ensurePathIsNonModuleName","ranges":[{"startOffset":320244,"endOffset":320370,"count":0}],"isBlockCoverage":false},{"functionName":"changeAnyExtension","ranges":[{"startOffset":320373,"endOffset":320713,"count":80},{"startOffset":320561,"endOffset":320592,"count":0},{"startOffset":320689,"endOffset":320700,"count":0},{"startOffset":320702,"endOffset":320708,"count":0}],"isBlockCoverage":true},{"functionName":"changeFullExtension","ranges":[{"startOffset":320716,"endOffset":321068,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsWorker","ranges":[{"startOffset":321071,"endOffset":322227,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseSensitive","ranges":[{"startOffset":322230,"endOffset":322342,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseInsensitive","ranges":[{"startOffset":322345,"endOffset":322461,"count":0}],"isBlockCoverage":false},{"functionName":"comparePaths","ranges":[{"startOffset":322464,"endOffset":322832,"count":0}],"isBlockCoverage":false},{"functionName":"containsPath","ranges":[{"startOffset":322835,"endOffset":323910,"count":2},{"startOffset":323068,"endOffset":323161,"count":0},{"startOffset":323216,"endOffset":323229,"count":0},{"startOffset":323275,"endOffset":323596,"count":0},{"startOffset":323597,"endOffset":323625,"count":0},{"startOffset":323681,"endOffset":323909,"count":0}],"isBlockCoverage":true},{"functionName":"startsWithDirectory","ranges":[{"startOffset":323913,"endOffset":324264,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponentsRelativeTo","ranges":[{"startOffset":324267,"endOffset":325183,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromDirectory","ranges":[{"startOffset":325186,"endOffset":325899,"count":0}],"isBlockCoverage":false},{"functionName":"convertToRelativePath","ranges":[{"startOffset":325902,"endOffset":326246,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromFile","ranges":[{"startOffset":326249,"endOffset":326437,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathToDirectoryOrUrl","ranges":[{"startOffset":326440,"endOffset":327156,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectory","ranges":[{"startOffset":327159,"endOffset":327501,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesDirectory","ranges":[{"startOffset":327504,"endOffset":327597,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/path.ts","ranges":[{"startOffset":327741,"endOffset":328012,"count":1}],"isBlockCoverage":true},{"functionName":"diag","ranges":[{"startOffset":328078,"endOffset":328310,"count":1987}],"isBlockCoverage":true},{"functionName":"src/compiler/diagnosticInformationMap.generated.ts","ranges":[{"startOffset":328390,"endOffset":809949,"count":1}],"isBlockCoverage":true},{"functionName":"tokenIsIdentifierOrKeyword","ranges":[{"startOffset":809988,"endOffset":810077,"count":20}],"isBlockCoverage":true},{"functionName":"tokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":810080,"endOffset":810226,"count":0}],"isBlockCoverage":false},{"functionName":"lookupInUnicodeMap","ranges":[{"startOffset":810229,"endOffset":810663,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierStart","ranges":[{"startOffset":810666,"endOffset":810973,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierPart","ranges":[{"startOffset":810976,"endOffset":811279,"count":0}],"isBlockCoverage":false},{"functionName":"makeReverseMap","ranges":[{"startOffset":811282,"endOffset":811435,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":811358,"endOffset":811410,"count":144}],"isBlockCoverage":true},{"functionName":"tokenToString","ranges":[{"startOffset":811438,"endOffset":811497,"count":1}],"isBlockCoverage":true},{"functionName":"stringToToken","ranges":[{"startOffset":811500,"endOffset":811562,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineStarts","ranges":[{"startOffset":811565,"endOffset":812250,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":812253,"endOffset":812572,"count":0}],"isBlockCoverage":false},{"functionName":"computePositionOfLineAndCharacter","ranges":[{"startOffset":812575,"endOffset":813490,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":813493,"endOffset":813625,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineAndCharacterOfPosition","ranges":[{"startOffset":813628,"endOffset":813861,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineOfPosition","ranges":[{"startOffset":813864,"endOffset":814211,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositions","ranges":[{"startOffset":814214,"endOffset":814699,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":814702,"endOffset":814851,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLike","ranges":[{"startOffset":814854,"endOffset":814947,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceSingleLine","ranges":[{"startOffset":814950,"endOffset":815415,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":815418,"endOffset":815594,"count":43578},{"startOffset":815515,"endOffset":815529,"count":43254},{"startOffset":815550,"endOffset":815564,"count":43254}],"isBlockCoverage":true},{"functionName":"isDigit","ranges":[{"startOffset":815597,"endOffset":815674,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":815677,"endOffset":815811,"count":0}],"isBlockCoverage":false},{"functionName":"isCodePoint","ranges":[{"startOffset":815814,"endOffset":815874,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":815877,"endOffset":815959,"count":0}],"isBlockCoverage":false},{"functionName":"couldStartTrivia","ranges":[{"startOffset":815962,"endOffset":816526,"count":0}],"isBlockCoverage":false},{"functionName":"skipTrivia","ranges":[{"startOffset":816529,"endOffset":818992,"count":24},{"startOffset":816643,"endOffset":816668,"count":0},{"startOffset":816718,"endOffset":818988,"count":1588},{"startOffset":816787,"endOffset":816911,"count":216},{"startOffset":816920,"endOffset":817090,"count":216},{"startOffset":816995,"endOffset":817032,"count":0},{"startOffset":817099,"endOffset":817116,"count":0},{"startOffset":817125,"endOffset":817151,"count":0},{"startOffset":817160,"endOffset":817183,"count":0},{"startOffset":817192,"endOffset":817249,"count":1156},{"startOffset":817258,"endOffset":818087,"count":192},{"startOffset":817309,"endOffset":817341,"count":0},{"startOffset":817401,"endOffset":817663,"count":162},{"startOffset":817463,"endOffset":817593,"count":21086},{"startOffset":817518,"endOffset":817558,"count":162},{"startOffset":817558,"endOffset":817593,"count":20924},{"startOffset":817663,"endOffset":818070,"count":30},{"startOffset":817788,"endOffset":818000,"count":1362},{"startOffset":817851,"endOffset":817885,"count":30},{"startOffset":817899,"endOffset":817965,"count":30},{"startOffset":817965,"endOffset":818000,"count":1332},{"startOffset":818070,"endOffset":818087,"count":0},{"startOffset":818096,"endOffset":818119,"count":0},{"startOffset":818128,"endOffset":818147,"count":0},{"startOffset":818156,"endOffset":818177,"count":0},{"startOffset":818186,"endOffset":818405,"count":0},{"startOffset":818414,"endOffset":818625,"count":0},{"startOffset":818634,"endOffset":818795,"count":0},{"startOffset":818804,"endOffset":818956,"count":24},{"startOffset":818860,"endOffset":818883,"count":0},{"startOffset":818885,"endOffset":818939,"count":0},{"startOffset":818964,"endOffset":818988,"count":24}],"isBlockCoverage":true},{"functionName":"isConflictMarkerTrivia","ranges":[{"startOffset":818995,"endOffset":819532,"count":0}],"isBlockCoverage":false},{"functionName":"scanConflictMarkerTrivia","ranges":[{"startOffset":819535,"endOffset":820307,"count":0}],"isBlockCoverage":false},{"functionName":"isShebangTrivia","ranges":[{"startOffset":820310,"endOffset":820422,"count":0}],"isBlockCoverage":false},{"functionName":"scanShebangTrivia","ranges":[{"startOffset":820425,"endOffset":820570,"count":0}],"isBlockCoverage":false},{"functionName":"iterateCommentRanges","ranges":[{"startOffset":820573,"endOffset":823835,"count":0}],"isBlockCoverage":false},{"functionName":"forEachLeadingCommentRange","ranges":[{"startOffset":823838,"endOffset":824048,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTrailingCommentRange","ranges":[{"startOffset":824051,"endOffset":824261,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachLeadingCommentRange","ranges":[{"startOffset":824264,"endOffset":824500,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachTrailingCommentRange","ranges":[{"startOffset":824503,"endOffset":824739,"count":0}],"isBlockCoverage":false},{"functionName":"appendCommentRange","ranges":[{"startOffset":824742,"endOffset":824914,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRanges","ranges":[{"startOffset":824917,"endOffset":825125,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingCommentRanges","ranges":[{"startOffset":825128,"endOffset":825338,"count":0}],"isBlockCoverage":false},{"functionName":"getShebang","ranges":[{"startOffset":825341,"endOffset":825467,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":825470,"endOffset":825740,"count":12},{"startOffset":825609,"endOffset":825621,"count":0},{"startOffset":825630,"endOffset":825642,"count":0},{"startOffset":825651,"endOffset":825735,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierPart","ranges":[{"startOffset":825743,"endOffset":826216,"count":50},{"startOffset":825839,"endOffset":825850,"count":38},{"startOffset":825879,"endOffset":825891,"count":38},{"startOffset":825900,"endOffset":825932,"count":12},{"startOffset":825921,"endOffset":825932,"count":0},{"startOffset":825942,"endOffset":825954,"count":12},{"startOffset":825963,"endOffset":825975,"count":12},{"startOffset":825984,"endOffset":826127,"count":12},{"startOffset":826070,"endOffset":826106,"count":0},{"startOffset":826128,"endOffset":826211,"count":12},{"startOffset":826164,"endOffset":826211,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierText","ranges":[{"startOffset":826219,"endOffset":826620,"count":0}],"isBlockCoverage":false},{"functionName":"createScanner","ranges":[{"startOffset":826623,"endOffset":884077,"count":4},{"startOffset":829024,"endOffset":829310,"count":0}],"isBlockCoverage":true},{"functionName":"getTokenFullStart","ranges":[{"startOffset":827119,"endOffset":827137,"count":306}],"isBlockCoverage":true},{"functionName":"getStartPos","ranges":[{"startOffset":827158,"endOffset":827176,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenEnd","ranges":[{"startOffset":827197,"endOffset":827206,"count":0}],"isBlockCoverage":false},{"functionName":"getTextPos","ranges":[{"startOffset":827226,"endOffset":827235,"count":0}],"isBlockCoverage":false},{"functionName":"getToken","ranges":[{"startOffset":827253,"endOffset":827264,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenStart","ranges":[{"startOffset":827287,"endOffset":827303,"count":26}],"isBlockCoverage":true},{"functionName":"getTokenPos","ranges":[{"startOffset":827324,"endOffset":827340,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenText","ranges":[{"startOffset":827362,"endOffset":827399,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenValue","ranges":[{"startOffset":827422,"endOffset":827438,"count":24}],"isBlockCoverage":true},{"functionName":"hasUnicodeEscape","ranges":[{"startOffset":827464,"endOffset":827515,"count":12}],"isBlockCoverage":true},{"functionName":"hasExtendedUnicodeEscape","ranges":[{"startOffset":827549,"endOffset":827605,"count":60}],"isBlockCoverage":true},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":827636,"endOffset":827689,"count":6}],"isBlockCoverage":true},{"functionName":"hasPrecedingJSDocComment","ranges":[{"startOffset":827723,"endOffset":827779,"count":40}],"isBlockCoverage":true},{"functionName":"isIdentifier","ranges":[{"startOffset":827801,"endOffset":827851,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWord","ranges":[{"startOffset":827898,"endOffset":827955,"count":0}],"isBlockCoverage":false},{"functionName":"isUnterminated","ranges":[{"startOffset":828002,"endOffset":828049,"count":24}],"isBlockCoverage":true},{"functionName":"getCommentDirectives","ranges":[{"startOffset":828079,"endOffset":828102,"count":0}],"isBlockCoverage":false},{"functionName":"getNumericLiteralFlags","ranges":[{"startOffset":828134,"endOffset":828158,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFlags","ranges":[{"startOffset":828207,"endOffset":828223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":829115,"endOffset":829294,"count":0}],"isBlockCoverage":false},{"functionName":"error2","ranges":[{"startOffset":829336,"endOffset":829544,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumberFragment","ranges":[{"startOffset":829549,"endOffset":830879,"count":0}],"isBlockCoverage":false},{"functionName":"scanNumber","ranges":[{"startOffset":830884,"endOffset":833836,"count":0}],"isBlockCoverage":false},{"functionName":"checkForIdentifierStartAfterNumericLiteral","ranges":[{"startOffset":833841,"endOffset":834657,"count":0}],"isBlockCoverage":false},{"functionName":"scanDigits","ranges":[{"startOffset":834662,"endOffset":834970,"count":0}],"isBlockCoverage":false},{"functionName":"scanExactNumberOfHexDigits","ranges":[{"startOffset":834975,"endOffset":835263,"count":0}],"isBlockCoverage":false},{"functionName":"scanMinimumNumberOfHexDigits","ranges":[{"startOffset":835268,"endOffset":835485,"count":0}],"isBlockCoverage":false},{"functionName":"scanHexDigits","ranges":[{"startOffset":835490,"endOffset":836940,"count":0}],"isBlockCoverage":false},{"functionName":"scanString","ranges":[{"startOffset":836945,"endOffset":838100,"count":24},{"startOffset":837117,"endOffset":838073,"count":274},{"startOffset":837143,"endOffset":837325,"count":0},{"startOffset":837394,"endOffset":837488,"count":24},{"startOffset":837488,"endOffset":837527,"count":250},{"startOffset":837527,"endOffset":837549,"count":0},{"startOffset":837551,"endOffset":837770,"count":0},{"startOffset":837770,"endOffset":837821,"count":250},{"startOffset":837844,"endOffset":837866,"count":0},{"startOffset":837868,"endOffset":838050,"count":0},{"startOffset":838050,"endOffset":838073,"count":250}],"isBlockCoverage":true},{"functionName":"scanTemplateAndSetTokenValue","ranges":[{"startOffset":838105,"endOffset":839954,"count":0}],"isBlockCoverage":false},{"functionName":"scanEscapeSequence","ranges":[{"startOffset":839959,"endOffset":845117,"count":0}],"isBlockCoverage":false},{"functionName":"scanExtendedUnicodeEscape","ranges":[{"startOffset":845122,"endOffset":846183,"count":0}],"isBlockCoverage":false},{"functionName":"peekUnicodeEscape","ranges":[{"startOffset":846188,"endOffset":846532,"count":0}],"isBlockCoverage":false},{"functionName":"peekExtendedUnicodeEscape","ranges":[{"startOffset":846537,"endOffset":847039,"count":0}],"isBlockCoverage":false},{"functionName":"scanIdentifierParts","ranges":[{"startOffset":847044,"endOffset":848070,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierToken","ranges":[{"startOffset":848075,"endOffset":848483,"count":12},{"startOffset":848435,"endOffset":848482,"count":0}],"isBlockCoverage":true},{"functionName":"scanBinaryOrOctalDigits","ranges":[{"startOffset":848488,"endOffset":849579,"count":0}],"isBlockCoverage":false},{"functionName":"checkBigIntSuffix","ranges":[{"startOffset":849584,"endOffset":850177,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":850182,"endOffset":868822,"count":86},{"startOffset":850310,"endOffset":868816,"count":1974},{"startOffset":850362,"endOffset":850422,"count":4},{"startOffset":850422,"endOffset":850489,"count":1970},{"startOffset":850489,"endOffset":850979,"count":2},{"startOffset":850544,"endOffset":850699,"count":0},{"startOffset":850735,"endOffset":850764,"count":0},{"startOffset":850766,"endOffset":850969,"count":0},{"startOffset":850979,"endOffset":851012,"count":1970},{"startOffset":851012,"endOffset":851035,"count":224},{"startOffset":851046,"endOffset":851499,"count":448},{"startOffset":851219,"endOffset":851499,"count":0},{"startOffset":851510,"endOffset":851527,"count":0},{"startOffset":851538,"endOffset":851564,"count":0},{"startOffset":851575,"endOffset":851598,"count":0},{"startOffset":851609,"endOffset":851629,"count":1246},{"startOffset":851640,"endOffset":851672,"count":1246},{"startOffset":851683,"endOffset":851705,"count":1246},{"startOffset":851716,"endOffset":851739,"count":1246},{"startOffset":851750,"endOffset":851773,"count":1246},{"startOffset":851784,"endOffset":851808,"count":1246},{"startOffset":851819,"endOffset":851843,"count":1246},{"startOffset":851854,"endOffset":851886,"count":1246},{"startOffset":851897,"endOffset":851928,"count":1246},{"startOffset":851939,"endOffset":851969,"count":1246},{"startOffset":851980,"endOffset":852008,"count":1246},{"startOffset":852019,"endOffset":852052,"count":1246},{"startOffset":852063,"endOffset":852089,"count":1246},{"startOffset":852100,"endOffset":852126,"count":1246},{"startOffset":852137,"endOffset":852168,"count":1246},{"startOffset":852179,"endOffset":852214,"count":1246},{"startOffset":852225,"endOffset":852259,"count":1246},{"startOffset":852270,"endOffset":852304,"count":1246},{"startOffset":852315,"endOffset":852633,"count":1246},{"startOffset":852436,"endOffset":852633,"count":0},{"startOffset":852644,"endOffset":853055,"count":0},{"startOffset":853066,"endOffset":853092,"count":24},{"startOffset":853103,"endOffset":853219,"count":24},{"startOffset":853230,"endOffset":853392,"count":0},{"startOffset":853403,"endOffset":853640,"count":0},{"startOffset":853651,"endOffset":854211,"count":0},{"startOffset":854222,"endOffset":854317,"count":0},{"startOffset":854328,"endOffset":854425,"count":0},{"startOffset":854436,"endOffset":855152,"count":0},{"startOffset":855163,"endOffset":855530,"count":0},{"startOffset":855541,"endOffset":855628,"count":14},{"startOffset":855639,"endOffset":856012,"count":0},{"startOffset":856023,"endOffset":856438,"count":0},{"startOffset":856449,"endOffset":858820,"count":194},{"startOffset":856531,"endOffset":857138,"count":162},{"startOffset":856589,"endOffset":856729,"count":21086},{"startOffset":856646,"endOffset":856690,"count":162},{"startOffset":856690,"endOffset":856729,"count":20924},{"startOffset":857037,"endOffset":857124,"count":0},{"startOffset":857138,"endOffset":858609,"count":32},{"startOffset":857303,"endOffset":857337,"count":0},{"startOffset":857470,"endOffset":857924,"count":1438},{"startOffset":857568,"endOffset":857602,"count":32},{"startOffset":857616,"endOffset":857728,"count":32},{"startOffset":857728,"endOffset":857790,"count":1406},{"startOffset":857790,"endOffset":857908,"count":0},{"startOffset":857952,"endOffset":857973,"count":0},{"startOffset":857975,"endOffset":858053,"count":0},{"startOffset":858246,"endOffset":858324,"count":0},{"startOffset":858399,"endOffset":858595,"count":0},{"startOffset":858609,"endOffset":858820,"count":0},{"startOffset":858831,"endOffset":860571,"count":0},{"startOffset":860582,"endOffset":860599,"count":0},{"startOffset":860610,"endOffset":860627,"count":0},{"startOffset":860638,"endOffset":860655,"count":0},{"startOffset":860666,"endOffset":860683,"count":0},{"startOffset":860694,"endOffset":860711,"count":0},{"startOffset":860722,"endOffset":860739,"count":0},{"startOffset":860750,"endOffset":860767,"count":0},{"startOffset":860778,"endOffset":860795,"count":0},{"startOffset":860806,"endOffset":860864,"count":0},{"startOffset":860875,"endOffset":860962,"count":20},{"startOffset":860973,"endOffset":861068,"count":0},{"startOffset":861079,"endOffset":862152,"count":0},{"startOffset":862163,"endOffset":863000,"count":0},{"startOffset":863011,"endOffset":863401,"count":0},{"startOffset":863412,"endOffset":863996,"count":0},{"startOffset":864007,"endOffset":864106,"count":0},{"startOffset":864117,"endOffset":864218,"count":0},{"startOffset":864229,"endOffset":864460,"count":0},{"startOffset":864471,"endOffset":864567,"count":6},{"startOffset":864578,"endOffset":865383,"count":0},{"startOffset":865394,"endOffset":865492,"count":6},{"startOffset":865503,"endOffset":865591,"count":0},{"startOffset":865602,"endOffset":865683,"count":0},{"startOffset":865694,"endOffset":866593,"count":0},{"startOffset":866604,"endOffset":868175,"count":0},{"startOffset":868186,"endOffset":868798,"count":12},{"startOffset":868359,"endOffset":868798,"count":0},{"startOffset":868808,"endOffset":868816,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseJSDoc","ranges":[{"startOffset":868827,"endOffset":869266,"count":0}],"isBlockCoverage":false},{"functionName":"reScanInvalidIdentifier","ranges":[{"startOffset":869271,"endOffset":869749,"count":0}],"isBlockCoverage":false},{"functionName":"scanIdentifier","ranges":[{"startOffset":869754,"endOffset":870253,"count":12},{"startOffset":869952,"endOffset":870018,"count":50},{"startOffset":870030,"endOffset":870050,"count":38},{"startOffset":870144,"endOffset":870202,"count":0}],"isBlockCoverage":true},{"functionName":"reScanGreaterToken","ranges":[{"startOffset":870258,"endOffset":871156,"count":40},{"startOffset":870337,"endOffset":871130,"count":0}],"isBlockCoverage":true},{"functionName":"reScanAsteriskEqualsToken","ranges":[{"startOffset":871161,"endOffset":871399,"count":0}],"isBlockCoverage":false},{"functionName":"reScanSlashToken","ranges":[{"startOffset":871404,"endOffset":872761,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfCommentDirective","ranges":[{"startOffset":872766,"endOffset":873166,"count":194},{"startOffset":873020,"endOffset":873165,"count":0}],"isBlockCoverage":true},{"functionName":"getDirectiveFromComment","ranges":[{"startOffset":873171,"endOffset":873531,"count":194},{"startOffset":873341,"endOffset":873437,"count":0},{"startOffset":873446,"endOffset":873496,"count":0},{"startOffset":873504,"endOffset":873530,"count":0}],"isBlockCoverage":true},{"functionName":"reScanTemplateToken","ranges":[{"startOffset":873536,"endOffset":873684,"count":0}],"isBlockCoverage":false},{"functionName":"reScanTemplateHeadOrNoSubstitutionTemplate","ranges":[{"startOffset":873689,"endOffset":873888,"count":0}],"isBlockCoverage":false},{"functionName":"reScanJsxToken","ranges":[{"startOffset":873893,"endOffset":874051,"count":0}],"isBlockCoverage":false},{"functionName":"reScanLessThanToken","ranges":[{"startOffset":874056,"endOffset":874253,"count":0}],"isBlockCoverage":false},{"functionName":"reScanHashToken","ranges":[{"startOffset":874258,"endOffset":874443,"count":0}],"isBlockCoverage":false},{"functionName":"reScanQuestionToken","ranges":[{"startOffset":874448,"endOffset":874678,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxToken","ranges":[{"startOffset":874683,"endOffset":876415,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxIdentifier","ranges":[{"startOffset":876420,"endOffset":876912,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxAttributeValue","ranges":[{"startOffset":876917,"endOffset":877290,"count":0}],"isBlockCoverage":false},{"functionName":"reScanJsxAttributeValue","ranges":[{"startOffset":877295,"endOffset":877414,"count":0}],"isBlockCoverage":false},{"functionName":"scanJSDocCommentTextToken","ranges":[{"startOffset":877419,"endOffset":878256,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsDocToken","ranges":[{"startOffset":878261,"endOffset":881474,"count":0}],"isBlockCoverage":false},{"functionName":"speculationHelper","ranges":[{"startOffset":881479,"endOffset":882050,"count":40},{"startOffset":881802,"endOffset":881816,"count":0}],"isBlockCoverage":true},{"functionName":"scanRange","ranges":[{"startOffset":882055,"endOffset":882756,"count":0}],"isBlockCoverage":false},{"functionName":"lookAhead","ranges":[{"startOffset":882761,"endOffset":882893,"count":0}],"isBlockCoverage":false},{"functionName":"tryScan","ranges":[{"startOffset":882898,"endOffset":883029,"count":40}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":883034,"endOffset":883079,"count":0}],"isBlockCoverage":false},{"functionName":"clearCommentDirectives","ranges":[{"startOffset":883084,"endOffset":883159,"count":2}],"isBlockCoverage":true},{"functionName":"setText","ranges":[{"startOffset":883164,"endOffset":883343,"count":8},{"startOffset":883230,"endOffset":883235,"count":6},{"startOffset":883282,"endOffset":883300,"count":0}],"isBlockCoverage":true},{"functionName":"setOnError","ranges":[{"startOffset":883348,"endOffset":883421,"count":4}],"isBlockCoverage":true},{"functionName":"setScriptTarget","ranges":[{"startOffset":883426,"endOffset":883510,"count":2}],"isBlockCoverage":true},{"functionName":"setLanguageVariant","ranges":[{"startOffset":883515,"endOffset":883592,"count":2}],"isBlockCoverage":true},{"functionName":"setScriptKind","ranges":[{"startOffset":883597,"endOffset":883658,"count":4}],"isBlockCoverage":true},{"functionName":"setJSDocParsingMode","ranges":[{"startOffset":883663,"endOffset":883736,"count":4}],"isBlockCoverage":true},{"functionName":"resetTokenState","ranges":[{"startOffset":883741,"endOffset":883991,"count":8}],"isBlockCoverage":true},{"functionName":"setInJSDocType","ranges":[{"startOffset":883996,"endOffset":884073,"count":0}],"isBlockCoverage":false},{"functionName":"codePointAt","ranges":[{"startOffset":884080,"endOffset":884141,"count":2020}],"isBlockCoverage":true},{"functionName":"charSize","ranges":[{"startOffset":884144,"endOffset":884230,"count":50},{"startOffset":884189,"endOffset":884212,"count":0}],"isBlockCoverage":true},{"functionName":"utf16EncodeAsStringFallback","ranges":[{"startOffset":884233,"endOffset":884607,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsString","ranges":[{"startOffset":884610,"endOffset":884704,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/scanner.ts","ranges":[{"startOffset":885124,"endOffset":926790,"count":1},{"startOffset":926754,"endOffset":926783,"count":0}],"isBlockCoverage":true},{"functionName":"utf16EncodeAsStringWorker","ranges":[{"startOffset":926707,"endOffset":926753,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleNameRelative","ranges":[{"startOffset":926837,"endOffset":926963,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicateDiagnostics","ranges":[{"startOffset":926966,"endOffset":927087,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":927090,"endOffset":927814,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanEnd","ranges":[{"startOffset":927817,"endOffset":927886,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIsEmpty","ranges":[{"startOffset":927889,"endOffset":927955,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsPosition","ranges":[{"startOffset":927958,"endOffset":928080,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsPositionInclusive","ranges":[{"startOffset":928083,"endOffset":928205,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextSpan","ranges":[{"startOffset":928208,"endOffset":928341,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlapsWith","ranges":[{"startOffset":928344,"endOffset":928444,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlap","ranges":[{"startOffset":928447,"endOffset":928610,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithTextSpan","ranges":[{"startOffset":928613,"endOffset":928765,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWith","ranges":[{"startOffset":928768,"endOffset":928910,"count":0}],"isBlockCoverage":false},{"functionName":"decodedTextSpanIntersectsWith","ranges":[{"startOffset":928913,"endOffset":929106,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithPosition","ranges":[{"startOffset":929109,"endOffset":929238,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersection","ranges":[{"startOffset":929241,"endOffset":929483,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpan","ranges":[{"startOffset":929486,"endOffset":929699,"count":1},{"startOffset":929547,"endOffset":929590,"count":0},{"startOffset":929612,"endOffset":929656,"count":0}],"isBlockCoverage":true},{"functionName":"createTextSpanFromBounds","ranges":[{"startOffset":929702,"endOffset":929800,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeNewSpan","ranges":[{"startOffset":929803,"endOffset":929909,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeIsUnchanged","ranges":[{"startOffset":929912,"endOffset":930025,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeRange","ranges":[{"startOffset":930028,"endOffset":930184,"count":1},{"startOffset":930101,"endOffset":930148,"count":0}],"isBlockCoverage":true},{"functionName":"collapseTextChangeRangesAcrossMultipleVersions","ranges":[{"startOffset":930187,"endOffset":931226,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterOwner","ranges":[{"startOffset":931229,"endOffset":931548,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyDeclaration","ranges":[{"startOffset":931551,"endOffset":931749,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingPattern","ranges":[{"startOffset":931752,"endOffset":931910,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingElement","ranges":[{"startOffset":931913,"endOffset":932062,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpBindingElementsAndPatterns","ranges":[{"startOffset":932065,"endOffset":932259,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedFlags","ranges":[{"startOffset":932262,"endOffset":932767,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedModifierFlags","ranges":[{"startOffset":932770,"endOffset":932877,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":932880,"endOffset":933019,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlags","ranges":[{"startOffset":933022,"endOffset":933112,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeFlags","ranges":[{"startOffset":933115,"endOffset":933171,"count":0}],"isBlockCoverage":false},{"functionName":"validateLocaleAndSetLanguage","ranges":[{"startOffset":933174,"endOffset":935019,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNode","ranges":[{"startOffset":935022,"endOffset":935267,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestor","ranges":[{"startOffset":935270,"endOffset":935530,"count":24},{"startOffset":935395,"endOffset":935427,"count":0},{"startOffset":935445,"endOffset":935475,"count":0}],"isBlockCoverage":true},{"functionName":"isParseTreeNode","ranges":[{"startOffset":935533,"endOffset":935623,"count":0}],"isBlockCoverage":false},{"functionName":"getParseTreeNode","ranges":[{"startOffset":935626,"endOffset":935932,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLeadingUnderscores","ranges":[{"startOffset":935935,"endOffset":936139,"count":20},{"startOffset":936060,"endOffset":936094,"count":0},{"startOffset":936103,"endOffset":936121,"count":0}],"isBlockCoverage":true},{"functionName":"unescapeLeadingUnderscores","ranges":[{"startOffset":936142,"endOffset":936374,"count":20},{"startOffset":936280,"endOffset":936306,"count":0},{"startOffset":936315,"endOffset":936341,"count":0},{"startOffset":936350,"endOffset":936364,"count":0}],"isBlockCoverage":true},{"functionName":"idText","ranges":[{"startOffset":936377,"endOffset":936499,"count":0}],"isBlockCoverage":false},{"functionName":"identifierToKeywordKind","ranges":[{"startOffset":936502,"endOffset":936652,"count":0}],"isBlockCoverage":false},{"functionName":"symbolName","ranges":[{"startOffset":936655,"endOffset":936910,"count":0}],"isBlockCoverage":false},{"functionName":"nameForNamelessJSDocTypedef","ranges":[{"startOffset":936913,"endOffset":938302,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationIdentifier","ranges":[{"startOffset":938305,"endOffset":938450,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasName","ranges":[{"startOffset":938453,"endOffset":938799,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfJSDocTypedef","ranges":[{"startOffset":938802,"endOffset":938924,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDeclaration","ranges":[{"startOffset":938927,"endOffset":938990,"count":66}],"isBlockCoverage":true},{"functionName":"getNonAssignedNameOfDeclaration","ranges":[{"startOffset":938993,"endOffset":940605,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfDeclaration","ranges":[{"startOffset":940608,"endOffset":940911,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedName","ranges":[{"startOffset":940914,"endOffset":941542,"count":0}],"isBlockCoverage":false},{"functionName":"getDecorators","ranges":[{"startOffset":941545,"endOffset":941666,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers","ranges":[{"startOffset":941669,"endOffset":941817,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsWorker","ranges":[{"startOffset":941820,"endOffset":942522,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTags","ranges":[{"startOffset":942525,"endOffset":942658,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsNoCache","ranges":[{"startOffset":942661,"endOffset":942800,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsWorker","ranges":[{"startOffset":942803,"endOffset":943066,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTags","ranges":[{"startOffset":943069,"endOffset":943210,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsNoCache","ranges":[{"startOffset":943213,"endOffset":943360,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocParameterTags","ranges":[{"startOffset":943363,"endOffset":943463,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocAugmentsTag","ranges":[{"startOffset":943466,"endOffset":943561,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocImplementsTags","ranges":[{"startOffset":943564,"endOffset":943663,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocClassTag","ranges":[{"startOffset":943666,"endOffset":943755,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTag","ranges":[{"startOffset":943758,"endOffset":943849,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTagNoCache","ranges":[{"startOffset":943852,"endOffset":943998,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTag","ranges":[{"startOffset":944001,"endOffset":944094,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTagNoCache","ranges":[{"startOffset":944097,"endOffset":944245,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTag","ranges":[{"startOffset":944248,"endOffset":944345,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTagNoCache","ranges":[{"startOffset":944348,"endOffset":944500,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTag","ranges":[{"startOffset":944503,"endOffset":944598,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTagNoCache","ranges":[{"startOffset":944601,"endOffset":944751,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverrideTagNoCache","ranges":[{"startOffset":944754,"endOffset":944904,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTag","ranges":[{"startOffset":944907,"endOffset":945006,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTagNoCache","ranges":[{"startOffset":945009,"endOffset":945163,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocEnumTag","ranges":[{"startOffset":945166,"endOffset":945253,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocThisTag","ranges":[{"startOffset":945256,"endOffset":945343,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnTag","ranges":[{"startOffset":945346,"endOffset":945437,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTemplateTag","ranges":[{"startOffset":945440,"endOffset":945535,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesTag","ranges":[{"startOffset":945538,"endOffset":945635,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeTag","ranges":[{"startOffset":945638,"endOffset":945837,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocType","ranges":[{"startOffset":945840,"endOffset":946115,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnType","ranges":[{"startOffset":946118,"endOffset":946691,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagsWorker","ranges":[{"startOffset":946694,"endOffset":947244,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTags","ranges":[{"startOffset":947247,"endOffset":947360,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagsNoCache","ranges":[{"startOffset":947363,"endOffset":947482,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstJSDocTag","ranges":[{"startOffset":947485,"endOffset":947605,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTags","ranges":[{"startOffset":947608,"endOffset":947704,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTagsOfKind","ranges":[{"startOffset":947707,"endOffset":947821,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJSDocComment","ranges":[{"startOffset":947824,"endOffset":948038,"count":0}],"isBlockCoverage":false},{"functionName":"formatJSDocLink","ranges":[{"startOffset":948041,"endOffset":948394,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeParameterDeclarations","ranges":[{"startOffset":948397,"endOffset":949500,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveConstraintOfTypeParameter","ranges":[{"startOffset":949503,"endOffset":949717,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberName","ranges":[{"startOffset":949720,"endOffset":949843,"count":0}],"isBlockCoverage":false},{"functionName":"isGetOrSetAccessorDeclaration","ranges":[{"startOffset":949846,"endOffset":949983,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessChain","ranges":[{"startOffset":949986,"endOffset":950116,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessChain","ranges":[{"startOffset":950119,"endOffset":950247,"count":0}],"isBlockCoverage":false},{"functionName":"isCallChain","ranges":[{"startOffset":950250,"endOffset":950360,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":950363,"endOffset":950651,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChainRoot","ranges":[{"startOffset":950654,"endOffset":950785,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfOptionalChainRoot","ranges":[{"startOffset":950788,"endOffset":950920,"count":0}],"isBlockCoverage":false},{"functionName":"isOutermostOptionalChain","ranges":[{"startOffset":950923,"endOffset":951081,"count":0}],"isBlockCoverage":false},{"functionName":"isNullishCoalesce","ranges":[{"startOffset":951084,"endOffset":951237,"count":0}],"isBlockCoverage":false},{"functionName":"isConstTypeReference","ranges":[{"startOffset":951240,"endOffset":951414,"count":0}],"isBlockCoverage":false},{"functionName":"skipPartiallyEmittedExpressions","ranges":[{"startOffset":951417,"endOffset":951545,"count":40}],"isBlockCoverage":true},{"functionName":"isNonNullChain","ranges":[{"startOffset":951548,"endOffset":951664,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakOrContinueStatement","ranges":[{"startOffset":951667,"endOffset":951810,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExportBindings","ranges":[{"startOffset":951813,"endOffset":951947,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedTextLike","ranges":[{"startOffset":951950,"endOffset":952156,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedNode","ranges":[{"startOffset":952159,"endOffset":952329,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyLikeTag","ranges":[{"startOffset":952332,"endOffset":952473,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":952476,"endOffset":952537,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeKind","ranges":[{"startOffset":952540,"endOffset":952611,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenKind","ranges":[{"startOffset":952614,"endOffset":952716,"count":0}],"isBlockCoverage":false},{"functionName":"isToken","ranges":[{"startOffset":952719,"endOffset":952776,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArray","ranges":[{"startOffset":952779,"endOffset":952879,"count":16},{"startOffset":952846,"endOffset":952874,"count":8}],"isBlockCoverage":true},{"functionName":"isLiteralKind","ranges":[{"startOffset":952882,"endOffset":952999,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpression","ranges":[{"startOffset":953002,"endOffset":953079,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpressionOfObject","ranges":[{"startOffset":953082,"endOffset":953416,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralKind","ranges":[{"startOffset":953419,"endOffset":953547,"count":24},{"startOffset":953505,"endOffset":953518,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateLiteralToken","ranges":[{"startOffset":953550,"endOffset":953638,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddleOrTemplateTail","ranges":[{"startOffset":953641,"endOffset":953799,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifier","ranges":[{"startOffset":953802,"endOffset":953911,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportDeclaration","ranges":[{"startOffset":953914,"endOffset":954304,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyExportDeclaration","ranges":[{"startOffset":954307,"endOffset":954704,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":954707,"endOffset":954846,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTextContainingNode","ranges":[{"startOffset":954849,"endOffset":954981,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributeName","ranges":[{"startOffset":954984,"endOffset":955082,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedIdentifier","ranges":[{"startOffset":955085,"endOffset":955242,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedPrivateIdentifier","ranges":[{"startOffset":955245,"endOffset":955416,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelReservedGeneratedIdentifier","ranges":[{"startOffset":955419,"endOffset":955654,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierClassElementDeclaration","ranges":[{"startOffset":955657,"endOffset":955824,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierPropertyAccessExpression","ranges":[{"startOffset":955827,"endOffset":955970,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierKind","ranges":[{"startOffset":955973,"endOffset":956617,"count":20},{"startOffset":956033,"endOffset":956064,"count":0},{"startOffset":956071,"endOffset":956102,"count":0},{"startOffset":956109,"endOffset":956137,"count":0},{"startOffset":956144,"endOffset":956171,"count":0},{"startOffset":956178,"endOffset":956208,"count":0},{"startOffset":956215,"endOffset":956244,"count":0},{"startOffset":956251,"endOffset":956279,"count":0},{"startOffset":956286,"endOffset":956311,"count":0},{"startOffset":956318,"endOffset":956347,"count":0},{"startOffset":956354,"endOffset":956384,"count":0},{"startOffset":956391,"endOffset":956423,"count":0},{"startOffset":956430,"endOffset":956461,"count":0},{"startOffset":956468,"endOffset":956497,"count":0},{"startOffset":956504,"endOffset":956530,"count":0},{"startOffset":956537,"endOffset":956589,"count":0}],"isBlockCoverage":true},{"functionName":"isParameterPropertyModifier","ranges":[{"startOffset":956620,"endOffset":956742,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberModifier","ranges":[{"startOffset":956745,"endOffset":956960,"count":0}],"isBlockCoverage":false},{"functionName":"isModifier","ranges":[{"startOffset":956963,"endOffset":957032,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityName","ranges":[{"startOffset":957035,"endOffset":957173,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyName","ranges":[{"startOffset":957176,"endOffset":957432,"count":20},{"startOffset":957350,"endOffset":957363,"count":0},{"startOffset":957385,"endOffset":957400,"count":0}],"isBlockCoverage":true},{"functionName":"isBindingName","ranges":[{"startOffset":957435,"endOffset":957623,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":957626,"endOffset":957713,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeOrClassStaticBlockDeclaration","ranges":[{"startOffset":957716,"endOffset":957873,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclaration","ranges":[{"startOffset":957876,"endOffset":957983,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":957986,"endOffset":958110,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclarationKind","ranges":[{"startOffset":958113,"endOffset":958508,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeKind","ranges":[{"startOffset":958511,"endOffset":958966,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrModuleBlock","ranges":[{"startOffset":958969,"endOffset":959115,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElement","ranges":[{"startOffset":959118,"endOffset":959505,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLike","ranges":[{"startOffset":959508,"endOffset":959646,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":959649,"endOffset":959777,"count":0}],"isBlockCoverage":false},{"functionName":"isAutoAccessorPropertyDeclaration","ranges":[{"startOffset":959780,"endOffset":959903,"count":0}],"isBlockCoverage":false},{"functionName":"isClassInstanceProperty","ranges":[{"startOffset":959906,"endOffset":960332,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodOrAccessor","ranges":[{"startOffset":960335,"endOffset":960571,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedClassElement","ranges":[{"startOffset":960574,"endOffset":960853,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike","ranges":[{"startOffset":960856,"endOffset":960941,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeElement","ranges":[{"startOffset":960944,"endOffset":961275,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrTypeElement","ranges":[{"startOffset":961278,"endOffset":961375,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElementLike","ranges":[{"startOffset":961378,"endOffset":961700,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNode","ranges":[{"startOffset":961703,"endOffset":961772,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrConstructorTypeNode","ranges":[{"startOffset":961775,"endOffset":961970,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingPattern","ranges":[{"startOffset":961973,"endOffset":962176,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":962179,"endOffset":962347,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingElement","ranges":[{"startOffset":962350,"endOffset":962506,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationBindingElement","ranges":[{"startOffset":962509,"endOffset":962758,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentElement","ranges":[{"startOffset":962761,"endOffset":962958,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentPattern","ranges":[{"startOffset":962961,"endOffset":963106,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentPattern","ranges":[{"startOffset":963109,"endOffset":963323,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentElement","ranges":[{"startOffset":963326,"endOffset":963618,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentPattern","ranges":[{"startOffset":963621,"endOffset":963832,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentElement","ranges":[{"startOffset":963835,"endOffset":964371,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedNameOrImportTypeNode","ranges":[{"startOffset":964374,"endOffset":964595,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedName","ranges":[{"startOffset":964598,"endOffset":964770,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeOrFunctionLikeExpression","ranges":[{"startOffset":964773,"endOffset":964912,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeExpression","ranges":[{"startOffset":964915,"endOffset":965281,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpression","ranges":[{"startOffset":965284,"endOffset":965418,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":965421,"endOffset":965588,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideExpression","ranges":[{"startOffset":965591,"endOffset":965721,"count":40}],"isBlockCoverage":true},{"functionName":"isLeftHandSideExpressionKind","ranges":[{"startOffset":965724,"endOffset":967084,"count":40},{"startOffset":965796,"endOffset":965836,"count":0},{"startOffset":965843,"endOffset":965882,"count":0},{"startOffset":965889,"endOffset":965918,"count":0},{"startOffset":965925,"endOffset":965955,"count":0},{"startOffset":965962,"endOffset":965988,"count":0},{"startOffset":965995,"endOffset":966032,"count":0},{"startOffset":966039,"endOffset":966066,"count":0},{"startOffset":966073,"endOffset":966113,"count":0},{"startOffset":966120,"endOffset":966158,"count":0},{"startOffset":966165,"endOffset":966204,"count":0},{"startOffset":966211,"endOffset":966250,"count":8},{"startOffset":966257,"endOffset":966288,"count":8},{"startOffset":966295,"endOffset":966329,"count":8},{"startOffset":966336,"endOffset":966361,"count":8},{"startOffset":966368,"endOffset":966400,"count":8},{"startOffset":966407,"endOffset":966446,"count":8},{"startOffset":966453,"endOffset":966481,"count":8},{"startOffset":966488,"endOffset":966516,"count":8},{"startOffset":966523,"endOffset":966551,"count":16},{"startOffset":966558,"endOffset":966602,"count":16},{"startOffset":966609,"endOffset":966643,"count":16},{"startOffset":966650,"endOffset":966677,"count":20},{"startOffset":966684,"endOffset":966711,"count":20},{"startOffset":966718,"endOffset":966745,"count":20},{"startOffset":967044,"endOffset":967074,"count":0}],"isBlockCoverage":true},{"functionName":"isUnaryExpression","ranges":[{"startOffset":967087,"endOffset":967203,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionKind","ranges":[{"startOffset":967206,"endOffset":967649,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionWithWrite","ranges":[{"startOffset":967652,"endOffset":967980,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLiteral","ranges":[{"startOffset":967983,"endOffset":968279,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":968282,"endOffset":968388,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionKind","ranges":[{"startOffset":968391,"endOffset":968935,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertionExpression","ranges":[{"startOffset":968938,"endOffset":969098,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedOrPartiallyEmittedNode","ranges":[{"startOffset":969101,"endOffset":969234,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":969237,"endOffset":969697,"count":0}],"isBlockCoverage":false},{"functionName":"isScopeMarker","ranges":[{"startOffset":969700,"endOffset":969800,"count":0}],"isBlockCoverage":false},{"functionName":"hasScopeMarker","ranges":[{"startOffset":969803,"endOffset":969888,"count":0}],"isBlockCoverage":false},{"functionName":"needsScopeMarker","ranges":[{"startOffset":969891,"endOffset":970082,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleIndicator","ranges":[{"startOffset":970085,"endOffset":970254,"count":0}],"isBlockCoverage":false},{"functionName":"isForInOrOfStatement","ranges":[{"startOffset":970257,"endOffset":970391,"count":0}],"isBlockCoverage":false},{"functionName":"isConciseBody","ranges":[{"startOffset":970394,"endOffset":970476,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBody","ranges":[{"startOffset":970479,"endOffset":970540,"count":0}],"isBlockCoverage":false},{"functionName":"isForInitializer","ranges":[{"startOffset":970543,"endOffset":970646,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBody","ranges":[{"startOffset":970649,"endOffset":970825,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceBody","ranges":[{"startOffset":970828,"endOffset":970975,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamespaceBody","ranges":[{"startOffset":970978,"endOffset":971128,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportBindings","ranges":[{"startOffset":971131,"endOffset":971283,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleOrEnumDeclaration","ranges":[{"startOffset":971286,"endOffset":971429,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveSymbol","ranges":[{"startOffset":971432,"endOffset":974047,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLocals","ranges":[{"startOffset":974050,"endOffset":975288,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationKind","ranges":[{"startOffset":975291,"endOffset":976714,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatementKind","ranges":[{"startOffset":976717,"endOffset":977273,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementKindButNotDeclarationKind","ranges":[{"startOffset":977276,"endOffset":978057,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":978060,"endOffset":978287,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatement","ranges":[{"startOffset":978290,"endOffset":978383,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementButNotDeclaration","ranges":[{"startOffset":978386,"endOffset":978495,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":978498,"endOffset":978675,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":978678,"endOffset":978982,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":978985,"endOffset":979171,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleReference","ranges":[{"startOffset":979174,"endOffset":979363,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxTagNameExpression","ranges":[{"startOffset":979366,"endOffset":979599,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxChild","ranges":[{"startOffset":979602,"endOffset":979846,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeLike","ranges":[{"startOffset":979849,"endOffset":980001,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrJsxExpression","ranges":[{"startOffset":980004,"endOffset":980163,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElement","ranges":[{"startOffset":980166,"endOffset":980331,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseOrDefaultClause","ranges":[{"startOffset":980334,"endOffset":980482,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNode","ranges":[{"startOffset":980485,"endOffset":980607,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCommentContainingNode","ranges":[{"startOffset":980610,"endOffset":980882,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTag","ranges":[{"startOffset":980885,"endOffset":981012,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessor","ranges":[{"startOffset":981015,"endOffset":981097,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessor","ranges":[{"startOffset":981100,"endOffset":981182,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocNodes","ranges":[{"startOffset":981185,"endOffset":981336,"count":0}],"isBlockCoverage":false},{"functionName":"hasType","ranges":[{"startOffset":981339,"endOffset":981391,"count":0}],"isBlockCoverage":false},{"functionName":"hasInitializer","ranges":[{"startOffset":981394,"endOffset":981460,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyExpressionInitializer","ranges":[{"startOffset":981463,"endOffset":981828,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElement","ranges":[{"startOffset":981831,"endOffset":982005,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceType","ranges":[{"startOffset":982008,"endOffset":982153,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentation","ranges":[{"startOffset":982156,"endOffset":982662,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralLike","ranges":[{"startOffset":982665,"endOffset":982810,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkLike","ranges":[{"startOffset":982813,"endOffset":982978,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestParameter","ranges":[{"startOffset":982981,"endOffset":983110,"count":0}],"isBlockCoverage":false},{"functionName":"isRestParameter","ranges":[{"startOffset":983113,"endOffset":983353,"count":0}],"isBlockCoverage":false},{"functionName":"hasInternalAnnotation","ranges":[{"startOffset":983356,"endOffset":983522,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalDeclaration","ranges":[{"startOffset":983525,"endOffset":984894,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/utilitiesPublic.ts","ranges":[{"startOffset":985009,"endOffset":985327,"count":1}],"isBlockCoverage":true},{"functionName":"getDeclarationOfKind","ranges":[{"startOffset":985368,"endOffset":985649,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationsOfKind","ranges":[{"startOffset":985652,"endOffset":985780,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbolTable","ranges":[{"startOffset":985783,"endOffset":986008,"count":0}],"isBlockCoverage":false},{"functionName":"isTransientSymbol","ranges":[{"startOffset":986011,"endOffset":986111,"count":0}],"isBlockCoverage":false},{"functionName":"createSingleLineStringWriter","ranges":[{"startOffset":986114,"endOffset":987206,"count":1}],"isBlockCoverage":true},{"functionName":"writeText","ranges":[{"startOffset":986196,"endOffset":986217,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":986247,"endOffset":986256,"count":0}],"isBlockCoverage":false},{"functionName":"writeSymbol","ranges":[{"startOffset":986588,"endOffset":986610,"count":0}],"isBlockCoverage":false},{"functionName":"getTextPos","ranges":[{"startOffset":986702,"endOffset":986718,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":986735,"endOffset":986742,"count":0}],"isBlockCoverage":false},{"functionName":"getColumn","ranges":[{"startOffset":986761,"endOffset":986768,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":986787,"endOffset":986794,"count":0}],"isBlockCoverage":false},{"functionName":"isAtStartOfLine","ranges":[{"startOffset":986819,"endOffset":986830,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingComment","ranges":[{"startOffset":986858,"endOffset":986869,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingWhitespace","ranges":[{"startOffset":986900,"endOffset":986970,"count":0}],"isBlockCoverage":false},{"functionName":"writeLine","ranges":[{"startOffset":987094,"endOffset":987110,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":987181,"endOffset":987195,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectModuleResolution","ranges":[{"startOffset":987209,"endOffset":987407,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveModuleResolutionChanges","ranges":[{"startOffset":987410,"endOffset":987574,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectingProgramStructure","ranges":[{"startOffset":987577,"endOffset":987737,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveChanges","ranges":[{"startOffset":987740,"endOffset":987983,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestor","ranges":[{"startOffset":987986,"endOffset":988265,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEntry","ranges":[{"startOffset":988268,"endOffset":988510,"count":27},{"startOffset":988386,"endOffset":988487,"count":178},{"startOffset":988449,"endOffset":988481,"count":20},{"startOffset":988487,"endOffset":988509,"count":7}],"isBlockCoverage":true},{"functionName":"forEachKey","ranges":[{"startOffset":988513,"endOffset":988734,"count":0}],"isBlockCoverage":false},{"functionName":"copyEntries","ranges":[{"startOffset":988737,"endOffset":988854,"count":0}],"isBlockCoverage":false},{"functionName":"usingSingleLineStringWriter","ranges":[{"startOffset":988857,"endOffset":989122,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":989125,"endOffset":989190,"count":0}],"isBlockCoverage":false},{"functionName":"projectReferenceIsEqualTo","ranges":[{"startOffset":989193,"endOffset":989369,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionIsEqualTo","ranges":[{"startOffset":989372,"endOffset":990174,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleNotFoundChain","ranges":[{"startOffset":990177,"endOffset":992337,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdIsEqual","ranges":[{"startOffset":992340,"endOffset":992498,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToPackageName","ranges":[{"startOffset":992501,"endOffset":992625,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToString","ranges":[{"startOffset":992628,"endOffset":992743,"count":0}],"isBlockCoverage":false},{"functionName":"typeDirectiveIsEqualTo","ranges":[{"startOffset":992746,"endOffset":993425,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangesInResolutions","ranges":[{"startOffset":993428,"endOffset":993937,"count":0}],"isBlockCoverage":false},{"functionName":"containsParseError","ranges":[{"startOffset":993940,"endOffset":994086,"count":0}],"isBlockCoverage":false},{"functionName":"aggregateChildData","ranges":[{"startOffset":994089,"endOffset":994512,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfNode","ranges":[{"startOffset":994515,"endOffset":994661,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfModule","ranges":[{"startOffset":994664,"endOffset":994809,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainJsFile","ranges":[{"startOffset":994812,"endOffset":994993,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementWithLocals","ranges":[{"startOffset":994996,"endOffset":995277,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfLine","ranges":[{"startOffset":995280,"endOffset":995408,"count":0}],"isBlockCoverage":false},{"functionName":"nodePosToString","ranges":[{"startOffset":995411,"endOffset":995623,"count":0}],"isBlockCoverage":false},{"functionName":"getEndLinePosition","ranges":[{"startOffset":995626,"endOffset":996190,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelUniqueName","ranges":[{"startOffset":996193,"endOffset":996351,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsMissing","ranges":[{"startOffset":996354,"endOffset":996531,"count":24},{"startOffset":996410,"endOffset":996436,"count":0},{"startOffset":996470,"endOffset":996486,"count":0},{"startOffset":996487,"endOffset":996505,"count":0}],"isBlockCoverage":true},{"functionName":"nodeIsPresent","ranges":[{"startOffset":996534,"endOffset":996601,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarError","ranges":[{"startOffset":996604,"endOffset":998360,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarErrorElement","ranges":[{"startOffset":998363,"endOffset":998546,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterPrologue","ranges":[{"startOffset":998549,"endOffset":998917,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterPrologue","ranges":[{"startOffset":998920,"endOffset":999278,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyPrologueDirective","ranges":[{"startOffset":999281,"endOffset":999419,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterStandardPrologue","ranges":[{"startOffset":999422,"endOffset":999557,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterCustomPrologue","ranges":[{"startOffset":999560,"endOffset":999696,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterStandardPrologue","ranges":[{"startOffset":999699,"endOffset":999842,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterCustomPrologue","ranges":[{"startOffset":999845,"endOffset":999989,"count":0}],"isBlockCoverage":false},{"functionName":"isRecognizedTripleSlashComment","ranges":[{"startOffset":999992,"endOffset":1000660,"count":0}],"isBlockCoverage":false},{"functionName":"isPinnedComment","ranges":[{"startOffset":1000663,"endOffset":1000822,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentDirectivesMap","ranges":[{"startOffset":1000825,"endOffset":1001609,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenPosOfNode","ranges":[{"startOffset":1001612,"endOffset":1002471,"count":0}],"isBlockCoverage":false},{"functionName":"getNonDecoratorTokenPosOfNode","ranges":[{"startOffset":1002474,"endOffset":1002831,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTextOfNodeFromSourceFile","ranges":[{"startOffset":1002834,"endOffset":1003001,"count":24}],"isBlockCoverage":true},{"functionName":"isJSDocTypeExpressionOrChild","ranges":[{"startOffset":1003004,"endOffset":1003109,"count":24}],"isBlockCoverage":true},{"functionName":"isExportNamespaceAsDefaultDeclaration","ranges":[{"startOffset":1003112,"endOffset":1003325,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNodeFromSourceText","ranges":[{"startOffset":1003328,"endOffset":1003746,"count":24},{"startOffset":1003437,"endOffset":1003461,"count":0},{"startOffset":1003512,"endOffset":1003522,"count":0},{"startOffset":1003614,"endOffset":1003725,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1003658,"endOffset":1003706,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNode","ranges":[{"startOffset":1003749,"endOffset":1003900,"count":0}],"isBlockCoverage":false},{"functionName":"getPos","ranges":[{"startOffset":1003903,"endOffset":1003953,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfNode","ranges":[{"startOffset":1003956,"endOffset":1004064,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitFlags","ranges":[{"startOffset":1004067,"endOffset":1004180,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalEmitFlags","ranges":[{"startOffset":1004183,"endOffset":1004312,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralText","ranges":[{"startOffset":1004315,"endOffset":1006261,"count":0}],"isBlockCoverage":false},{"functionName":"canUseOriginalText","ranges":[{"startOffset":1006264,"endOffset":1006760,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfConstantValue","ranges":[{"startOffset":1006763,"endOffset":1006890,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdentifierFromModuleName","ranges":[{"startOffset":1006893,"endOffset":1007032,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockOrCatchScoped","ranges":[{"startOffset":1007035,"endOffset":1007224,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclarationOrBindingElement","ranges":[{"startOffset":1007227,"endOffset":1007455,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModule","ranges":[{"startOffset":1007458,"endOffset":1007614,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleWithStringLiteralName","ranges":[{"startOffset":1007617,"endOffset":1007750,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalAmbientModule","ranges":[{"startOffset":1007753,"endOffset":1007866,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveModuleDeclaration","ranges":[{"startOffset":1007869,"endOffset":1007978,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModuleSymbol","ranges":[{"startOffset":1007981,"endOffset":1008108,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModule","ranges":[{"startOffset":1008111,"endOffset":1008234,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScopedContainerTopLevel","ranges":[{"startOffset":1008237,"endOffset":1008433,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalScopeAugmentation","ranges":[{"startOffset":1008436,"endOffset":1008547,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleAugmentation","ranges":[{"startOffset":1008550,"endOffset":1008671,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleAugmentationExternal","ranges":[{"startOffset":1008674,"endOffset":1009035,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAugmentationDeclaration","ranges":[{"startOffset":1009038,"endOffset":1009270,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJSContainingModuleKind","ranges":[{"startOffset":1009273,"endOffset":1009422,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveExternalModule","ranges":[{"startOffset":1009425,"endOffset":1009627,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveStrictModeSourceFile","ranges":[{"startOffset":1009630,"endOffset":1010348,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientPropertyDeclaration","ranges":[{"startOffset":1010351,"endOffset":1010501,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":1010504,"endOffset":1011321,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameters","ranges":[{"startOffset":1011324,"endOffset":1011666,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameterChildren","ranges":[{"startOffset":1011669,"endOffset":1012593,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportSyntax","ranges":[{"startOffset":1012596,"endOffset":1012809,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrBareOrAccessedRequire","ranges":[{"startOffset":1012812,"endOffset":1012968,"count":0}],"isBlockCoverage":false},{"functionName":"isLateVisibilityPaintedStatement","ranges":[{"startOffset":1012971,"endOffset":1013484,"count":0}],"isBlockCoverage":false},{"functionName":"hasPossibleExternalModuleReference","ranges":[{"startOffset":1013487,"endOffset":1013659,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrReExport","ranges":[{"startOffset":1013662,"endOffset":1013769,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingContainer","ranges":[{"startOffset":1013772,"endOffset":1013907,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingBlockScopeContainer","ranges":[{"startOffset":1013910,"endOffset":1014052,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnclosingBlockScopeContainer","ranges":[{"startOffset":1014055,"endOffset":1014287,"count":0}],"isBlockCoverage":false},{"functionName":"declarationNameToString","ranges":[{"startOffset":1014290,"endOffset":1014416,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromIndexInfo","ranges":[{"startOffset":1014419,"endOffset":1014561,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedNonLiteralName","ranges":[{"startOffset":1014564,"endOffset":1014716,"count":20},{"startOffset":1014662,"endOffset":1014711,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetTextOfPropertyName","ranges":[{"startOffset":1014719,"endOffset":1015494,"count":20},{"startOffset":1014804,"endOffset":1014829,"count":0},{"startOffset":1014836,"endOffset":1014970,"count":0},{"startOffset":1015150,"endOffset":1015333,"count":0},{"startOffset":1015340,"endOffset":1015429,"count":0},{"startOffset":1015436,"endOffset":1015484,"count":0}],"isBlockCoverage":true},{"functionName":"getTextOfPropertyName","ranges":[{"startOffset":1015497,"endOffset":1015602,"count":20}],"isBlockCoverage":true},{"functionName":"entityNameToString","ranges":[{"startOffset":1015605,"endOffset":1016589,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNode","ranges":[{"startOffset":1016592,"endOffset":1016788,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArray","ranges":[{"startOffset":1016791,"endOffset":1017018,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeInSourceFile","ranges":[{"startOffset":1017021,"endOffset":1017251,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeFromMessageChain","ranges":[{"startOffset":1017254,"endOffset":1017536,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArrayFromMessageChain","ranges":[{"startOffset":1017539,"endOffset":1017830,"count":0}],"isBlockCoverage":false},{"functionName":"assertDiagnosticLocation","ranges":[{"startOffset":1017833,"endOffset":1018122,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnosticFromMessageChain","ranges":[{"startOffset":1018125,"endOffset":1018532,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForFileFromMessageChain","ranges":[{"startOffset":1018535,"endOffset":1018887,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticMessageChainFromDiagnostic","ranges":[{"startOffset":1018890,"endOffset":1019186,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForRange","ranges":[{"startOffset":1019189,"endOffset":1019456,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfTokenAtPosition","ranges":[{"startOffset":1019459,"endOffset":1019857,"count":0}],"isBlockCoverage":false},{"functionName":"scanTokenAtPosition","ranges":[{"startOffset":1019860,"endOffset":1020173,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForArrowFunction","ranges":[{"startOffset":1020176,"endOffset":1020721,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForNode","ranges":[{"startOffset":1020724,"endOffset":1023706,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalOrCommonJsModule","ranges":[{"startOffset":1023709,"endOffset":1023842,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonSourceFile","ranges":[{"startOffset":1023845,"endOffset":1023927,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumConst","ranges":[{"startOffset":1023930,"endOffset":1024028,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationReadonly","ranges":[{"startOffset":1024031,"endOffset":1024221,"count":0}],"isBlockCoverage":false},{"functionName":"isVarAwaitUsing","ranges":[{"startOffset":1024224,"endOffset":1024346,"count":0}],"isBlockCoverage":false},{"functionName":"isVarUsing","ranges":[{"startOffset":1024349,"endOffset":1024461,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConst","ranges":[{"startOffset":1024464,"endOffset":1024576,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":1024579,"endOffset":1024684,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperCall","ranges":[{"startOffset":1024687,"endOffset":1024812,"count":0}],"isBlockCoverage":false},{"functionName":"isImportCall","ranges":[{"startOffset":1024815,"endOffset":1024942,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta","ranges":[{"startOffset":1024945,"endOffset":1025084,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralImportTypeNode","ranges":[{"startOffset":1025087,"endOffset":1025232,"count":0}],"isBlockCoverage":false},{"functionName":"isPrologueDirective","ranges":[{"startOffset":1025235,"endOffset":1025382,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomPrologue","ranges":[{"startOffset":1025385,"endOffset":1025488,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedFunction","ranges":[{"startOffset":1025491,"endOffset":1025595,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariable","ranges":[{"startOffset":1025598,"endOffset":1025693,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariableStatement","ranges":[{"startOffset":1025696,"endOffset":1025870,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRangesOfNode","ranges":[{"startOffset":1025873,"endOffset":1026052,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentRanges","ranges":[{"startOffset":1026055,"endOffset":1026788,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeNode","ranges":[{"startOffset":1026791,"endOffset":1030165,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeExpressionWithTypeArguments","ranges":[{"startOffset":1030168,"endOffset":1030402,"count":0}],"isBlockCoverage":false},{"functionName":"isChildOfNodeWithKind","ranges":[{"startOffset":1030405,"endOffset":1030583,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReturnStatement","ranges":[{"startOffset":1030586,"endOffset":1031410,"count":0}],"isBlockCoverage":false},{"functionName":"forEachYieldExpression","ranges":[{"startOffset":1031413,"endOffset":1032268,"count":0}],"isBlockCoverage":false},{"functionName":"getRestParameterElementType","ranges":[{"startOffset":1032271,"endOffset":1032559,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOfDeclaration","ranges":[{"startOffset":1032562,"endOffset":1032898,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike","ranges":[{"startOffset":1032901,"endOffset":1033367,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLikeOrAccessor","ranges":[{"startOffset":1033370,"endOffset":1033468,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInVariableStatement","ranges":[{"startOffset":1033471,"endOffset":1033658,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportedExpression","ranges":[{"startOffset":1033661,"endOffset":1033979,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportPropertyAssignment","ranges":[{"startOffset":1033982,"endOffset":1034187,"count":0}],"isBlockCoverage":false},{"functionName":"isValidESSymbolDeclaration","ranges":[{"startOffset":1034190,"endOffset":1034579,"count":0}],"isBlockCoverage":false},{"functionName":"introducesArgumentsExoticObject","ranges":[{"startOffset":1034582,"endOffset":1034967,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapInnermostStatementOfLabel","ranges":[{"startOffset":1034970,"endOffset":1035294,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBlock","ranges":[{"startOffset":1035297,"endOffset":1035414,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralMethod","ranges":[{"startOffset":1035417,"endOffset":1035579,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralOrClassExpressionMethodOrAccessor","ranges":[{"startOffset":1035582,"endOffset":1035895,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypePredicate","ranges":[{"startOffset":1035898,"endOffset":1036012,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypePredicate","ranges":[{"startOffset":1036015,"endOffset":1036117,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPropertyAssignment","ranges":[{"startOffset":1036120,"endOffset":1036518,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyArrayElementValue","ranges":[{"startOffset":1036521,"endOffset":1036845,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigObjectLiteralExpression","ranges":[{"startOffset":1036848,"endOffset":1037124,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigPropArrayElementValue","ranges":[{"startOffset":1037127,"endOffset":1037464,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTsConfigPropArray","ranges":[{"startOffset":1037467,"endOffset":1037658,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunction","ranges":[{"startOffset":1037661,"endOffset":1037757,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionDeclaration","ranges":[{"startOffset":1037760,"endOffset":1037878,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClass","ranges":[{"startOffset":1037881,"endOffset":1037971,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassStaticBlock","ranges":[{"startOffset":1037974,"endOffset":1038205,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionOrClassStaticBlock","ranges":[{"startOffset":1038208,"endOffset":1038351,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassExcludingClassDecorators","ranges":[{"startOffset":1038354,"endOffset":1038649,"count":0}],"isBlockCoverage":false},{"functionName":"getThisContainer","ranges":[{"startOffset":1038652,"endOffset":1040232,"count":0}],"isBlockCoverage":false},{"functionName":"isThisContainerOrFunctionBlock","ranges":[{"startOffset":1040235,"endOffset":1040838,"count":0}],"isBlockCoverage":false},{"functionName":"isInTopLevelContext","ranges":[{"startOffset":1040841,"endOffset":1041241,"count":0}],"isBlockCoverage":false},{"functionName":"getNewTargetContainer","ranges":[{"startOffset":1041244,"endOffset":1041682,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperContainer","ranges":[{"startOffset":1041685,"endOffset":1042794,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":1042797,"endOffset":1043265,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperOrSuperProperty","ranges":[{"startOffset":1043268,"endOffset":1043385,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperProperty","ranges":[{"startOffset":1043388,"endOffset":1043607,"count":0}],"isBlockCoverage":false},{"functionName":"isThisProperty","ranges":[{"startOffset":1043610,"endOffset":1043827,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedDeclaration","ranges":[{"startOffset":1043830,"endOffset":1044023,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedObjectBindingExpression","ranges":[{"startOffset":1044026,"endOffset":1044344,"count":0}],"isBlockCoverage":false},{"functionName":"getEntityNameFromTypeNode","ranges":[{"startOffset":1044347,"endOffset":1044731,"count":0}],"isBlockCoverage":false},{"functionName":"getInvokedExpression","ranges":[{"startOffset":1044734,"endOffset":1045104,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCanBeDecorated","ranges":[{"startOffset":1045107,"endOffset":1046352,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsDecorated","ranges":[{"startOffset":1046355,"endOffset":1046537,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOrChildIsDecorated","ranges":[{"startOffset":1046540,"endOffset":1046759,"count":0}],"isBlockCoverage":false},{"functionName":"childIsDecorated","ranges":[{"startOffset":1046762,"endOffset":1047417,"count":0}],"isBlockCoverage":false},{"functionName":"classOrConstructorParameterIsDecorated","ranges":[{"startOffset":1047420,"endOffset":1047716,"count":0}],"isBlockCoverage":false},{"functionName":"classElementOrClassElementParameterIsDecorated","ranges":[{"startOffset":1047719,"endOffset":1048764,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringLiteral","ranges":[{"startOffset":1048767,"endOffset":1049129,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXTagName","ranges":[{"startOffset":1049132,"endOffset":1049422,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionNode","ranges":[{"startOffset":1049425,"endOffset":1052405,"count":0}],"isBlockCoverage":false},{"functionName":"isInExpressionContext","ranges":[{"startOffset":1052408,"endOffset":1054604,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeQuery","ranges":[{"startOffset":1054607,"endOffset":1054812,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReexportDeclaration","ranges":[{"startOffset":1054815,"endOffset":1054935,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":1054938,"endOffset":1055125,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleImportEqualsDeclarationExpression","ranges":[{"startOffset":1055128,"endOffset":1055308,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleRequireArgument","ranges":[{"startOffset":1055311,"endOffset":1055500,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalModuleImportEqualsDeclaration","ranges":[{"startOffset":1055503,"endOffset":1055690,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileJS","ranges":[{"startOffset":1055693,"endOffset":1055757,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJS","ranges":[{"startOffset":1055760,"endOffset":1055828,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSFile","ranges":[{"startOffset":1055831,"endOffset":1055929,"count":0}],"isBlockCoverage":false},{"functionName":"isInJsonFile","ranges":[{"startOffset":1055932,"endOffset":1056029,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJson","ranges":[{"startOffset":1056032,"endOffset":1056108,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSDoc","ranges":[{"startOffset":1056111,"endOffset":1056201,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocIndexSignature","ranges":[{"startOffset":1056204,"endOffset":1056532,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCall","ranges":[{"startOffset":1056535,"endOffset":1057030,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToRequire","ranges":[{"startOffset":1057033,"endOffset":1057219,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToBareOrAccessedRequire","ranges":[{"startOffset":1057222,"endOffset":1057421,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElementOfBareOrAccessedRequire","ranges":[{"startOffset":1057424,"endOffset":1057598,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedWithRequireHelper","ranges":[{"startOffset":1057601,"endOffset":1057928,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireVariableStatement","ranges":[{"startOffset":1057931,"endOffset":1058167,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleOrDoubleQuote","ranges":[{"startOffset":1058170,"endOffset":1058299,"count":0}],"isBlockCoverage":false},{"functionName":"isStringDoubleQuoted","ranges":[{"startOffset":1058302,"endOffset":1058456,"count":24}],"isBlockCoverage":true},{"functionName":"isAssignmentDeclaration","ranges":[{"startOffset":1058459,"endOffset":1058616,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveInitializer","ranges":[{"startOffset":1058619,"endOffset":1059067,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaredExpandoInitializer","ranges":[{"startOffset":1059070,"endOffset":1059246,"count":0}],"isBlockCoverage":false},{"functionName":"hasExpandoValueProperty","ranges":[{"startOffset":1059249,"endOffset":1059523,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedExpandoInitializer","ranges":[{"startOffset":1059526,"endOffset":1060200,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandoInitializer","ranges":[{"startOffset":1060203,"endOffset":1060833,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultedExpandoInitializer","ranges":[{"startOffset":1060836,"endOffset":1061246,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultedExpandoInitializer","ranges":[{"startOffset":1061249,"endOffset":1061640,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfExpando","ranges":[{"startOffset":1061643,"endOffset":1062172,"count":0}],"isBlockCoverage":false},{"functionName":"isSameEntityName","ranges":[{"startOffset":1062175,"endOffset":1063053,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostAssignedExpression","ranges":[{"startOffset":1063056,"endOffset":1063258,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsIdentifier","ranges":[{"startOffset":1063261,"endOffset":1063366,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleIdentifier","ranges":[{"startOffset":1063369,"endOffset":1063472,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsAccessExpression","ranges":[{"startOffset":1063475,"endOffset":1063703,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKind","ranges":[{"startOffset":1063706,"endOffset":1063903,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableObjectDefinePropertyCall","ranges":[{"startOffset":1063906,"endOffset":1064354,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeAccess","ranges":[{"startOffset":1064357,"endOffset":1064478,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeElementAccess","ranges":[{"startOffset":1064481,"endOffset":1064629,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticAccessExpression","ranges":[{"startOffset":1064632,"endOffset":1065025,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticElementAccessExpression","ranges":[{"startOffset":1065028,"endOffset":1065377,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticNameExpression","ranges":[{"startOffset":1065380,"endOffset":1065554,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrArgument","ranges":[{"startOffset":1065557,"endOffset":1065705,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKindWorker","ranges":[{"startOffset":1065708,"endOffset":1066851,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidZero","ranges":[{"startOffset":1066854,"endOffset":1066989,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessArgumentExpressionOrName","ranges":[{"startOffset":1066992,"endOffset":1067297,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessName","ranges":[{"startOffset":1067300,"endOffset":1067665,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationPropertyAccessKind","ranges":[{"startOffset":1067668,"endOffset":1068833,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBinaryExpression","ranges":[{"startOffset":1068836,"endOffset":1068988,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAssignment","ranges":[{"startOffset":1068991,"endOffset":1069146,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialPropertyDeclaration","ranges":[{"startOffset":1069149,"endOffset":1069404,"count":0}],"isBlockCoverage":false},{"functionName":"setValueDeclaration","ranges":[{"startOffset":1069407,"endOffset":1069856,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionSymbol","ranges":[{"startOffset":1069859,"endOffset":1070156,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifierFromDeclaration","ranges":[{"startOffset":1070159,"endOffset":1071473,"count":0}],"isBlockCoverage":false},{"functionName":"importFromModuleSpecifier","ranges":[{"startOffset":1071476,"endOffset":1071612,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportFromModuleSpecifier","ranges":[{"startOffset":1071615,"endOffset":1072289,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName","ranges":[{"startOffset":1072292,"endOffset":1073008,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceDeclarationNode","ranges":[{"startOffset":1073011,"endOffset":1073472,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultImport","ranges":[{"startOffset":1073475,"endOffset":1073616,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportClauseDeclaration","ranges":[{"startOffset":1073619,"endOffset":1073994,"count":0}],"isBlockCoverage":false},{"functionName":"hasQuestionToken","ranges":[{"startOffset":1073997,"endOffset":1074454,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocConstructSignature","ranges":[{"startOffset":1074457,"endOffset":1074703,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAlias","ranges":[{"startOffset":1074706,"endOffset":1074879,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":1074882,"endOffset":1074981,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceOfAssignment","ranges":[{"startOffset":1074984,"endOffset":1075227,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceOfDefaultedAssignment","ranges":[{"startOffset":1075230,"endOffset":1075660,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleInitializerOfVariableStatementOrPropertyDeclaration","ranges":[{"startOffset":1075663,"endOffset":1076061,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleVariableOfVariableStatement","ranges":[{"startOffset":1076064,"endOffset":1076222,"count":0}],"isBlockCoverage":false},{"functionName":"getNestedModuleDeclaration","ranges":[{"startOffset":1076225,"endOffset":1076394,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveFlowNode","ranges":[{"startOffset":1076397,"endOffset":1077123,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveJSDoc","ranges":[{"startOffset":1077126,"endOffset":1079817,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentsAndTags","ranges":[{"startOffset":1079820,"endOffset":1080727,"count":0}],"isBlockCoverage":false},{"functionName":"filterOwnedJSDocTags","ranges":[{"startOffset":1080730,"endOffset":1081131,"count":0}],"isBlockCoverage":false},{"functionName":"ownsJSDocTag","ranges":[{"startOffset":1081134,"endOffset":1081361,"count":0}],"isBlockCoverage":false},{"functionName":"getNextJSDocCommentLocation","ranges":[{"startOffset":1081364,"endOffset":1082322,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterSymbolFromJSDoc","ranges":[{"startOffset":1082325,"endOffset":1082787,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveContainerForJSDocTemplateTag","ranges":[{"startOffset":1082790,"endOffset":1083076,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverloadTags","ranges":[{"startOffset":1083079,"endOffset":1083174,"count":0}],"isBlockCoverage":false},{"functionName":"getHostSignatureFromJSDoc","ranges":[{"startOffset":1083177,"endOffset":1083443,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveJSDocHost","ranges":[{"startOffset":1083446,"endOffset":1083789,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocHost","ranges":[{"startOffset":1083792,"endOffset":1084035,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocRoot","ranges":[{"startOffset":1084038,"endOffset":1084118,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterFromJsDoc","ranges":[{"startOffset":1084121,"endOffset":1084352,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeArguments","ranges":[{"startOffset":1084355,"endOffset":1084425,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTarget","ranges":[{"startOffset":1084428,"endOffset":1086103,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTargetKind","ranges":[{"startOffset":1086106,"endOffset":1086760,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":1086763,"endOffset":1086842,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundLikeAssignment","ranges":[{"startOffset":1086845,"endOffset":1087056,"count":0}],"isBlockCoverage":false},{"functionName":"isInCompoundLikeAssignment","ranges":[{"startOffset":1087059,"endOffset":1087303,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithPossibleHoistedDeclaration","ranges":[{"startOffset":1087306,"endOffset":1087998,"count":0}],"isBlockCoverage":false},{"functionName":"isValueSignatureDeclaration","ranges":[{"startOffset":1088001,"endOffset":1088206,"count":0}],"isBlockCoverage":false},{"functionName":"walkUp","ranges":[{"startOffset":1088209,"endOffset":1088332,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypes","ranges":[{"startOffset":1088335,"endOffset":1088434,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedExpressions","ranges":[{"startOffset":1088437,"endOffset":1088548,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypesAndGetParentAndChild","ranges":[{"startOffset":1088551,"endOffset":1088773,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeParentheses","ranges":[{"startOffset":1088776,"endOffset":1088899,"count":0}],"isBlockCoverage":false},{"functionName":"skipParentheses","ranges":[{"startOffset":1088902,"endOffset":1089139,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteTarget","ranges":[{"startOffset":1089142,"endOffset":1089431,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeDescendantOf","ranges":[{"startOffset":1089434,"endOffset":1089602,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationName","ranges":[{"startOffset":1089605,"endOffset":1089761,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFromName","ranges":[{"startOffset":1089764,"endOffset":1090796,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralComputedPropertyDeclarationName","ranges":[{"startOffset":1090799,"endOffset":1090999,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":1091002,"endOffset":1091925,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasSymbolDeclaration","ranges":[{"startOffset":1091928,"endOffset":1092774,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasDeclarationFromName","ranges":[{"startOffset":1092777,"endOffset":1093356,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasableExpression","ranges":[{"startOffset":1093359,"endOffset":1093460,"count":0}],"isBlockCoverage":false},{"functionName":"exportAssignmentIsAlias","ranges":[{"startOffset":1093463,"endOffset":1093595,"count":0}],"isBlockCoverage":false},{"functionName":"getExportAssignmentExpression","ranges":[{"startOffset":1093598,"endOffset":1093716,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentAliasLikeExpression","ranges":[{"startOffset":1093719,"endOffset":1093940,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveBaseTypeNode","ranges":[{"startOffset":1093943,"endOffset":1094210,"count":0}],"isBlockCoverage":false},{"functionName":"getClassExtendsHeritageElement","ranges":[{"startOffset":1094213,"endOffset":1094454,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveImplementsTypeNodes","ranges":[{"startOffset":1094457,"endOffset":1094787,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSuperTypeNodes","ranges":[{"startOffset":1094790,"endOffset":1095072,"count":0}],"isBlockCoverage":false},{"functionName":"getInterfaceBaseTypeNodes","ranges":[{"startOffset":1095075,"endOffset":1095273,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClause","ranges":[{"startOffset":1095276,"endOffset":1095485,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestor","ranges":[{"startOffset":1095488,"endOffset":1095657,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1095660,"endOffset":1095768,"count":86},{"startOffset":1095730,"endOffset":1095745,"count":12}],"isBlockCoverage":true},{"functionName":"isPunctuation","ranges":[{"startOffset":1095771,"endOffset":1095890,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordOrPunctuation","ranges":[{"startOffset":1095893,"endOffset":1095990,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeyword","ranges":[{"startOffset":1095993,"endOffset":1096132,"count":0}],"isBlockCoverage":false},{"functionName":"isNonContextualKeyword","ranges":[{"startOffset":1096135,"endOffset":1096239,"count":0}],"isBlockCoverage":false},{"functionName":"isFutureReservedKeyword","ranges":[{"startOffset":1096242,"endOffset":1096387,"count":0}],"isBlockCoverage":false},{"functionName":"isStringANonContextualKeyword","ranges":[{"startOffset":1096390,"endOffset":1096541,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAKeyword","ranges":[{"startOffset":1096544,"endOffset":1096669,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierANonContextualKeyword","ranges":[{"startOffset":1096672,"endOffset":1096868,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia","ranges":[{"startOffset":1096871,"endOffset":1096983,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionFlags","ranges":[{"startOffset":1096986,"endOffset":1097577,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":1097580,"endOffset":1097942,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteralLike","ranges":[{"startOffset":1097945,"endOffset":1098058,"count":0}],"isBlockCoverage":false},{"functionName":"isSignedNumericLiteral","ranges":[{"startOffset":1098061,"endOffset":1098263,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicName","ranges":[{"startOffset":1098266,"endOffset":1098402,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicName","ranges":[{"startOffset":1098405,"endOffset":1098767,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForPropertyNameNode","ranges":[{"startOffset":1098770,"endOffset":1099805,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyNameLiteral","ranges":[{"startOffset":1099808,"endOffset":1100092,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfIdentifierOrLiteral","ranges":[{"startOffset":1100095,"endOffset":1100265,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfIdentifierOrLiteral","ranges":[{"startOffset":1100268,"endOffset":1100482,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForUniqueESSymbol","ranges":[{"startOffset":1100485,"endOffset":1100602,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNameForPrivateIdentifier","ranges":[{"startOffset":1100605,"endOffset":1100761,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownSymbol","ranges":[{"startOffset":1100764,"endOffset":1100850,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierSymbol","ranges":[{"startOffset":1100853,"endOffset":1100951,"count":0}],"isBlockCoverage":false},{"functionName":"isESSymbolIdentifier","ranges":[{"startOffset":1100954,"endOffset":1101074,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoSetter","ranges":[{"startOffset":1101077,"endOffset":1101226,"count":0}],"isBlockCoverage":false},{"functionName":"isAnonymousFunctionDefinition","ranges":[{"startOffset":1101229,"endOffset":1101760,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluationSource","ranges":[{"startOffset":1101763,"endOffset":1102861,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluation","ranges":[{"startOffset":1102864,"endOffset":1103668,"count":0}],"isBlockCoverage":false},{"functionName":"isPushOrUnshiftIdentifier","ranges":[{"startOffset":1103671,"endOffset":1103791,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterDeclaration","ranges":[{"startOffset":1103794,"endOffset":1103926,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDeclaration","ranges":[{"startOffset":1103929,"endOffset":1104077,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStartsNewLexicalEnvironment","ranges":[{"startOffset":1104080,"endOffset":1104503,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsSynthesized","ranges":[{"startOffset":1104506,"endOffset":1104626,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalSourceFile","ranges":[{"startOffset":1104629,"endOffset":1104746,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionAssociativity","ranges":[{"startOffset":1104749,"endOffset":1105031,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorAssociativity","ranges":[{"startOffset":1105034,"endOffset":1106482,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionPrecedence","ranges":[{"startOffset":1106485,"endOffset":1106761,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":1106764,"endOffset":1107113,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorPrecedence","ranges":[{"startOffset":1107116,"endOffset":1110405,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryOperatorPrecedence","ranges":[{"startOffset":1110408,"endOffset":1111975,"count":20},{"startOffset":1110479,"endOffset":1110548,"count":0},{"startOffset":1110555,"endOffset":1110615,"count":0},{"startOffset":1110622,"endOffset":1110695,"count":0},{"startOffset":1110702,"endOffset":1110759,"count":0},{"startOffset":1110766,"endOffset":1110826,"count":0},{"startOffset":1110833,"endOffset":1110897,"count":0},{"startOffset":1110904,"endOffset":1110936,"count":0},{"startOffset":1110943,"endOffset":1110980,"count":0},{"startOffset":1110987,"endOffset":1111025,"count":0},{"startOffset":1111032,"endOffset":1111109,"count":0},{"startOffset":1111116,"endOffset":1111144,"count":0},{"startOffset":1111151,"endOffset":1111182,"count":0},{"startOffset":1111189,"endOffset":1111223,"count":0},{"startOffset":1111230,"endOffset":1111267,"count":0},{"startOffset":1111274,"endOffset":1111307,"count":0},{"startOffset":1111314,"endOffset":1111339,"count":0},{"startOffset":1111346,"endOffset":1111371,"count":0},{"startOffset":1111378,"endOffset":1111446,"count":0},{"startOffset":1111453,"endOffset":1111489,"count":0},{"startOffset":1111496,"endOffset":1111538,"count":0},{"startOffset":1111545,"endOffset":1111629,"count":0},{"startOffset":1111636,"endOffset":1111660,"count":0},{"startOffset":1111667,"endOffset":1111726,"count":0},{"startOffset":1111733,"endOffset":1111761,"count":0},{"startOffset":1111768,"endOffset":1111793,"count":0},{"startOffset":1111800,"endOffset":1111867,"count":0},{"startOffset":1111874,"endOffset":1111950,"count":0}],"isBlockCoverage":true},{"functionName":"getSemanticJsxChildren","ranges":[{"startOffset":1111978,"endOffset":1112295,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticCollection","ranges":[{"startOffset":1112298,"endOffset":1114294,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTemplateSubstitution","ranges":[{"startOffset":1114297,"endOffset":1114403,"count":0}],"isBlockCoverage":false},{"functionName":"containsInvalidEscapeFlag","ranges":[{"startOffset":1114406,"endOffset":1114529,"count":0}],"isBlockCoverage":false},{"functionName":"hasInvalidEscape","ranges":[{"startOffset":1114532,"endOffset":1114807,"count":0}],"isBlockCoverage":false},{"functionName":"encodeUtf16EscapeSequence","ranges":[{"startOffset":1114810,"endOffset":1115015,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacement","ranges":[{"startOffset":1115018,"endOffset":1115384,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":1115387,"endOffset":1115685,"count":0}],"isBlockCoverage":false},{"functionName":"escapeNonAsciiString","ranges":[{"startOffset":1115688,"endOffset":1115899,"count":0}],"isBlockCoverage":false},{"functionName":"encodeJsxCharacterEntity","ranges":[{"startOffset":1115902,"endOffset":1116050,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxAttributeStringReplacement","ranges":[{"startOffset":1116053,"endOffset":1116266,"count":0}],"isBlockCoverage":false},{"functionName":"escapeJsxAttributeString","ranges":[{"startOffset":1116269,"endOffset":1116535,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":1116538,"endOffset":1116791,"count":0}],"isBlockCoverage":false},{"functionName":"isQuoteOrBacktick","ranges":[{"startOffset":1116794,"endOffset":1116953,"count":0}],"isBlockCoverage":false},{"functionName":"isIntrinsicJsxName","ranges":[{"startOffset":1116956,"endOffset":1117102,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":1117105,"endOffset":1117367,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentSize","ranges":[{"startOffset":1117370,"endOffset":1117436,"count":0}],"isBlockCoverage":false},{"functionName":"createTextWriter","ranges":[{"startOffset":1117439,"endOffset":1120149,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingSemicolonDeferringWriter","ranges":[{"startOffset":1120152,"endOffset":1121976,"count":0}],"isBlockCoverage":false},{"functionName":"hostUsesCaseSensitiveFileNames","ranges":[{"startOffset":1121979,"endOffset":1122116,"count":0}],"isBlockCoverage":false},{"functionName":"hostGetCanonicalFileName","ranges":[{"startOffset":1122119,"endOffset":1122241,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedExternalModuleName","ranges":[{"startOffset":1122244,"endOffset":1122438,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalAbsolutePath","ranges":[{"startOffset":1122441,"endOffset":1122591,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromDeclaration","ranges":[{"startOffset":1122594,"endOffset":1123204,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromPath","ranges":[{"startOffset":1123207,"endOffset":1123914,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEmitOutputFilePath","ranges":[{"startOffset":1123917,"endOffset":1124399,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePath","ranges":[{"startOffset":1124402,"endOffset":1124651,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePathWorker","ranges":[{"startOffset":1124654,"endOffset":1125146,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitExtensionForPath","ranges":[{"startOffset":1125149,"endOffset":1125601,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputExtensionForExtension","ranges":[{"startOffset":1125604,"endOffset":1126073,"count":0}],"isBlockCoverage":false},{"functionName":"outFile","ranges":[{"startOffset":1126076,"endOffset":1126150,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsBasePath","ranges":[{"startOffset":1126153,"endOffset":1126487,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilesToEmit","ranges":[{"startOffset":1126490,"endOffset":1127260,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileMayBeEmitted","ranges":[{"startOffset":1127263,"endOffset":1128570,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDir","ranges":[{"startOffset":1128573,"endOffset":1128805,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDirWorker","ranges":[{"startOffset":1128808,"endOffset":1129349,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":1129352,"endOffset":1129723,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDirectoriesExist","ranges":[{"startOffset":1129726,"endOffset":1130098,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileEnsuringDirectories","ranges":[{"startOffset":1130101,"endOffset":1130455,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPosition","ranges":[{"startOffset":1130458,"endOffset":1130613,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPositionFromLineMap","ranges":[{"startOffset":1130616,"endOffset":1130726,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstConstructorWithBody","ranges":[{"startOffset":1130729,"endOffset":1130884,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorValueParameter","ranges":[{"startOffset":1130887,"endOffset":1131157,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorTypeAnnotationNode","ranges":[{"startOffset":1131160,"endOffset":1131319,"count":0}],"isBlockCoverage":false},{"functionName":"getThisParameter","ranges":[{"startOffset":1131322,"endOffset":1131583,"count":0}],"isBlockCoverage":false},{"functionName":"parameterIsThisKeyword","ranges":[{"startOffset":1131586,"endOffset":1131679,"count":0}],"isBlockCoverage":false},{"functionName":"isThisIdentifier","ranges":[{"startOffset":1131682,"endOffset":1131808,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeQuery","ranges":[{"startOffset":1131811,"endOffset":1132030,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInTypeQuery","ranges":[{"startOffset":1132033,"endOffset":1132289,"count":0}],"isBlockCoverage":false},{"functionName":"identifierIsThisKeyword","ranges":[{"startOffset":1132292,"endOffset":1132372,"count":0}],"isBlockCoverage":false},{"functionName":"getAllAccessorDeclarations","ranges":[{"startOffset":1132375,"endOffset":1133732,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeAnnotationNode","ranges":[{"startOffset":1133735,"endOffset":1134059,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationNode","ranges":[{"startOffset":1134062,"endOffset":1134126,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveReturnTypeNode","ranges":[{"startOffset":1134129,"endOffset":1134354,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterDeclarations","ranges":[{"startOffset":1134357,"endOffset":1134519,"count":0}],"isBlockCoverage":false},{"functionName":"isNonTypeAliasTemplate","ranges":[{"startOffset":1134522,"endOffset":1134730,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveSetAccessorTypeAnnotationNode","ranges":[{"startOffset":1134733,"endOffset":1134920,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingComments","ranges":[{"startOffset":1134923,"endOffset":1135102,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentsOfPosition","ranges":[{"startOffset":1135105,"endOffset":1135442,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentOfPosition","ranges":[{"startOffset":1135445,"endOffset":1135707,"count":0}],"isBlockCoverage":false},{"functionName":"emitComments","ranges":[{"startOffset":1135710,"endOffset":1136490,"count":0}],"isBlockCoverage":false},{"functionName":"emitDetachedComments","ranges":[{"startOffset":1136493,"endOffset":1138334,"count":0}],"isBlockCoverage":false},{"functionName":"writeCommentRange","ranges":[{"startOffset":1138337,"endOffset":1140023,"count":0}],"isBlockCoverage":false},{"functionName":"writeTrimmedCurrentLine","ranges":[{"startOffset":1140026,"endOffset":1140427,"count":0}],"isBlockCoverage":false},{"functionName":"calculateIndent","ranges":[{"startOffset":1140430,"endOffset":1140808,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifiers","ranges":[{"startOffset":1140811,"endOffset":1140914,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifiers","ranges":[{"startOffset":1140917,"endOffset":1141020,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifier","ranges":[{"startOffset":1141023,"endOffset":1141132,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifier","ranges":[{"startOffset":1141135,"endOffset":1141244,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":1141247,"endOffset":1141375,"count":0}],"isBlockCoverage":false},{"functionName":"hasStaticModifier","ranges":[{"startOffset":1141378,"endOffset":1141473,"count":0}],"isBlockCoverage":false},{"functionName":"hasOverrideModifier","ranges":[{"startOffset":1141476,"endOffset":1141574,"count":0}],"isBlockCoverage":false},{"functionName":"hasAbstractModifier","ranges":[{"startOffset":1141577,"endOffset":1141675,"count":0}],"isBlockCoverage":false},{"functionName":"hasAmbientModifier","ranges":[{"startOffset":1141678,"endOffset":1141775,"count":0}],"isBlockCoverage":false},{"functionName":"hasAccessorModifier","ranges":[{"startOffset":1141778,"endOffset":1141877,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveReadonlyModifier","ranges":[{"startOffset":1141880,"endOffset":1141986,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":1141989,"endOffset":1142085,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedEffectiveModifierFlags","ranges":[{"startOffset":1142088,"endOffset":1142201,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedSyntacticModifierFlags","ranges":[{"startOffset":1142204,"endOffset":1142317,"count":0}],"isBlockCoverage":false},{"functionName":"getModifierFlagsWorker","ranges":[{"startOffset":1142320,"endOffset":1143126,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlags","ranges":[{"startOffset":1143129,"endOffset":1143263,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":1143266,"endOffset":1143459,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlags","ranges":[{"startOffset":1143462,"endOffset":1143597,"count":0}],"isBlockCoverage":false},{"functionName":"getRawJSDocModifierFlagsNoCache","ranges":[{"startOffset":1143600,"endOffset":1144349,"count":0}],"isBlockCoverage":false},{"functionName":"selectSyntacticModifierFlags","ranges":[{"startOffset":1144352,"endOffset":1144453,"count":0}],"isBlockCoverage":false},{"functionName":"selectEffectiveModifierFlags","ranges":[{"startOffset":1144456,"endOffset":1144620,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocModifierFlagsNoCache","ranges":[{"startOffset":1144623,"endOffset":1144752,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsNoCache","ranges":[{"startOffset":1144755,"endOffset":1144896,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlagsNoCache","ranges":[{"startOffset":1144899,"endOffset":1145239,"count":0}],"isBlockCoverage":false},{"functionName":"modifiersToFlags","ranges":[{"startOffset":1145242,"endOffset":1145457,"count":0}],"isBlockCoverage":false},{"functionName":"modifierToFlag","ranges":[{"startOffset":1145460,"endOffset":1146655,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryLogicalOperator","ranges":[{"startOffset":1146658,"endOffset":1146792,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator","ranges":[{"startOffset":1146795,"endOffset":1146916,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentOperator","ranges":[{"startOffset":1146919,"endOffset":1147131,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentExpression","ranges":[{"startOffset":1147134,"endOffset":1147301,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryOperator","ranges":[{"startOffset":1147304,"endOffset":1147448,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryExpression","ranges":[{"startOffset":1147451,"endOffset":1147610,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperator","ranges":[{"startOffset":1147613,"endOffset":1147737,"count":20},{"startOffset":1147697,"endOffset":1147711,"count":0}],"isBlockCoverage":true},{"functionName":"tryGetClassExtendingExpressionWithTypeArguments","ranges":[{"startOffset":1147740,"endOffset":1147951,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassImplementingOrExtendingExpressionWithTypeArguments","ranges":[{"startOffset":1147954,"endOffset":1148521,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":1148524,"endOffset":1148800,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideOfAssignment","ranges":[{"startOffset":1148803,"endOffset":1148927,"count":0}],"isBlockCoverage":false},{"functionName":"isDestructuringAssignment","ranges":[{"startOffset":1148930,"endOffset":1149237,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArgumentsInClassExtendsClause","ranges":[{"startOffset":1149240,"endOffset":1149387,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityNameExpression","ranges":[{"startOffset":1149390,"endOffset":1149525,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIdentifier","ranges":[{"startOffset":1149528,"endOffset":1149970,"count":0}],"isBlockCoverage":false},{"functionName":"isDottedName","ranges":[{"startOffset":1149973,"endOffset":1150340,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessEntityNameExpression","ranges":[{"startOffset":1150343,"endOffset":1150515,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyAccessOrIdentifierToString","ranges":[{"startOffset":1150518,"endOffset":1151324,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypeAccess","ranges":[{"startOffset":1151327,"endOffset":1151472,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess","ranges":[{"startOffset":1151475,"endOffset":1151789,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfAccessExpression","ranges":[{"startOffset":1151792,"endOffset":1152027,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName","ranges":[{"startOffset":1152030,"endOffset":1152317,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceOfExpression","ranges":[{"startOffset":1152320,"endOffset":1152459,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfInstanceofExpression","ranges":[{"startOffset":1152462,"endOffset":1152594,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObjectLiteral","ranges":[{"startOffset":1152597,"endOffset":1152748,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArrayLiteral","ranges":[{"startOffset":1152751,"endOffset":1152898,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportDefault","ranges":[{"startOffset":1152901,"endOffset":1153171,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSymbol","ranges":[{"startOffset":1153174,"endOffset":1153340,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtractTSExtension","ranges":[{"startOffset":1153343,"endOffset":1153501,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandedCharCodes","ranges":[{"startOffset":1153504,"endOffset":1154355,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBase64","ranges":[{"startOffset":1154358,"endOffset":1155076,"count":0}],"isBlockCoverage":false},{"functionName":"getStringFromExpandedCharCodes","ranges":[{"startOffset":1155079,"endOffset":1155777,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":1155780,"endOffset":1155937,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":1155940,"endOffset":1156949,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonOrUndefined","ranges":[{"startOffset":1156952,"endOffset":1157241,"count":0}],"isBlockCoverage":false},{"functionName":"readJson","ranges":[{"startOffset":1157244,"endOffset":1157329,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseJson","ranges":[{"startOffset":1157332,"endOffset":1157447,"count":0}],"isBlockCoverage":false},{"functionName":"directoryProbablyExists","ranges":[{"startOffset":1157450,"endOffset":1157582,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineCharacter","ranges":[{"startOffset":1157585,"endOffset":1157820,"count":10},{"startOffset":1157662,"endOffset":1157737,"count":0},{"startOffset":1157744,"endOffset":1157766,"count":0}],"isBlockCoverage":true},{"functionName":"createRange","ranges":[{"startOffset":1157823,"endOffset":1157934,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangeEnd","ranges":[{"startOffset":1157937,"endOffset":1158016,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePos","ranges":[{"startOffset":1158019,"endOffset":1158098,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastDecorators","ranges":[{"startOffset":1158101,"endOffset":1158362,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastModifiers","ranges":[{"startOffset":1158365,"endOffset":1158762,"count":0}],"isBlockCoverage":false},{"functionName":"isCollapsedRange","ranges":[{"startOffset":1158765,"endOffset":1158839,"count":0}],"isBlockCoverage":false},{"functionName":"createTokenRange","ranges":[{"startOffset":1158842,"endOffset":1158949,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnSingleLine","ranges":[{"startOffset":1158952,"endOffset":1159076,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartPositionsAreOnSameLine","ranges":[{"startOffset":1159079,"endOffset":1159449,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndPositionsAreOnSameLine","ranges":[{"startOffset":1159452,"endOffset":1159596,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartIsOnSameLineAsRangeEnd","ranges":[{"startOffset":1159599,"endOffset":1159835,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndIsOnSameLineAsRangeStart","ranges":[{"startOffset":1159838,"endOffset":1160074,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndAndRangeStart","ranges":[{"startOffset":1160077,"endOffset":1160355,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndPositions","ranges":[{"startOffset":1160358,"endOffset":1160506,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArrayMultiLine","ranges":[{"startOffset":1160509,"endOffset":1160630,"count":0}],"isBlockCoverage":false},{"functionName":"positionsAreOnSameLine","ranges":[{"startOffset":1160633,"endOffset":1160761,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfRange","ranges":[{"startOffset":1160764,"endOffset":1161012,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter","ranges":[{"startOffset":1161015,"endOffset":1161432,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndNextNonWhitespaceCharacter","ranges":[{"startOffset":1161435,"endOffset":1161764,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousNonWhitespacePosition","ranges":[{"startOffset":1161767,"endOffset":1161972,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOfEnumOrNamespace","ranges":[{"startOffset":1161975,"endOffset":1162304,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializedVariables","ranges":[{"startOffset":1162307,"endOffset":1162412,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedVariable","ranges":[{"startOffset":1162415,"endOffset":1162528,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchSet","ranges":[{"startOffset":1162531,"endOffset":1162624,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcher","ranges":[{"startOffset":1162627,"endOffset":1162688,"count":0}],"isBlockCoverage":false},{"functionName":"getCheckFlags","ranges":[{"startOffset":1162691,"endOffset":1162809,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationModifierFlagsFromSymbol","ranges":[{"startOffset":1162812,"endOffset":1163813,"count":0}],"isBlockCoverage":false},{"functionName":"skipAlias","ranges":[{"startOffset":1163816,"endOffset":1163948,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedLocalAndExportSymbolFlags","ranges":[{"startOffset":1163951,"endOffset":1164100,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnlyAccess","ranges":[{"startOffset":1164103,"endOffset":1164188,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccess","ranges":[{"startOffset":1164191,"endOffset":1164271,"count":0}],"isBlockCoverage":false},{"functionName":"accessKind","ranges":[{"startOffset":1164274,"endOffset":1165597,"count":0}],"isBlockCoverage":false},{"functionName":"reverseAccessKind","ranges":[{"startOffset":1165600,"endOffset":1165884,"count":0}],"isBlockCoverage":false},{"functionName":"compareDataObjects","ranges":[{"startOffset":1165887,"endOffset":1166334,"count":0}],"isBlockCoverage":false},{"functionName":"clearMap","ranges":[{"startOffset":1166337,"endOffset":1166432,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMapSkippingNewValues","ranges":[{"startOffset":1166435,"endOffset":1166895,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMap","ranges":[{"startOffset":1166898,"endOffset":1167214,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractConstructorSymbol","ranges":[{"startOffset":1167217,"endOffset":1167483,"count":0}],"isBlockCoverage":false},{"functionName":"getClassLikeDeclarationOfSymbol","ranges":[{"startOffset":1167486,"endOffset":1167631,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectFlags","ranges":[{"startOffset":1167634,"endOffset":1167747,"count":0}],"isBlockCoverage":false},{"functionName":"forSomeAncestorDirectory","ranges":[{"startOffset":1167750,"endOffset":1167896,"count":0}],"isBlockCoverage":false},{"functionName":"isUMDExportSymbol","ranges":[{"startOffset":1167899,"endOffset":1168069,"count":0}],"isBlockCoverage":false},{"functionName":"showModuleSpecifier","ranges":[{"startOffset":1168072,"endOffset":1168228,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChild","ranges":[{"startOffset":1168231,"endOffset":1168598,"count":0}],"isBlockCoverage":false},{"functionName":"addToSeen","ranges":[{"startOffset":1168601,"endOffset":1168744,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeDeclaration","ranges":[{"startOffset":1168747,"endOffset":1168880,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNodeKind","ranges":[{"startOffset":1168883,"endOffset":1169757,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessExpression","ranges":[{"startOffset":1169760,"endOffset":1169911,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfAccessExpression","ranges":[{"startOffset":1169914,"endOffset":1170153,"count":0}],"isBlockCoverage":false},{"functionName":"isBundleFileTextLike","ranges":[{"startOffset":1170156,"endOffset":1170360,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportsOrExports","ranges":[{"startOffset":1170363,"endOffset":1170496,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostAccessExpression","ranges":[{"startOffset":1170499,"endOffset":1170639,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameInAccessChainWalkingLeft","ranges":[{"startOffset":1170642,"endOffset":1171650,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostExpression","ranges":[{"startOffset":1171653,"endOffset":1172619,"count":0}],"isBlockCoverage":false},{"functionName":"Symbol4","ranges":[{"startOffset":1172622,"endOffset":1173062,"count":0}],"isBlockCoverage":false},{"functionName":"Type3","ranges":[{"startOffset":1173065,"endOffset":1173201,"count":0}],"isBlockCoverage":false},{"functionName":"Signature2","ranges":[{"startOffset":1173204,"endOffset":1173334,"count":0}],"isBlockCoverage":false},{"functionName":"Node4","ranges":[{"startOffset":1173337,"endOffset":1173649,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":1173652,"endOffset":1173892,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier2","ranges":[{"startOffset":1173895,"endOffset":1174169,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapSource","ranges":[{"startOffset":1174172,"endOffset":1174336,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectAllocatorPatcher","ranges":[{"startOffset":1174339,"endOffset":1174446,"count":1}],"isBlockCoverage":true},{"functionName":"setObjectAllocator","ranges":[{"startOffset":1174449,"endOffset":1174599,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1174566,"endOffset":1174593,"count":0}],"isBlockCoverage":false},{"functionName":"formatStringFromArgs","ranges":[{"startOffset":1174602,"endOffset":1174744,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1174682,"endOffset":1174738,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalizedDiagnosticMessages","ranges":[{"startOffset":1174747,"endOffset":1174846,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetLocalizedDiagnosticMessages","ranges":[{"startOffset":1174849,"endOffset":1175024,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleSpecificMessage","ranges":[{"startOffset":1175027,"endOffset":1175178,"count":26},{"startOffset":1175111,"endOffset":1175154,"count":0}],"isBlockCoverage":true},{"functionName":"createDetachedDiagnostic","ranges":[{"startOffset":1175181,"endOffset":1175785,"count":0}],"isBlockCoverage":false},{"functionName":"isDiagnosticWithDetachedLocation","ranges":[{"startOffset":1175788,"endOffset":1175992,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostic","ranges":[{"startOffset":1175995,"endOffset":1177238,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostics","ranges":[{"startOffset":1177241,"endOffset":1177502,"count":2},{"startOffset":1177377,"endOffset":1177462,"count":0}],"isBlockCoverage":true},{"functionName":"createFileDiagnostic","ranges":[{"startOffset":1177505,"endOffset":1178020,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":1178023,"endOffset":1178211,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnostic","ranges":[{"startOffset":1178214,"endOffset":1178669,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticFromMessageChain","ranges":[{"startOffset":1178672,"endOffset":1178977,"count":0}],"isBlockCoverage":false},{"functionName":"chainDiagnosticMessages","ranges":[{"startOffset":1178980,"endOffset":1179354,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateDiagnosticMessageChains","ranges":[{"startOffset":1179357,"endOffset":1179565,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticFilePath","ranges":[{"startOffset":1179568,"endOffset":1179676,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnostics","ranges":[{"startOffset":1179679,"endOffset":1179837,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnosticsSkipRelatedInformation","ranges":[{"startOffset":1179840,"endOffset":1180181,"count":0}],"isBlockCoverage":false},{"functionName":"compareRelatedInformation","ranges":[{"startOffset":1180184,"endOffset":1180731,"count":0}],"isBlockCoverage":false},{"functionName":"compareMessageText","ranges":[{"startOffset":1180734,"endOffset":1181733,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageVariant","ranges":[{"startOffset":1181736,"endOffset":1181943,"count":4},{"startOffset":1181920,"endOffset":1181923,"count":0}],"isBlockCoverage":true},{"functionName":"walkTreeForJSXTags","ranges":[{"startOffset":1181946,"endOffset":1182173,"count":0}],"isBlockCoverage":false},{"functionName":"isFileModuleFromUsingJSXTag","ranges":[{"startOffset":1182176,"endOffset":1182296,"count":0}],"isBlockCoverage":false},{"functionName":"isFileForcedToBeModuleByFormat","ranges":[{"startOffset":1182299,"endOffset":1182563,"count":0}],"isBlockCoverage":false},{"functionName":"getSetExternalModuleIndicator","ranges":[{"startOffset":1182566,"endOffset":1183432,"count":0}],"isBlockCoverage":false},{"functionName":"createComputedCompilerOptions","ranges":[{"startOffset":1183435,"endOffset":1183508,"count":1}],"isBlockCoverage":true},{"functionName":"emitModuleKindIsNonNodeESM","ranges":[{"startOffset":1183511,"endOffset":1183638,"count":0}],"isBlockCoverage":false},{"functionName":"hasJsonModuleEmitEnabled","ranges":[{"startOffset":1183641,"endOffset":1183852,"count":0}],"isBlockCoverage":false},{"functionName":"importNameElisionDisabled","ranges":[{"startOffset":1183855,"endOffset":1184004,"count":0}],"isBlockCoverage":false},{"functionName":"unreachableCodeIsError","ranges":[{"startOffset":1184007,"endOffset":1184104,"count":0}],"isBlockCoverage":false},{"functionName":"unusedLabelIsError","ranges":[{"startOffset":1184107,"endOffset":1184197,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionSupportsPackageJsonExportsAndImports","ranges":[{"startOffset":1184200,"endOffset":1184415,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptionValue","ranges":[{"startOffset":1184418,"endOffset":1184574,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitStandardClassFields","ranges":[{"startOffset":1184577,"endOffset":1184755,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectSemanticDiagnostics","ranges":[{"startOffset":1184758,"endOffset":1184931,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectEmit","ranges":[{"startOffset":1184934,"endOffset":1185084,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectDeclarationPath","ranges":[{"startOffset":1185087,"endOffset":1185259,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionValue","ranges":[{"startOffset":1185262,"endOffset":1185471,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXTransformEnabled","ranges":[{"startOffset":1185474,"endOffset":1185642,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXImplicitImportBase","ranges":[{"startOffset":1185645,"endOffset":1186255,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXRuntimeImport","ranges":[{"startOffset":1186258,"endOffset":1186420,"count":0}],"isBlockCoverage":false},{"functionName":"hasZeroOrOneAsteriskCharacter","ranges":[{"startOffset":1186423,"endOffset":1186740,"count":0}],"isBlockCoverage":false},{"functionName":"createSymlinkCache","ranges":[{"startOffset":1186743,"endOffset":1189311,"count":0}],"isBlockCoverage":false},{"functionName":"guessDirectorySymlink","ranges":[{"startOffset":1189314,"endOffset":1190076,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesOrScopedPackageDirectory","ranges":[{"startOffset":1190079,"endOffset":1190251,"count":0}],"isBlockCoverage":false},{"functionName":"stripLeadingDirectorySeparator","ranges":[{"startOffset":1190254,"endOffset":1190377,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveDirectoryPrefix","ranges":[{"startOffset":1190380,"endOffset":1190630,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":1190633,"endOffset":1190740,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRegExpCharacter","ranges":[{"startOffset":1190743,"endOffset":1190811,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionForWildcard","ranges":[{"startOffset":1190814,"endOffset":1191208,"count":8},{"startOffset":1191000,"endOffset":1191028,"count":0},{"startOffset":1191147,"endOffset":1191156,"count":4},{"startOffset":1191157,"endOffset":1191162,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1191062,"endOffset":1191091,"count":8}],"isBlockCoverage":true},{"functionName":"getRegularExpressionsForWildcards","ranges":[{"startOffset":1191211,"endOffset":1191476,"count":10},{"startOffset":1191328,"endOffset":1191356,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1191383,"endOffset":1191470,"count":10}],"isBlockCoverage":true},{"functionName":"isImplicitGlob","ranges":[{"startOffset":1191479,"endOffset":1191572,"count":10}],"isBlockCoverage":true},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":1191575,"endOffset":1191807,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":1191810,"endOffset":1193748,"count":10},{"startOffset":1192209,"endOffset":1192234,"count":6},{"startOffset":1192236,"endOffset":1192264,"count":0},{"startOffset":1192373,"endOffset":1192414,"count":0},{"startOffset":1192480,"endOffset":1193634,"count":66},{"startOffset":1192512,"endOffset":1192572,"count":6},{"startOffset":1192572,"endOffset":1193594,"count":60},{"startOffset":1192617,"endOffset":1192684,"count":12},{"startOffset":1192718,"endOffset":1192773,"count":50},{"startOffset":1192807,"endOffset":1193473,"count":36},{"startOffset":1192907,"endOffset":1193044,"count":6},{"startOffset":1193044,"endOffset":1193200,"count":30},{"startOffset":1193101,"endOffset":1193200,"count":0},{"startOffset":1193349,"endOffset":1193421,"count":18},{"startOffset":1193473,"endOffset":1193586,"count":24},{"startOffset":1193665,"endOffset":1193721,"count":12}],"isBlockCoverage":true},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1193751,"endOffset":1193922,"count":28},{"startOffset":1193848,"endOffset":1193877,"count":0},{"startOffset":1193894,"endOffset":1193902,"count":0}],"isBlockCoverage":true},{"functionName":"getFileMatcherPatterns","ranges":[{"startOffset":1193925,"endOffset":1194693,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1194294,"endOffset":1194321,"count":2}],"isBlockCoverage":true},{"functionName":"getRegexFromPattern","ranges":[{"startOffset":1194696,"endOffset":1194838,"count":6},{"startOffset":1194822,"endOffset":1194826,"count":0}],"isBlockCoverage":true},{"functionName":"matchFiles","ranges":[{"startOffset":1194841,"endOffset":1197472,"count":2},{"startOffset":1195712,"endOffset":1195718,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1195287,"endOffset":1195356,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1195702,"endOffset":1195710,"count":2}],"isBlockCoverage":true},{"functionName":"visitDirectory","ranges":[{"startOffset":1196016,"endOffset":1197468,"count":36},{"startOffset":1196182,"endOffset":1196189,"count":0},{"startOffset":1196366,"endOffset":1196943,"count":68},{"startOffset":1196562,"endOffset":1196571,"count":28},{"startOffset":1196571,"endOffset":1196631,"count":40},{"startOffset":1196643,"endOffset":1196652,"count":0},{"startOffset":1196652,"endOffset":1196686,"count":40},{"startOffset":1196686,"endOffset":1196730,"count":0},{"startOffset":1196730,"endOffset":1196935,"count":40},{"startOffset":1196973,"endOffset":1197056,"count":0},{"startOffset":1197133,"endOffset":1197462,"count":40},{"startOffset":1197333,"endOffset":1197387,"count":34},{"startOffset":1197389,"endOffset":1197454,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1196799,"endOffset":1196828,"count":40}],"isBlockCoverage":true},{"functionName":"getBasePaths","ranges":[{"startOffset":1197475,"endOffset":1198192,"count":2},{"startOffset":1197719,"endOffset":1197728,"count":0},{"startOffset":1198098,"endOffset":1198152,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1198006,"endOffset":1198095,"count":2}],"isBlockCoverage":true},{"functionName":"getIncludeBasePath","ranges":[{"startOffset":1198195,"endOffset":1198554,"count":2},{"startOffset":1198339,"endOffset":1198458,"count":0}],"isBlockCoverage":true},{"functionName":"ensureScriptKind","ranges":[{"startOffset":1198557,"endOffset":1198686,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKindFromFileName","ranges":[{"startOffset":1198689,"endOffset":1199283,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensions","ranges":[{"startOffset":1199286,"endOffset":1199981,"count":2},{"startOffset":1199523,"endOffset":1199547,"count":0},{"startOffset":1199578,"endOffset":1199641,"count":0},{"startOffset":1199642,"endOffset":1199665,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199796,"endOffset":1199946,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsWithJsonIfResolveJsonModule","ranges":[{"startOffset":1199984,"endOffset":1200423,"count":2},{"startOffset":1200160,"endOffset":1200422,"count":0}],"isBlockCoverage":true},{"functionName":"isJSLike","ranges":[{"startOffset":1200426,"endOffset":1200529,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSFileExtension","ranges":[{"startOffset":1200532,"endOffset":1200672,"count":0}],"isBlockCoverage":false},{"functionName":"hasTSFileExtension","ranges":[{"startOffset":1200675,"endOffset":1200815,"count":0}],"isBlockCoverage":false},{"functionName":"usesExtensionsOnImports","ranges":[{"startOffset":1200818,"endOffset":1201118,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierEndingPreference","ranges":[{"startOffset":1201121,"endOffset":1203035,"count":0}],"isBlockCoverage":false},{"functionName":"getRequiresAtTopOfFile","ranges":[{"startOffset":1203038,"endOffset":1203746,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedSourceFileName","ranges":[{"startOffset":1203749,"endOffset":1204201,"count":0}],"isBlockCoverage":false},{"functionName":"numberOfDirectorySeparators","ranges":[{"startOffset":1204204,"endOffset":1204324,"count":0}],"isBlockCoverage":false},{"functionName":"compareNumberOfDirectorySeparators","ranges":[{"startOffset":1204327,"endOffset":1204506,"count":0}],"isBlockCoverage":false},{"functionName":"removeFileExtension","ranges":[{"startOffset":1204509,"endOffset":1204751,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveExtension","ranges":[{"startOffset":1204754,"endOffset":1204893,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtension","ranges":[{"startOffset":1204896,"endOffset":1205005,"count":0}],"isBlockCoverage":false},{"functionName":"changeExtension","ranges":[{"startOffset":1205008,"endOffset":1205187,"count":80}],"isBlockCoverage":true},{"functionName":"tryParsePattern","ranges":[{"startOffset":1205190,"endOffset":1205501,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePatterns","ranges":[{"startOffset":1205504,"endOffset":1205617,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsSynthesized","ranges":[{"startOffset":1205620,"endOffset":1205685,"count":24}],"isBlockCoverage":true},{"functionName":"extensionIsTS","ranges":[{"startOffset":1205688,"endOffset":1205981,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionExtensionIsTSOrJson","ranges":[{"startOffset":1205984,"endOffset":1206094,"count":0}],"isBlockCoverage":false},{"functionName":"extensionFromPath","ranges":[{"startOffset":1206097,"endOffset":1206268,"count":0}],"isBlockCoverage":false},{"functionName":"isAnySupportedFileExtension","ranges":[{"startOffset":1206271,"endOffset":1206373,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExtensionFromPath2","ranges":[{"startOffset":1206376,"endOffset":1206491,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckJsEnabledForFile","ranges":[{"startOffset":1206494,"endOffset":1206665,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatternOrExact","ranges":[{"startOffset":1206668,"endOffset":1207045,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAfter","ranges":[{"startOffset":1207048,"endOffset":1207184,"count":0}],"isBlockCoverage":false},{"functionName":"addRelatedInfo","ranges":[{"startOffset":1207187,"endOffset":1207650,"count":0}],"isBlockCoverage":false},{"functionName":"minAndMax","ranges":[{"startOffset":1207653,"endOffset":1208008,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfNode","ranges":[{"startOffset":1208011,"endOffset":1208103,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfTypeParameters","ranges":[{"startOffset":1208106,"endOffset":1208338,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeChecking","ranges":[{"startOffset":1208341,"endOffset":1208589,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonEqual","ranges":[{"startOffset":1208592,"endOffset":1208763,"count":0}],"isBlockCoverage":false},{"functionName":"parsePseudoBigInt","ranges":[{"startOffset":1208766,"endOffset":1210815,"count":0}],"isBlockCoverage":false},{"functionName":"pseudoBigIntToString","ranges":[{"startOffset":1210818,"endOffset":1210951,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInt","ranges":[{"startOffset":1210954,"endOffset":1211135,"count":0}],"isBlockCoverage":false},{"functionName":"parseValidBigInt","ranges":[{"startOffset":1211138,"endOffset":1211338,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBigIntString","ranges":[{"startOffset":1211341,"endOffset":1212086,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTypeOnlyAliasUseSite","ranges":[{"startOffset":1212089,"endOffset":1212420,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyNameUseSite","ranges":[{"startOffset":1212423,"endOffset":1212595,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfPossiblyValidTypeOrAbstractComputedPropertyName","ranges":[{"startOffset":1212598,"endOffset":1213132,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierInNonEmittingHeritageClause","ranges":[{"startOffset":1213135,"endOffset":1213803,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypeReference","ranges":[{"startOffset":1213806,"endOffset":1213921,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsHomogeneous","ranges":[{"startOffset":1213924,"endOffset":1214240,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePos","ranges":[{"startOffset":1214243,"endOffset":1214324,"count":76}],"isBlockCoverage":true},{"functionName":"setTextRangeEnd","ranges":[{"startOffset":1214327,"endOffset":1214408,"count":76}],"isBlockCoverage":true},{"functionName":"setTextRangePosEnd","ranges":[{"startOffset":1214411,"endOffset":1214523,"count":76}],"isBlockCoverage":true},{"functionName":"setTextRangePosWidth","ranges":[{"startOffset":1214526,"endOffset":1214636,"count":2}],"isBlockCoverage":true},{"functionName":"setNodeFlags","ranges":[{"startOffset":1214639,"endOffset":1214750,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":1214753,"endOffset":1214875,"count":0}],"isBlockCoverage":false},{"functionName":"setEachParent","ranges":[{"startOffset":1214878,"endOffset":1215053,"count":0}],"isBlockCoverage":false},{"functionName":"setParentRecursive","ranges":[{"startOffset":1215056,"endOffset":1215868,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedElement","ranges":[{"startOffset":1215871,"endOffset":1215946,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedArrayLiteral","ranges":[{"startOffset":1215949,"endOffset":1216074,"count":0}],"isBlockCoverage":false},{"functionName":"expressionResultIsUnused","ranges":[{"startOffset":1216077,"endOffset":1216900,"count":0}],"isBlockCoverage":false},{"functionName":"containsIgnoredPath","ranges":[{"startOffset":1216903,"endOffset":1216999,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeArray","ranges":[{"startOffset":1217002,"endOffset":1219523,"count":0}],"isBlockCoverage":false},{"functionName":"hasContextSensitiveParameters","ranges":[{"startOffset":1219526,"endOffset":1219957,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinityOrNaNString","ranges":[{"startOffset":1219960,"endOffset":1220076,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclaration","ranges":[{"startOffset":1220079,"endOffset":1220234,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionOrArrowFunction","ranges":[{"startOffset":1220237,"endOffset":1220389,"count":0}],"isBlockCoverage":false},{"functionName":"escapeSnippetText","ranges":[{"startOffset":1220392,"endOffset":1220476,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteralName","ranges":[{"startOffset":1220479,"endOffset":1220560,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameNodeForIdentifierOrLiteral","ranges":[{"startOffset":1220563,"endOffset":1220995,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeParameter","ranges":[{"startOffset":1220998,"endOffset":1221113,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulePathParts","ranges":[{"startOffset":1221116,"endOffset":1222865,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterTypeNode","ranges":[{"startOffset":1222868,"endOffset":1223063,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDeclaration","ranges":[{"startOffset":1223066,"endOffset":1223693,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveExportModifier","ranges":[{"startOffset":1223696,"endOffset":1224025,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalJSDocPropertyLikeTag","ranges":[{"startOffset":1224028,"endOffset":1224300,"count":0}],"isBlockCoverage":false},{"functionName":"canUsePropertyAccess","ranges":[{"startOffset":1224303,"endOffset":1224622,"count":0}],"isBlockCoverage":false},{"functionName":"hasTabstop","ranges":[{"startOffset":1224625,"endOffset":1224760,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalParameter","ranges":[{"startOffset":1224763,"endOffset":1225168,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalDeclaration","ranges":[{"startOffset":1225171,"endOffset":1225677,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAccess","ranges":[{"startOffset":1225680,"endOffset":1225888,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesExpression","ranges":[{"startOffset":1225891,"endOffset":1226057,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesExpressionType","ranges":[{"startOffset":1226060,"endOffset":1226179,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocSatisfiesTypeNode","ranges":[{"startOffset":1226182,"endOffset":1226340,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxAttributeName","ranges":[{"startOffset":1226343,"endOffset":1226488,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxAttributeName","ranges":[{"startOffset":1226491,"endOffset":1226618,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeName","ranges":[{"startOffset":1226621,"endOffset":1226769,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxNamespacedName","ranges":[{"startOffset":1226772,"endOffset":1226891,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxNamespacedName","ranges":[{"startOffset":1226894,"endOffset":1227002,"count":0}],"isBlockCoverage":false},{"functionName":"intrinsicTagNameToString","ranges":[{"startOffset":1227005,"endOffset":1227131,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeUsableAsPropertyName","ranges":[{"startOffset":1227134,"endOffset":1227251,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameFromType","ranges":[{"startOffset":1227254,"endOffset":1227548,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoPropertyDeclaration","ranges":[{"startOffset":1227551,"endOffset":1227755,"count":0}],"isBlockCoverage":false},{"functionName":"hasResolutionModeOverride","ranges":[{"startOffset":1227758,"endOffset":1227914,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstStar","ranges":[{"startOffset":1227917,"endOffset":1228016,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromImportAttribute","ranges":[{"startOffset":1228019,"endOffset":1228169,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/utilities.ts","ranges":[{"startOffset":1230079,"endOffset":1260795,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1230439,"endOffset":1240099,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1240154,"endOffset":1240727,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1241440,"endOffset":1241707,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1241771,"endOffset":1242178,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1242241,"endOffset":1242425,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1242493,"endOffset":1244611,"count":1}],"isBlockCoverage":true},{"functionName":"getNodeConstructor","ranges":[{"startOffset":1246019,"endOffset":1246030,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenConstructor","ranges":[{"startOffset":1246061,"endOffset":1246072,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierConstructor","ranges":[{"startOffset":1246108,"endOffset":1246125,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifierConstructor","ranges":[{"startOffset":1246168,"endOffset":1246179,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileConstructor","ranges":[{"startOffset":1246215,"endOffset":1246226,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolConstructor","ranges":[{"startOffset":1246258,"endOffset":1246271,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeConstructor","ranges":[{"startOffset":1246301,"endOffset":1246312,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureConstructor","ranges":[{"startOffset":1246347,"endOffset":1246363,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapSourceConstructor","ranges":[{"startOffset":1246404,"endOffset":1246425,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1246605,"endOffset":1246832,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1246922,"endOffset":1247153,"count":2},{"startOffset":1247032,"endOffset":1247125,"count":0}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1247263,"endOffset":1248140,"count":2},{"startOffset":1247613,"endOffset":1247713,"count":0},{"startOffset":1247730,"endOffset":1247835,"count":0},{"startOffset":1247852,"endOffset":1247957,"count":0},{"startOffset":1247974,"endOffset":1248061,"count":0}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1248249,"endOffset":1248524,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1248637,"endOffset":1248767,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1248876,"endOffset":1249300,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1249442,"endOffset":1249877,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1249996,"endOffset":1250634,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1250782,"endOffset":1251420,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1251551,"endOffset":1251824,"count":2},{"startOffset":1251636,"endOffset":1251707,"count":0}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1251922,"endOffset":1252037,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1252172,"endOffset":1252330,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1252428,"endOffset":1252543,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1252659,"endOffset":1252809,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1252901,"endOffset":1253044,"count":2},{"startOffset":1252978,"endOffset":1253005,"count":0}],"isBlockCoverage":true},{"functionName":"computeValue","ranges":[{"startOffset":1253161,"endOffset":1253381,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1253478,"endOffset":1253587,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1253685,"endOffset":1253795,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1253895,"endOffset":1254007,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1254110,"endOffset":1254225,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1254328,"endOffset":1254443,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1254555,"endOffset":1254679,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1254775,"endOffset":1254883,"count":0}],"isBlockCoverage":false},{"functionName":"computeValue","ranges":[{"startOffset":1254993,"endOffset":1255115,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1257497,"endOffset":1257581,"count":8}],"isBlockCoverage":true},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1258007,"endOffset":1258097,"count":4}],"isBlockCoverage":true},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":1258260,"endOffset":1258346,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1259939,"endOffset":1260359,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseNodeFactory","ranges":[{"startOffset":1260850,"endOffset":1262425,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1261216,"endOffset":1261457,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1261462,"endOffset":1261703,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1261708,"endOffset":1261977,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1261982,"endOffset":1262203,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNode","ranges":[{"startOffset":1262208,"endOffset":1262421,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/baseNodeFactory.ts","ranges":[{"startOffset":1262467,"endOffset":1262556,"count":1}],"isBlockCoverage":true},{"functionName":"createParenthesizerRules","ranges":[{"startOffset":1262614,"endOffset":1278444,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/parenthesizerRules.ts","ranges":[{"startOffset":1278519,"endOffset":1280770,"count":1}],"isBlockCoverage":true},{"functionName":"getParenthesizeLeftSideOfBinaryForOperator","ranges":[{"startOffset":1278691,"endOffset":1278706,"count":0}],"isBlockCoverage":false},{"functionName":"getParenthesizeRightSideOfBinaryForOperator","ranges":[{"startOffset":1278761,"endOffset":1278776,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeLeftSideOfBinary","ranges":[{"startOffset":1278816,"endOffset":1278855,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeRightSideOfBinary","ranges":[{"startOffset":1278896,"endOffset":1278948,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeExpressionOfNew","ranges":[{"startOffset":1279233,"endOffset":1279291,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeLeftSideOfAccess","ranges":[{"startOffset":1279331,"endOffset":1279389,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeOperandOfPostfixUnary","ranges":[{"startOffset":1279434,"endOffset":1279486,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeOperandOfPrefixUnary","ranges":[{"startOffset":1279530,"endOffset":1279575,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeExpressionsOfCommaDelimitedList","ranges":[{"startOffset":1279630,"endOffset":1279665,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeConstituentTypesOfUnionType","ranges":[{"startOffset":1280015,"endOffset":1280050,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeConstituentTypesOfIntersectionType","ranges":[{"startOffset":1280166,"endOffset":1280201,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeElementTypesOfTupleType","ranges":[{"startOffset":1280484,"endOffset":1280519,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeTypeArguments","ranges":[{"startOffset":1280660,"endOffset":1280704,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeConverters","ranges":[{"startOffset":1280824,"endOffset":1285827,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/nodeConverters.ts","ranges":[{"startOffset":1285894,"endOffset":1286510,"count":1}],"isBlockCoverage":true},{"functionName":"addNodeFactoryPatcher","ranges":[{"startOffset":1286561,"endOffset":1286635,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeFactory","ranges":[{"startOffset":1286638,"endOffset":1495204,"count":4},{"startOffset":1286743,"endOffset":1286753,"count":1},{"startOffset":1286754,"endOffset":1286771,"count":3},{"startOffset":1292484,"endOffset":1292598,"count":2},{"startOffset":1292599,"endOffset":1292631,"count":2},{"startOffset":1292755,"endOffset":1292900,"count":2},{"startOffset":1292901,"endOffset":1292928,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1286812,"endOffset":1286916,"count":1},{"startOffset":1286880,"endOffset":1286916,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1286950,"endOffset":1287042,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287092,"endOffset":1287168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287223,"endOffset":1287296,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287352,"endOffset":1287426,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287486,"endOffset":1287536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287594,"endOffset":1287652,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287710,"endOffset":1287780,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1287848,"endOffset":1287934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1288002,"endOffset":1288082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1288140,"endOffset":1288222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1288280,"endOffset":1288374,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1288434,"endOffset":1288550,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1288610,"endOffset":1288738,"count":0}],"isBlockCoverage":false},{"functionName":"get parenthesizer","ranges":[{"startOffset":1288770,"endOffset":1288836,"count":0}],"isBlockCoverage":false},{"functionName":"get converters","ranges":[{"startOffset":1288844,"endOffset":1288899,"count":0}],"isBlockCoverage":false},{"functionName":"factory2.createPropertyAccessExpression","ranges":[{"startOffset":1292486,"endOffset":1292598,"count":0}],"isBlockCoverage":false},{"functionName":"factory2.createPropertyAccessChain","ranges":[{"startOffset":1292757,"endOffset":1292900,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocAllType","ranges":[{"startOffset":1297825,"endOffset":1297933,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocUnknownType","ranges":[{"startOffset":1297941,"endOffset":1298057,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocNonNullableType","ranges":[{"startOffset":1298065,"endOffset":1298197,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocNonNullableType","ranges":[{"startOffset":1298205,"endOffset":1298337,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocNullableType","ranges":[{"startOffset":1298345,"endOffset":1298471,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocNullableType","ranges":[{"startOffset":1298479,"endOffset":1298605,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocOptionalType","ranges":[{"startOffset":1298613,"endOffset":1298729,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocOptionalType","ranges":[{"startOffset":1298737,"endOffset":1298853,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocVariadicType","ranges":[{"startOffset":1298861,"endOffset":1298977,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocVariadicType","ranges":[{"startOffset":1298985,"endOffset":1299101,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocNamepathType","ranges":[{"startOffset":1299109,"endOffset":1299225,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocNamepathType","ranges":[{"startOffset":1299233,"endOffset":1299349,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocTypeTag","ranges":[{"startOffset":1300488,"endOffset":1300596,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocTypeTag","ranges":[{"startOffset":1300604,"endOffset":1300712,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocReturnTag","ranges":[{"startOffset":1300720,"endOffset":1300832,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocReturnTag","ranges":[{"startOffset":1300840,"endOffset":1300952,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocThisTag","ranges":[{"startOffset":1300960,"endOffset":1301068,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocThisTag","ranges":[{"startOffset":1301076,"endOffset":1301184,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocAuthorTag","ranges":[{"startOffset":1301192,"endOffset":1301302,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocAuthorTag","ranges":[{"startOffset":1301310,"endOffset":1301420,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocClassTag","ranges":[{"startOffset":1301428,"endOffset":1301536,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocClassTag","ranges":[{"startOffset":1301544,"endOffset":1301652,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocPublicTag","ranges":[{"startOffset":1301660,"endOffset":1301770,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocPublicTag","ranges":[{"startOffset":1301778,"endOffset":1301888,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocPrivateTag","ranges":[{"startOffset":1301896,"endOffset":1302008,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocPrivateTag","ranges":[{"startOffset":1302016,"endOffset":1302128,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocProtectedTag","ranges":[{"startOffset":1302136,"endOffset":1302252,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocProtectedTag","ranges":[{"startOffset":1302260,"endOffset":1302376,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocReadonlyTag","ranges":[{"startOffset":1302384,"endOffset":1302498,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocReadonlyTag","ranges":[{"startOffset":1302506,"endOffset":1302620,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocOverrideTag","ranges":[{"startOffset":1302628,"endOffset":1302742,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocOverrideTag","ranges":[{"startOffset":1302750,"endOffset":1302864,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocDeprecatedTag","ranges":[{"startOffset":1302872,"endOffset":1302990,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocDeprecatedTag","ranges":[{"startOffset":1302998,"endOffset":1303116,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocThrowsTag","ranges":[{"startOffset":1303124,"endOffset":1303236,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocThrowsTag","ranges":[{"startOffset":1303244,"endOffset":1303356,"count":0}],"isBlockCoverage":false},{"functionName":"get createJSDocSatisfiesTag","ranges":[{"startOffset":1303364,"endOffset":1303482,"count":0}],"isBlockCoverage":false},{"functionName":"get updateJSDocSatisfiesTag","ranges":[{"startOffset":1303490,"endOffset":1303608,"count":0}],"isBlockCoverage":false},{"functionName":"get createComma","ranges":[{"startOffset":1305770,"endOffset":1305858,"count":0}],"isBlockCoverage":false},{"functionName":"get createAssignment","ranges":[{"startOffset":1305866,"endOffset":1305960,"count":0}],"isBlockCoverage":false},{"functionName":"get createLogicalOr","ranges":[{"startOffset":1305968,"endOffset":1306061,"count":0}],"isBlockCoverage":false},{"functionName":"get createLogicalAnd","ranges":[{"startOffset":1306069,"endOffset":1306175,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseOr","ranges":[{"startOffset":1306183,"endOffset":1306273,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseXor","ranges":[{"startOffset":1306281,"endOffset":1306374,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseAnd","ranges":[{"startOffset":1306382,"endOffset":1306479,"count":0}],"isBlockCoverage":false},{"functionName":"get createStrictEquality","ranges":[{"startOffset":1306487,"endOffset":1306597,"count":0}],"isBlockCoverage":false},{"functionName":"get createStrictInequality","ranges":[{"startOffset":1306605,"endOffset":1306722,"count":0}],"isBlockCoverage":false},{"functionName":"get createEquality","ranges":[{"startOffset":1306730,"endOffset":1306828,"count":0}],"isBlockCoverage":false},{"functionName":"get createInequality","ranges":[{"startOffset":1306836,"endOffset":1306941,"count":0}],"isBlockCoverage":false},{"functionName":"get createLessThan","ranges":[{"startOffset":1306949,"endOffset":1307043,"count":0}],"isBlockCoverage":false},{"functionName":"get createLessThanEquals","ranges":[{"startOffset":1307051,"endOffset":1307157,"count":0}],"isBlockCoverage":false},{"functionName":"get createGreaterThan","ranges":[{"startOffset":1307165,"endOffset":1307265,"count":0}],"isBlockCoverage":false},{"functionName":"get createGreaterThanEquals","ranges":[{"startOffset":1307273,"endOffset":1307385,"count":0}],"isBlockCoverage":false},{"functionName":"get createLeftShift","ranges":[{"startOffset":1307393,"endOffset":1307496,"count":0}],"isBlockCoverage":false},{"functionName":"get createRightShift","ranges":[{"startOffset":1307504,"endOffset":1307614,"count":0}],"isBlockCoverage":false},{"functionName":"get createUnsignedRightShift","ranges":[{"startOffset":1307622,"endOffset":1307751,"count":0}],"isBlockCoverage":false},{"functionName":"get createAdd","ranges":[{"startOffset":1307759,"endOffset":1307844,"count":0}],"isBlockCoverage":false},{"functionName":"get createSubtract","ranges":[{"startOffset":1307852,"endOffset":1307943,"count":0}],"isBlockCoverage":false},{"functionName":"get createMultiply","ranges":[{"startOffset":1307951,"endOffset":1308045,"count":0}],"isBlockCoverage":false},{"functionName":"get createDivide","ranges":[{"startOffset":1308053,"endOffset":1308142,"count":0}],"isBlockCoverage":false},{"functionName":"get createModulo","ranges":[{"startOffset":1308150,"endOffset":1308241,"count":0}],"isBlockCoverage":false},{"functionName":"get createExponent","ranges":[{"startOffset":1308249,"endOffset":1308351,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixPlus","ranges":[{"startOffset":1308359,"endOffset":1308456,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixMinus","ranges":[{"startOffset":1308464,"endOffset":1308563,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixIncrement","ranges":[{"startOffset":1308571,"endOffset":1308677,"count":0}],"isBlockCoverage":false},{"functionName":"get createPrefixDecrement","ranges":[{"startOffset":1308685,"endOffset":1308793,"count":0}],"isBlockCoverage":false},{"functionName":"get createBitwiseNot","ranges":[{"startOffset":1308801,"endOffset":1308899,"count":0}],"isBlockCoverage":false},{"functionName":"get createLogicalNot","ranges":[{"startOffset":1308907,"endOffset":1309011,"count":0}],"isBlockCoverage":false},{"functionName":"get createPostfixIncrement","ranges":[{"startOffset":1309019,"endOffset":1309127,"count":0}],"isBlockCoverage":false},{"functionName":"get createPostfixDecrement","ranges":[{"startOffset":1309135,"endOffset":1309245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1310513,"endOffset":1310533,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeArray","ranges":[{"startOffset":1310561,"endOffset":1311696,"count":16},{"startOffset":1310674,"endOffset":1310706,"count":0},{"startOffset":1310739,"endOffset":1311331,"count":8},{"startOffset":1310781,"endOffset":1310830,"count":0},{"startOffset":1310884,"endOffset":1310943,"count":0},{"startOffset":1311032,"endOffset":1311331,"count":0},{"startOffset":1311331,"endOffset":1311419,"count":8},{"startOffset":1311420,"endOffset":1311438,"count":6},{"startOffset":1311439,"endOffset":1311449,"count":2}],"isBlockCoverage":true},{"functionName":"createBaseNode","ranges":[{"startOffset":1311701,"endOffset":1311786,"count":52}],"isBlockCoverage":true},{"functionName":"createBaseDeclaration","ranges":[{"startOffset":1311791,"endOffset":1311956,"count":50}],"isBlockCoverage":true},{"functionName":"finishUpdateBaseSignatureDeclaration","ranges":[{"startOffset":1311961,"endOffset":1312171,"count":0}],"isBlockCoverage":false},{"functionName":"createNumericLiteral","ranges":[{"startOffset":1312176,"endOffset":1312755,"count":0}],"isBlockCoverage":false},{"functionName":"createBigIntLiteral","ranges":[{"startOffset":1312760,"endOffset":1313025,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseStringLiteral","ranges":[{"startOffset":1313030,"endOffset":1313240,"count":24}],"isBlockCoverage":true},{"functionName":"createStringLiteral","ranges":[{"startOffset":1313245,"endOffset":1313570,"count":24},{"startOffset":1313496,"endOffset":1313545,"count":0}],"isBlockCoverage":true},{"functionName":"createStringLiteralFromNode","ranges":[{"startOffset":1313575,"endOffset":1313834,"count":0}],"isBlockCoverage":false},{"functionName":"createRegularExpressionLiteral","ranges":[{"startOffset":1313839,"endOffset":1314006,"count":0}],"isBlockCoverage":false},{"functionName":"createLiteralLikeNode","ranges":[{"startOffset":1314011,"endOffset":1315154,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifier","ranges":[{"startOffset":1315159,"endOffset":1315430,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseGeneratedIdentifier","ranges":[{"startOffset":1315435,"endOffset":1315789,"count":0}],"isBlockCoverage":false},{"functionName":"createIdentifier","ranges":[{"startOffset":1315794,"endOffset":1316554,"count":0}],"isBlockCoverage":false},{"functionName":"createTempVariable","ranges":[{"startOffset":1316559,"endOffset":1316942,"count":0}],"isBlockCoverage":false},{"functionName":"createLoopVariable","ranges":[{"startOffset":1316947,"endOffset":1317273,"count":0}],"isBlockCoverage":false},{"functionName":"createUniqueName","ranges":[{"startOffset":1317278,"endOffset":1317736,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratedNameForNode","ranges":[{"startOffset":1317741,"endOffset":1318322,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifier","ranges":[{"startOffset":1318327,"endOffset":1318599,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateIdentifier","ranges":[{"startOffset":1318604,"endOffset":1318838,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseGeneratedPrivateIdentifier","ranges":[{"startOffset":1318843,"endOffset":1319211,"count":0}],"isBlockCoverage":false},{"functionName":"createUniquePrivateName","ranges":[{"startOffset":1319216,"endOffset":1319603,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratedPrivateNameForNode","ranges":[{"startOffset":1319608,"endOffset":1320105,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseToken","ranges":[{"startOffset":1320110,"endOffset":1320201,"count":14}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1320206,"endOffset":1322677,"count":14},{"startOffset":1320390,"endOffset":1320404,"count":12},{"startOffset":1320568,"endOffset":1320582,"count":12},{"startOffset":1320903,"endOffset":1321028,"count":0},{"startOffset":1321037,"endOffset":1321133,"count":0},{"startOffset":1321142,"endOffset":1321171,"count":0},{"startOffset":1321180,"endOffset":1321210,"count":0},{"startOffset":1321219,"endOffset":1321251,"count":0},{"startOffset":1321260,"endOffset":1321291,"count":0},{"startOffset":1321300,"endOffset":1321331,"count":0},{"startOffset":1321340,"endOffset":1321370,"count":0},{"startOffset":1321379,"endOffset":1321406,"count":0},{"startOffset":1321415,"endOffset":1321441,"count":0},{"startOffset":1321450,"endOffset":1321479,"count":0},{"startOffset":1321488,"endOffset":1321517,"count":0},{"startOffset":1321526,"endOffset":1321554,"count":0},{"startOffset":1321563,"endOffset":1321592,"count":0},{"startOffset":1321601,"endOffset":1321626,"count":0},{"startOffset":1321635,"endOffset":1321661,"count":0},{"startOffset":1321670,"endOffset":1321701,"count":0},{"startOffset":1321710,"endOffset":1321739,"count":0},{"startOffset":1321748,"endOffset":1321778,"count":0},{"startOffset":1321787,"endOffset":1321816,"count":0},{"startOffset":1321825,"endOffset":1321852,"count":0},{"startOffset":1321861,"endOffset":1321891,"count":0},{"startOffset":1321900,"endOffset":1322004,"count":0},{"startOffset":1322013,"endOffset":1322185,"count":0},{"startOffset":1322194,"endOffset":1322294,"count":0},{"startOffset":1322303,"endOffset":1322414,"count":0},{"startOffset":1322423,"endOffset":1322561,"count":0},{"startOffset":1322596,"endOffset":1322652,"count":0}],"isBlockCoverage":true},{"functionName":"createSuper","ranges":[{"startOffset":1322682,"endOffset":1322762,"count":0}],"isBlockCoverage":false},{"functionName":"createThis","ranges":[{"startOffset":1322767,"endOffset":1322845,"count":0}],"isBlockCoverage":false},{"functionName":"createNull","ranges":[{"startOffset":1322850,"endOffset":1322928,"count":0}],"isBlockCoverage":false},{"functionName":"createTrue","ranges":[{"startOffset":1322933,"endOffset":1323011,"count":0}],"isBlockCoverage":false},{"functionName":"createFalse","ranges":[{"startOffset":1323016,"endOffset":1323095,"count":0}],"isBlockCoverage":false},{"functionName":"createModifier","ranges":[{"startOffset":1323100,"endOffset":1323169,"count":0}],"isBlockCoverage":false},{"functionName":"createModifiersFromModifierFlags","ranges":[{"startOffset":1323174,"endOffset":1324789,"count":0}],"isBlockCoverage":false},{"functionName":"createQualifiedName","ranges":[{"startOffset":1324794,"endOffset":1325114,"count":0}],"isBlockCoverage":false},{"functionName":"updateQualifiedName","ranges":[{"startOffset":1325119,"endOffset":1325287,"count":0}],"isBlockCoverage":false},{"functionName":"createComputedPropertyName","ranges":[{"startOffset":1325292,"endOffset":1325675,"count":0}],"isBlockCoverage":false},{"functionName":"updateComputedPropertyName","ranges":[{"startOffset":1325680,"endOffset":1325848,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeParameterDeclaration","ranges":[{"startOffset":1325853,"endOffset":1326292,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeParameterDeclaration","ranges":[{"startOffset":1326297,"endOffset":1326619,"count":0}],"isBlockCoverage":false},{"functionName":"createParameterDeclaration","ranges":[{"startOffset":1326624,"endOffset":1327733,"count":0}],"isBlockCoverage":false},{"functionName":"updateParameterDeclaration","ranges":[{"startOffset":1327738,"endOffset":1328176,"count":0}],"isBlockCoverage":false},{"functionName":"createDecorator","ranges":[{"startOffset":1328181,"endOffset":1328619,"count":0}],"isBlockCoverage":false},{"functionName":"updateDecorator","ranges":[{"startOffset":1328624,"endOffset":1328770,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertySignature","ranges":[{"startOffset":1328775,"endOffset":1329204,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertySignature","ranges":[{"startOffset":1329209,"endOffset":1329528,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdatePropertySignature","ranges":[{"startOffset":1329533,"endOffset":1329732,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyDeclaration","ranges":[{"startOffset":1329737,"endOffset":1330987,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyDeclaration2","ranges":[{"startOffset":1330992,"endOffset":1331649,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodSignature","ranges":[{"startOffset":1331654,"endOffset":1332278,"count":0}],"isBlockCoverage":false},{"functionName":"updateMethodSignature","ranges":[{"startOffset":1332283,"endOffset":1332737,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodDeclaration","ranges":[{"startOffset":1332742,"endOffset":1334495,"count":0}],"isBlockCoverage":false},{"functionName":"updateMethodDeclaration","ranges":[{"startOffset":1334500,"endOffset":1335055,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateMethodDeclaration","ranges":[{"startOffset":1335060,"endOffset":1335269,"count":0}],"isBlockCoverage":false},{"functionName":"createClassStaticBlockDeclaration","ranges":[{"startOffset":1335274,"endOffset":1335736,"count":0}],"isBlockCoverage":false},{"functionName":"updateClassStaticBlockDeclaration","ranges":[{"startOffset":1335741,"endOffset":1335932,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateClassStaticBlockDeclaration","ranges":[{"startOffset":1335937,"endOffset":1336142,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorDeclaration","ranges":[{"startOffset":1336147,"endOffset":1336904,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorDeclaration","ranges":[{"startOffset":1336909,"endOffset":1337197,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateConstructorDeclaration","ranges":[{"startOffset":1337202,"endOffset":1337480,"count":0}],"isBlockCoverage":false},{"functionName":"createGetAccessorDeclaration","ranges":[{"startOffset":1337485,"endOffset":1338516,"count":0}],"isBlockCoverage":false},{"functionName":"updateGetAccessorDeclaration","ranges":[{"startOffset":1338521,"endOffset":1338877,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateGetAccessorDeclaration","ranges":[{"startOffset":1338882,"endOffset":1339122,"count":0}],"isBlockCoverage":false},{"functionName":"createSetAccessorDeclaration","ranges":[{"startOffset":1339127,"endOffset":1340121,"count":0}],"isBlockCoverage":false},{"functionName":"updateSetAccessorDeclaration","ranges":[{"startOffset":1340126,"endOffset":1340448,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateSetAccessorDeclaration","ranges":[{"startOffset":1340453,"endOffset":1340731,"count":0}],"isBlockCoverage":false},{"functionName":"createCallSignature","ranges":[{"startOffset":1340736,"endOffset":1341203,"count":0}],"isBlockCoverage":false},{"functionName":"updateCallSignature","ranges":[{"startOffset":1341208,"endOffset":1341500,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructSignature","ranges":[{"startOffset":1341505,"endOffset":1341982,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructSignature","ranges":[{"startOffset":1341987,"endOffset":1342289,"count":0}],"isBlockCoverage":false},{"functionName":"createIndexSignature","ranges":[{"startOffset":1342294,"endOffset":1342748,"count":0}],"isBlockCoverage":false},{"functionName":"updateIndexSignature","ranges":[{"startOffset":1342753,"endOffset":1343027,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralTypeSpan","ranges":[{"startOffset":1343032,"endOffset":1343292,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateLiteralTypeSpan","ranges":[{"startOffset":1343297,"endOffset":1343493,"count":0}],"isBlockCoverage":false},{"functionName":"createKeywordTypeNode","ranges":[{"startOffset":1343498,"endOffset":1343574,"count":0}],"isBlockCoverage":false},{"functionName":"createTypePredicateNode","ranges":[{"startOffset":1343579,"endOffset":1343912,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypePredicateNode","ranges":[{"startOffset":1343917,"endOffset":1344203,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceNode","ranges":[{"startOffset":1344208,"endOffset":1344572,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeReferenceNode","ranges":[{"startOffset":1344577,"endOffset":1344801,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionTypeNode","ranges":[{"startOffset":1344806,"endOffset":1345306,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionTypeNode","ranges":[{"startOffset":1345311,"endOffset":1345601,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateFunctionTypeNode","ranges":[{"startOffset":1345606,"endOffset":1345830,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorTypeNode","ranges":[{"startOffset":1345835,"endOffset":1346071,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorTypeNode1","ranges":[{"startOffset":1346076,"endOffset":1346610,"count":0}],"isBlockCoverage":false},{"functionName":"createConstructorTypeNode2","ranges":[{"startOffset":1346615,"endOffset":1346837,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorTypeNode","ranges":[{"startOffset":1346842,"endOffset":1347078,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorTypeNode1","ranges":[{"startOffset":1347083,"endOffset":1347442,"count":0}],"isBlockCoverage":false},{"functionName":"updateConstructorTypeNode2","ranges":[{"startOffset":1347447,"endOffset":1347627,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeQueryNode","ranges":[{"startOffset":1347632,"endOffset":1347963,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeQueryNode","ranges":[{"startOffset":1347968,"endOffset":1348184,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeLiteralNode","ranges":[{"startOffset":1348189,"endOffset":1348423,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeLiteralNode","ranges":[{"startOffset":1348428,"endOffset":1348574,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayTypeNode","ranges":[{"startOffset":1348579,"endOffset":1348857,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrayTypeNode","ranges":[{"startOffset":1348862,"endOffset":1349020,"count":0}],"isBlockCoverage":false},{"functionName":"createTupleTypeNode","ranges":[{"startOffset":1349025,"endOffset":1349309,"count":0}],"isBlockCoverage":false},{"functionName":"updateTupleTypeNode","ranges":[{"startOffset":1349314,"endOffset":1349460,"count":0}],"isBlockCoverage":false},{"functionName":"createNamedTupleMember","ranges":[{"startOffset":1349465,"endOffset":1349853,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedTupleMember","ranges":[{"startOffset":1349858,"endOffset":1350172,"count":0}],"isBlockCoverage":false},{"functionName":"createOptionalTypeNode","ranges":[{"startOffset":1350177,"endOffset":1350433,"count":0}],"isBlockCoverage":false},{"functionName":"updateOptionalTypeNode","ranges":[{"startOffset":1350438,"endOffset":1350574,"count":0}],"isBlockCoverage":false},{"functionName":"createRestTypeNode","ranges":[{"startOffset":1350579,"endOffset":1350774,"count":0}],"isBlockCoverage":false},{"functionName":"updateRestTypeNode","ranges":[{"startOffset":1350779,"endOffset":1350907,"count":0}],"isBlockCoverage":false},{"functionName":"createUnionOrIntersectionTypeNode","ranges":[{"startOffset":1350912,"endOffset":1351171,"count":0}],"isBlockCoverage":false},{"functionName":"updateUnionOrIntersectionTypeNode","ranges":[{"startOffset":1351176,"endOffset":1351377,"count":0}],"isBlockCoverage":false},{"functionName":"createUnionTypeNode","ranges":[{"startOffset":1351382,"endOffset":1351563,"count":0}],"isBlockCoverage":false},{"functionName":"updateUnionTypeNode","ranges":[{"startOffset":1351568,"endOffset":1351740,"count":0}],"isBlockCoverage":false},{"functionName":"createIntersectionTypeNode","ranges":[{"startOffset":1351745,"endOffset":1351947,"count":0}],"isBlockCoverage":false},{"functionName":"updateIntersectionTypeNode","ranges":[{"startOffset":1351952,"endOffset":1352138,"count":0}],"isBlockCoverage":false},{"functionName":"createConditionalTypeNode","ranges":[{"startOffset":1352143,"endOffset":1352692,"count":0}],"isBlockCoverage":false},{"functionName":"updateConditionalTypeNode","ranges":[{"startOffset":1352697,"endOffset":1353025,"count":0}],"isBlockCoverage":false},{"functionName":"createInferTypeNode","ranges":[{"startOffset":1353030,"endOffset":1353254,"count":0}],"isBlockCoverage":false},{"functionName":"updateInferTypeNode","ranges":[{"startOffset":1353259,"endOffset":1353425,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralType","ranges":[{"startOffset":1353430,"endOffset":1353717,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateLiteralType","ranges":[{"startOffset":1353722,"endOffset":1353934,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTypeNode","ranges":[{"startOffset":1353939,"endOffset":1354559,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportTypeNode","ranges":[{"startOffset":1354564,"endOffset":1354960,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizedType","ranges":[{"startOffset":1354965,"endOffset":1355174,"count":0}],"isBlockCoverage":false},{"functionName":"updateParenthesizedType","ranges":[{"startOffset":1355179,"endOffset":1355317,"count":0}],"isBlockCoverage":false},{"functionName":"createThisTypeNode","ranges":[{"startOffset":1355322,"endOffset":1355489,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeOperatorNode","ranges":[{"startOffset":1355494,"endOffset":1355907,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeOperatorNode","ranges":[{"startOffset":1355912,"endOffset":1356063,"count":0}],"isBlockCoverage":false},{"functionName":"createIndexedAccessTypeNode","ranges":[{"startOffset":1356068,"endOffset":1356404,"count":0}],"isBlockCoverage":false},{"functionName":"updateIndexedAccessTypeNode","ranges":[{"startOffset":1356409,"endOffset":1356633,"count":0}],"isBlockCoverage":false},{"functionName":"createMappedTypeNode","ranges":[{"startOffset":1356638,"endOffset":1357187,"count":0}],"isBlockCoverage":false},{"functionName":"updateMappedTypeNode","ranges":[{"startOffset":1357192,"endOffset":1357630,"count":0}],"isBlockCoverage":false},{"functionName":"createLiteralTypeNode","ranges":[{"startOffset":1357635,"endOffset":1357845,"count":0}],"isBlockCoverage":false},{"functionName":"updateLiteralTypeNode","ranges":[{"startOffset":1357850,"endOffset":1357996,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectBindingPattern","ranges":[{"startOffset":1358001,"endOffset":1358497,"count":0}],"isBlockCoverage":false},{"functionName":"updateObjectBindingPattern","ranges":[{"startOffset":1358502,"endOffset":1358662,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayBindingPattern","ranges":[{"startOffset":1358667,"endOffset":1358987,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrayBindingPattern","ranges":[{"startOffset":1358992,"endOffset":1359150,"count":0}],"isBlockCoverage":false},{"functionName":"createBindingElement","ranges":[{"startOffset":1359155,"endOffset":1359820,"count":0}],"isBlockCoverage":false},{"functionName":"updateBindingElement","ranges":[{"startOffset":1359825,"endOffset":1360159,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayLiteralExpression","ranges":[{"startOffset":1360164,"endOffset":1360708,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrayLiteralExpression","ranges":[{"startOffset":1360713,"endOffset":1360893,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectLiteralExpression","ranges":[{"startOffset":1360898,"endOffset":1361247,"count":6}],"isBlockCoverage":true},{"functionName":"updateObjectLiteralExpression","ranges":[{"startOffset":1361252,"endOffset":1361442,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePropertyAccessExpression","ranges":[{"startOffset":1361447,"endOffset":1362066,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyAccessExpression","ranges":[{"startOffset":1362071,"endOffset":1362553,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyAccessExpression","ranges":[{"startOffset":1362558,"endOffset":1362926,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyAccessChain","ranges":[{"startOffset":1362931,"endOffset":1363372,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyAccessChain","ranges":[{"startOffset":1363377,"endOffset":1363831,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseElementAccessExpression","ranges":[{"startOffset":1363836,"endOffset":1364384,"count":0}],"isBlockCoverage":false},{"functionName":"createElementAccessExpression","ranges":[{"startOffset":1364389,"endOffset":1364877,"count":0}],"isBlockCoverage":false},{"functionName":"updateElementAccessExpression","ranges":[{"startOffset":1364882,"endOffset":1365296,"count":0}],"isBlockCoverage":false},{"functionName":"createElementAccessChain","ranges":[{"startOffset":1365301,"endOffset":1365748,"count":0}],"isBlockCoverage":false},{"functionName":"updateElementAccessChain","ranges":[{"startOffset":1365753,"endOffset":1366258,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseCallExpression","ranges":[{"startOffset":1366263,"endOffset":1367032,"count":0}],"isBlockCoverage":false},{"functionName":"createCallExpression","ranges":[{"startOffset":1367037,"endOffset":1367635,"count":0}],"isBlockCoverage":false},{"functionName":"updateCallExpression","ranges":[{"startOffset":1367640,"endOffset":1368078,"count":0}],"isBlockCoverage":false},{"functionName":"createCallChain","ranges":[{"startOffset":1368083,"endOffset":1368650,"count":0}],"isBlockCoverage":false},{"functionName":"updateCallChain","ranges":[{"startOffset":1368655,"endOffset":1369164,"count":0}],"isBlockCoverage":false},{"functionName":"createNewExpression","ranges":[{"startOffset":1369169,"endOffset":1369884,"count":0}],"isBlockCoverage":false},{"functionName":"updateNewExpression","ranges":[{"startOffset":1369889,"endOffset":1370182,"count":0}],"isBlockCoverage":false},{"functionName":"createTaggedTemplateExpression","ranges":[{"startOffset":1370187,"endOffset":1370950,"count":0}],"isBlockCoverage":false},{"functionName":"updateTaggedTemplateExpression","ranges":[{"startOffset":1370955,"endOffset":1371223,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAssertion","ranges":[{"startOffset":1371228,"endOffset":1371615,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeAssertion","ranges":[{"startOffset":1371620,"endOffset":1371808,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizedExpression","ranges":[{"startOffset":1371813,"endOffset":1372089,"count":0}],"isBlockCoverage":false},{"functionName":"updateParenthesizedExpression","ranges":[{"startOffset":1372094,"endOffset":1372268,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionExpression","ranges":[{"startOffset":1372273,"endOffset":1373783,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionExpression","ranges":[{"startOffset":1373788,"endOffset":1374282,"count":0}],"isBlockCoverage":false},{"functionName":"createArrowFunction","ranges":[{"startOffset":1374287,"endOffset":1375675,"count":0}],"isBlockCoverage":false},{"functionName":"updateArrowFunction","ranges":[{"startOffset":1375680,"endOffset":1376166,"count":0}],"isBlockCoverage":false},{"functionName":"createDeleteExpression","ranges":[{"startOffset":1376171,"endOffset":1376462,"count":0}],"isBlockCoverage":false},{"functionName":"updateDeleteExpression","ranges":[{"startOffset":1376467,"endOffset":1376627,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeOfExpression","ranges":[{"startOffset":1376632,"endOffset":1376923,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeOfExpression","ranges":[{"startOffset":1376928,"endOffset":1377088,"count":0}],"isBlockCoverage":false},{"functionName":"createVoidExpression","ranges":[{"startOffset":1377093,"endOffset":1377380,"count":0}],"isBlockCoverage":false},{"functionName":"updateVoidExpression","ranges":[{"startOffset":1377385,"endOffset":1377541,"count":0}],"isBlockCoverage":false},{"functionName":"createAwaitExpression","ranges":[{"startOffset":1377546,"endOffset":1377919,"count":0}],"isBlockCoverage":false},{"functionName":"updateAwaitExpression","ranges":[{"startOffset":1377924,"endOffset":1378082,"count":0}],"isBlockCoverage":false},{"functionName":"createPrefixUnaryExpression","ranges":[{"startOffset":1378087,"endOffset":1378704,"count":0}],"isBlockCoverage":false},{"functionName":"updatePrefixUnaryExpression","ranges":[{"startOffset":1378709,"endOffset":1378882,"count":0}],"isBlockCoverage":false},{"functionName":"createPostfixUnaryExpression","ranges":[{"startOffset":1378887,"endOffset":1379425,"count":0}],"isBlockCoverage":false},{"functionName":"updatePostfixUnaryExpression","ranges":[{"startOffset":1379430,"endOffset":1379605,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpression","ranges":[{"startOffset":1379610,"endOffset":1381373,"count":0}],"isBlockCoverage":false},{"functionName":"propagateAssignmentPatternFlags","ranges":[{"startOffset":1381378,"endOffset":1381535,"count":0}],"isBlockCoverage":false},{"functionName":"updateBinaryExpression","ranges":[{"startOffset":1381540,"endOffset":1381769,"count":0}],"isBlockCoverage":false},{"functionName":"createConditionalExpression","ranges":[{"startOffset":1381774,"endOffset":1382634,"count":0}],"isBlockCoverage":false},{"functionName":"updateConditionalExpression","ranges":[{"startOffset":1382639,"endOffset":1383037,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateExpression","ranges":[{"startOffset":1383042,"endOffset":1383405,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateExpression","ranges":[{"startOffset":1383410,"endOffset":1383620,"count":0}],"isBlockCoverage":false},{"functionName":"checkTemplateLiteralLikeNode","ranges":[{"startOffset":1383625,"endOffset":1384449,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformFlagsOfTemplateLiteralLike","ranges":[{"startOffset":1384454,"endOffset":1384694,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralLikeToken","ranges":[{"startOffset":1384699,"endOffset":1385065,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralLikeDeclaration","ranges":[{"startOffset":1385070,"endOffset":1385448,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateLiteralLikeNode","ranges":[{"startOffset":1385453,"endOffset":1385774,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateHead","ranges":[{"startOffset":1385779,"endOffset":1386037,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateMiddle","ranges":[{"startOffset":1386042,"endOffset":1386304,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateTail","ranges":[{"startOffset":1386309,"endOffset":1386567,"count":0}],"isBlockCoverage":false},{"functionName":"createNoSubstitutionTemplateLiteral","ranges":[{"startOffset":1386572,"endOffset":1386871,"count":0}],"isBlockCoverage":false},{"functionName":"createYieldExpression","ranges":[{"startOffset":1386876,"endOffset":1387493,"count":0}],"isBlockCoverage":false},{"functionName":"updateYieldExpression","ranges":[{"startOffset":1387498,"endOffset":1387726,"count":0}],"isBlockCoverage":false},{"functionName":"createSpreadElement","ranges":[{"startOffset":1387731,"endOffset":1388087,"count":0}],"isBlockCoverage":false},{"functionName":"updateSpreadElement","ranges":[{"startOffset":1388092,"endOffset":1388246,"count":0}],"isBlockCoverage":false},{"functionName":"createClassExpression","ranges":[{"startOffset":1388251,"endOffset":1389034,"count":0}],"isBlockCoverage":false},{"functionName":"updateClassExpression","ranges":[{"startOffset":1389039,"endOffset":1389425,"count":0}],"isBlockCoverage":false},{"functionName":"createOmittedExpression","ranges":[{"startOffset":1389430,"endOffset":1389530,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionWithTypeArguments","ranges":[{"startOffset":1389535,"endOffset":1390096,"count":0}],"isBlockCoverage":false},{"functionName":"updateExpressionWithTypeArguments","ranges":[{"startOffset":1390101,"endOffset":1390353,"count":0}],"isBlockCoverage":false},{"functionName":"createAsExpression","ranges":[{"startOffset":1390358,"endOffset":1390678,"count":0}],"isBlockCoverage":false},{"functionName":"updateAsExpression","ranges":[{"startOffset":1390683,"endOffset":1390869,"count":0}],"isBlockCoverage":false},{"functionName":"createNonNullExpression","ranges":[{"startOffset":1390874,"endOffset":1391249,"count":0}],"isBlockCoverage":false},{"functionName":"updateNonNullExpression","ranges":[{"startOffset":1391254,"endOffset":1391511,"count":0}],"isBlockCoverage":false},{"functionName":"createSatisfiesExpression","ranges":[{"startOffset":1391516,"endOffset":1391850,"count":0}],"isBlockCoverage":false},{"functionName":"updateSatisfiesExpression","ranges":[{"startOffset":1391855,"endOffset":1392055,"count":0}],"isBlockCoverage":false},{"functionName":"createNonNullChain","ranges":[{"startOffset":1392060,"endOffset":1392473,"count":0}],"isBlockCoverage":false},{"functionName":"updateNonNullChain","ranges":[{"startOffset":1392478,"endOffset":1392791,"count":0}],"isBlockCoverage":false},{"functionName":"createMetaProperty","ranges":[{"startOffset":1392796,"endOffset":1393414,"count":0}],"isBlockCoverage":false},{"functionName":"updateMetaProperty","ranges":[{"startOffset":1393419,"endOffset":1393566,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateSpan","ranges":[{"startOffset":1393571,"endOffset":1393902,"count":0}],"isBlockCoverage":false},{"functionName":"updateTemplateSpan","ranges":[{"startOffset":1393907,"endOffset":1394105,"count":0}],"isBlockCoverage":false},{"functionName":"createSemicolonClassElement","ranges":[{"startOffset":1394110,"endOffset":1394299,"count":0}],"isBlockCoverage":false},{"functionName":"createBlock","ranges":[{"startOffset":1394304,"endOffset":1394673,"count":0}],"isBlockCoverage":false},{"functionName":"updateBlock","ranges":[{"startOffset":1394678,"endOffset":1394832,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableStatement","ranges":[{"startOffset":1394837,"endOffset":1395459,"count":0}],"isBlockCoverage":false},{"functionName":"updateVariableStatement","ranges":[{"startOffset":1395464,"endOffset":1395700,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyStatement","ranges":[{"startOffset":1395705,"endOffset":1395851,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionStatement","ranges":[{"startOffset":1395856,"endOffset":1396221,"count":2}],"isBlockCoverage":true},{"functionName":"updateExpressionStatement","ranges":[{"startOffset":1396226,"endOffset":1396392,"count":0}],"isBlockCoverage":false},{"functionName":"createIfStatement","ranges":[{"startOffset":1396397,"endOffset":1396920,"count":0}],"isBlockCoverage":false},{"functionName":"updateIfStatement","ranges":[{"startOffset":1396925,"endOffset":1397215,"count":0}],"isBlockCoverage":false},{"functionName":"createDoStatement","ranges":[{"startOffset":1397220,"endOffset":1397607,"count":0}],"isBlockCoverage":false},{"functionName":"updateDoStatement","ranges":[{"startOffset":1397612,"endOffset":1397816,"count":0}],"isBlockCoverage":false},{"functionName":"createWhileStatement","ranges":[{"startOffset":1397821,"endOffset":1398214,"count":0}],"isBlockCoverage":false},{"functionName":"updateWhileStatement","ranges":[{"startOffset":1398219,"endOffset":1398429,"count":0}],"isBlockCoverage":false},{"functionName":"createForStatement","ranges":[{"startOffset":1398434,"endOffset":1399064,"count":0}],"isBlockCoverage":false},{"functionName":"updateForStatement","ranges":[{"startOffset":1399069,"endOffset":1399395,"count":0}],"isBlockCoverage":false},{"functionName":"createForInStatement","ranges":[{"startOffset":1399400,"endOffset":1399947,"count":0}],"isBlockCoverage":false},{"functionName":"updateForInStatement","ranges":[{"startOffset":1399952,"endOffset":1400224,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfStatement","ranges":[{"startOffset":1400229,"endOffset":1401048,"count":0}],"isBlockCoverage":false},{"functionName":"updateForOfStatement","ranges":[{"startOffset":1401053,"endOffset":1401395,"count":0}],"isBlockCoverage":false},{"functionName":"createContinueStatement","ranges":[{"startOffset":1401400,"endOffset":1401738,"count":0}],"isBlockCoverage":false},{"functionName":"updateContinueStatement","ranges":[{"startOffset":1401743,"endOffset":1401885,"count":0}],"isBlockCoverage":false},{"functionName":"createBreakStatement","ranges":[{"startOffset":1401890,"endOffset":1402222,"count":0}],"isBlockCoverage":false},{"functionName":"updateBreakStatement","ranges":[{"startOffset":1402227,"endOffset":1402363,"count":0}],"isBlockCoverage":false},{"functionName":"createReturnStatement","ranges":[{"startOffset":1402368,"endOffset":1402741,"count":0}],"isBlockCoverage":false},{"functionName":"updateReturnStatement","ranges":[{"startOffset":1402746,"endOffset":1402904,"count":0}],"isBlockCoverage":false},{"functionName":"createWithStatement","ranges":[{"startOffset":1402909,"endOffset":1403300,"count":0}],"isBlockCoverage":false},{"functionName":"updateWithStatement","ranges":[{"startOffset":1403305,"endOffset":1403513,"count":0}],"isBlockCoverage":false},{"functionName":"createSwitchStatement","ranges":[{"startOffset":1403518,"endOffset":1403994,"count":0}],"isBlockCoverage":false},{"functionName":"updateSwitchStatement","ranges":[{"startOffset":1403999,"endOffset":1404211,"count":0}],"isBlockCoverage":false},{"functionName":"createLabeledStatement","ranges":[{"startOffset":1404216,"endOffset":1404601,"count":0}],"isBlockCoverage":false},{"functionName":"updateLabeledStatement","ranges":[{"startOffset":1404606,"endOffset":1404800,"count":0}],"isBlockCoverage":false},{"functionName":"createThrowStatement","ranges":[{"startOffset":1404805,"endOffset":1405094,"count":0}],"isBlockCoverage":false},{"functionName":"updateThrowStatement","ranges":[{"startOffset":1405099,"endOffset":1405255,"count":0}],"isBlockCoverage":false},{"functionName":"createTryStatement","ranges":[{"startOffset":1405260,"endOffset":1405723,"count":0}],"isBlockCoverage":false},{"functionName":"updateTryStatement","ranges":[{"startOffset":1405728,"endOffset":1406000,"count":0}],"isBlockCoverage":false},{"functionName":"createDebuggerStatement","ranges":[{"startOffset":1406005,"endOffset":1406187,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableDeclaration","ranges":[{"startOffset":1406192,"endOffset":1406736,"count":0}],"isBlockCoverage":false},{"functionName":"updateVariableDeclaration","ranges":[{"startOffset":1406741,"endOffset":1407061,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableDeclarationList","ranges":[{"startOffset":1407066,"endOffset":1407721,"count":0}],"isBlockCoverage":false},{"functionName":"updateVariableDeclarationList","ranges":[{"startOffset":1407726,"endOffset":1407920,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionDeclaration","ranges":[{"startOffset":1407925,"endOffset":1409576,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionDeclaration","ranges":[{"startOffset":1409581,"endOffset":1410072,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateFunctionDeclaration","ranges":[{"startOffset":1410077,"endOffset":1410372,"count":0}],"isBlockCoverage":false},{"functionName":"createClassDeclaration","ranges":[{"startOffset":1410377,"endOffset":1411460,"count":0}],"isBlockCoverage":false},{"functionName":"updateClassDeclaration","ranges":[{"startOffset":1411465,"endOffset":1411853,"count":0}],"isBlockCoverage":false},{"functionName":"createInterfaceDeclaration","ranges":[{"startOffset":1411858,"endOffset":1412378,"count":0}],"isBlockCoverage":false},{"functionName":"updateInterfaceDeclaration","ranges":[{"startOffset":1412383,"endOffset":1412779,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAliasDeclaration","ranges":[{"startOffset":1412784,"endOffset":1413265,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypeAliasDeclaration","ranges":[{"startOffset":1413270,"endOffset":1413576,"count":0}],"isBlockCoverage":false},{"functionName":"createEnumDeclaration","ranges":[{"startOffset":1413581,"endOffset":1414132,"count":0}],"isBlockCoverage":false},{"functionName":"updateEnumDeclaration","ranges":[{"startOffset":1414137,"endOffset":1414371,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleDeclaration","ranges":[{"startOffset":1414376,"endOffset":1415235,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleDeclaration","ranges":[{"startOffset":1415240,"endOffset":1415478,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleBlock","ranges":[{"startOffset":1415483,"endOffset":1415756,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleBlock","ranges":[{"startOffset":1415761,"endOffset":1415911,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseBlock","ranges":[{"startOffset":1415916,"endOffset":1416209,"count":0}],"isBlockCoverage":false},{"functionName":"updateCaseBlock","ranges":[{"startOffset":1416214,"endOffset":1416348,"count":0}],"isBlockCoverage":false},{"functionName":"createNamespaceExportDeclaration","ranges":[{"startOffset":1416353,"endOffset":1416696,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceExportDeclaration","ranges":[{"startOffset":1416701,"endOffset":1416889,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateNamespaceExportDeclaration","ranges":[{"startOffset":1416894,"endOffset":1417098,"count":0}],"isBlockCoverage":false},{"functionName":"createImportEqualsDeclaration","ranges":[{"startOffset":1417103,"endOffset":1417839,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportEqualsDeclaration","ranges":[{"startOffset":1417844,"endOffset":1418184,"count":0}],"isBlockCoverage":false},{"functionName":"createImportDeclaration","ranges":[{"startOffset":1418189,"endOffset":1418771,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportDeclaration","ranges":[{"startOffset":1418776,"endOffset":1419136,"count":0}],"isBlockCoverage":false},{"functionName":"createImportClause","ranges":[{"startOffset":1419141,"endOffset":1419666,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportClause","ranges":[{"startOffset":1419671,"endOffset":1419927,"count":0}],"isBlockCoverage":false},{"functionName":"createAssertClause","ranges":[{"startOffset":1419932,"endOffset":1420246,"count":0}],"isBlockCoverage":false},{"functionName":"updateAssertClause","ranges":[{"startOffset":1420251,"endOffset":1420449,"count":0}],"isBlockCoverage":false},{"functionName":"createAssertEntry","ranges":[{"startOffset":1420454,"endOffset":1420681,"count":0}],"isBlockCoverage":false},{"functionName":"updateAssertEntry","ranges":[{"startOffset":1420686,"endOffset":1420850,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTypeAssertionContainer","ranges":[{"startOffset":1420855,"endOffset":1421087,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportTypeAssertionContainer","ranges":[{"startOffset":1421092,"endOffset":1421320,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAttributes","ranges":[{"startOffset":1421325,"endOffset":1421661,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportAttributes","ranges":[{"startOffset":1421666,"endOffset":1421884,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAttribute","ranges":[{"startOffset":1421889,"endOffset":1422124,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportAttribute","ranges":[{"startOffset":1422129,"endOffset":1422301,"count":0}],"isBlockCoverage":false},{"functionName":"createNamespaceImport","ranges":[{"startOffset":1422306,"endOffset":1422599,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceImport","ranges":[{"startOffset":1422604,"endOffset":1422738,"count":0}],"isBlockCoverage":false},{"functionName":"createNamespaceExport","ranges":[{"startOffset":1422743,"endOffset":1423062,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceExport","ranges":[{"startOffset":1423067,"endOffset":1423201,"count":0}],"isBlockCoverage":false},{"functionName":"createNamedImports","ranges":[{"startOffset":1423206,"endOffset":1423522,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedImports","ranges":[{"startOffset":1423527,"endOffset":1423671,"count":0}],"isBlockCoverage":false},{"functionName":"createImportSpecifier","ranges":[{"startOffset":1423676,"endOffset":1424112,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportSpecifier","ranges":[{"startOffset":1424117,"endOffset":1424375,"count":0}],"isBlockCoverage":false},{"functionName":"createExportAssignment2","ranges":[{"startOffset":1424380,"endOffset":1425111,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportAssignment","ranges":[{"startOffset":1425116,"endOffset":1425352,"count":0}],"isBlockCoverage":false},{"functionName":"createExportDeclaration","ranges":[{"startOffset":1425357,"endOffset":1426035,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportDeclaration","ranges":[{"startOffset":1426040,"endOffset":1426481,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateExportDeclaration","ranges":[{"startOffset":1426486,"endOffset":1426749,"count":0}],"isBlockCoverage":false},{"functionName":"createNamedExports","ranges":[{"startOffset":1426754,"endOffset":1427070,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedExports","ranges":[{"startOffset":1427075,"endOffset":1427219,"count":0}],"isBlockCoverage":false},{"functionName":"createExportSpecifier","ranges":[{"startOffset":1427224,"endOffset":1427696,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportSpecifier","ranges":[{"startOffset":1427701,"endOffset":1427959,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingDeclaration","ranges":[{"startOffset":1427964,"endOffset":1428125,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalModuleReference","ranges":[{"startOffset":1428130,"endOffset":1428456,"count":0}],"isBlockCoverage":false},{"functionName":"updateExternalModuleReference","ranges":[{"startOffset":1428461,"endOffset":1428635,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocPrimaryTypeWorker","ranges":[{"startOffset":1428640,"endOffset":1428726,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocPrePostfixUnaryTypeWorker","ranges":[{"startOffset":1428731,"endOffset":1429030,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocUnaryTypeWorker","ranges":[{"startOffset":1429035,"endOffset":1429174,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocPrePostfixUnaryTypeWorker","ranges":[{"startOffset":1429179,"endOffset":1429369,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocUnaryTypeWorker","ranges":[{"startOffset":1429374,"endOffset":1429530,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocFunctionType","ranges":[{"startOffset":1429535,"endOffset":1430008,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocFunctionType","ranges":[{"startOffset":1430013,"endOffset":1430209,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypeLiteral","ranges":[{"startOffset":1430214,"endOffset":1430473,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypeLiteral","ranges":[{"startOffset":1430478,"endOffset":1430713,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypeExpression","ranges":[{"startOffset":1430718,"endOffset":1430875,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypeExpression","ranges":[{"startOffset":1430880,"endOffset":1431022,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocSignature","ranges":[{"startOffset":1431027,"endOffset":1431409,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocSignature","ranges":[{"startOffset":1431414,"endOffset":1431678,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTagName","ranges":[{"startOffset":1431683,"endOffset":1431923,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseJSDocTag","ranges":[{"startOffset":1431928,"endOffset":1432107,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseJSDocTagDeclaration","ranges":[{"startOffset":1432112,"endOffset":1432309,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTemplateTag","ranges":[{"startOffset":1432314,"endOffset":1432632,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTemplateTag","ranges":[{"startOffset":1432637,"endOffset":1432989,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypedefTag","ranges":[{"startOffset":1432994,"endOffset":1433411,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypedefTag","ranges":[{"startOffset":1433416,"endOffset":1433758,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocParameterTag","ranges":[{"startOffset":1433763,"endOffset":1434160,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocParameterTag","ranges":[{"startOffset":1434165,"endOffset":1434619,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocPropertyTag","ranges":[{"startOffset":1434624,"endOffset":1435018,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocPropertyTag","ranges":[{"startOffset":1435023,"endOffset":1435475,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocCallbackTag","ranges":[{"startOffset":1435480,"endOffset":1435900,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocCallbackTag","ranges":[{"startOffset":1435905,"endOffset":1436249,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocOverloadTag","ranges":[{"startOffset":1436254,"endOffset":1436507,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocOverloadTag","ranges":[{"startOffset":1436512,"endOffset":1436806,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocAugmentsTag","ranges":[{"startOffset":1436811,"endOffset":1437045,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocAugmentsTag","ranges":[{"startOffset":1437050,"endOffset":1437320,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocImplementsTag","ranges":[{"startOffset":1437325,"endOffset":1437565,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocSeeTag","ranges":[{"startOffset":1437570,"endOffset":1437778,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocSeeTag","ranges":[{"startOffset":1437783,"endOffset":1438001,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocNameReference","ranges":[{"startOffset":1438006,"endOffset":1438161,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocNameReference","ranges":[{"startOffset":1438166,"endOffset":1438306,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocMemberName","ranges":[{"startOffset":1438311,"endOffset":1438588,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocMemberName","ranges":[{"startOffset":1438593,"endOffset":1438765,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocLink","ranges":[{"startOffset":1438770,"endOffset":1438937,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocLink","ranges":[{"startOffset":1438942,"endOffset":1439076,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocLinkCode","ranges":[{"startOffset":1439081,"endOffset":1439256,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocLinkCode","ranges":[{"startOffset":1439261,"endOffset":1439403,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocLinkPlain","ranges":[{"startOffset":1439408,"endOffset":1439585,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocLinkPlain","ranges":[{"startOffset":1439590,"endOffset":1439734,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocImplementsTag","ranges":[{"startOffset":1439739,"endOffset":1440013,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocSimpleTagWorker","ranges":[{"startOffset":1440018,"endOffset":1440219,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocSimpleTagWorker","ranges":[{"startOffset":1440224,"endOffset":1440464,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocTypeLikeTagWorker","ranges":[{"startOffset":1440469,"endOffset":1440732,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocTypeLikeTagWorker","ranges":[{"startOffset":1440737,"endOffset":1441055,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocUnknownTag","ranges":[{"startOffset":1441060,"endOffset":1441212,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocUnknownTag","ranges":[{"startOffset":1441217,"endOffset":1441409,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocEnumTag","ranges":[{"startOffset":1441414,"endOffset":1441771,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocEnumTag","ranges":[{"startOffset":1441776,"endOffset":1442062,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocText","ranges":[{"startOffset":1442067,"endOffset":1442204,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocText","ranges":[{"startOffset":1442209,"endOffset":1442331,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocComment","ranges":[{"startOffset":1442336,"endOffset":1442524,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocComment","ranges":[{"startOffset":1442529,"endOffset":1442703,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxElement","ranges":[{"startOffset":1442708,"endOffset":1443172,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxElement","ranges":[{"startOffset":1443177,"endOffset":1443465,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxSelfClosingElement","ranges":[{"startOffset":1443470,"endOffset":1444027,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxSelfClosingElement","ranges":[{"startOffset":1444032,"endOffset":1444318,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxOpeningElement","ranges":[{"startOffset":1444323,"endOffset":1444867,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxOpeningElement","ranges":[{"startOffset":1444872,"endOffset":1445150,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxClosingElement","ranges":[{"startOffset":1445155,"endOffset":1445403,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxClosingElement","ranges":[{"startOffset":1445408,"endOffset":1445558,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFragment","ranges":[{"startOffset":1445563,"endOffset":1446037,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxFragment","ranges":[{"startOffset":1446042,"endOffset":1446340,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxText","ranges":[{"startOffset":1446345,"endOffset":1446634,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxText","ranges":[{"startOffset":1446639,"endOffset":1446891,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxOpeningFragment","ranges":[{"startOffset":1446896,"endOffset":1447073,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxJsxClosingFragment","ranges":[{"startOffset":1447078,"endOffset":1447258,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxAttribute","ranges":[{"startOffset":1447263,"endOffset":1447587,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxAttribute","ranges":[{"startOffset":1447592,"endOffset":1447782,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxAttributes","ranges":[{"startOffset":1447787,"endOffset":1448066,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxAttributes","ranges":[{"startOffset":1448071,"endOffset":1448225,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxSpreadAttribute","ranges":[{"startOffset":1448230,"endOffset":1448492,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxSpreadAttribute","ranges":[{"startOffset":1448497,"endOffset":1448661,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxExpression","ranges":[{"startOffset":1448666,"endOffset":1449021,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxExpression","ranges":[{"startOffset":1449026,"endOffset":1449201,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxNamespacedName","ranges":[{"startOffset":1449206,"endOffset":1449525,"count":0}],"isBlockCoverage":false},{"functionName":"updateJsxNamespacedName","ranges":[{"startOffset":1449530,"endOffset":1449722,"count":0}],"isBlockCoverage":false},{"functionName":"createCaseClause","ranges":[{"startOffset":1449727,"endOffset":1450148,"count":0}],"isBlockCoverage":false},{"functionName":"updateCaseClause","ranges":[{"startOffset":1450153,"endOffset":1450359,"count":0}],"isBlockCoverage":false},{"functionName":"createDefaultClause","ranges":[{"startOffset":1450364,"endOffset":1450613,"count":0}],"isBlockCoverage":false},{"functionName":"updateDefaultClause","ranges":[{"startOffset":1450618,"endOffset":1450772,"count":0}],"isBlockCoverage":false},{"functionName":"createHeritageClause","ranges":[{"startOffset":1450777,"endOffset":1451368,"count":0}],"isBlockCoverage":false},{"functionName":"updateHeritageClause","ranges":[{"startOffset":1451373,"endOffset":1451521,"count":0}],"isBlockCoverage":false},{"functionName":"createCatchClause","ranges":[{"startOffset":1451526,"endOffset":1452007,"count":0}],"isBlockCoverage":false},{"functionName":"updateCatchClause","ranges":[{"startOffset":1452012,"endOffset":1452236,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyAssignment","ranges":[{"startOffset":1452241,"endOffset":1452756,"count":20}],"isBlockCoverage":true},{"functionName":"updatePropertyAssignment","ranges":[{"startOffset":1452761,"endOffset":1452987,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdatePropertyAssignment","ranges":[{"startOffset":1452992,"endOffset":1453306,"count":0}],"isBlockCoverage":false},{"functionName":"createShorthandPropertyAssignment","ranges":[{"startOffset":1453311,"endOffset":1454010,"count":0}],"isBlockCoverage":false},{"functionName":"updateShorthandPropertyAssignment","ranges":[{"startOffset":1454015,"endOffset":1454332,"count":0}],"isBlockCoverage":false},{"functionName":"finishUpdateShorthandPropertyAssignment","ranges":[{"startOffset":1454337,"endOffset":1454712,"count":0}],"isBlockCoverage":false},{"functionName":"createSpreadAssignment","ranges":[{"startOffset":1454717,"endOffset":1455118,"count":0}],"isBlockCoverage":false},{"functionName":"updateSpreadAssignment","ranges":[{"startOffset":1455123,"endOffset":1455283,"count":0}],"isBlockCoverage":false},{"functionName":"createEnumMember","ranges":[{"startOffset":1455288,"endOffset":1455728,"count":0}],"isBlockCoverage":false},{"functionName":"updateEnumMember","ranges":[{"startOffset":1455733,"endOffset":1455919,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile2","ranges":[{"startOffset":1455924,"endOffset":1457626,"count":2}],"isBlockCoverage":true},{"functionName":"createRedirectedSourceFile","ranges":[{"startOffset":1457631,"endOffset":1458277,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRedirectedSourceFile","ranges":[{"startOffset":1458282,"endOffset":1458797,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceFileWorker","ranges":[{"startOffset":1458802,"endOffset":1459263,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceFile","ranges":[{"startOffset":1459268,"endOffset":1459468,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceFileWithChanges","ranges":[{"startOffset":1459473,"endOffset":1460094,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceFile2","ranges":[{"startOffset":1460099,"endOffset":1460854,"count":0}],"isBlockCoverage":false},{"functionName":"createBundle","ranges":[{"startOffset":1460859,"endOffset":1461237,"count":0}],"isBlockCoverage":false},{"functionName":"updateBundle","ranges":[{"startOffset":1461242,"endOffset":1461449,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedSource","ranges":[{"startOffset":1461454,"endOffset":1461955,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseUnparsedNode","ranges":[{"startOffset":1461960,"endOffset":1462095,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedPrologue","ranges":[{"startOffset":1462100,"endOffset":1462216,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedPrepend","ranges":[{"startOffset":1462221,"endOffset":1462393,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedTextLike","ranges":[{"startOffset":1462398,"endOffset":1462564,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedSyntheticReference","ranges":[{"startOffset":1462569,"endOffset":1462781,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFiles2","ranges":[{"startOffset":1462786,"endOffset":1462963,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntheticExpression","ranges":[{"startOffset":1462968,"endOffset":1463238,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxList3","ranges":[{"startOffset":1463243,"endOffset":1463396,"count":0}],"isBlockCoverage":false},{"functionName":"createNotEmittedStatement","ranges":[{"startOffset":1463401,"endOffset":1463606,"count":0}],"isBlockCoverage":false},{"functionName":"createPartiallyEmittedExpression","ranges":[{"startOffset":1463611,"endOffset":1463974,"count":0}],"isBlockCoverage":false},{"functionName":"updatePartiallyEmittedExpression","ranges":[{"startOffset":1463979,"endOffset":1464174,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaElements","ranges":[{"startOffset":1464179,"endOffset":1464573,"count":0}],"isBlockCoverage":false},{"functionName":"createCommaListExpression","ranges":[{"startOffset":1464578,"endOffset":1464867,"count":0}],"isBlockCoverage":false},{"functionName":"updateCommaListExpression","ranges":[{"startOffset":1464872,"endOffset":1465030,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntheticReferenceExpression","ranges":[{"startOffset":1465035,"endOffset":1465370,"count":0}],"isBlockCoverage":false},{"functionName":"updateSyntheticReferenceExpression","ranges":[{"startOffset":1465375,"endOffset":1465605,"count":0}],"isBlockCoverage":false},{"functionName":"cloneGeneratedIdentifier","ranges":[{"startOffset":1465610,"endOffset":1465957,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIdentifier","ranges":[{"startOffset":1465962,"endOffset":1466477,"count":0}],"isBlockCoverage":false},{"functionName":"cloneGeneratedPrivateIdentifier","ranges":[{"startOffset":1466482,"endOffset":1466843,"count":0}],"isBlockCoverage":false},{"functionName":"clonePrivateIdentifier","ranges":[{"startOffset":1466848,"endOffset":1467124,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":1467129,"endOffset":1468138,"count":0}],"isBlockCoverage":false},{"functionName":"createImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":1468143,"endOffset":1468798,"count":0}],"isBlockCoverage":false},{"functionName":"createImmediatelyInvokedArrowFunction","ranges":[{"startOffset":1468803,"endOffset":1469420,"count":0}],"isBlockCoverage":false},{"functionName":"createVoidZero","ranges":[{"startOffset":1469425,"endOffset":1469520,"count":0}],"isBlockCoverage":false},{"functionName":"createExportDefault","ranges":[{"startOffset":1469525,"endOffset":1469719,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalModuleExport","ranges":[{"startOffset":1469724,"endOffset":1470105,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeCheck","ranges":[{"startOffset":1470110,"endOffset":1470404,"count":0}],"isBlockCoverage":false},{"functionName":"createIsNotTypeCheck","ranges":[{"startOffset":1470409,"endOffset":1470714,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodCall","ranges":[{"startOffset":1470719,"endOffset":1471304,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionBindCall","ranges":[{"startOffset":1471309,"endOffset":1471456,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionCallCall","ranges":[{"startOffset":1471461,"endOffset":1471608,"count":0}],"isBlockCoverage":false},{"functionName":"createFunctionApplyCall","ranges":[{"startOffset":1471613,"endOffset":1471771,"count":0}],"isBlockCoverage":false},{"functionName":"createGlobalMethodCall","ranges":[{"startOffset":1471776,"endOffset":1471954,"count":0}],"isBlockCoverage":false},{"functionName":"createArraySliceCall","ranges":[{"startOffset":1471959,"endOffset":1472104,"count":0}],"isBlockCoverage":false},{"functionName":"createArrayConcatCall","ranges":[{"startOffset":1472109,"endOffset":1472232,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectDefinePropertyCall","ranges":[{"startOffset":1472237,"endOffset":1472433,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectGetOwnPropertyDescriptorCall","ranges":[{"startOffset":1472438,"endOffset":1472630,"count":0}],"isBlockCoverage":false},{"functionName":"createReflectGetCall","ranges":[{"startOffset":1472635,"endOffset":1472826,"count":0}],"isBlockCoverage":false},{"functionName":"createReflectSetCall","ranges":[{"startOffset":1472831,"endOffset":1473043,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddPropertyAssignment","ranges":[{"startOffset":1473048,"endOffset":1473277,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyDescriptor","ranges":[{"startOffset":1473282,"endOffset":1474146,"count":0}],"isBlockCoverage":false},{"functionName":"updateOuterExpression","ranges":[{"startOffset":1474151,"endOffset":1475034,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnorableParen","ranges":[{"startOffset":1475039,"endOffset":1475330,"count":0}],"isBlockCoverage":false},{"functionName":"restoreOuterExpressions","ranges":[{"startOffset":1475335,"endOffset":1475736,"count":0}],"isBlockCoverage":false},{"functionName":"restoreEnclosingLabel","ranges":[{"startOffset":1475741,"endOffset":1476308,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeCapturedInTempVariable","ranges":[{"startOffset":1476313,"endOffset":1477031,"count":0}],"isBlockCoverage":false},{"functionName":"createCallBinding","ranges":[{"startOffset":1477036,"endOffset":1479271,"count":0}],"isBlockCoverage":false},{"functionName":"createAssignmentTargetWrapper","ranges":[{"startOffset":1479276,"endOffset":1480227,"count":0}],"isBlockCoverage":false},{"functionName":"inlineExpressions","ranges":[{"startOffset":1480232,"endOffset":1480406,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":1480411,"endOffset":1481137,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalName","ranges":[{"startOffset":1481142,"endOffset":1481322,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalName","ranges":[{"startOffset":1481327,"endOffset":1481517,"count":0}],"isBlockCoverage":false},{"functionName":"getExportName","ranges":[{"startOffset":1481522,"endOffset":1481674,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationName","ranges":[{"startOffset":1481679,"endOffset":1481812,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceMemberName","ranges":[{"startOffset":1481817,"endOffset":1482316,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleOrNamespaceExportName","ranges":[{"startOffset":1482321,"endOffset":1482645,"count":0}],"isBlockCoverage":false},{"functionName":"copyPrologue","ranges":[{"startOffset":1482650,"endOffset":1482868,"count":0}],"isBlockCoverage":false},{"functionName":"isUseStrictPrologue2","ranges":[{"startOffset":1482873,"endOffset":1483004,"count":0}],"isBlockCoverage":false},{"functionName":"createUseStrictPrologue","ranges":[{"startOffset":1483009,"endOffset":1483142,"count":0}],"isBlockCoverage":false},{"functionName":"copyStandardPrologue","ranges":[{"startOffset":1483147,"endOffset":1483933,"count":0}],"isBlockCoverage":false},{"functionName":"copyCustomPrologue","ranges":[{"startOffset":1483938,"endOffset":1484502,"count":0}],"isBlockCoverage":false},{"functionName":"ensureUseStrict","ranges":[{"startOffset":1484507,"endOffset":1484779,"count":0}],"isBlockCoverage":false},{"functionName":"liftToBlock","ranges":[{"startOffset":1484784,"endOffset":1484967,"count":0}],"isBlockCoverage":false},{"functionName":"findSpanEnd","ranges":[{"startOffset":1484972,"endOffset":1485129,"count":0}],"isBlockCoverage":false},{"functionName":"mergeLexicalEnvironment","ranges":[{"startOffset":1485134,"endOffset":1487677,"count":0}],"isBlockCoverage":false},{"functionName":"replaceModifiers","ranges":[{"startOffset":1487682,"endOffset":1491322,"count":0}],"isBlockCoverage":false},{"functionName":"replaceDecoratorsAndModifiers","ranges":[{"startOffset":1491327,"endOffset":1492473,"count":0}],"isBlockCoverage":false},{"functionName":"replacePropertyName","ranges":[{"startOffset":1492478,"endOffset":1493689,"count":0}],"isBlockCoverage":false},{"functionName":"asNodeArray","ranges":[{"startOffset":1493694,"endOffset":1493783,"count":0}],"isBlockCoverage":false},{"functionName":"asName","ranges":[{"startOffset":1493788,"endOffset":1493888,"count":20},{"startOffset":1493850,"endOffset":1493874,"count":0}],"isBlockCoverage":true},{"functionName":"asExpression","ranges":[{"startOffset":1493893,"endOffset":1494132,"count":0}],"isBlockCoverage":false},{"functionName":"asInitializer","ranges":[{"startOffset":1494137,"endOffset":1494263,"count":0}],"isBlockCoverage":false},{"functionName":"asToken","ranges":[{"startOffset":1494268,"endOffset":1494368,"count":0}],"isBlockCoverage":false},{"functionName":"asEmbeddedStatement","ranges":[{"startOffset":1494373,"endOffset":1494566,"count":0}],"isBlockCoverage":false},{"functionName":"asVariableDeclaration","ranges":[{"startOffset":1494571,"endOffset":1495008,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1495013,"endOffset":1495200,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTagNameForKind","ranges":[{"startOffset":1495207,"endOffset":1496582,"count":0}],"isBlockCoverage":false},{"functionName":"getCookedText","ranges":[{"startOffset":1496585,"endOffset":1498059,"count":0}],"isBlockCoverage":false},{"functionName":"propagateNameFlags","ranges":[{"startOffset":1498062,"endOffset":1498205,"count":20},{"startOffset":1498136,"endOffset":1498172,"count":0}],"isBlockCoverage":true},{"functionName":"propagateIdentifierNameFlags","ranges":[{"startOffset":1498208,"endOffset":1498343,"count":0}],"isBlockCoverage":false},{"functionName":"propagatePropertyNameFlagsOfChild","ranges":[{"startOffset":1498346,"endOffset":1498512,"count":20}],"isBlockCoverage":true},{"functionName":"propagateChildFlags","ranges":[{"startOffset":1498515,"endOffset":1498835,"count":66},{"startOffset":1498575,"endOffset":1498595,"count":0},{"startOffset":1498728,"endOffset":1498757,"count":20},{"startOffset":1498758,"endOffset":1498817,"count":20},{"startOffset":1498818,"endOffset":1498830,"count":46}],"isBlockCoverage":true},{"functionName":"propagateChildrenFlags","ranges":[{"startOffset":1498838,"endOffset":1498947,"count":8},{"startOffset":1498928,"endOffset":1498931,"count":0}],"isBlockCoverage":true},{"functionName":"aggregateChildrenFlags","ranges":[{"startOffset":1498950,"endOffset":1499170,"count":8},{"startOffset":1499065,"endOffset":1499122,"count":22}],"isBlockCoverage":true},{"functionName":"getTransformFlagsSubtreeExclusions","ranges":[{"startOffset":1499173,"endOffset":1502067,"count":66},{"startOffset":1499265,"endOffset":1499279,"count":28},{"startOffset":1499300,"endOffset":1499343,"count":0},{"startOffset":1499370,"endOffset":1499400,"count":0},{"startOffset":1499407,"endOffset":1499436,"count":0},{"startOffset":1499443,"endOffset":1499547,"count":0},{"startOffset":1499554,"endOffset":1499636,"count":0},{"startOffset":1499643,"endOffset":1499720,"count":0},{"startOffset":1499727,"endOffset":1499812,"count":0},{"startOffset":1499819,"endOffset":1499853,"count":0},{"startOffset":1499860,"endOffset":1499946,"count":0},{"startOffset":1499953,"endOffset":1500058,"count":0},{"startOffset":1500065,"endOffset":1500097,"count":0},{"startOffset":1500104,"endOffset":1500183,"count":0},{"startOffset":1500190,"endOffset":1500271,"count":0},{"startOffset":1500278,"endOffset":1500364,"count":0},{"startOffset":1500371,"endOffset":1500404,"count":0},{"startOffset":1500411,"endOffset":1500438,"count":0},{"startOffset":1500445,"endOffset":1500531,"count":0},{"startOffset":1500538,"endOffset":1500564,"count":0},{"startOffset":1500571,"endOffset":1500600,"count":0},{"startOffset":1500607,"endOffset":1500636,"count":0},{"startOffset":1500643,"endOffset":1500671,"count":0},{"startOffset":1500678,"endOffset":1500707,"count":0},{"startOffset":1500714,"endOffset":1500743,"count":0},{"startOffset":1500750,"endOffset":1500780,"count":0},{"startOffset":1500787,"endOffset":1500816,"count":0},{"startOffset":1500823,"endOffset":1500850,"count":0},{"startOffset":1500857,"endOffset":1500886,"count":0},{"startOffset":1500893,"endOffset":1500926,"count":0},{"startOffset":1500933,"endOffset":1500964,"count":0},{"startOffset":1500971,"endOffset":1501000,"count":0},{"startOffset":1501007,"endOffset":1501041,"count":0},{"startOffset":1501048,"endOffset":1501078,"count":0},{"startOffset":1501085,"endOffset":1501121,"count":0},{"startOffset":1501128,"endOffset":1501202,"count":0},{"startOffset":1501209,"endOffset":1501304,"count":6},{"startOffset":1501311,"endOffset":1501392,"count":0},{"startOffset":1501399,"endOffset":1501435,"count":0},{"startOffset":1501442,"endOffset":1501534,"count":0},{"startOffset":1501541,"endOffset":1501580,"count":0},{"startOffset":1501587,"endOffset":1501622,"count":0},{"startOffset":1501629,"endOffset":1501657,"count":0},{"startOffset":1501664,"endOffset":1501706,"count":0},{"startOffset":1501713,"endOffset":1501752,"count":0},{"startOffset":1501759,"endOffset":1501845,"count":0},{"startOffset":1501852,"endOffset":1501892,"count":0},{"startOffset":1501899,"endOffset":1501995,"count":0},{"startOffset":1502002,"endOffset":1502057,"count":60}],"isBlockCoverage":true},{"functionName":"makeSynthetic","ranges":[{"startOffset":1502070,"endOffset":1502161,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedSourceFile","ranges":[{"startOffset":1502164,"endOffset":1504362,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnparsedSourceFile","ranges":[{"startOffset":1504365,"endOffset":1507888,"count":0}],"isBlockCoverage":false},{"functionName":"parseOldFileOfCurrentEmit","ranges":[{"startOffset":1507891,"endOffset":1509272,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFiles","ranges":[{"startOffset":1509275,"endOffset":1510104,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFilesWithFilePaths","ranges":[{"startOffset":1510107,"endOffset":1512100,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFilesWithFileTexts","ranges":[{"startOffset":1512103,"endOffset":1512904,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapSource","ranges":[{"startOffset":1512907,"endOffset":1513108,"count":0}],"isBlockCoverage":false},{"functionName":"setOriginalNode","ranges":[{"startOffset":1513111,"endOffset":1513412,"count":0}],"isBlockCoverage":false},{"functionName":"mergeEmitNode","ranges":[{"startOffset":1513415,"endOffset":1515189,"count":0}],"isBlockCoverage":false},{"functionName":"mergeTokenSourceMapRanges","ranges":[{"startOffset":1515192,"endOffset":1515412,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/nodeFactory.ts","ranges":[{"startOffset":1515611,"endOffset":1517073,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1515763,"endOffset":1516300,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1516498,"endOffset":1516565,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1516601,"endOffset":1516668,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1516711,"endOffset":1516785,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1516816,"endOffset":1516878,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNode","ranges":[{"startOffset":1516904,"endOffset":1516961,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateEmitNode","ranges":[{"startOffset":1517121,"endOffset":1517759,"count":0}],"isBlockCoverage":false},{"functionName":"disposeEmitNodes","ranges":[{"startOffset":1517762,"endOffset":1518096,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllComments","ranges":[{"startOffset":1518099,"endOffset":1518326,"count":0}],"isBlockCoverage":false},{"functionName":"setEmitFlags","ranges":[{"startOffset":1518329,"endOffset":1518439,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlags","ranges":[{"startOffset":1518442,"endOffset":1518600,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalEmitFlags","ranges":[{"startOffset":1518603,"endOffset":1518729,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalEmitFlags","ranges":[{"startOffset":1518732,"endOffset":1518914,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapRange","ranges":[{"startOffset":1518917,"endOffset":1519047,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapRange","ranges":[{"startOffset":1519050,"endOffset":1519166,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenSourceMapRange","ranges":[{"startOffset":1519169,"endOffset":1519347,"count":0}],"isBlockCoverage":false},{"functionName":"setTokenSourceMapRange","ranges":[{"startOffset":1519350,"endOffset":1519617,"count":0}],"isBlockCoverage":false},{"functionName":"getStartsOnNewLine","ranges":[{"startOffset":1519620,"endOffset":1519742,"count":0}],"isBlockCoverage":false},{"functionName":"setStartsOnNewLine","ranges":[{"startOffset":1519745,"endOffset":1519867,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentRange","ranges":[{"startOffset":1519870,"endOffset":1519996,"count":0}],"isBlockCoverage":false},{"functionName":"setCommentRange","ranges":[{"startOffset":1519999,"endOffset":1520111,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticLeadingComments","ranges":[{"startOffset":1520114,"endOffset":1520245,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticLeadingComments","ranges":[{"startOffset":1520248,"endOffset":1520381,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticLeadingComment","ranges":[{"startOffset":1520384,"endOffset":1520606,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticTrailingComments","ranges":[{"startOffset":1520609,"endOffset":1520742,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticTrailingComments","ranges":[{"startOffset":1520745,"endOffset":1520880,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticTrailingComment","ranges":[{"startOffset":1520883,"endOffset":1521108,"count":0}],"isBlockCoverage":false},{"functionName":"moveSyntheticComments","ranges":[{"startOffset":1521111,"endOffset":1521457,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantValue","ranges":[{"startOffset":1521460,"endOffset":1521578,"count":0}],"isBlockCoverage":false},{"functionName":"setConstantValue","ranges":[{"startOffset":1521581,"endOffset":1521726,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelper","ranges":[{"startOffset":1521729,"endOffset":1521893,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelpers","ranges":[{"startOffset":1521896,"endOffset":1522153,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmitHelper","ranges":[{"startOffset":1522156,"endOffset":1522377,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitHelpers","ranges":[{"startOffset":1522380,"endOffset":1522490,"count":0}],"isBlockCoverage":false},{"functionName":"moveEmitHelpers","ranges":[{"startOffset":1522493,"endOffset":1523231,"count":0}],"isBlockCoverage":false},{"functionName":"getSnippetElement","ranges":[{"startOffset":1523234,"endOffset":1523354,"count":0}],"isBlockCoverage":false},{"functionName":"setSnippetElement","ranges":[{"startOffset":1523357,"endOffset":1523508,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreSourceNewlines","ranges":[{"startOffset":1523511,"endOffset":1523646,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeNode","ranges":[{"startOffset":1523649,"endOffset":1523782,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode","ranges":[{"startOffset":1523785,"endOffset":1523893,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierTypeArguments","ranges":[{"startOffset":1523896,"endOffset":1524046,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierTypeArguments","ranges":[{"startOffset":1524049,"endOffset":1524187,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierAutoGenerate","ranges":[{"startOffset":1524190,"endOffset":1524326,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierAutoGenerate","ranges":[{"startOffset":1524329,"endOffset":1524455,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierGeneratedImportReference","ranges":[{"startOffset":1524458,"endOffset":1524604,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierGeneratedImportReference","ranges":[{"startOffset":1524607,"endOffset":1524757,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/emitNode.ts","ranges":[{"startOffset":1524792,"endOffset":1524874,"count":1}],"isBlockCoverage":true},{"functionName":"createEmitHelperFactory","ranges":[{"startOffset":1524925,"endOffset":1544864,"count":0}],"isBlockCoverage":false},{"functionName":"compareEmitHelpers","ranges":[{"startOffset":1544867,"endOffset":1545196,"count":0}],"isBlockCoverage":false},{"functionName":"helperString","ranges":[{"startOffset":1545199,"endOffset":1545484,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1545250,"endOffset":1545479,"count":0}],"isBlockCoverage":false},{"functionName":"getAllUnscopedEmitHelpers","ranges":[{"startOffset":1545487,"endOffset":1546384,"count":0}],"isBlockCoverage":false},{"functionName":"isCallToHelper","ranges":[{"startOffset":1546387,"endOffset":1546653,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/emitHelpers.ts","ranges":[{"startOffset":1547354,"endOffset":1572695,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1547481,"endOffset":1547702,"count":1}],"isBlockCoverage":true},{"functionName":"isNumericLiteral","ranges":[{"startOffset":1572744,"endOffset":1572830,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":1572833,"endOffset":1572918,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":1572921,"endOffset":1573006,"count":24}],"isBlockCoverage":true},{"functionName":"isJsxText","ranges":[{"startOffset":1573009,"endOffset":1573082,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionLiteral","ranges":[{"startOffset":1573085,"endOffset":1573192,"count":0}],"isBlockCoverage":false},{"functionName":"isNoSubstitutionTemplateLiteral","ranges":[{"startOffset":1573195,"endOffset":1573312,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateHead","ranges":[{"startOffset":1573315,"endOffset":1573398,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddle","ranges":[{"startOffset":1573401,"endOffset":1573488,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateTail","ranges":[{"startOffset":1573491,"endOffset":1573574,"count":0}],"isBlockCoverage":false},{"functionName":"isDotDotDotToken","ranges":[{"startOffset":1573577,"endOffset":1573664,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":1573667,"endOffset":1573746,"count":0}],"isBlockCoverage":false},{"functionName":"isPlusToken","ranges":[{"startOffset":1573749,"endOffset":1573826,"count":0}],"isBlockCoverage":false},{"functionName":"isMinusToken","ranges":[{"startOffset":1573829,"endOffset":1573908,"count":0}],"isBlockCoverage":false},{"functionName":"isAsteriskToken","ranges":[{"startOffset":1573911,"endOffset":1573996,"count":0}],"isBlockCoverage":false},{"functionName":"isExclamationToken","ranges":[{"startOffset":1573999,"endOffset":1574090,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionToken","ranges":[{"startOffset":1574093,"endOffset":1574178,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":1574181,"endOffset":1574260,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":1574263,"endOffset":1574354,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualsGreaterThanToken","ranges":[{"startOffset":1574357,"endOffset":1574460,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":1574463,"endOffset":1574542,"count":20}],"isBlockCoverage":true},{"functionName":"isPrivateIdentifier","ranges":[{"startOffset":1574545,"endOffset":1574638,"count":0}],"isBlockCoverage":false},{"functionName":"isExportModifier","ranges":[{"startOffset":1574641,"endOffset":1574727,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier","ranges":[{"startOffset":1574730,"endOffset":1574818,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncModifier","ranges":[{"startOffset":1574821,"endOffset":1574906,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertsKeyword","ranges":[{"startOffset":1574909,"endOffset":1574997,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitKeyword","ranges":[{"startOffset":1575000,"endOffset":1575084,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeyword","ranges":[{"startOffset":1575087,"endOffset":1575177,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticModifier","ranges":[{"startOffset":1575180,"endOffset":1575267,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractModifier","ranges":[{"startOffset":1575270,"endOffset":1575361,"count":0}],"isBlockCoverage":false},{"functionName":"isOverrideModifier","ranges":[{"startOffset":1575364,"endOffset":1575455,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessorModifier","ranges":[{"startOffset":1575458,"endOffset":1575549,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperKeyword","ranges":[{"startOffset":1575552,"endOffset":1575636,"count":0}],"isBlockCoverage":false},{"functionName":"isImportKeyword","ranges":[{"startOffset":1575639,"endOffset":1575725,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseKeyword","ranges":[{"startOffset":1575728,"endOffset":1575809,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedName","ranges":[{"startOffset":1575812,"endOffset":1575898,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedPropertyName","ranges":[{"startOffset":1575901,"endOffset":1576001,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":1576004,"endOffset":1576101,"count":0}],"isBlockCoverage":false},{"functionName":"isParameter","ranges":[{"startOffset":1576104,"endOffset":1576182,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":1576185,"endOffset":1576263,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertySignature","ranges":[{"startOffset":1576266,"endOffset":1576360,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDeclaration","ranges":[{"startOffset":1576363,"endOffset":1576461,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodSignature","ranges":[{"startOffset":1576464,"endOffset":1576554,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodDeclaration","ranges":[{"startOffset":1576557,"endOffset":1576651,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticBlockDeclaration","ranges":[{"startOffset":1576654,"endOffset":1576768,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorDeclaration","ranges":[{"startOffset":1576771,"endOffset":1576864,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessorDeclaration","ranges":[{"startOffset":1576867,"endOffset":1576960,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessorDeclaration","ranges":[{"startOffset":1576963,"endOffset":1577056,"count":0}],"isBlockCoverage":false},{"functionName":"isCallSignatureDeclaration","ranges":[{"startOffset":1577059,"endOffset":1577156,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructSignatureDeclaration","ranges":[{"startOffset":1577159,"endOffset":1577266,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignatureDeclaration","ranges":[{"startOffset":1577269,"endOffset":1577368,"count":0}],"isBlockCoverage":false},{"functionName":"isTypePredicateNode","ranges":[{"startOffset":1577371,"endOffset":1577461,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceNode","ranges":[{"startOffset":1577464,"endOffset":1577554,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeNode","ranges":[{"startOffset":1577557,"endOffset":1577645,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorTypeNode","ranges":[{"startOffset":1577648,"endOffset":1577742,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeQueryNode","ranges":[{"startOffset":1577745,"endOffset":1577827,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeLiteralNode","ranges":[{"startOffset":1577830,"endOffset":1577916,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeNode","ranges":[{"startOffset":1577919,"endOffset":1578001,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeNode","ranges":[{"startOffset":1578004,"endOffset":1578086,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedTupleMember","ranges":[{"startOffset":1578089,"endOffset":1578181,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalTypeNode","ranges":[{"startOffset":1578184,"endOffset":1578272,"count":0}],"isBlockCoverage":false},{"functionName":"isRestTypeNode","ranges":[{"startOffset":1578275,"endOffset":1578355,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeNode","ranges":[{"startOffset":1578358,"endOffset":1578440,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeNode","ranges":[{"startOffset":1578443,"endOffset":1578539,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalTypeNode","ranges":[{"startOffset":1578542,"endOffset":1578636,"count":0}],"isBlockCoverage":false},{"functionName":"isInferTypeNode","ranges":[{"startOffset":1578639,"endOffset":1578721,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedTypeNode","ranges":[{"startOffset":1578724,"endOffset":1578822,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeNode","ranges":[{"startOffset":1578825,"endOffset":1578905,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOperatorNode","ranges":[{"startOffset":1578908,"endOffset":1578996,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessTypeNode","ranges":[{"startOffset":1578999,"endOffset":1579097,"count":0}],"isBlockCoverage":false},{"functionName":"isMappedTypeNode","ranges":[{"startOffset":1579100,"endOffset":1579184,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeNode","ranges":[{"startOffset":1579187,"endOffset":1579273,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeNode","ranges":[{"startOffset":1579276,"endOffset":1579360,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeSpan","ranges":[{"startOffset":1579363,"endOffset":1579469,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeNode","ranges":[{"startOffset":1579472,"endOffset":1579574,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingPattern","ranges":[{"startOffset":1579577,"endOffset":1579677,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingPattern","ranges":[{"startOffset":1579680,"endOffset":1579778,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElement","ranges":[{"startOffset":1579781,"endOffset":1579869,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralExpression","ranges":[{"startOffset":1579872,"endOffset":1579976,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralExpression","ranges":[{"startOffset":1579979,"endOffset":1580085,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessExpression","ranges":[{"startOffset":1580088,"endOffset":1580196,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessExpression","ranges":[{"startOffset":1580199,"endOffset":1580305,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":1580308,"endOffset":1580396,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":1580399,"endOffset":1580485,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":1580488,"endOffset":1580596,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionExpression","ranges":[{"startOffset":1580599,"endOffset":1580705,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":1580708,"endOffset":1580814,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":1580817,"endOffset":1580913,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunction","ranges":[{"startOffset":1580916,"endOffset":1581002,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteExpression","ranges":[{"startOffset":1581005,"endOffset":1581097,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfExpression","ranges":[{"startOffset":1581100,"endOffset":1581192,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidExpression","ranges":[{"startOffset":1581195,"endOffset":1581283,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":1581286,"endOffset":1581376,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpression","ranges":[{"startOffset":1581379,"endOffset":1581481,"count":0}],"isBlockCoverage":false},{"functionName":"isPostfixUnaryExpression","ranges":[{"startOffset":1581484,"endOffset":1581588,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":1581591,"endOffset":1581683,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":1581686,"endOffset":1581788,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateExpression","ranges":[{"startOffset":1581791,"endOffset":1581887,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":1581890,"endOffset":1581980,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":1581983,"endOffset":1582069,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":1582072,"endOffset":1582162,"count":0}],"isBlockCoverage":false},{"functionName":"isOmittedExpression","ranges":[{"startOffset":1582165,"endOffset":1582259,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArguments","ranges":[{"startOffset":1582262,"endOffset":1582376,"count":0}],"isBlockCoverage":false},{"functionName":"isAsExpression","ranges":[{"startOffset":1582379,"endOffset":1582463,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiesExpression","ranges":[{"startOffset":1582466,"endOffset":1582564,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullExpression","ranges":[{"startOffset":1582567,"endOffset":1582661,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":1582664,"endOffset":1582748,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticExpression","ranges":[{"startOffset":1582751,"endOffset":1582849,"count":0}],"isBlockCoverage":false},{"functionName":"isPartiallyEmittedExpression","ranges":[{"startOffset":1582852,"endOffset":1582964,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaListExpression","ranges":[{"startOffset":1582967,"endOffset":1583065,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateSpan","ranges":[{"startOffset":1583068,"endOffset":1583152,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonClassElement","ranges":[{"startOffset":1583155,"endOffset":1583257,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":1583260,"endOffset":1583330,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableStatement","ranges":[{"startOffset":1583333,"endOffset":1583427,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":1583430,"endOffset":1583518,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":1583521,"endOffset":1583619,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":1583622,"endOffset":1583704,"count":0}],"isBlockCoverage":false},{"functionName":"isDoStatement","ranges":[{"startOffset":1583707,"endOffset":1583789,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":1583792,"endOffset":1583880,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":1583883,"endOffset":1583967,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":1583970,"endOffset":1584058,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":1584061,"endOffset":1584149,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":1584152,"endOffset":1584246,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":1584249,"endOffset":1584337,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":1584340,"endOffset":1584430,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":1584433,"endOffset":1584519,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":1584522,"endOffset":1584612,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":1584615,"endOffset":1584707,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":1584710,"endOffset":1584798,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":1584801,"endOffset":1584885,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":1584888,"endOffset":1584982,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":1584985,"endOffset":1585083,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationList","ranges":[{"startOffset":1585086,"endOffset":1585192,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":1585195,"endOffset":1585293,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":1585296,"endOffset":1585388,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":1585391,"endOffset":1585491,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAliasDeclaration","ranges":[{"startOffset":1585494,"endOffset":1585594,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":1585597,"endOffset":1585687,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":1585690,"endOffset":1585784,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBlock","ranges":[{"startOffset":1585787,"endOffset":1585869,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseBlock","ranges":[{"startOffset":1585872,"endOffset":1585950,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExportDeclaration","ranges":[{"startOffset":1585953,"endOffset":1586065,"count":0}],"isBlockCoverage":false},{"functionName":"isImportEqualsDeclaration","ranges":[{"startOffset":1586068,"endOffset":1586174,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":1586177,"endOffset":1586271,"count":0}],"isBlockCoverage":false},{"functionName":"isImportClause","ranges":[{"startOffset":1586274,"endOffset":1586358,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeAssertionContainer","ranges":[{"startOffset":1586361,"endOffset":1586477,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertClause","ranges":[{"startOffset":1586480,"endOffset":1586564,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertEntry","ranges":[{"startOffset":1586567,"endOffset":1586649,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributes","ranges":[{"startOffset":1586652,"endOffset":1586744,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":1586747,"endOffset":1586837,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceImport","ranges":[{"startOffset":1586840,"endOffset":1586930,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExport","ranges":[{"startOffset":1586933,"endOffset":1587023,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImports","ranges":[{"startOffset":1587026,"endOffset":1587110,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":1587113,"endOffset":1587203,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":1587206,"endOffset":1587298,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":1587301,"endOffset":1587395,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExports","ranges":[{"startOffset":1587398,"endOffset":1587482,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":1587485,"endOffset":1587575,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingDeclaration","ranges":[{"startOffset":1587578,"endOffset":1587674,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedStatement","ranges":[{"startOffset":1587677,"endOffset":1587775,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticReference","ranges":[{"startOffset":1587778,"endOffset":1587884,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference","ranges":[{"startOffset":1587887,"endOffset":1587993,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxElement","ranges":[{"startOffset":1587996,"endOffset":1588076,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElement","ranges":[{"startOffset":1588079,"endOffset":1588181,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningElement","ranges":[{"startOffset":1588184,"endOffset":1588278,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingElement","ranges":[{"startOffset":1588281,"endOffset":1588375,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxFragment","ranges":[{"startOffset":1588378,"endOffset":1588460,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningFragment","ranges":[{"startOffset":1588463,"endOffset":1588559,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingFragment","ranges":[{"startOffset":1588562,"endOffset":1588658,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttribute","ranges":[{"startOffset":1588661,"endOffset":1588745,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributes","ranges":[{"startOffset":1588748,"endOffset":1588834,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSpreadAttribute","ranges":[{"startOffset":1588837,"endOffset":1588933,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpression","ranges":[{"startOffset":1588936,"endOffset":1589022,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxNamespacedName","ranges":[{"startOffset":1589025,"endOffset":1589119,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseClause","ranges":[{"startOffset":1589122,"endOffset":1589202,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultClause","ranges":[{"startOffset":1589205,"endOffset":1589291,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause","ranges":[{"startOffset":1589294,"endOffset":1589382,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":1589385,"endOffset":1589467,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAssignment","ranges":[{"startOffset":1589470,"endOffset":1589566,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyAssignment","ranges":[{"startOffset":1589569,"endOffset":1589683,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadAssignment","ranges":[{"startOffset":1589686,"endOffset":1589778,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":1589781,"endOffset":1589861,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedPrepend","ranges":[{"startOffset":1589864,"endOffset":1589954,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFile","ranges":[{"startOffset":1589957,"endOffset":1590037,"count":0}],"isBlockCoverage":false},{"functionName":"isBundle","ranges":[{"startOffset":1590040,"endOffset":1590112,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedSource","ranges":[{"startOffset":1590115,"endOffset":1590203,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeExpression","ranges":[{"startOffset":1590206,"endOffset":1590304,"count":24}],"isBlockCoverage":true},{"functionName":"isJSDocNameReference","ranges":[{"startOffset":1590307,"endOffset":1590403,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocMemberName","ranges":[{"startOffset":1590406,"endOffset":1590496,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLink","ranges":[{"startOffset":1590499,"endOffset":1590577,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkCode","ranges":[{"startOffset":1590580,"endOffset":1590666,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkPlain","ranges":[{"startOffset":1590669,"endOffset":1590757,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAllType","ranges":[{"startOffset":1590760,"endOffset":1590844,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownType","ranges":[{"startOffset":1590847,"endOffset":1590939,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNullableType","ranges":[{"startOffset":1590942,"endOffset":1591036,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNonNullableType","ranges":[{"startOffset":1591039,"endOffset":1591139,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalType","ranges":[{"startOffset":1591142,"endOffset":1591236,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocFunctionType","ranges":[{"startOffset":1591239,"endOffset":1591333,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocVariadicType","ranges":[{"startOffset":1591336,"endOffset":1591430,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamepathType","ranges":[{"startOffset":1591433,"endOffset":1591527,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDoc","ranges":[{"startOffset":1591530,"endOffset":1591600,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeLiteral","ranges":[{"startOffset":1591603,"endOffset":1591695,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSignature","ranges":[{"startOffset":1591698,"endOffset":1591786,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAugmentsTag","ranges":[{"startOffset":1591789,"endOffset":1591881,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAuthorTag","ranges":[{"startOffset":1591884,"endOffset":1591972,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocClassTag","ranges":[{"startOffset":1591975,"endOffset":1592061,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCallbackTag","ranges":[{"startOffset":1592064,"endOffset":1592156,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPublicTag","ranges":[{"startOffset":1592159,"endOffset":1592247,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPrivateTag","ranges":[{"startOffset":1592250,"endOffset":1592340,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocProtectedTag","ranges":[{"startOffset":1592343,"endOffset":1592437,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReadonlyTag","ranges":[{"startOffset":1592440,"endOffset":1592532,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverrideTag","ranges":[{"startOffset":1592535,"endOffset":1592627,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverloadTag","ranges":[{"startOffset":1592630,"endOffset":1592722,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocDeprecatedTag","ranges":[{"startOffset":1592725,"endOffset":1592821,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSeeTag","ranges":[{"startOffset":1592824,"endOffset":1592906,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocEnumTag","ranges":[{"startOffset":1592909,"endOffset":1592993,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocParameterTag","ranges":[{"startOffset":1592996,"endOffset":1593090,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReturnTag","ranges":[{"startOffset":1593093,"endOffset":1593181,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThisTag","ranges":[{"startOffset":1593184,"endOffset":1593268,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeTag","ranges":[{"startOffset":1593271,"endOffset":1593355,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTemplateTag","ranges":[{"startOffset":1593358,"endOffset":1593450,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypedefTag","ranges":[{"startOffset":1593453,"endOffset":1593543,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownTag","ranges":[{"startOffset":1593546,"endOffset":1593629,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyTag","ranges":[{"startOffset":1593632,"endOffset":1593724,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImplementsTag","ranges":[{"startOffset":1593727,"endOffset":1593823,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesTag","ranges":[{"startOffset":1593826,"endOffset":1593920,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThrowsTag","ranges":[{"startOffset":1593923,"endOffset":1594011,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxList","ranges":[{"startOffset":1594014,"endOffset":1594088,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/nodeTests.ts","ranges":[{"startOffset":1594124,"endOffset":1594207,"count":1}],"isBlockCoverage":true},{"functionName":"createEmptyExports","ranges":[{"startOffset":1594256,"endOffset":1594497,"count":0}],"isBlockCoverage":false},{"functionName":"createMemberAccessForPropertyName","ranges":[{"startOffset":1594500,"endOffset":1595072,"count":0}],"isBlockCoverage":false},{"functionName":"createReactNamespace","ranges":[{"startOffset":1595075,"endOffset":1595282,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpressionFromEntityName","ranges":[{"startOffset":1595285,"endOffset":1595786,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpression","ranges":[{"startOffset":1595789,"endOffset":1596116,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFragmentFactoryExpression","ranges":[{"startOffset":1596119,"endOffset":1596473,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxElement","ranges":[{"startOffset":1596476,"endOffset":1597185,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxFragment","ranges":[{"startOffset":1597188,"endOffset":1598039,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfBindingStatement","ranges":[{"startOffset":1598042,"endOffset":1598980,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeadingStatement","ranges":[{"startOffset":1598983,"endOffset":1599345,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionFromEntityName","ranges":[{"startOffset":1599348,"endOffset":1599811,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyName","ranges":[{"startOffset":1599814,"endOffset":1600288,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForAccessorDeclaration","ranges":[{"startOffset":1600291,"endOffset":1602166,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyAssignment","ranges":[{"startOffset":1602169,"endOffset":1602604,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForShorthandPropertyAssignment","ranges":[{"startOffset":1602607,"endOffset":1603104,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForMethodDeclaration","ranges":[{"startOffset":1603107,"endOffset":1604108,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForObjectLiteralElementLike","ranges":[{"startOffset":1604111,"endOffset":1604993,"count":0}],"isBlockCoverage":false},{"functionName":"expandPreOrPostfixIncrementOrDecrementExpression","ranges":[{"startOffset":1604996,"endOffset":1606118,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalName","ranges":[{"startOffset":1606121,"endOffset":1606222,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalName","ranges":[{"startOffset":1606225,"endOffset":1606320,"count":0}],"isBlockCoverage":false},{"functionName":"isExportName","ranges":[{"startOffset":1606323,"endOffset":1606420,"count":0}],"isBlockCoverage":false},{"functionName":"isUseStrictPrologue","ranges":[{"startOffset":1606423,"endOffset":1606549,"count":0}],"isBlockCoverage":false},{"functionName":"findUseStrictPrologue","ranges":[{"startOffset":1606552,"endOffset":1606833,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUseStrict","ranges":[{"startOffset":1606836,"endOffset":1607055,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaExpression","ranges":[{"startOffset":1607058,"endOffset":1607200,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaSequence","ranges":[{"startOffset":1607203,"endOffset":1607306,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAssertion","ranges":[{"startOffset":1607309,"endOffset":1607441,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAssertionType","ranges":[{"startOffset":1607444,"endOffset":1607577,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterExpression","ranges":[{"startOffset":1607580,"endOffset":1608352,"count":40},{"startOffset":1607668,"endOffset":1607881,"count":0},{"startOffset":1607888,"endOffset":1607927,"count":0},{"startOffset":1607934,"endOffset":1607962,"count":0},{"startOffset":1607969,"endOffset":1608012,"count":0},{"startOffset":1608019,"endOffset":1608109,"count":0},{"startOffset":1608116,"endOffset":1608207,"count":0},{"startOffset":1608214,"endOffset":1608324,"count":0}],"isBlockCoverage":true},{"functionName":"skipOuterExpressions","ranges":[{"startOffset":1608355,"endOffset":1608516,"count":40},{"startOffset":1608458,"endOffset":1608495,"count":0}],"isBlockCoverage":true},{"functionName":"walkUpOuterExpressions","ranges":[{"startOffset":1608519,"endOffset":1608750,"count":0}],"isBlockCoverage":false},{"functionName":"skipAssertions","ranges":[{"startOffset":1608753,"endOffset":1608847,"count":0}],"isBlockCoverage":false},{"functionName":"startOnNewLine","ranges":[{"startOffset":1608850,"endOffset":1608964,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalHelpersModuleName","ranges":[{"startOffset":1608967,"endOffset":1609188,"count":0}],"isBlockCoverage":false},{"functionName":"hasRecordedExternalHelpers","ranges":[{"startOffset":1609191,"endOffset":1609458,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalHelpersImportDeclarationIfNeeded","ranges":[{"startOffset":1609461,"endOffset":1612170,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateExternalHelpersModuleNameIfNeeded","ranges":[{"startOffset":1612173,"endOffset":1613443,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalNameForExternalImport","ranges":[{"startOffset":1613446,"endOffset":1614178,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameLiteral","ranges":[{"startOffset":1614181,"endOffset":1614623,"count":0}],"isBlockCoverage":false},{"functionName":"tryRenameExternalModule","ranges":[{"startOffset":1614626,"endOffset":1614871,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromFile","ranges":[{"startOffset":1614874,"endOffset":1615256,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromDeclaration","ranges":[{"startOffset":1615259,"endOffset":1615491,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBindingOrAssignmentElement","ranges":[{"startOffset":1615494,"endOffset":1616328,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetOfBindingOrAssignmentElement","ranges":[{"startOffset":1616331,"endOffset":1617305,"count":0}],"isBlockCoverage":false},{"functionName":"getRestIndicatorOfBindingOrAssignmentElement","ranges":[{"startOffset":1617308,"endOffset":1617664,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":1617667,"endOffset":1617973,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":1617976,"endOffset":1619324,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteral","ranges":[{"startOffset":1619327,"endOffset":1619479,"count":0}],"isBlockCoverage":false},{"functionName":"getElementsOfBindingOrAssignmentPattern","ranges":[{"startOffset":1619482,"endOffset":1619811,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAliasName","ranges":[{"startOffset":1619814,"endOffset":1620122,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalType","ranges":[{"startOffset":1620125,"endOffset":1620269,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalTypeParameters","ranges":[{"startOffset":1620272,"endOffset":1620460,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalDecorators","ranges":[{"startOffset":1620463,"endOffset":1621258,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalModifiers","ranges":[{"startOffset":1621261,"endOffset":1621573,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrExclamationToken","ranges":[{"startOffset":1621576,"endOffset":1621687,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierOrThisTypeNode","ranges":[{"startOffset":1621690,"endOffset":1621792,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeywordOrPlusOrMinusToken","ranges":[{"startOffset":1621795,"endOffset":1621930,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrPlusOrMinusToken","ranges":[{"startOffset":1621933,"endOffset":1622059,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleName","ranges":[{"startOffset":1622062,"endOffset":1622151,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLikeExpression","ranges":[{"startOffset":1622154,"endOffset":1622403,"count":0}],"isBlockCoverage":false},{"functionName":"isExponentiationOperator","ranges":[{"startOffset":1622406,"endOffset":1622503,"count":0}],"isBlockCoverage":false},{"functionName":"isMultiplicativeOperator","ranges":[{"startOffset":1622506,"endOffset":1622661,"count":0}],"isBlockCoverage":false},{"functionName":"isMultiplicativeOperatorOrHigher","ranges":[{"startOffset":1622664,"endOffset":1622794,"count":0}],"isBlockCoverage":false},{"functionName":"isAdditiveOperator","ranges":[{"startOffset":1622797,"endOffset":1622908,"count":0}],"isBlockCoverage":false},{"functionName":"isAdditiveOperatorOrHigher","ranges":[{"startOffset":1622911,"endOffset":1623037,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperator","ranges":[{"startOffset":1623040,"endOffset":1623237,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperatorOrHigher","ranges":[{"startOffset":1623240,"endOffset":1623354,"count":0}],"isBlockCoverage":false},{"functionName":"isRelationalOperator","ranges":[{"startOffset":1623357,"endOffset":1623637,"count":0}],"isBlockCoverage":false},{"functionName":"isRelationalOperatorOrHigher","ranges":[{"startOffset":1623640,"endOffset":1623761,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperator","ranges":[{"startOffset":1623764,"endOffset":1623990,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorOrHigher","ranges":[{"startOffset":1623993,"endOffset":1624115,"count":0}],"isBlockCoverage":false},{"functionName":"isBitwiseOperator","ranges":[{"startOffset":1624118,"endOffset":1624263,"count":0}],"isBlockCoverage":false},{"functionName":"isBitwiseOperatorOrHigher","ranges":[{"startOffset":1624266,"endOffset":1624384,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator2","ranges":[{"startOffset":1624387,"endOffset":1624513,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperatorOrHigher","ranges":[{"startOffset":1624516,"endOffset":1624634,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperatorOrHigher","ranges":[{"startOffset":1624637,"endOffset":1624803,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperator","ranges":[{"startOffset":1624806,"endOffset":1624922,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperatorToken","ranges":[{"startOffset":1624925,"endOffset":1625007,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpressionTrampoline","ranges":[{"startOffset":1625010,"endOffset":1625779,"count":1}],"isBlockCoverage":true},{"functionName":"trampoline","ranges":[{"startOffset":1625249,"endOffset":1625775,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultKeywordKind","ranges":[{"startOffset":1625782,"endOffset":1625911,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultModifier","ranges":[{"startOffset":1625914,"endOffset":1626035,"count":0}],"isBlockCoverage":false},{"functionName":"isNonExportDefaultModifier","ranges":[{"startOffset":1626038,"endOffset":1626185,"count":0}],"isBlockCoverage":false},{"functionName":"elideNodes","ranges":[{"startOffset":1626188,"endOffset":1626411,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForGeneratedName","ranges":[{"startOffset":1626414,"endOffset":1627066,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedNamePart","ranges":[{"startOffset":1627069,"endOffset":1627415,"count":0}],"isBlockCoverage":false},{"functionName":"formatIdentifier","ranges":[{"startOffset":1627418,"endOffset":1627578,"count":0}],"isBlockCoverage":false},{"functionName":"formatIdentifierWorker","ranges":[{"startOffset":1627581,"endOffset":1627837,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedName","ranges":[{"startOffset":1627840,"endOffset":1628173,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyBackingField","ranges":[{"startOffset":1628176,"endOffset":1628584,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyGetRedirector","ranges":[{"startOffset":1628587,"endOffset":1629175,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertySetRedirector","ranges":[{"startOffset":1629178,"endOffset":1629997,"count":0}],"isBlockCoverage":false},{"functionName":"findComputedPropertyNameCacheAssignment","ranges":[{"startOffset":1630000,"endOffset":1630539,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticParenthesizedExpression","ranges":[{"startOffset":1630542,"endOffset":1630686,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaListWorker","ranges":[{"startOffset":1630689,"endOffset":1631206,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaList","ranges":[{"startOffset":1631209,"endOffset":1631345,"count":0}],"isBlockCoverage":false},{"functionName":"containsObjectRestOrSpread","ranges":[{"startOffset":1631348,"endOffset":1632059,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/utilities.ts","ranges":[{"startOffset":1632155,"endOffset":1637348,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1632240,"endOffset":1636932,"count":1}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":1632278,"endOffset":1632738,"count":0}],"isBlockCoverage":false},{"functionName":"left","ranges":[{"startOffset":1632793,"endOffset":1633418,"count":0}],"isBlockCoverage":false},{"functionName":"operator","ranges":[{"startOffset":1633471,"endOffset":1633916,"count":0}],"isBlockCoverage":false},{"functionName":"right","ranges":[{"startOffset":1633977,"endOffset":1634608,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":1634663,"endOffset":1635380,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":1635433,"endOffset":1635637,"count":0}],"isBlockCoverage":false},{"functionName":"nextState","ranges":[{"startOffset":1635690,"endOffset":1636277,"count":0}],"isBlockCoverage":false},{"functionName":"pushStack","ranges":[{"startOffset":1636340,"endOffset":1636609,"count":0}],"isBlockCoverage":false},{"functionName":"checkCircularity","ranges":[{"startOffset":1636618,"endOffset":1636924,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpressionStateMachine","ranges":[{"startOffset":1637043,"endOffset":1637333,"count":1}],"isBlockCoverage":true},{"functionName":"setTextRange","ranges":[{"startOffset":1637403,"endOffset":1637532,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModifiers","ranges":[{"startOffset":1637535,"endOffset":1638579,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveDecorators","ranges":[{"startOffset":1638582,"endOffset":1638916,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/factory/utilitiesPublic.ts","ranges":[{"startOffset":1638959,"endOffset":1639048,"count":1}],"isBlockCoverage":true},{"functionName":"visitNode2","ranges":[{"startOffset":1639086,"endOffset":1639158,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes","ranges":[{"startOffset":1639161,"endOffset":1639429,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLikeText","ranges":[{"startOffset":1639432,"endOffset":1639637,"count":0}],"isBlockCoverage":false},{"functionName":"isFileProbablyExternalModule","ranges":[{"startOffset":1639640,"endOffset":1639811,"count":0}],"isBlockCoverage":false},{"functionName":"isAnExternalModuleIndicatorNode","ranges":[{"startOffset":1639814,"endOffset":1640140,"count":0}],"isBlockCoverage":false},{"functionName":"getImportMetaIfNecessary","ranges":[{"startOffset":1640143,"endOffset":1640311,"count":0}],"isBlockCoverage":false},{"functionName":"walkTreeForImportMeta","ranges":[{"startOffset":1640314,"endOffset":1640439,"count":0}],"isBlockCoverage":false},{"functionName":"hasModifierOfKind","ranges":[{"startOffset":1640442,"endOffset":1640543,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta2","ranges":[{"startOffset":1640546,"endOffset":1640698,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCallOrConstructSignature","ranges":[{"startOffset":1640701,"endOffset":1640919,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInUnionOrIntersectionType","ranges":[{"startOffset":1640922,"endOffset":1641049,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInParenthesizedTypeOrTypeOperator","ranges":[{"startOffset":1641052,"endOffset":1641178,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInObjectOrArrayBindingPattern","ranges":[{"startOffset":1641181,"endOffset":1641315,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCallOrNewExpression","ranges":[{"startOffset":1641318,"endOffset":1641632,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInBlock","ranges":[{"startOffset":1641635,"endOffset":1641749,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInContinueOrBreakStatement","ranges":[{"startOffset":1641752,"endOffset":1641872,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInClassDeclarationOrExpression","ranges":[{"startOffset":1641875,"endOffset":1642194,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamedImportsOrExports","ranges":[{"startOffset":1642197,"endOffset":1642325,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportOrExportSpecifier","ranges":[{"startOffset":1642328,"endOffset":1642487,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxOpeningOrSelfClosingElement","ranges":[{"startOffset":1642490,"endOffset":1642707,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInOptionalRestOrJSDocParameterModifier","ranges":[{"startOffset":1642710,"endOffset":1642841,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocParameterOrPropertyTag","ranges":[{"startOffset":1642844,"endOffset":1643231,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTypeLikeTag","ranges":[{"startOffset":1643234,"endOffset":1643481,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocLinkCodeOrPlain","ranges":[{"startOffset":1643484,"endOffset":1643599,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTag","ranges":[{"startOffset":1643602,"endOffset":1643798,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPartiallyEmittedExpression","ranges":[{"startOffset":1643801,"endOffset":1643928,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":1643931,"endOffset":1644172,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildRecursively","ranges":[{"startOffset":1644175,"endOffset":1645241,"count":0}],"isBlockCoverage":false},{"functionName":"gatherPossibleChildren","ranges":[{"startOffset":1645244,"endOffset":1645446,"count":0}],"isBlockCoverage":false},{"functionName":"setExternalModuleIndicator","ranges":[{"startOffset":1645449,"endOffset":1645585,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile","ranges":[{"startOffset":1645588,"endOffset":1647303,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName","ranges":[{"startOffset":1647306,"endOffset":1647433,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText","ranges":[{"startOffset":1647436,"endOffset":1647541,"count":2}],"isBlockCoverage":true},{"functionName":"isExternalModule","ranges":[{"startOffset":1647544,"endOffset":1647633,"count":2}],"isBlockCoverage":true},{"functionName":"updateSourceFile","ranges":[{"startOffset":1647636,"endOffset":1647968,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment","ranges":[{"startOffset":1647971,"endOffset":1648235,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests","ranges":[{"startOffset":1648238,"endOffset":1648399,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileName","ranges":[{"startOffset":1648402,"endOffset":1648509,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFileExtension","ranges":[{"startOffset":1648512,"endOffset":1648998,"count":0}],"isBlockCoverage":false},{"functionName":"parseResolutionMode","ranges":[{"startOffset":1649001,"endOffset":1649366,"count":0}],"isBlockCoverage":false},{"functionName":"processCommentPragmas","ranges":[{"startOffset":1649369,"endOffset":1650115,"count":0}],"isBlockCoverage":false},{"functionName":"processPragmasIntoFields","ranges":[{"startOffset":1650118,"endOffset":1653052,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedArgRegEx","ranges":[{"startOffset":1653055,"endOffset":1653335,"count":0}],"isBlockCoverage":false},{"functionName":"extractPragmas","ranges":[{"startOffset":1653338,"endOffset":1655138,"count":0}],"isBlockCoverage":false},{"functionName":"addPragmaForMatch","ranges":[{"startOffset":1655141,"endOffset":1655586,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedPragmaArguments","ranges":[{"startOffset":1655589,"endOffset":1656133,"count":0}],"isBlockCoverage":false},{"functionName":"tagNamesAreEquivalent","ranges":[{"startOffset":1656136,"endOffset":1656704,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/parser.ts","ranges":[{"startOffset":1657016,"endOffset":2012608,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1657177,"endOffset":1657300,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1657336,"endOffset":1657459,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1657502,"endOffset":1657646,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1657677,"endOffset":1657785,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNode","ranges":[{"startOffset":1657811,"endOffset":1657916,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInQualifiedName","ranges":[{"startOffset":1658085,"endOffset":1658239,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeParameter","ranges":[{"startOffset":1658276,"endOffset":1658556,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInShorthandPropertyAssignment","ranges":[{"startOffset":1658607,"endOffset":1658970,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSpreadAssignment","ranges":[{"startOffset":1659010,"endOffset":1659139,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInParameter","ranges":[{"startOffset":1659172,"endOffset":1659492,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertyDeclaration","ranges":[{"startOffset":1659535,"endOffset":1659867,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertySignature","ranges":[{"startOffset":1659908,"endOffset":1660193,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertyAssignment","ranges":[{"startOffset":1660235,"endOffset":1660533,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVariableDeclaration","ranges":[{"startOffset":1660576,"endOffset":1660820,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInBindingElement","ranges":[{"startOffset":1660858,"endOffset":1661103,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInIndexSignature","ranges":[{"startOffset":1661141,"endOffset":1661408,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConstructorType","ranges":[{"startOffset":1661447,"endOffset":1661715,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInFunctionType","ranges":[{"startOffset":1661751,"endOffset":1662016,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMethodDeclaration","ranges":[{"startOffset":1662212,"endOffset":1662677,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMethodSignature","ranges":[{"startOffset":1662716,"endOffset":1663059,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConstructor","ranges":[{"startOffset":1663094,"endOffset":1663424,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInGetAccessor","ranges":[{"startOffset":1663459,"endOffset":1663789,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSetAccessor","ranges":[{"startOffset":1663824,"endOffset":1664154,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInFunctionDeclaration","ranges":[{"startOffset":1664197,"endOffset":1664577,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInFunctionExpression","ranges":[{"startOffset":1664619,"endOffset":1664998,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInArrowFunction","ranges":[{"startOffset":1665035,"endOffset":1665385,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInClassStaticBlockDeclaration","ranges":[{"startOffset":1665436,"endOffset":1665616,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeReference","ranges":[{"startOffset":1665653,"endOffset":1665827,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypePredicate","ranges":[{"startOffset":1665864,"endOffset":1666070,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeQuery","ranges":[{"startOffset":1666103,"endOffset":1666273,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeLiteral","ranges":[{"startOffset":1666308,"endOffset":1666437,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInArrayType","ranges":[{"startOffset":1666470,"endOffset":1666593,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTupleType","ranges":[{"startOffset":1666626,"endOffset":1666754,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConditionalType","ranges":[{"startOffset":1666940,"endOffset":1667182,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInInferType","ranges":[{"startOffset":1667215,"endOffset":1667340,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportType","ranges":[{"startOffset":1667374,"endOffset":1667622,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportTypeAssertionContainer","ranges":[{"startOffset":1667674,"endOffset":1667817,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInIndexedAccessType","ranges":[{"startOffset":1668025,"endOffset":1668193,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMappedType","ranges":[{"startOffset":1668227,"endOffset":1668551,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInLiteralType","ranges":[{"startOffset":1668586,"endOffset":1668707,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamedTupleMember","ranges":[{"startOffset":1668747,"endOffset":1668988,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInArrayLiteralExpression","ranges":[{"startOffset":1669203,"endOffset":1669344,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInObjectLiteralExpression","ranges":[{"startOffset":1669391,"endOffset":1669535,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPropertyAccessExpression","ranges":[{"startOffset":1669583,"endOffset":1669798,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInElementAccessExpression","ranges":[{"startOffset":1669845,"endOffset":1670073,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTaggedTemplateExpression","ranges":[{"startOffset":1670262,"endOffset":1670524,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeAssertionExpression","ranges":[{"startOffset":1670571,"endOffset":1670740,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInParenthesizedExpression","ranges":[{"startOffset":1670787,"endOffset":1670923,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDeleteExpression","ranges":[{"startOffset":1670963,"endOffset":1671092,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeOfExpression","ranges":[{"startOffset":1671132,"endOffset":1671261,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVoidExpression","ranges":[{"startOffset":1671299,"endOffset":1671426,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPrefixUnaryExpression","ranges":[{"startOffset":1671471,"endOffset":1671602,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInYieldExpression","ranges":[{"startOffset":1671641,"endOffset":1671811,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInAwaitExpression","ranges":[{"startOffset":1671850,"endOffset":1671978,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInPostfixUnaryExpression","ranges":[{"startOffset":1672024,"endOffset":1672156,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInBinaryExpression","ranges":[{"startOffset":1672196,"endOffset":1672395,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInAsExpression","ranges":[{"startOffset":1672431,"endOffset":1672589,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNonNullExpression","ranges":[{"startOffset":1672630,"endOffset":1672760,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSatisfiesExpression","ranges":[{"startOffset":1672803,"endOffset":1672968,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMetaProperty","ranges":[{"startOffset":1673004,"endOffset":1673123,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInConditionalExpression","ranges":[{"startOffset":1673168,"endOffset":1673457,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSpreadElement","ranges":[{"startOffset":1673494,"endOffset":1673620,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSourceFile","ranges":[{"startOffset":1673756,"endOffset":1673930,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVariableStatement","ranges":[{"startOffset":1673971,"endOffset":1674152,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInVariableDeclarationList","ranges":[{"startOffset":1674199,"endOffset":1674345,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExpressionStatement","ranges":[{"startOffset":1674388,"endOffset":1674520,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInIfStatement","ranges":[{"startOffset":1674555,"endOffset":1674763,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDoStatement","ranges":[{"startOffset":1674798,"endOffset":1674960,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInWhileStatement","ranges":[{"startOffset":1674998,"endOffset":1675163,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInForStatement","ranges":[{"startOffset":1675199,"endOffset":1675441,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInForInStatement","ranges":[{"startOffset":1675479,"endOffset":1675684,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInForOfStatement","ranges":[{"startOffset":1675722,"endOffset":1675969,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInReturnStatement","ranges":[{"startOffset":1676163,"endOffset":1676291,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInWithStatement","ranges":[{"startOffset":1676328,"endOffset":1676492,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInSwitchStatement","ranges":[{"startOffset":1676531,"endOffset":1676697,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCaseBlock","ranges":[{"startOffset":1676730,"endOffset":1676857,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCaseClause","ranges":[{"startOffset":1676891,"endOffset":1677061,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDefaultClause","ranges":[{"startOffset":1677098,"endOffset":1677232,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInLabeledStatement","ranges":[{"startOffset":1677272,"endOffset":1677434,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInThrowStatement","ranges":[{"startOffset":1677472,"endOffset":1677599,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTryStatement","ranges":[{"startOffset":1677635,"endOffset":1677839,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCatchClause","ranges":[{"startOffset":1677874,"endOffset":1678041,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInDecorator","ranges":[{"startOffset":1678074,"endOffset":1678196,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInInterfaceDeclaration","ranges":[{"startOffset":1678403,"endOffset":1678726,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTypeAliasDeclaration","ranges":[{"startOffset":1678770,"endOffset":1679028,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInEnumDeclaration","ranges":[{"startOffset":1679067,"endOffset":1679280,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInEnumMember","ranges":[{"startOffset":1679314,"endOffset":1679471,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInModuleDeclaration","ranges":[{"startOffset":1679512,"endOffset":1679715,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportEqualsDeclaration","ranges":[{"startOffset":1679762,"endOffset":1679982,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportDeclaration","ranges":[{"startOffset":1680023,"endOffset":1680284,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportClause","ranges":[{"startOffset":1680320,"endOffset":1680481,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportAttributes","ranges":[{"startOffset":1680521,"endOffset":1680656,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInImportAttribute","ranges":[{"startOffset":1680695,"endOffset":1680851,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamespaceExportDeclaration","ranges":[{"startOffset":1680901,"endOffset":1681080,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamespaceImport","ranges":[{"startOffset":1681119,"endOffset":1681241,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInNamespaceExport","ranges":[{"startOffset":1681280,"endOffset":1681402,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExportDeclaration","ranges":[{"startOffset":1681585,"endOffset":1681846,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExportAssignment","ranges":[{"startOffset":1682038,"endOffset":1682213,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateExpression","ranges":[{"startOffset":1682255,"endOffset":1682430,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateSpan","ranges":[{"startOffset":1682466,"endOffset":1682627,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateLiteralType","ranges":[{"startOffset":1682670,"endOffset":1682846,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInTemplateLiteralTypeSpan","ranges":[{"startOffset":1682893,"endOffset":1683059,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInComputedPropertyName","ranges":[{"startOffset":1683103,"endOffset":1683236,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInHeritageClause","ranges":[{"startOffset":1683274,"endOffset":1683404,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExpressionWithTypeArguments","ranges":[{"startOffset":1683455,"endOffset":1683645,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInExternalModuleReference","ranges":[{"startOffset":1683692,"endOffset":1683828,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInMissingDeclaration","ranges":[{"startOffset":1683870,"endOffset":1684008,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInCommaListExpression","ranges":[{"startOffset":1684051,"endOffset":1684189,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxElement","ranges":[{"startOffset":1684223,"endOffset":1684438,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxFragment","ranges":[{"startOffset":1684473,"endOffset":1684691,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxAttributes","ranges":[{"startOffset":1684902,"endOffset":1685036,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxAttribute","ranges":[{"startOffset":1685072,"endOffset":1685231,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxSpreadAttribute","ranges":[{"startOffset":1685273,"endOffset":1685404,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxExpression","ranges":[{"startOffset":1685441,"endOffset":1685610,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxClosingElement","ranges":[{"startOffset":1685651,"endOffset":1685778,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxNamespacedName","ranges":[{"startOffset":1685819,"endOffset":1685981,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocFunctionType","ranges":[{"startOffset":1686650,"endOffset":1686821,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDoc","ranges":[{"startOffset":1686850,"endOffset":1687061,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocSeeTag","ranges":[{"startOffset":1687096,"endOffset":1687340,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocNameReference","ranges":[{"startOffset":1687382,"endOffset":1687507,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocMemberName","ranges":[{"startOffset":1687546,"endOffset":1687702,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocAuthorTag","ranges":[{"startOffset":1687903,"endOffset":1688117,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocImplementsTag","ranges":[{"startOffset":1688159,"endOffset":1688411,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocAugmentsTag","ranges":[{"startOffset":1688451,"endOffset":1688701,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTemplateTag","ranges":[{"startOffset":1688741,"endOffset":1689048,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTypedefTag","ranges":[{"startOffset":1689087,"endOffset":1689638,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocCallbackTag","ranges":[{"startOffset":1689678,"endOffset":1689974,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocSignature","ranges":[{"startOffset":1690487,"endOffset":1690684,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJSDocTypeLiteral","ranges":[{"startOffset":1690934,"endOffset":1691067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1691659,"endOffset":1996734,"count":1}],"isBlockCoverage":true},{"functionName":"countNode","ranges":[{"startOffset":1692079,"endOffset":1692161,"count":68}],"isBlockCoverage":true},{"functionName":"createBaseSourceFileNode","ranges":[{"startOffset":1692230,"endOffset":1692377,"count":2}],"isBlockCoverage":true},{"functionName":"createBaseIdentifierNode","ranges":[{"startOffset":1692415,"endOffset":1692562,"count":0}],"isBlockCoverage":false},{"functionName":"createBasePrivateIdentifierNode","ranges":[{"startOffset":1692607,"endOffset":1692761,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseTokenNode","ranges":[{"startOffset":1692794,"endOffset":1692936,"count":14}],"isBlockCoverage":true},{"functionName":"createBaseNode","ranges":[{"startOffset":1692964,"endOffset":1693105,"count":52}],"isBlockCoverage":true},{"functionName":"parseSourceFile","ranges":[{"startOffset":1695483,"endOffset":1696911,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName2","ranges":[{"startOffset":1696971,"endOffset":1697548,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText2","ranges":[{"startOffset":1697625,"endOffset":1701185,"count":2},{"startOffset":1698054,"endOffset":1698170,"count":0},{"startOffset":1698344,"endOffset":1698463,"count":0},{"startOffset":1698480,"endOffset":1698507,"count":0},{"startOffset":1698524,"endOffset":1698551,"count":0},{"startOffset":1698568,"endOffset":1698670,"count":0},{"startOffset":1698687,"endOffset":1699034,"count":0},{"startOffset":1699051,"endOffset":1699079,"count":0},{"startOffset":1699096,"endOffset":1699303,"count":0},{"startOffset":1699464,"endOffset":1699487,"count":0},{"startOffset":1699489,"endOffset":1699553,"count":0},{"startOffset":1699576,"endOffset":1699651,"count":0},{"startOffset":1699758,"endOffset":1699851,"count":0},{"startOffset":1699934,"endOffset":1700001,"count":0},{"startOffset":1700643,"endOffset":1700703,"count":0},{"startOffset":1700979,"endOffset":1701089,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1698745,"endOffset":1698811,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1699157,"endOffset":1699181,"count":0}],"isBlockCoverage":false},{"functionName":"initializeState","ranges":[{"startOffset":1701242,"endOffset":1702996,"count":2},{"startOffset":1702279,"endOffset":1702295,"count":0},{"startOffset":1702308,"endOffset":1702404,"count":0},{"startOffset":1702554,"endOffset":1702626,"count":0}],"isBlockCoverage":true},{"functionName":"clearState","ranges":[{"startOffset":1703005,"endOffset":1703662,"count":2}],"isBlockCoverage":true},{"functionName":"parseSourceFileWorker","ranges":[{"startOffset":1703671,"endOffset":1705437,"count":0}],"isBlockCoverage":false},{"functionName":"withJSDoc","ranges":[{"startOffset":1705484,"endOffset":1706019,"count":20},{"startOffset":1705584,"endOffset":1706018,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1705698,"endOffset":1705786,"count":0}],"isBlockCoverage":false},{"functionName":"reparseTopLevelAwait","ranges":[{"startOffset":1706028,"endOffset":1710154,"count":0}],"isBlockCoverage":false},{"functionName":"fixupParentReferences","ranges":[{"startOffset":1710163,"endOffset":1710325,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile2","ranges":[{"startOffset":1710397,"endOffset":1711756,"count":2},{"startOffset":1710804,"endOffset":1710843,"count":0},{"startOffset":1710881,"endOffset":1711082,"count":0}],"isBlockCoverage":true},{"functionName":"setFields","ranges":[{"startOffset":1711122,"endOffset":1711746,"count":2}],"isBlockCoverage":true},{"functionName":"setContextFlag","ranges":[{"startOffset":1711765,"endOffset":1711932,"count":0}],"isBlockCoverage":false},{"functionName":"setDisallowInContext","ranges":[{"startOffset":1711941,"endOffset":1712048,"count":0}],"isBlockCoverage":false},{"functionName":"setYieldContext","ranges":[{"startOffset":1712057,"endOffset":1712155,"count":0}],"isBlockCoverage":false},{"functionName":"setDecoratorContext","ranges":[{"startOffset":1712164,"endOffset":1712270,"count":0}],"isBlockCoverage":false},{"functionName":"setAwaitContext","ranges":[{"startOffset":1712279,"endOffset":1712377,"count":0}],"isBlockCoverage":false},{"functionName":"doOutsideOfContext","ranges":[{"startOffset":1712386,"endOffset":1712877,"count":20},{"startOffset":1712528,"endOffset":1712842,"count":0}],"isBlockCoverage":true},{"functionName":"doInsideOfContext","ranges":[{"startOffset":1712886,"endOffset":1713369,"count":0}],"isBlockCoverage":false},{"functionName":"allowInAnd","ranges":[{"startOffset":1713378,"endOffset":1713488,"count":20}],"isBlockCoverage":true},{"functionName":"disallowInAnd","ranges":[{"startOffset":1713497,"endOffset":1713609,"count":0}],"isBlockCoverage":false},{"functionName":"allowConditionalTypesAnd","ranges":[{"startOffset":1713618,"endOffset":1713758,"count":0}],"isBlockCoverage":false},{"functionName":"disallowConditionalTypesAnd","ranges":[{"startOffset":1713767,"endOffset":1713909,"count":0}],"isBlockCoverage":false},{"functionName":"doInYieldContext","ranges":[{"startOffset":1713918,"endOffset":1714029,"count":0}],"isBlockCoverage":false},{"functionName":"doInDecoratorContext","ranges":[{"startOffset":1714038,"endOffset":1714157,"count":0}],"isBlockCoverage":false},{"functionName":"doInAwaitContext","ranges":[{"startOffset":1714166,"endOffset":1714277,"count":0}],"isBlockCoverage":false},{"functionName":"doOutsideOfAwaitContext","ranges":[{"startOffset":1714286,"endOffset":1714405,"count":0}],"isBlockCoverage":false},{"functionName":"doInYieldAndAwaitContext","ranges":[{"startOffset":1714414,"endOffset":1714560,"count":0}],"isBlockCoverage":false},{"functionName":"doOutsideOfYieldAndAwaitContext","ranges":[{"startOffset":1714569,"endOffset":1714723,"count":0}],"isBlockCoverage":false},{"functionName":"inContext","ranges":[{"startOffset":1714732,"endOffset":1714816,"count":40}],"isBlockCoverage":true},{"functionName":"inYieldContext","ranges":[{"startOffset":1714825,"endOffset":1714916,"count":0}],"isBlockCoverage":false},{"functionName":"inDisallowInContext","ranges":[{"startOffset":1714925,"endOffset":1715025,"count":0}],"isBlockCoverage":false},{"functionName":"inDisallowConditionalTypesContext","ranges":[{"startOffset":1715034,"endOffset":1715164,"count":0}],"isBlockCoverage":false},{"functionName":"inDecoratorContext","ranges":[{"startOffset":1715173,"endOffset":1715272,"count":40}],"isBlockCoverage":true},{"functionName":"inAwaitContext","ranges":[{"startOffset":1715281,"endOffset":1715372,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAtCurrentToken","ranges":[{"startOffset":1715381,"endOffset":1715543,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAtPosition","ranges":[{"startOffset":1715552,"endOffset":1716003,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAt","ranges":[{"startOffset":1716012,"endOffset":1716152,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorAtRange","ranges":[{"startOffset":1716161,"endOffset":1716288,"count":0}],"isBlockCoverage":false},{"functionName":"scanError","ranges":[{"startOffset":1716297,"endOffset":1716431,"count":0}],"isBlockCoverage":false},{"functionName":"getNodePos","ranges":[{"startOffset":1716440,"endOffset":1716520,"count":212}],"isBlockCoverage":true},{"functionName":"hasPrecedingJSDocComment","ranges":[{"startOffset":1716529,"endOffset":1716630,"count":40}],"isBlockCoverage":true},{"functionName":"token","ranges":[{"startOffset":1716639,"endOffset":1716698,"count":1174}],"isBlockCoverage":true},{"functionName":"nextTokenWithoutCheck","ranges":[{"startOffset":1716707,"endOffset":1716800,"count":86}],"isBlockCoverage":true},{"functionName":"nextTokenAnd","ranges":[{"startOffset":1716809,"endOffset":1716896,"count":0}],"isBlockCoverage":false},{"functionName":"nextToken","ranges":[{"startOffset":1716905,"endOffset":1717235,"count":86},{"startOffset":1716966,"endOffset":1717037,"count":12},{"startOffset":1717039,"endOffset":1717183,"count":0}],"isBlockCoverage":true},{"functionName":"nextTokenJSDoc","ranges":[{"startOffset":1717244,"endOffset":1717340,"count":0}],"isBlockCoverage":false},{"functionName":"nextJSDocCommentTextToken","ranges":[{"startOffset":1717349,"endOffset":1717489,"count":0}],"isBlockCoverage":false},{"functionName":"reScanGreaterToken","ranges":[{"startOffset":1717498,"endOffset":1717602,"count":40}],"isBlockCoverage":true},{"functionName":"reScanSlashToken","ranges":[{"startOffset":1717611,"endOffset":1717711,"count":0}],"isBlockCoverage":false},{"functionName":"reScanTemplateToken","ranges":[{"startOffset":1717720,"endOffset":1717858,"count":0}],"isBlockCoverage":false},{"functionName":"reScanLessThanToken","ranges":[{"startOffset":1717867,"endOffset":1717973,"count":0}],"isBlockCoverage":false},{"functionName":"reScanHashToken","ranges":[{"startOffset":1717982,"endOffset":1718080,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxIdentifier","ranges":[{"startOffset":1718089,"endOffset":1718191,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxText","ranges":[{"startOffset":1718200,"endOffset":1718291,"count":0}],"isBlockCoverage":false},{"functionName":"scanJsxAttributeValue","ranges":[{"startOffset":1718300,"endOffset":1718410,"count":0}],"isBlockCoverage":false},{"functionName":"speculationHelper","ranges":[{"startOffset":1718419,"endOffset":1719278,"count":40},{"startOffset":1718787,"endOffset":1718817,"count":0},{"startOffset":1718929,"endOffset":1718953,"count":0}],"isBlockCoverage":true},{"functionName":"lookAhead","ranges":[{"startOffset":1719287,"endOffset":1719392,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":1719401,"endOffset":1719504,"count":40}],"isBlockCoverage":true},{"functionName":"isBindingIdentifier","ranges":[{"startOffset":1719513,"endOffset":1719696,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier2","ranges":[{"startOffset":1719705,"endOffset":1720102,"count":20},{"startOffset":1719779,"endOffset":1719817,"count":0},{"startOffset":1719867,"endOffset":1719886,"count":0},{"startOffset":1719888,"endOffset":1719927,"count":0},{"startOffset":1719977,"endOffset":1719996,"count":0},{"startOffset":1719998,"endOffset":1720037,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpected","ranges":[{"startOffset":1720111,"endOffset":1720568,"count":26},{"startOffset":1720327,"endOffset":1720567,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1720647,"endOffset":1720678,"count":83}],"isBlockCoverage":true},{"functionName":"parseErrorForMissingSemicolonAfter","ranges":[{"startOffset":1720689,"endOffset":1722943,"count":0}],"isBlockCoverage":false},{"functionName":"parseErrorForInvalidName","ranges":[{"startOffset":1722952,"endOffset":1723260,"count":0}],"isBlockCoverage":false},{"functionName":"getSpaceSuggestion","ranges":[{"startOffset":1723269,"endOffset":1723611,"count":0}],"isBlockCoverage":false},{"functionName":"parseSemicolonAfterPropertyName","ranges":[{"startOffset":1723620,"endOffset":1724770,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpectedJSDoc","ranges":[{"startOffset":1724779,"endOffset":1725085,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpectedMatchingBrackets","ranges":[{"startOffset":1725094,"endOffset":1725760,"count":6},{"startOffset":1725277,"endOffset":1725750,"count":0}],"isBlockCoverage":true},{"functionName":"parseOptional","ranges":[{"startOffset":1725769,"endOffset":1725923,"count":100},{"startOffset":1725826,"endOffset":1725889,"count":14},{"startOffset":1725889,"endOffset":1725922,"count":86}],"isBlockCoverage":true},{"functionName":"parseOptionalToken","ranges":[{"startOffset":1725932,"endOffset":1726079,"count":122},{"startOffset":1725994,"endOffset":1726044,"count":2},{"startOffset":1726044,"endOffset":1726078,"count":120}],"isBlockCoverage":true},{"functionName":"parseOptionalTokenJSDoc","ranges":[{"startOffset":1726088,"endOffset":1726245,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpectedToken","ranges":[{"startOffset":1726254,"endOffset":1726564,"count":2},{"startOffset":1726351,"endOffset":1726553,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpectedTokenJSDoc","ranges":[{"startOffset":1726573,"endOffset":1726968,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenNode","ranges":[{"startOffset":1726977,"endOffset":1727165,"count":14}],"isBlockCoverage":true},{"functionName":"parseTokenNodeJSDoc","ranges":[{"startOffset":1727174,"endOffset":1727372,"count":0}],"isBlockCoverage":false},{"functionName":"canParseSemicolon","ranges":[{"startOffset":1727381,"endOffset":1727640,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseSemicolon","ranges":[{"startOffset":1727649,"endOffset":1727878,"count":0}],"isBlockCoverage":false},{"functionName":"parseSemicolon","ranges":[{"startOffset":1727887,"endOffset":1728004,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeArray","ranges":[{"startOffset":1728013,"endOffset":1728266,"count":8}],"isBlockCoverage":true},{"functionName":"finishNode","ranges":[{"startOffset":1728275,"endOffset":1728678,"count":66},{"startOffset":1728521,"endOffset":1728645,"count":0}],"isBlockCoverage":true},{"functionName":"createMissingNode","ranges":[{"startOffset":1728687,"endOffset":1729860,"count":0}],"isBlockCoverage":false},{"functionName":"internIdentifier","ranges":[{"startOffset":1729869,"endOffset":1730096,"count":20}],"isBlockCoverage":true},{"functionName":"createIdentifier","ranges":[{"startOffset":1730105,"endOffset":1731743,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingIdentifier","ranges":[{"startOffset":1731752,"endOffset":1732015,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifier","ranges":[{"startOffset":1732024,"endOffset":1732222,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierName","ranges":[{"startOffset":1732231,"endOffset":1732381,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierNameErrorOnUnicodeEscapeSequence","ranges":[{"startOffset":1732390,"endOffset":1732722,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":1732731,"endOffset":1732905,"count":20},{"startOffset":1732857,"endOffset":1732873,"count":0}],"isBlockCoverage":true},{"functionName":"isImportAttributeName2","ranges":[{"startOffset":1732914,"endOffset":1733051,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyNameWorker","ranges":[{"startOffset":1733060,"endOffset":1733655,"count":20},{"startOffset":1733172,"endOffset":1733188,"count":0},{"startOffset":1733347,"endOffset":1733406,"count":0},{"startOffset":1733431,"endOffset":1733654,"count":0}],"isBlockCoverage":true},{"functionName":"parsePropertyName","ranges":[{"startOffset":1733664,"endOffset":1733819,"count":20}],"isBlockCoverage":true},{"functionName":"parseComputedPropertyName","ranges":[{"startOffset":1733828,"endOffset":1734158,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateIdentifier","ranges":[{"startOffset":1734167,"endOffset":1734410,"count":0}],"isBlockCoverage":false},{"functionName":"parseContextualModifier","ranges":[{"startOffset":1734419,"endOffset":1734538,"count":40},{"startOffset":1734488,"endOffset":1734527,"count":0}],"isBlockCoverage":true},{"functionName":"nextTokenIsOnSameLineAndCanFollowModifier","ranges":[{"startOffset":1734547,"endOffset":1734760,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenCanFollowModifier","ranges":[{"startOffset":1734769,"endOffset":1735729,"count":0}],"isBlockCoverage":false},{"functionName":"canFollowExportModifier","ranges":[{"startOffset":1735738,"endOffset":1735966,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenCanFollowExportModifier","ranges":[{"startOffset":1735975,"endOffset":1736097,"count":0}],"isBlockCoverage":false},{"functionName":"parseAnyContextualModifier","ranges":[{"startOffset":1736106,"endOffset":1736237,"count":20},{"startOffset":1736187,"endOffset":1736226,"count":0}],"isBlockCoverage":true},{"functionName":"canFollowModifier","ranges":[{"startOffset":1736246,"endOffset":1736485,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenCanFollowDefaultKeyword","ranges":[{"startOffset":1736494,"endOffset":1736917,"count":0}],"isBlockCoverage":false},{"functionName":"isListElement2","ranges":[{"startOffset":1736926,"endOffset":1741194,"count":20},{"startOffset":1737059,"endOffset":1737097,"count":0},{"startOffset":1737147,"endOffset":1737175,"count":0},{"startOffset":1737188,"endOffset":1737217,"count":0},{"startOffset":1737230,"endOffset":1737370,"count":0},{"startOffset":1737383,"endOffset":1737504,"count":0},{"startOffset":1737517,"endOffset":1737593,"count":0},{"startOffset":1737606,"endOffset":1737743,"count":0},{"startOffset":1737756,"endOffset":1737868,"count":0},{"startOffset":1737966,"endOffset":1737997,"count":0},{"startOffset":1738014,"endOffset":1738042,"count":0},{"startOffset":1738059,"endOffset":1738088,"count":0},{"startOffset":1738105,"endOffset":1738159,"count":0},{"startOffset":1738263,"endOffset":1738338,"count":0},{"startOffset":1738351,"endOffset":1738512,"count":0},{"startOffset":1738525,"endOffset":1738603,"count":0},{"startOffset":1738616,"endOffset":1739067,"count":0},{"startOffset":1739080,"endOffset":1739186,"count":0},{"startOffset":1739199,"endOffset":1739380,"count":0},{"startOffset":1739393,"endOffset":1739532,"count":0},{"startOffset":1739545,"endOffset":1739741,"count":0},{"startOffset":1739754,"endOffset":1739871,"count":0},{"startOffset":1739884,"endOffset":1740026,"count":0},{"startOffset":1740039,"endOffset":1740185,"count":0},{"startOffset":1740198,"endOffset":1740226,"count":0},{"startOffset":1740239,"endOffset":1740344,"count":0},{"startOffset":1740357,"endOffset":1740429,"count":0},{"startOffset":1740442,"endOffset":1740679,"count":0},{"startOffset":1740692,"endOffset":1740817,"count":0},{"startOffset":1740830,"endOffset":1740883,"count":0},{"startOffset":1740896,"endOffset":1740950,"count":0},{"startOffset":1740963,"endOffset":1741058,"count":0},{"startOffset":1741071,"endOffset":1741172,"count":0}],"isBlockCoverage":true},{"functionName":"isValidHeritageClauseObjectLiteral","ranges":[{"startOffset":1741203,"endOffset":1741613,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifier","ranges":[{"startOffset":1741622,"endOffset":1741723,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeyword","ranges":[{"startOffset":1741732,"endOffset":1741862,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":1741871,"endOffset":1742027,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClauseExtendsOrImplementsKeyword","ranges":[{"startOffset":1742036,"endOffset":1742293,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsStartOfExpression","ranges":[{"startOffset":1742302,"endOffset":1742416,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsStartOfType","ranges":[{"startOffset":1742425,"endOffset":1742527,"count":0}],"isBlockCoverage":false},{"functionName":"isListTerminator","ranges":[{"startOffset":1742536,"endOffset":1745011,"count":6},{"startOffset":1742620,"endOffset":1742658,"count":0},{"startOffset":1742697,"endOffset":1742726,"count":0},{"startOffset":1742739,"endOffset":1742766,"count":0},{"startOffset":1742779,"endOffset":1742804,"count":0},{"startOffset":1742817,"endOffset":1742843,"count":0},{"startOffset":1742856,"endOffset":1742881,"count":0},{"startOffset":1743145,"endOffset":1743315,"count":0},{"startOffset":1743328,"endOffset":1743503,"count":0},{"startOffset":1743516,"endOffset":1743609,"count":0},{"startOffset":1743622,"endOffset":1743871,"count":0},{"startOffset":1743884,"endOffset":1744016,"count":0},{"startOffset":1744029,"endOffset":1744063,"count":0},{"startOffset":1744076,"endOffset":1744108,"count":0},{"startOffset":1744121,"endOffset":1744217,"count":0},{"startOffset":1744230,"endOffset":1744260,"count":0},{"startOffset":1744273,"endOffset":1744298,"count":0},{"startOffset":1744311,"endOffset":1744441,"count":0},{"startOffset":1744454,"endOffset":1744536,"count":0},{"startOffset":1744549,"endOffset":1744677,"count":0},{"startOffset":1744690,"endOffset":1744813,"count":0},{"startOffset":1744826,"endOffset":1744940,"count":0},{"startOffset":1744953,"endOffset":1744989,"count":0}],"isBlockCoverage":true},{"functionName":"isVariableDeclaratorListTerminator","ranges":[{"startOffset":1745020,"endOffset":1745352,"count":0}],"isBlockCoverage":false},{"functionName":"isInSomeParsingContext","ranges":[{"startOffset":1745361,"endOffset":1745834,"count":0}],"isBlockCoverage":false},{"functionName":"parseList","ranges":[{"startOffset":1745843,"endOffset":1746522,"count":0}],"isBlockCoverage":false},{"functionName":"parseListElement","ranges":[{"startOffset":1746531,"endOffset":1746757,"count":20},{"startOffset":1746663,"endOffset":1746714,"count":0}],"isBlockCoverage":true},{"functionName":"currentNode","ranges":[{"startOffset":1746766,"endOffset":1747637,"count":40},{"startOffset":1746857,"endOffset":1746902,"count":0},{"startOffset":1746903,"endOffset":1746938,"count":0},{"startOffset":1746980,"endOffset":1747064,"count":0},{"startOffset":1747101,"endOffset":1747125,"count":0},{"startOffset":1747126,"endOffset":1747153,"count":0},{"startOffset":1747155,"endOffset":1747545,"count":0},{"startOffset":1747547,"endOffset":1747636,"count":0}],"isBlockCoverage":true},{"functionName":"consumeNode","ranges":[{"startOffset":1747646,"endOffset":1747776,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableParsingContext","ranges":[{"startOffset":1747785,"endOffset":1748362,"count":0}],"isBlockCoverage":false},{"functionName":"canReuseNode","ranges":[{"startOffset":1748371,"endOffset":1749268,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableClassMember","ranges":[{"startOffset":1749277,"endOffset":1750022,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableSwitchClause","ranges":[{"startOffset":1750031,"endOffset":1750299,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableStatement","ranges":[{"startOffset":1750308,"endOffset":1751831,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableEnumMember","ranges":[{"startOffset":1751840,"endOffset":1751940,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableTypeMember","ranges":[{"startOffset":1751949,"endOffset":1752362,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableVariableDeclaration","ranges":[{"startOffset":1752371,"endOffset":1752629,"count":0}],"isBlockCoverage":false},{"functionName":"isReusableParameter","ranges":[{"startOffset":1752638,"endOffset":1752858,"count":0}],"isBlockCoverage":false},{"functionName":"abortParsingListOrMoveToNextToken","ranges":[{"startOffset":1752867,"endOffset":1753091,"count":0}],"isBlockCoverage":false},{"functionName":"parsingContextErrors","ranges":[{"startOffset":1753100,"endOffset":1757265,"count":0}],"isBlockCoverage":false},{"functionName":"parseDelimitedList","ranges":[{"startOffset":1757274,"endOffset":1759041,"count":6},{"startOffset":1757567,"endOffset":1758830,"count":20},{"startOffset":1757847,"endOffset":1757948,"count":0},{"startOffset":1758089,"endOffset":1758132,"count":14},{"startOffset":1758132,"endOffset":1758246,"count":6},{"startOffset":1758246,"endOffset":1758395,"count":0},{"startOffset":1758417,"endOffset":1758453,"count":0},{"startOffset":1758455,"endOffset":1758818,"count":0}],"isBlockCoverage":true},{"functionName":"getExpectedCommaDiagnostic","ranges":[{"startOffset":1759050,"endOffset":1759218,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingList","ranges":[{"startOffset":1759227,"endOffset":1759385,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingList","ranges":[{"startOffset":1759394,"endOffset":1759471,"count":0}],"isBlockCoverage":false},{"functionName":"parseBracketedList","ranges":[{"startOffset":1759480,"endOffset":1759767,"count":0}],"isBlockCoverage":false},{"functionName":"parseEntityName","ranges":[{"startOffset":1759776,"endOffset":1760590,"count":0}],"isBlockCoverage":false},{"functionName":"createQualifiedName","ranges":[{"startOffset":1760599,"endOffset":1760738,"count":0}],"isBlockCoverage":false},{"functionName":"parseRightSideOfDot","ranges":[{"startOffset":1760747,"endOffset":1761896,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSpans","ranges":[{"startOffset":1761905,"endOffset":1762257,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateExpression","ranges":[{"startOffset":1762266,"endOffset":1762586,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateType","ranges":[{"startOffset":1762595,"endOffset":1762940,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateTypeSpans","ranges":[{"startOffset":1762949,"endOffset":1763277,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateTypeSpan","ranges":[{"startOffset":1763286,"endOffset":1763635,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralOfTemplateSpan","ranges":[{"startOffset":1763644,"endOffset":1764029,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSpan","ranges":[{"startOffset":1764038,"endOffset":1764346,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralNode","ranges":[{"startOffset":1764355,"endOffset":1764442,"count":24}],"isBlockCoverage":true},{"functionName":"parseTemplateHead","ranges":[{"startOffset":1764451,"endOffset":1764897,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateMiddleOrTemplateTail","ranges":[{"startOffset":1764906,"endOffset":1765199,"count":0}],"isBlockCoverage":false},{"functionName":"getTemplateLiteralRawText","ranges":[{"startOffset":1765208,"endOffset":1765531,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralLikeNode","ranges":[{"startOffset":1765540,"endOffset":1767030,"count":24},{"startOffset":1765665,"endOffset":1765834,"count":0},{"startOffset":1766322,"endOffset":1766412,"count":0},{"startOffset":1766635,"endOffset":1766734,"count":0},{"startOffset":1766799,"endOffset":1766862,"count":0},{"startOffset":1766904,"endOffset":1766957,"count":0}],"isBlockCoverage":true},{"functionName":"parseEntityNameOfTypeReference","ranges":[{"startOffset":1767039,"endOffset":1767230,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeArgumentsOfTypeReference","ranges":[{"startOffset":1767239,"endOffset":1767535,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeReference","ranges":[{"startOffset":1767544,"endOffset":1767838,"count":0}],"isBlockCoverage":false},{"functionName":"typeHasArrowFunctionBlockingParseError","ranges":[{"startOffset":1767847,"endOffset":1768461,"count":0}],"isBlockCoverage":false},{"functionName":"parseThisTypePredicate","ranges":[{"startOffset":1768470,"endOffset":1768719,"count":0}],"isBlockCoverage":false},{"functionName":"parseThisTypeNode","ranges":[{"startOffset":1768728,"endOffset":1768892,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocAllType","ranges":[{"startOffset":1768901,"endOffset":1769065,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocNonNullableType","ranges":[{"startOffset":1769074,"endOffset":1769340,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocUnknownOrNullableType","ranges":[{"startOffset":1769349,"endOffset":1769961,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocFunctionType","ranges":[{"startOffset":1769970,"endOffset":1770656,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocParameter","ranges":[{"startOffset":1770665,"endOffset":1771469,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocType","ranges":[{"startOffset":1771478,"endOffset":1772752,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeQuery","ranges":[{"startOffset":1772761,"endOffset":1773188,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeParameter","ranges":[{"startOffset":1773197,"endOffset":1774070,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeParameters","ranges":[{"startOffset":1774079,"endOffset":1774320,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfParameter","ranges":[{"startOffset":1774329,"endOffset":1774647,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameOfParameter","ranges":[{"startOffset":1774656,"endOffset":1774968,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterNameStart","ranges":[{"startOffset":1774977,"endOffset":1775140,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameter","ranges":[{"startOffset":1775149,"endOffset":1775265,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameterForSpeculation","ranges":[{"startOffset":1775274,"endOffset":1775478,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameterWorker","ranges":[{"startOffset":1775487,"endOffset":1777419,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnType","ranges":[{"startOffset":1777428,"endOffset":1777628,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseReturnType","ranges":[{"startOffset":1777637,"endOffset":1778177,"count":0}],"isBlockCoverage":false},{"functionName":"parseParametersWorker","ranges":[{"startOffset":1778186,"endOffset":1778859,"count":0}],"isBlockCoverage":false},{"functionName":"parseParameters","ranges":[{"startOffset":1778868,"endOffset":1779232,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeMemberSemicolon","ranges":[{"startOffset":1779241,"endOffset":1779400,"count":0}],"isBlockCoverage":false},{"functionName":"parseSignatureMember","ranges":[{"startOffset":1779409,"endOffset":1780196,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignature","ranges":[{"startOffset":1780205,"endOffset":1780344,"count":0}],"isBlockCoverage":false},{"functionName":"isUnambiguouslyIndexSignature","ranges":[{"startOffset":1780353,"endOffset":1781186,"count":0}],"isBlockCoverage":false},{"functionName":"parseIndexSignatureDeclaration","ranges":[{"startOffset":1781195,"endOffset":1781714,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyOrMethodSignature","ranges":[{"startOffset":1781723,"endOffset":1782776,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeMemberStart","ranges":[{"startOffset":1782785,"endOffset":1783649,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeMember","ranges":[{"startOffset":1783658,"endOffset":1784807,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenParenOrLessThan","ranges":[{"startOffset":1784816,"endOffset":1784984,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsDot","ranges":[{"startOffset":1784993,"endOffset":1785082,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenParenOrLessThanOrDot","ranges":[{"startOffset":1785091,"endOffset":1785364,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeLiteral","ranges":[{"startOffset":1785373,"endOffset":1785540,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectTypeMembers","ranges":[{"startOffset":1785549,"endOffset":1785897,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfMappedType","ranges":[{"startOffset":1785906,"endOffset":1786342,"count":0}],"isBlockCoverage":false},{"functionName":"parseMappedTypeParameter","ranges":[{"startOffset":1786351,"endOffset":1786779,"count":0}],"isBlockCoverage":false},{"functionName":"parseMappedType","ranges":[{"startOffset":1786788,"endOffset":1788187,"count":0}],"isBlockCoverage":false},{"functionName":"parseTupleElementType","ranges":[{"startOffset":1788196,"endOffset":1788735,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenColonOrQuestionColon","ranges":[{"startOffset":1788744,"endOffset":1788929,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleElementName","ranges":[{"startOffset":1788938,"endOffset":1789232,"count":0}],"isBlockCoverage":false},{"functionName":"parseTupleElementNameOrTupleElementType","ranges":[{"startOffset":1789241,"endOffset":1789967,"count":0}],"isBlockCoverage":false},{"functionName":"parseTupleType","ranges":[{"startOffset":1789976,"endOffset":1790321,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenthesizedType","ranges":[{"startOffset":1790330,"endOffset":1790622,"count":0}],"isBlockCoverage":false},{"functionName":"parseModifiersForConstructorType","ranges":[{"startOffset":1790631,"endOffset":1791020,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionOrConstructorType","ranges":[{"startOffset":1791029,"endOffset":1791957,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeywordAndNoDot","ranges":[{"startOffset":1791966,"endOffset":1792114,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralTypeNode","ranges":[{"startOffset":1792123,"endOffset":1792689,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfTypeOfImportType","ranges":[{"startOffset":1792698,"endOffset":1792823,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportType","ranges":[{"startOffset":1792832,"endOffset":1794718,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsNumericOrBigIntLiteral","ranges":[{"startOffset":1794727,"endOffset":1794897,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonArrayType","ranges":[{"startOffset":1794906,"endOffset":1797868,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfType","ranges":[{"startOffset":1797877,"endOffset":1799914,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfParenthesizedOrFunctionType","ranges":[{"startOffset":1799923,"endOffset":1800165,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostfixTypeOrHigher","ranges":[{"startOffset":1800174,"endOffset":1801682,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOperator","ranges":[{"startOffset":1801691,"endOffset":1801916,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseConstraintOfInferType","ranges":[{"startOffset":1801925,"endOffset":1802256,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeParameterOfInferType","ranges":[{"startOffset":1802265,"endOffset":1802669,"count":0}],"isBlockCoverage":false},{"functionName":"parseInferType","ranges":[{"startOffset":1802678,"endOffset":1802897,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOperatorOrHigher","ranges":[{"startOffset":1802906,"endOffset":1803358,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionOrConstructorTypeToError","ranges":[{"startOffset":1803367,"endOffset":1804221,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnionOrIntersectionType","ranges":[{"startOffset":1804230,"endOffset":1804982,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntersectionTypeOrHigher","ranges":[{"startOffset":1804991,"endOffset":1805179,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnionTypeOrHigher","ranges":[{"startOffset":1805188,"endOffset":1805360,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsNewKeyword","ranges":[{"startOffset":1805369,"endOffset":1805487,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfFunctionTypeOrConstructorType","ranges":[{"startOffset":1805496,"endOffset":1805913,"count":0}],"isBlockCoverage":false},{"functionName":"skipParameterStart","ranges":[{"startOffset":1805922,"endOffset":1806546,"count":0}],"isBlockCoverage":false},{"functionName":"isUnambiguouslyStartOfFunctionType","ranges":[{"startOffset":1806555,"endOffset":1807247,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOrTypePredicate","ranges":[{"startOffset":1807256,"endOffset":1807762,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypePredicatePrefix","ranges":[{"startOffset":1807771,"endOffset":1808004,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssertsTypePredicate","ranges":[{"startOffset":1808013,"endOffset":1808474,"count":0}],"isBlockCoverage":false},{"functionName":"parseType","ranges":[{"startOffset":1808483,"endOffset":1809462,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAnnotation","ranges":[{"startOffset":1809471,"endOffset":1809589,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfLeftHandSideExpression","ranges":[{"startOffset":1809598,"endOffset":1810682,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfExpression","ranges":[{"startOffset":1810691,"endOffset":1811601,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfExpressionStatement","ranges":[{"startOffset":1811610,"endOffset":1811850,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":1811859,"endOffset":1812731,"count":0}],"isBlockCoverage":false},{"functionName":"parseInitializer","ranges":[{"startOffset":1812740,"endOffset":1812955,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignmentExpressionOrHigher","ranges":[{"startOffset":1812964,"endOffset":1814252,"count":20},{"startOffset":1813077,"endOffset":1813133,"count":0},{"startOffset":1813355,"endOffset":1813404,"count":0},{"startOffset":1813614,"endOffset":1813631,"count":0},{"startOffset":1813662,"endOffset":1813907,"count":0},{"startOffset":1814000,"endOffset":1814150,"count":0}],"isBlockCoverage":true},{"functionName":"isYieldExpression2","ranges":[{"startOffset":1814261,"endOffset":1814548,"count":20},{"startOffset":1814343,"endOffset":1814514,"count":0}],"isBlockCoverage":true},{"functionName":"nextTokenIsIdentifierOnSameLine","ranges":[{"startOffset":1814557,"endOffset":1814705,"count":0}],"isBlockCoverage":false},{"functionName":"parseYieldExpression","ranges":[{"startOffset":1814714,"endOffset":1815482,"count":0}],"isBlockCoverage":false},{"functionName":"parseSimpleArrowFunctionExpression","ranges":[{"startOffset":1815491,"endOffset":1816829,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1816838,"endOffset":1817401,"count":20},{"startOffset":1817077,"endOffset":1817290,"count":0},{"startOffset":1817291,"endOffset":1817390,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1817302,"endOffset":1817389,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1817410,"endOffset":1817826,"count":20},{"startOffset":1817589,"endOffset":1817678,"count":0},{"startOffset":1817738,"endOffset":1817784,"count":0}],"isBlockCoverage":true},{"functionName":"isParenthesizedArrowFunctionExpressionWorker","ranges":[{"startOffset":1817835,"endOffset":1821268,"count":0}],"isBlockCoverage":false},{"functionName":"parsePossibleParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1821277,"endOffset":1821907,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseAsyncSimpleArrowFunctionExpression","ranges":[{"startOffset":1821916,"endOffset":1822571,"count":20},{"startOffset":1822052,"endOffset":1822536,"count":0}],"isBlockCoverage":true},{"functionName":"isUnParenthesizedAsyncArrowFunctionWorker","ranges":[{"startOffset":1822580,"endOffset":1823172,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenthesizedArrowFunctionExpression","ranges":[{"startOffset":1823181,"endOffset":1825835,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowFunctionExpressionBody","ranges":[{"startOffset":1825844,"endOffset":1826751,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditionalExpressionRest","ranges":[{"startOffset":1826760,"endOffset":1827823,"count":20},{"startOffset":1827003,"endOffset":1827536,"count":0},{"startOffset":1827537,"endOffset":1827769,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1827229,"endOffset":1827358,"count":0}],"isBlockCoverage":false},{"functionName":"parseBinaryExpressionOrHigher","ranges":[{"startOffset":1827832,"endOffset":1828066,"count":20}],"isBlockCoverage":true},{"functionName":"isInOrOfKeyword","ranges":[{"startOffset":1828075,"endOffset":1828187,"count":0}],"isBlockCoverage":false},{"functionName":"parseBinaryExpressionRest","ranges":[{"startOffset":1828196,"endOffset":1829401,"count":20},{"startOffset":1828480,"endOffset":1828509,"count":0},{"startOffset":1828617,"endOffset":1828690,"count":0},{"startOffset":1828692,"endOffset":1828795,"count":0},{"startOffset":1828820,"endOffset":1829349,"count":0}],"isBlockCoverage":true},{"functionName":"isBinaryOperator2","ranges":[{"startOffset":1829410,"endOffset":1829621,"count":0}],"isBlockCoverage":false},{"functionName":"makeSatisfiesExpression","ranges":[{"startOffset":1829630,"endOffset":1829775,"count":0}],"isBlockCoverage":false},{"functionName":"makeBinaryExpression","ranges":[{"startOffset":1829784,"endOffset":1829953,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsExpression","ranges":[{"startOffset":1829962,"endOffset":1830093,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrefixUnaryExpression","ranges":[{"startOffset":1830102,"endOffset":1830310,"count":0}],"isBlockCoverage":false},{"functionName":"parseDeleteExpression","ranges":[{"startOffset":1830319,"endOffset":1830508,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeOfExpression","ranges":[{"startOffset":1830517,"endOffset":1830706,"count":0}],"isBlockCoverage":false},{"functionName":"parseVoidExpression","ranges":[{"startOffset":1830715,"endOffset":1830900,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression2","ranges":[{"startOffset":1830909,"endOffset":1831196,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwaitExpression","ranges":[{"startOffset":1831205,"endOffset":1831392,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnaryExpressionOrHigher","ranges":[{"startOffset":1831401,"endOffset":1832744,"count":20},{"startOffset":1831643,"endOffset":1831731,"count":0},{"startOffset":1831763,"endOffset":1832743,"count":0}],"isBlockCoverage":true},{"functionName":"parseSimpleUnaryExpression","ranges":[{"startOffset":1832753,"endOffset":1834018,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":1834027,"endOffset":1834646,"count":20},{"startOffset":1834100,"endOffset":1834124,"count":0},{"startOffset":1834137,"endOffset":1834162,"count":0},{"startOffset":1834175,"endOffset":1834200,"count":0},{"startOffset":1834213,"endOffset":1834244,"count":0},{"startOffset":1834257,"endOffset":1834285,"count":0},{"startOffset":1834298,"endOffset":1834327,"count":0},{"startOffset":1834340,"endOffset":1834367,"count":0},{"startOffset":1834380,"endOffset":1834436,"count":0},{"startOffset":1834449,"endOffset":1834576,"count":0}],"isBlockCoverage":true},{"functionName":"parseUpdateExpression","ranges":[{"startOffset":1834655,"endOffset":1835738,"count":20},{"startOffset":1834780,"endOffset":1834965,"count":0},{"startOffset":1835045,"endOffset":1835102,"count":0},{"startOffset":1835104,"endOffset":1835255,"count":0},{"startOffset":1835477,"endOffset":1835513,"count":0},{"startOffset":1835515,"endOffset":1835699,"count":0}],"isBlockCoverage":true},{"functionName":"parseLeftHandSideExpressionOrHigher","ranges":[{"startOffset":1835747,"endOffset":1836703,"count":20},{"startOffset":1835909,"endOffset":1836495,"count":0},{"startOffset":1836563,"endOffset":1836587,"count":0}],"isBlockCoverage":true},{"functionName":"parseMemberExpressionOrHigher","ranges":[{"startOffset":1836712,"endOffset":1837005,"count":20}],"isBlockCoverage":true},{"functionName":"parseSuperExpression","ranges":[{"startOffset":1837014,"endOffset":1838249,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxElementOrSelfClosingElementOrFragment","ranges":[{"startOffset":1838258,"endOffset":1841837,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxText","ranges":[{"startOffset":1841846,"endOffset":1842129,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxChild","ranges":[{"startOffset":1842138,"endOffset":1843555,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxChildren","ranges":[{"startOffset":1843564,"endOffset":1844404,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttributes","ranges":[{"startOffset":1844413,"endOffset":1844608,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxOpeningOrSelfClosingElementOrOpeningFragment","ranges":[{"startOffset":1844617,"endOffset":1845938,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxElementName","ranges":[{"startOffset":1845947,"endOffset":1846658,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxTagName","ranges":[{"startOffset":1846667,"endOffset":1847236,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxExpression","ranges":[{"startOffset":1847245,"endOffset":1848187,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttribute","ranges":[{"startOffset":1848196,"endOffset":1848497,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttributeValue","ranges":[{"startOffset":1848506,"endOffset":1849240,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxAttributeName","ranges":[{"startOffset":1849249,"endOffset":1849693,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxSpreadAttribute","ranges":[{"startOffset":1849702,"endOffset":1850064,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxClosingElement","ranges":[{"startOffset":1850073,"endOffset":1850735,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsxClosingFragment","ranges":[{"startOffset":1850744,"endOffset":1851323,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAssertion","ranges":[{"startOffset":1851332,"endOffset":1851858,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOrOpenBracketOrTemplate","ranges":[{"startOffset":1851867,"endOffset":1852098,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfOptionalPropertyOrElementAccessChain","ranges":[{"startOffset":1852107,"endOffset":1852299,"count":40},{"startOffset":1852221,"endOffset":1852288,"count":0}],"isBlockCoverage":true},{"functionName":"tryReparseOptionalChain","ranges":[{"startOffset":1852308,"endOffset":1852965,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyAccessExpressionRest","ranges":[{"startOffset":1852974,"endOffset":1854197,"count":0}],"isBlockCoverage":false},{"functionName":"parseElementAccessExpressionRest","ranges":[{"startOffset":1854206,"endOffset":1855240,"count":0}],"isBlockCoverage":false},{"functionName":"parseMemberExpressionRest","ranges":[{"startOffset":1855249,"endOffset":1857290,"count":40},{"startOffset":1855511,"endOffset":1855676,"count":0},{"startOffset":1855799,"endOffset":1855935,"count":0},{"startOffset":1856041,"endOffset":1856176,"count":0},{"startOffset":1856228,"endOffset":1856655,"count":0},{"startOffset":1856749,"endOffset":1856785,"count":0},{"startOffset":1856787,"endOffset":1856951,"count":0},{"startOffset":1857063,"endOffset":1857223,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateStartOfTaggedTemplate","ranges":[{"startOffset":1857299,"endOffset":1857459,"count":40}],"isBlockCoverage":true},{"functionName":"parseTaggedTemplateRest","ranges":[{"startOffset":1857468,"endOffset":1858209,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallExpressionRest","ranges":[{"startOffset":1858218,"endOffset":1860038,"count":20},{"startOffset":1858612,"endOffset":1858900,"count":0},{"startOffset":1858971,"endOffset":1859589,"count":0},{"startOffset":1859624,"endOffset":1859968,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgumentList","ranges":[{"startOffset":1860047,"endOffset":1860313,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeArgumentsInExpression","ranges":[{"startOffset":1860322,"endOffset":1860924,"count":40},{"startOffset":1860472,"endOffset":1860888,"count":0},{"startOffset":1860889,"endOffset":1860904,"count":0},{"startOffset":1860905,"endOffset":1860913,"count":0}],"isBlockCoverage":true},{"functionName":"canFollowTypeArgumentsInExpression","ranges":[{"startOffset":1860933,"endOffset":1861485,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrimaryExpression","ranges":[{"startOffset":1861494,"endOffset":1863648,"count":20},{"startOffset":1861571,"endOffset":1861820,"count":0},{"startOffset":1861833,"endOffset":1861861,"count":0},{"startOffset":1861874,"endOffset":1861902,"count":0},{"startOffset":1861915,"endOffset":1861984,"count":4},{"startOffset":1861997,"endOffset":1862024,"count":0},{"startOffset":1862037,"endOffset":1862065,"count":0},{"startOffset":1862078,"endOffset":1862105,"count":0},{"startOffset":1862118,"endOffset":1862145,"count":10},{"startOffset":1862158,"endOffset":1862224,"count":12},{"startOffset":1862237,"endOffset":1862319,"count":0},{"startOffset":1862332,"endOffset":1862415,"count":0},{"startOffset":1862428,"endOffset":1862510,"count":4},{"startOffset":1862523,"endOffset":1862708,"count":0},{"startOffset":1862721,"endOffset":1862792,"count":0},{"startOffset":1862805,"endOffset":1862877,"count":0},{"startOffset":1862890,"endOffset":1862969,"count":0},{"startOffset":1862982,"endOffset":1863065,"count":0},{"startOffset":1863078,"endOffset":1863103,"count":0},{"startOffset":1863116,"endOffset":1863305,"count":0},{"startOffset":1863318,"endOffset":1863467,"count":0},{"startOffset":1863480,"endOffset":1863559,"count":0},{"startOffset":1863571,"endOffset":1863647,"count":0}],"isBlockCoverage":true},{"functionName":"parseParenthesizedExpression","ranges":[{"startOffset":1863657,"endOffset":1864063,"count":0}],"isBlockCoverage":false},{"functionName":"parseSpreadElement","ranges":[{"startOffset":1864072,"endOffset":1864416,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgumentOrArrayLiteralElement","ranges":[{"startOffset":1864425,"endOffset":1864769,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgumentExpression","ranges":[{"startOffset":1864778,"endOffset":1864928,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayLiteralExpression","ranges":[{"startOffset":1864937,"endOffset":1865568,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectLiteralElement","ranges":[{"startOffset":1865577,"endOffset":1868197,"count":20},{"startOffset":1865766,"endOffset":1866030,"count":0},{"startOffset":1866198,"endOffset":1866319,"count":0},{"startOffset":1866381,"endOffset":1866502,"count":0},{"startOffset":1866940,"endOffset":1867076,"count":0},{"startOffset":1867164,"endOffset":1867181,"count":0},{"startOffset":1867246,"endOffset":1867682,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1867395,"endOffset":1867517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1867781,"endOffset":1867903,"count":20}],"isBlockCoverage":true},{"functionName":"parseObjectLiteralExpression","ranges":[{"startOffset":1868206,"endOffset":1868920,"count":6}],"isBlockCoverage":true},{"functionName":"parseFunctionExpression","ranges":[{"startOffset":1868929,"endOffset":1870442,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptionalBindingIdentifier","ranges":[{"startOffset":1870451,"endOffset":1870580,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewExpressionOrNewDotTarget","ranges":[{"startOffset":1870589,"endOffset":1871818,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlock","ranges":[{"startOffset":1871827,"endOffset":1873197,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBlock","ranges":[{"startOffset":1873206,"endOffset":1874149,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":1874158,"endOffset":1874429,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":1874438,"endOffset":1875206,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoStatement","ranges":[{"startOffset":1875215,"endOffset":1875963,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhileStatement","ranges":[{"startOffset":1875972,"endOffset":1876629,"count":0}],"isBlockCoverage":false},{"functionName":"parseForOrForInOrForOfStatement","ranges":[{"startOffset":1876638,"endOffset":1879024,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakOrContinueStatement","ranges":[{"startOffset":1879033,"endOffset":1879593,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":1879602,"endOffset":1880002,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":1880011,"endOffset":1880716,"count":0}],"isBlockCoverage":false},{"functionName":"parseCaseClause","ranges":[{"startOffset":1880725,"endOffset":1881199,"count":0}],"isBlockCoverage":false},{"functionName":"parseDefaultClause","ranges":[{"startOffset":1881208,"endOffset":1881545,"count":0}],"isBlockCoverage":false},{"functionName":"parseCaseOrDefaultClause","ranges":[{"startOffset":1881554,"endOffset":1881695,"count":0}],"isBlockCoverage":false},{"functionName":"parseCaseBlock","ranges":[{"startOffset":1881704,"endOffset":1882033,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":1882042,"endOffset":1882541,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":1882550,"endOffset":1883202,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":1883211,"endOffset":1884029,"count":0}],"isBlockCoverage":false},{"functionName":"parseCatchClause","ranges":[{"startOffset":1884038,"endOffset":1884636,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":1884645,"endOffset":1884951,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionOrLabeledStatement","ranges":[{"startOffset":1884960,"endOffset":1885756,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOnSameLine","ranges":[{"startOffset":1885765,"endOffset":1885942,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsClassKeywordOnSameLine","ranges":[{"startOffset":1885951,"endOffset":1886119,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsFunctionKeywordOnSameLine","ranges":[{"startOffset":1886128,"endOffset":1886303,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrKeywordOrLiteralOnSameLine","ranges":[{"startOffset":1886312,"endOffset":1886614,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration2","ranges":[{"startOffset":1886623,"endOffset":1889423,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfDeclaration","ranges":[{"startOffset":1889432,"endOffset":1889519,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfStatement","ranges":[{"startOffset":1889528,"endOffset":1891578,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsBindingIdentifierOrStartOfDestructuring","ranges":[{"startOffset":1891587,"endOffset":1891803,"count":0}],"isBlockCoverage":false},{"functionName":"isLetDeclaration","ranges":[{"startOffset":1891812,"endOffset":1891931,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsBindingIdentifierOrStartOfDestructuringOnSameLineDisallowOf","ranges":[{"startOffset":1891940,"endOffset":1892169,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsBindingIdentifierOrStartOfDestructuringOnSameLine","ranges":[{"startOffset":1892178,"endOffset":1892499,"count":0}],"isBlockCoverage":false},{"functionName":"isUsingDeclaration","ranges":[{"startOffset":1892508,"endOffset":1892639,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsUsingKeywordThenBindingIdentifierOrStartOfObjectDestructuringOnSameLine","ranges":[{"startOffset":1892648,"endOffset":1892948,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitUsingDeclaration","ranges":[{"startOffset":1892957,"endOffset":1893115,"count":0}],"isBlockCoverage":false},{"functionName":"parseStatement","ranges":[{"startOffset":1893124,"endOffset":1897291,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModifier","ranges":[{"startOffset":1897300,"endOffset":1897409,"count":0}],"isBlockCoverage":false},{"functionName":"parseDeclaration","ranges":[{"startOffset":1897418,"endOffset":1898190,"count":0}],"isBlockCoverage":false},{"functionName":"tryReuseAmbientDeclaration","ranges":[{"startOffset":1898199,"endOffset":1898469,"count":0}],"isBlockCoverage":false},{"functionName":"parseDeclarationWorker","ranges":[{"startOffset":1898478,"endOffset":1900761,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsStringLiteral","ranges":[{"startOffset":1900770,"endOffset":1900874,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsFromKeywordOrEqualsToken","ranges":[{"startOffset":1900883,"endOffset":1901052,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsIdentifierOrStringLiteralOnSameLine","ranges":[{"startOffset":1901061,"endOffset":1901264,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBlockOrSemicolon","ranges":[{"startOffset":1901273,"endOffset":1901702,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayBindingElement","ranges":[{"startOffset":1901711,"endOffset":1902303,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectBindingElement","ranges":[{"startOffset":1902312,"endOffset":1903031,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectBindingPattern","ranges":[{"startOffset":1903040,"endOffset":1903429,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayBindingPattern","ranges":[{"startOffset":1903438,"endOffset":1903828,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingIdentifierOrPrivateIdentifierOrPattern","ranges":[{"startOffset":1903837,"endOffset":1904069,"count":0}],"isBlockCoverage":false},{"functionName":"parseIdentifierOrPattern","ranges":[{"startOffset":1904078,"endOffset":1904463,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableDeclarationAllowExclamation","ranges":[{"startOffset":1904472,"endOffset":1904641,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableDeclaration","ranges":[{"startOffset":1904650,"endOffset":1905462,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableDeclarationList","ranges":[{"startOffset":1905471,"endOffset":1906942,"count":0}],"isBlockCoverage":false},{"functionName":"canFollowContextualOfKeyword","ranges":[{"startOffset":1906951,"endOffset":1907088,"count":0}],"isBlockCoverage":false},{"functionName":"parseVariableStatement","ranges":[{"startOffset":1907097,"endOffset":1907475,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionDeclaration","ranges":[{"startOffset":1907484,"endOffset":1908812,"count":0}],"isBlockCoverage":false},{"functionName":"parseConstructorName","ranges":[{"startOffset":1908821,"endOffset":1909300,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseConstructorDeclaration","ranges":[{"startOffset":1909309,"endOffset":1910102,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethodDeclaration","ranges":[{"startOffset":1910111,"endOffset":1911133,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyDeclaration","ranges":[{"startOffset":1911142,"endOffset":1911908,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyOrMethodDeclaration","ranges":[{"startOffset":1911917,"endOffset":1912701,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccessorDeclaration","ranges":[{"startOffset":1912710,"endOffset":1913538,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberStart","ranges":[{"startOffset":1913547,"endOffset":1914809,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlockDeclaration","ranges":[{"startOffset":1914818,"endOffset":1915176,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlockBody","ranges":[{"startOffset":1915185,"endOffset":1915628,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecoratorExpression","ranges":[{"startOffset":1915637,"endOffset":1916225,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseDecorator","ranges":[{"startOffset":1916234,"endOffset":1916548,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseModifier","ranges":[{"startOffset":1916557,"endOffset":1917380,"count":20},{"startOffset":1916778,"endOffset":1916802,"count":0},{"startOffset":1916804,"endOffset":1916932,"count":0},{"startOffset":1916972,"endOffset":1916990,"count":0},{"startOffset":1917011,"endOffset":1917045,"count":0},{"startOffset":1917047,"endOffset":1917087,"count":0},{"startOffset":1917119,"endOffset":1917137,"count":0},{"startOffset":1917159,"endOffset":1917199,"count":0},{"startOffset":1917310,"endOffset":1917379,"count":0}],"isBlockCoverage":true},{"functionName":"parseModifiers","ranges":[{"startOffset":1917389,"endOffset":1918840,"count":20},{"startOffset":1917729,"endOffset":1917856,"count":0},{"startOffset":1917980,"endOffset":1918178,"count":0},{"startOffset":1918212,"endOffset":1918230,"count":0},{"startOffset":1918231,"endOffset":1918248,"count":0},{"startOffset":1918264,"endOffset":1918434,"count":0},{"startOffset":1918471,"endOffset":1918777,"count":0},{"startOffset":1918800,"endOffset":1918829,"count":0}],"isBlockCoverage":true},{"functionName":"parseModifiersForArrowFunction","ranges":[{"startOffset":1918849,"endOffset":1919230,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassElement","ranges":[{"startOffset":1919239,"endOffset":1921970,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecoratedExpression","ranges":[{"startOffset":1921979,"endOffset":1922703,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassExpression","ranges":[{"startOffset":1922712,"endOffset":1922970,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassDeclaration","ranges":[{"startOffset":1922979,"endOffset":1923153,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassDeclarationOrExpression","ranges":[{"startOffset":1923162,"endOffset":1924267,"count":0}],"isBlockCoverage":false},{"functionName":"parseNameOfClassDeclarationOrExpression","ranges":[{"startOffset":1924276,"endOffset":1924454,"count":0}],"isBlockCoverage":false},{"functionName":"isImplementsClause","ranges":[{"startOffset":1924463,"endOffset":1924607,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeritageClauses","ranges":[{"startOffset":1924616,"endOffset":1924810,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeritageClause","ranges":[{"startOffset":1924819,"endOffset":1925233,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionWithTypeArguments","ranges":[{"startOffset":1925242,"endOffset":1925681,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseTypeArguments","ranges":[{"startOffset":1925690,"endOffset":1925903,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause2","ranges":[{"startOffset":1925912,"endOffset":1926049,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMembers","ranges":[{"startOffset":1926058,"endOffset":1926167,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterfaceDeclaration","ranges":[{"startOffset":1926176,"endOffset":1926689,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAliasDeclaration","ranges":[{"startOffset":1926698,"endOffset":1927406,"count":0}],"isBlockCoverage":false},{"functionName":"parseEnumMember","ranges":[{"startOffset":1927415,"endOffset":1927749,"count":0}],"isBlockCoverage":false},{"functionName":"parseEnumDeclaration","ranges":[{"startOffset":1927758,"endOffset":1928381,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleBlock","ranges":[{"startOffset":1928390,"endOffset":1928828,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleOrNamespaceDeclaration","ranges":[{"startOffset":1928837,"endOffset":1929527,"count":0}],"isBlockCoverage":false},{"functionName":"parseAmbientExternalModuleDeclaration","ranges":[{"startOffset":1929536,"endOffset":1930256,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleDeclaration","ranges":[{"startOffset":1930265,"endOffset":1930933,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference2","ranges":[{"startOffset":1930942,"endOffset":1931081,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenParen","ranges":[{"startOffset":1931090,"endOffset":1931191,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsOpenBrace","ranges":[{"startOffset":1931200,"endOffset":1931301,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenIsSlash","ranges":[{"startOffset":1931310,"endOffset":1931403,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamespaceExportDeclaration","ranges":[{"startOffset":1931412,"endOffset":1931830,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportDeclarationOrImportEqualsDeclaration","ranges":[{"startOffset":1931839,"endOffset":1933654,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportAttribute","ranges":[{"startOffset":1933663,"endOffset":1934134,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportAttributes","ranges":[{"startOffset":1934143,"endOffset":1935708,"count":0}],"isBlockCoverage":false},{"functionName":"tokenAfterImportDefinitelyProducesImportDeclaration","ranges":[{"startOffset":1935717,"endOffset":1935883,"count":0}],"isBlockCoverage":false},{"functionName":"tokenAfterImportedIdentifierDefinitelyProducesImportDeclaration","ranges":[{"startOffset":1935892,"endOffset":1936065,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportEqualsDeclaration","ranges":[{"startOffset":1936074,"endOffset":1936519,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportClause","ranges":[{"startOffset":1936528,"endOffset":1936947,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleReference","ranges":[{"startOffset":1936956,"endOffset":1937163,"count":0}],"isBlockCoverage":false},{"functionName":"parseExternalModuleReference","ranges":[{"startOffset":1937172,"endOffset":1937550,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleSpecifier","ranges":[{"startOffset":1937559,"endOffset":1937854,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamespaceImport","ranges":[{"startOffset":1937863,"endOffset":1938151,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamedImportsOrExports","ranges":[{"startOffset":1938160,"endOffset":1938661,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifier","ranges":[{"startOffset":1938670,"endOffset":1938863,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":1938872,"endOffset":1938989,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportOrExportSpecifier","ranges":[{"startOffset":1938998,"endOffset":1941501,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamespaceExport","ranges":[{"startOffset":1941510,"endOffset":1941645,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":1941654,"endOffset":1943251,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportAssignment","ranges":[{"startOffset":1943260,"endOffset":1944033,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1944071,"endOffset":1946493,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1946568,"endOffset":1946761,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1946827,"endOffset":1996659,"count":1}],"isBlockCoverage":true},{"functionName":"parseJSDocTypeExpressionForTests2","ranges":[{"startOffset":1946857,"endOffset":1948015,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpression","ranges":[{"startOffset":1948119,"endOffset":1948680,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocNameReference","ranges":[{"startOffset":1948767,"endOffset":1949586,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment2","ranges":[{"startOffset":1949671,"endOffset":1950343,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocComment","ranges":[{"startOffset":1950433,"endOffset":1951337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1951437,"endOffset":1951781,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1951861,"endOffset":1952161,"count":1}],"isBlockCoverage":true},{"functionName":"parseJSDocCommentWorker","ranges":[{"startOffset":1952221,"endOffset":1996649,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1996769,"endOffset":2012364,"count":1}],"isBlockCoverage":true},{"functionName":"updateSourceFile2","ranges":[{"startOffset":1996803,"endOffset":1999546,"count":0}],"isBlockCoverage":false},{"functionName":"getNewCommentDirectives","ranges":[{"startOffset":1999620,"endOffset":2001139,"count":0}],"isBlockCoverage":false},{"functionName":"moveElementEntirelyPastChangeRange","ranges":[{"startOffset":2001148,"endOffset":2002463,"count":0}],"isBlockCoverage":false},{"functionName":"shouldCheckNode","ranges":[{"startOffset":2002472,"endOffset":2002728,"count":0}],"isBlockCoverage":false},{"functionName":"adjustIntersectingElement","ranges":[{"startOffset":2002737,"endOffset":2003895,"count":0}],"isBlockCoverage":false},{"functionName":"checkNodePositions","ranges":[{"startOffset":2003904,"endOffset":2004434,"count":0}],"isBlockCoverage":false},{"functionName":"updateTokenPositionsAndMarkElements","ranges":[{"startOffset":2004443,"endOffset":2006626,"count":0}],"isBlockCoverage":false},{"functionName":"extendToAffectedRange","ranges":[{"startOffset":2006635,"endOffset":2007342,"count":0}],"isBlockCoverage":false},{"functionName":"findNearestNodeStartingBeforeOrAtPosition","ranges":[{"startOffset":2007351,"endOffset":2008847,"count":0}],"isBlockCoverage":false},{"functionName":"checkChangeRange","ranges":[{"startOffset":2008856,"endOffset":2009771,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxCursor","ranges":[{"startOffset":2009780,"endOffset":2012101,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2012208,"endOffset":2012311,"count":1}],"isBlockCoverage":true},{"functionName":"createOptionNameMap","ranges":[{"startOffset":2012657,"endOffset":2013086,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsNameMap","ranges":[{"startOffset":2013089,"endOffset":2013222,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticForInvalidCustomType","ranges":[{"startOffset":2013225,"endOffset":2013369,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForInvalidCustomType","ranges":[{"startOffset":2013372,"endOffset":2013760,"count":0}],"isBlockCoverage":false},{"functionName":"parseCustomTypeOption","ranges":[{"startOffset":2013763,"endOffset":2013896,"count":0}],"isBlockCoverage":false},{"functionName":"parseListTypeOption","ranges":[{"startOffset":2013899,"endOffset":2014762,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionName","ranges":[{"startOffset":2014765,"endOffset":2014825,"count":131}],"isBlockCoverage":true},{"functionName":"createUnknownOptionError","ranges":[{"startOffset":2014828,"endOffset":2015702,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLineWorker","ranges":[{"startOffset":2015705,"endOffset":2018315,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptionValue","ranges":[{"startOffset":2018318,"endOffset":2020660,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLine","ranges":[{"startOffset":2020663,"endOffset":2020813,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionFromName","ranges":[{"startOffset":2020816,"endOffset":2020956,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionDeclarationFromName","ranges":[{"startOffset":2020959,"endOffset":2021355,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOptionsNameMap","ranges":[{"startOffset":2021358,"endOffset":2021497,"count":0}],"isBlockCoverage":false},{"functionName":"parseBuildCommand","ranges":[{"startOffset":2021500,"endOffset":2022524,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticText","ranges":[{"startOffset":2022527,"endOffset":2022660,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLineOfConfigFile","ranges":[{"startOffset":2022663,"endOffset":2023691,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigFile","ranges":[{"startOffset":2023694,"endOffset":2023942,"count":2},{"startOffset":2023896,"endOffset":2023937,"count":0}],"isBlockCoverage":true},{"functionName":"parseConfigFileTextToJson","ranges":[{"startOffset":2023945,"endOffset":2024350,"count":2},{"startOffset":2024294,"endOffset":2024330,"count":0}],"isBlockCoverage":true},{"functionName":"readJsonConfigFile","ranges":[{"startOffset":2024353,"endOffset":2024604,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadFile","ranges":[{"startOffset":2024607,"endOffset":2024938,"count":2},{"startOffset":2024713,"endOffset":2024830,"count":0},{"startOffset":2024858,"endOffset":2024926,"count":0}],"isBlockCoverage":true},{"functionName":"commandLineOptionsToMap","ranges":[{"startOffset":2024941,"endOffset":2025035,"count":3}],"isBlockCoverage":true},{"functionName":"getWatchOptionsNameMap","ranges":[{"startOffset":2025038,"endOffset":2025183,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandLineCompilerOptionsMap","ranges":[{"startOffset":2025186,"endOffset":2025368,"count":3},{"startOffset":2025278,"endOffset":2025363,"count":1}],"isBlockCoverage":true},{"functionName":"getCommandLineWatchOptionsMap","ranges":[{"startOffset":2025371,"endOffset":2025541,"count":3},{"startOffset":2025457,"endOffset":2025536,"count":1}],"isBlockCoverage":true},{"functionName":"getCommandLineTypeAcquisitionMap","ranges":[{"startOffset":2025544,"endOffset":2025735,"count":3},{"startOffset":2025636,"endOffset":2025730,"count":1}],"isBlockCoverage":true},{"functionName":"getTsconfigRootOptionsMap","ranges":[{"startOffset":2025738,"endOffset":2027411,"count":0}],"isBlockCoverage":false},{"functionName":"convertConfigFileToObject","ranges":[{"startOffset":2027414,"endOffset":2028519,"count":2},{"startOffset":2027574,"endOffset":2027582,"count":0},{"startOffset":2027685,"endOffset":2028365,"count":0}],"isBlockCoverage":true},{"functionName":"convertToObject","ranges":[{"startOffset":2028522,"endOffset":2028801,"count":0}],"isBlockCoverage":false},{"functionName":"convertToJson","ranges":[{"startOffset":2028804,"endOffset":2032901,"count":2},{"startOffset":2028927,"endOffset":2028974,"count":0},{"startOffset":2029069,"endOffset":2029105,"count":0}],"isBlockCoverage":true},{"functionName":"convertObjectLiteralExpressionToJson","ranges":[{"startOffset":2029112,"endOffset":2030636,"count":6},{"startOffset":2029232,"endOffset":2029240,"count":0},{"startOffset":2029287,"endOffset":2030609,"count":20},{"startOffset":2029348,"endOffset":2029502,"count":0},{"startOffset":2029538,"endOffset":2029714,"count":0},{"startOffset":2029764,"endOffset":2029917,"count":0},{"startOffset":2029983,"endOffset":2029991,"count":0},{"startOffset":2030176,"endOffset":2030205,"count":0},{"startOffset":2030224,"endOffset":2030241,"count":0},{"startOffset":2030242,"endOffset":2030250,"count":0},{"startOffset":2030505,"endOffset":2030590,"count":0}],"isBlockCoverage":true},{"functionName":"convertArrayLiteralExpressionToJson","ranges":[{"startOffset":2030641,"endOffset":2030987,"count":0}],"isBlockCoverage":false},{"functionName":"convertPropertyValueToJson","ranges":[{"startOffset":2030992,"endOffset":2032771,"count":22},{"startOffset":2031101,"endOffset":2031151,"count":10},{"startOffset":2031160,"endOffset":2031211,"count":2},{"startOffset":2031220,"endOffset":2031270,"count":0},{"startOffset":2031279,"endOffset":2031561,"count":4},{"startOffset":2031362,"endOffset":2031522,"count":0},{"startOffset":2031570,"endOffset":2031645,"count":0},{"startOffset":2031654,"endOffset":2031903,"count":0},{"startOffset":2031912,"endOffset":2032098,"count":6},{"startOffset":2032107,"endOffset":2032287,"count":0},{"startOffset":2032295,"endOffset":2032770,"count":0}],"isBlockCoverage":true},{"functionName":"isDoubleQuotedString","ranges":[{"startOffset":2032776,"endOffset":2032897,"count":24}],"isBlockCoverage":true},{"functionName":"getCompilerOptionValueTypeString","ranges":[{"startOffset":2032904,"endOffset":2033152,"count":0}],"isBlockCoverage":false},{"functionName":"isCompilerOptionsValue","ranges":[{"startOffset":2033155,"endOffset":2033660,"count":26},{"startOffset":2033266,"endOffset":2033305,"count":0},{"startOffset":2033340,"endOffset":2033380,"count":0},{"startOffset":2033424,"endOffset":2033513,"count":0},{"startOffset":2033563,"endOffset":2033576,"count":22},{"startOffset":2033577,"endOffset":2033587,"count":4},{"startOffset":2033638,"endOffset":2033659,"count":0}],"isBlockCoverage":true},{"functionName":"convertToTSConfig","ranges":[{"startOffset":2033663,"endOffset":2036648,"count":0}],"isBlockCoverage":false},{"functionName":"optionMapToObject","ranges":[{"startOffset":2036651,"endOffset":2036813,"count":0}],"isBlockCoverage":false},{"functionName":"filterSameAsDefaultInclude","ranges":[{"startOffset":2036816,"endOffset":2037038,"count":0}],"isBlockCoverage":false},{"functionName":"matchesSpecs","ranges":[{"startOffset":2037041,"endOffset":2037838,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomTypeMapOfCommandLineOption","ranges":[{"startOffset":2037841,"endOffset":2038238,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfCompilerOptionValue","ranges":[{"startOffset":2038241,"endOffset":2038434,"count":0}],"isBlockCoverage":false},{"functionName":"serializeCompilerOptions","ranges":[{"startOffset":2038437,"endOffset":2038579,"count":0}],"isBlockCoverage":false},{"functionName":"serializeWatchOptions","ranges":[{"startOffset":2038582,"endOffset":2038700,"count":0}],"isBlockCoverage":false},{"functionName":"serializeOptionBaseObject","ranges":[{"startOffset":2038703,"endOffset":2040243,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiffValue","ranges":[{"startOffset":2040246,"endOffset":2041170,"count":0}],"isBlockCoverage":false},{"functionName":"getSerializedCompilerOption","ranges":[{"startOffset":2041173,"endOffset":2041351,"count":0}],"isBlockCoverage":false},{"functionName":"generateTSConfig","ranges":[{"startOffset":2041354,"endOffset":2044977,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionsWithAbsolutePaths","ranges":[{"startOffset":2044980,"endOffset":2045527,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionValueWithAbsolutePaths","ranges":[{"startOffset":2045530,"endOffset":2046000,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfigFileContent","ranges":[{"startOffset":2046003,"endOffset":2046456,"count":2}],"isBlockCoverage":true},{"functionName":"parseJsonSourceFileConfigFileContent","ranges":[{"startOffset":2046459,"endOffset":2047158,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileInOptions","ranges":[{"startOffset":2047161,"endOffset":2047358,"count":12},{"startOffset":2047236,"endOffset":2047354,"count":0}],"isBlockCoverage":true},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2047361,"endOffset":2047435,"count":78}],"isBlockCoverage":true},{"functionName":"directoryOfCombinedPath","ranges":[{"startOffset":2047438,"endOffset":2047572,"count":2}],"isBlockCoverage":true},{"functionName":"parseJsonConfigFileContentWorker","ranges":[{"startOffset":2047575,"endOffset":2054336,"count":2},{"startOffset":2047815,"endOffset":2047839,"count":0},{"startOffset":2048142,"endOffset":2048147,"count":0},{"startOffset":2048196,"endOffset":2048224,"count":0},{"startOffset":2048225,"endOffset":2048282,"count":0},{"startOffset":2048493,"endOffset":2048538,"count":0},{"startOffset":2048702,"endOffset":2048712,"count":0},{"startOffset":2048937,"endOffset":2048967,"count":0}],"isBlockCoverage":true},{"functionName":"getConfigFileSpecs","ranges":[{"startOffset":2049483,"endOffset":2052134,"count":2},{"startOffset":2049713,"endOffset":2050630,"count":0},{"startOffset":2051044,"endOffset":2051061,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2049574,"endOffset":2049614,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2050239,"endOffset":2050273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2051122,"endOffset":2051132,"count":4}],"isBlockCoverage":true},{"functionName":"getFileNames","ranges":[{"startOffset":2052139,"endOffset":2052505,"count":2},{"startOffset":2052387,"endOffset":2052475,"count":0}],"isBlockCoverage":true},{"functionName":"getProjectReferences","ranges":[{"startOffset":2052510,"endOffset":2053305,"count":2},{"startOffset":2052730,"endOffset":2053267,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2052641,"endOffset":2052681,"count":0}],"isBlockCoverage":false},{"functionName":"toPropValue","ranges":[{"startOffset":2053310,"endOffset":2053406,"count":6},{"startOffset":2053378,"endOffset":2053390,"count":0}],"isBlockCoverage":true},{"functionName":"getSpecsFromRaw","ranges":[{"startOffset":2053411,"endOffset":2053504,"count":6}],"isBlockCoverage":true},{"functionName":"getPropFromRaw","ranges":[{"startOffset":2053509,"endOffset":2054160,"count":10},{"startOffset":2053608,"endOffset":2053640,"count":0},{"startOffset":2053642,"endOffset":2054130,"count":0}],"isBlockCoverage":true},{"functionName":"createCompilerDiagnosticOnlyIfJson","ranges":[{"startOffset":2054165,"endOffset":2054332,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorNoInputFiles","ranges":[{"startOffset":2054339,"endOffset":2054520,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorForNoInputFiles","ranges":[{"startOffset":2054523,"endOffset":2054890,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReportNoInputFiles","ranges":[{"startOffset":2054893,"endOffset":2055103,"count":2},{"startOffset":2055017,"endOffset":2055044,"count":0},{"startOffset":2055045,"endOffset":2055098,"count":0}],"isBlockCoverage":true},{"functionName":"canJsonReportNoInputFiles","ranges":[{"startOffset":2055106,"endOffset":2055225,"count":2}],"isBlockCoverage":true},{"functionName":"updateErrorForNoInputFiles","ranges":[{"startOffset":2055228,"endOffset":2055753,"count":0}],"isBlockCoverage":false},{"functionName":"isSuccessfulParsedTsconfig","ranges":[{"startOffset":2055756,"endOffset":2055832,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfig","ranges":[{"startOffset":2055835,"endOffset":2059317,"count":2},{"startOffset":2056075,"endOffset":2056080,"count":0},{"startOffset":2056141,"endOffset":2056381,"count":0},{"startOffset":2056478,"endOffset":2056562,"count":0},{"startOffset":2056605,"endOffset":2056613,"count":0},{"startOffset":2056626,"endOffset":2056683,"count":0},{"startOffset":2056722,"endOffset":2057906,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2057005,"endOffset":2057076,"count":0}],"isBlockCoverage":false},{"functionName":"applyExtendedConfig","ranges":[{"startOffset":2057933,"endOffset":2059313,"count":0}],"isBlockCoverage":false},{"functionName":"parseOwnConfigOfJson","ranges":[{"startOffset":2059320,"endOffset":2060216,"count":2},{"startOffset":2059437,"endOffset":2059547,"count":0},{"startOffset":2060033,"endOffset":2060116,"count":0}],"isBlockCoverage":true},{"functionName":"getExtendsConfigPathOrArray","ranges":[{"startOffset":2060219,"endOffset":2061597,"count":0}],"isBlockCoverage":false},{"functionName":"parseOwnConfigOfJsonSourceFile","ranges":[{"startOffset":2061600,"endOffset":2064751,"count":0}],"isBlockCoverage":false},{"functionName":"getExtendsConfigPath","ranges":[{"startOffset":2064754,"endOffset":2066174,"count":0}],"isBlockCoverage":false},{"functionName":"getExtendedConfig","ranges":[{"startOffset":2066177,"endOffset":2067709,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompileOnSaveOptionFromJson","ranges":[{"startOffset":2067712,"endOffset":2068054,"count":2},{"startOffset":2067886,"endOffset":2068049,"count":0}],"isBlockCoverage":true},{"functionName":"convertCompilerOptionsFromJson","ranges":[{"startOffset":2068057,"endOffset":2068301,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisitionFromJson","ranges":[{"startOffset":2068304,"endOffset":2068548,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions","ranges":[{"startOffset":2068551,"endOffset":2068838,"count":2},{"startOffset":2068694,"endOffset":2068808,"count":0}],"isBlockCoverage":true},{"functionName":"convertCompilerOptionsFromJsonWorker","ranges":[{"startOffset":2068841,"endOffset":2069261,"count":2}],"isBlockCoverage":true},{"functionName":"getDefaultTypeAcquisition","ranges":[{"startOffset":2069264,"endOffset":2069442,"count":2}],"isBlockCoverage":true},{"functionName":"convertTypeAcquisitionFromJsonWorker","ranges":[{"startOffset":2069445,"endOffset":2069768,"count":2}],"isBlockCoverage":true},{"functionName":"convertWatchOptionsFromJsonWorker","ranges":[{"startOffset":2069771,"endOffset":2070059,"count":2}],"isBlockCoverage":true},{"functionName":"convertOptionsFromJson","ranges":[{"startOffset":2070062,"endOffset":2070555,"count":6},{"startOffset":2070194,"endOffset":2070215,"count":4},{"startOffset":2070215,"endOffset":2070250,"count":2},{"startOffset":2070250,"endOffset":2070524,"count":26},{"startOffset":2070335,"endOffset":2070359,"count":0},{"startOffset":2070439,"endOffset":2070518,"count":0},{"startOffset":2070524,"endOffset":2070554,"count":2}],"isBlockCoverage":true},{"functionName":"createDiagnosticForNodeInSourceFileOrCompilerDiagnostic","ranges":[{"startOffset":2070558,"endOffset":2070814,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOption","ranges":[{"startOffset":2070817,"endOffset":2072358,"count":26},{"startOffset":2070956,"endOffset":2071205,"count":0},{"startOffset":2071313,"endOffset":2071330,"count":0},{"startOffset":2071332,"endOffset":2071464,"count":0},{"startOffset":2071503,"endOffset":2071759,"count":0},{"startOffset":2071790,"endOffset":2071894,"count":4},{"startOffset":2071894,"endOffset":2072045,"count":22},{"startOffset":2072045,"endOffset":2072061,"count":0},{"startOffset":2072062,"endOffset":2072122,"count":22},{"startOffset":2072129,"endOffset":2072354,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeNonListOptionValue","ranges":[{"startOffset":2072361,"endOffset":2072594,"count":22},{"startOffset":2072452,"endOffset":2072572,"count":2},{"startOffset":2072536,"endOffset":2072566,"count":0}],"isBlockCoverage":true},{"functionName":"validateJsonOptionValue","ranges":[{"startOffset":2072597,"endOffset":2072992,"count":26},{"startOffset":2072733,"endOffset":2072747,"count":0},{"startOffset":2072806,"endOffset":2072827,"count":0},{"startOffset":2072860,"endOffset":2072991,"count":0}],"isBlockCoverage":true},{"functionName":"convertJsonOptionOfCustomType","ranges":[{"startOffset":2072995,"endOffset":2073533,"count":4},{"startOffset":2073125,"endOffset":2073139,"count":0},{"startOffset":2073328,"endOffset":2073529,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2073396,"endOffset":2073520,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOptionOfListType","ranges":[{"startOffset":2073536,"endOffset":2073915,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesFromConfigSpecs","ranges":[{"startOffset":2073918,"endOffset":2076717,"count":2},{"startOffset":2074675,"endOffset":2074860,"count":0},{"startOffset":2075194,"endOffset":2076495,"count":40},{"startOffset":2075251,"endOffset":2076068,"count":0},{"startOffset":2076188,"endOffset":2076219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2075352,"endOffset":2075390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2075501,"endOffset":2075528,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2075614,"endOffset":2075687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2075780,"endOffset":2075801,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedFile","ranges":[{"startOffset":2076720,"endOffset":2077453,"count":0}],"isBlockCoverage":false},{"functionName":"invalidDotDotAfterRecursiveWildcard","ranges":[{"startOffset":2077456,"endOffset":2077760,"count":4},{"startOffset":2077553,"endOffset":2077556,"count":2},{"startOffset":2077557,"endOffset":2077576,"count":2},{"startOffset":2077608,"endOffset":2077680,"count":2},{"startOffset":2077680,"endOffset":2077690,"count":0},{"startOffset":2077691,"endOffset":2077714,"count":2}],"isBlockCoverage":true},{"functionName":"matchesExclude","ranges":[{"startOffset":2077763,"endOffset":2078063,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExcludeWorker","ranges":[{"startOffset":2078066,"endOffset":2078643,"count":0}],"isBlockCoverage":false},{"functionName":"validateSpecs","ranges":[{"startOffset":2078646,"endOffset":2079273,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2078762,"endOffset":2079017,"count":4},{"startOffset":2078809,"endOffset":2078822,"count":0},{"startOffset":2078922,"endOffset":2078980,"count":0}],"isBlockCoverage":true},{"functionName":"createDiagnostic","ranges":[{"startOffset":2079024,"endOffset":2079269,"count":0}],"isBlockCoverage":false},{"functionName":"specToDiagnostic","ranges":[{"startOffset":2079276,"endOffset":2079820,"count":4},{"startOffset":2079415,"endOffset":2079460,"count":2},{"startOffset":2079462,"endOffset":2079593,"count":0},{"startOffset":2079646,"endOffset":2079816,"count":0}],"isBlockCoverage":true},{"functionName":"getWildcardDirectories","ranges":[{"startOffset":2079823,"endOffset":2081673,"count":2},{"startOffset":2080153,"endOffset":2080157,"count":0},{"startOffset":2080476,"endOffset":2080507,"count":0},{"startOffset":2080776,"endOffset":2080811,"count":0},{"startOffset":2080861,"endOffset":2080885,"count":0},{"startOffset":2080945,"endOffset":2080959,"count":0},{"startOffset":2081463,"endOffset":2081536,"count":0},{"startOffset":2081538,"endOffset":2081601,"count":0}],"isBlockCoverage":true},{"functionName":"toCanonicalKey","ranges":[{"startOffset":2081676,"endOffset":2081813,"count":4},{"startOffset":2081774,"endOffset":2081780,"count":0}],"isBlockCoverage":true},{"functionName":"getWildcardDirectoryFromSpec","ranges":[{"startOffset":2081816,"endOffset":2082787,"count":2},{"startOffset":2082298,"endOffset":2082352,"count":0},{"startOffset":2082452,"endOffset":2082455,"count":0},{"startOffset":2082481,"endOffset":2082786,"count":0}],"isBlockCoverage":true},{"functionName":"hasFileWithHigherPriorityExtension","ranges":[{"startOffset":2082790,"endOffset":2083620,"count":40},{"startOffset":2083033,"endOffset":2083060,"count":0},{"startOffset":2083243,"endOffset":2083403,"count":0},{"startOffset":2083405,"endOffset":2083592,"count":0},{"startOffset":2083598,"endOffset":2083619,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2082941,"endOffset":2083005,"count":40},{"startOffset":2082997,"endOffset":2083005,"count":0}],"isBlockCoverage":true},{"functionName":"removeWildcardFilesWithLowerPriorityExtension","ranges":[{"startOffset":2083623,"endOffset":2084172,"count":40},{"startOffset":2083863,"endOffset":2083884,"count":0},{"startOffset":2083942,"endOffset":2084168,"count":120},{"startOffset":2084019,"endOffset":2084044,"count":40},{"startOffset":2084044,"endOffset":2084168,"count":80},{"startOffset":2084168,"endOffset":2084171,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2083771,"endOffset":2083835,"count":40},{"startOffset":2083827,"endOffset":2083835,"count":0}],"isBlockCoverage":true},{"functionName":"convertCompilerOptionsForTelemetry","ranges":[{"startOffset":2084175,"endOffset":2084502,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionValueWithEmptyStrings","ranges":[{"startOffset":2084505,"endOffset":2085384,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultValueForOption","ranges":[{"startOffset":2085387,"endOffset":2086118,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/commandLineParser.ts","ranges":[{"startOffset":2087329,"endOffset":2150120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2087879,"endOffset":2087914,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2092453,"endOffset":2092472,"count":83}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144308,"endOffset":2144355,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144422,"endOffset":2144454,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144532,"endOffset":2144575,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144647,"endOffset":2144691,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144763,"endOffset":2144836,"count":121},{"startOffset":2144802,"endOffset":2144836,"count":115}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144906,"endOffset":2144950,"count":121}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2145023,"endOffset":2145078,"count":121}],"isBlockCoverage":true},{"functionName":"trace","ranges":[{"startOffset":2150170,"endOffset":2150263,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceEnabled","ranges":[{"startOffset":2150266,"endOffset":2150389,"count":0}],"isBlockCoverage":false},{"functionName":"withPackageId","ranges":[{"startOffset":2150392,"endOffset":2151019,"count":0}],"isBlockCoverage":false},{"functionName":"noPackageId","ranges":[{"startOffset":2151022,"endOffset":2151128,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPackageId","ranges":[{"startOffset":2151131,"endOffset":2151337,"count":0}],"isBlockCoverage":false},{"functionName":"formatExtensions","ranges":[{"startOffset":2151340,"endOffset":2151722,"count":0}],"isBlockCoverage":false},{"functionName":"extensionsToExtensionsArray","ranges":[{"startOffset":2151725,"endOffset":2152181,"count":0}],"isBlockCoverage":false},{"functionName":"resolvedTypeScriptOnly","ranges":[{"startOffset":2152184,"endOffset":2152403,"count":0}],"isBlockCoverage":false},{"functionName":"createResolvedModuleWithFailedLookupLocationsHandlingSymlink","ranges":[{"startOffset":2152406,"endOffset":2153284,"count":0}],"isBlockCoverage":false},{"functionName":"createResolvedModuleWithFailedLookupLocations","ranges":[{"startOffset":2153287,"endOffset":2155074,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResolutionField","ranges":[{"startOffset":2155077,"endOffset":2155166,"count":0}],"isBlockCoverage":false},{"functionName":"updateResolutionField","ranges":[{"startOffset":2155169,"endOffset":2155385,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResolutionFieldForReadonlyCache","ranges":[{"startOffset":2155388,"endOffset":2155659,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonField","ranges":[{"startOffset":2155662,"endOffset":2156268,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonPathField","ranges":[{"startOffset":2156271,"endOffset":2156890,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTypesFields","ranges":[{"startOffset":2156893,"endOffset":2157124,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTSConfigField","ranges":[{"startOffset":2157127,"endOffset":2157289,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonMainField","ranges":[{"startOffset":2157292,"endOffset":2157446,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTypesVersionsField","ranges":[{"startOffset":2157449,"endOffset":2157835,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageJsonTypesVersionPaths","ranges":[{"startOffset":2157838,"endOffset":2158974,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonTypesVersionsPaths","ranges":[{"startOffset":2158977,"endOffset":2159446,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":2159449,"endOffset":2159893,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTypeRoots","ranges":[{"startOffset":2159896,"endOffset":2160196,"count":0}],"isBlockCoverage":false},{"functionName":"arePathsEqual","ranges":[{"startOffset":2160199,"endOffset":2160496,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalAndResolvedFileName","ranges":[{"startOffset":2160499,"endOffset":2161030,"count":0}],"isBlockCoverage":false},{"functionName":"getCandidateFromTypeRoot","ranges":[{"startOffset":2161033,"endOffset":2161415,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirective","ranges":[{"startOffset":2161418,"endOffset":2171100,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeResolutionFeatures","ranges":[{"startOffset":2171103,"endOffset":2171896,"count":0}],"isBlockCoverage":false},{"functionName":"getConditions","ranges":[{"startOffset":2171899,"endOffset":2172548,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageNameToPackageJson","ranges":[{"startOffset":2172551,"endOffset":2173264,"count":0}],"isBlockCoverage":false},{"functionName":"getAutomaticTypeDirectiveNames","ranges":[{"startOffset":2173267,"endOffset":2174308,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageJsonInfo","ranges":[{"startOffset":2174311,"endOffset":2174406,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingPackageJsonInfo","ranges":[{"startOffset":2174409,"endOffset":2174494,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionValueToString","ranges":[{"startOffset":2174497,"endOffset":2174977,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilerOptions","ranges":[{"startOffset":2174980,"endOffset":2175223,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheWithRedirects","ranges":[{"startOffset":2175226,"endOffset":2177860,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfoCache","ranges":[{"startOffset":2177863,"endOffset":2178540,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateCache","ranges":[{"startOffset":2178543,"endOffset":2178850,"count":0}],"isBlockCoverage":false},{"functionName":"createPerDirectoryResolutionCache","ranges":[{"startOffset":2178853,"endOffset":2180016,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCacheKey","ranges":[{"startOffset":2180019,"endOffset":2180139,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCache","ranges":[{"startOffset":2180142,"endOffset":2181278,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalOrResolvedModuleFileName","ranges":[{"startOffset":2181281,"endOffset":2181455,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalOrResolvedTypeReferenceFileName","ranges":[{"startOffset":2181458,"endOffset":2181687,"count":0}],"isBlockCoverage":false},{"functionName":"createNonRelativeNameResolutionCache","ranges":[{"startOffset":2181690,"endOffset":2184823,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleOrTypeReferenceResolutionCache","ranges":[{"startOffset":2184826,"endOffset":2186284,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionCache","ranges":[{"startOffset":2186287,"endOffset":2186856,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceDirectiveResolutionCache","ranges":[{"startOffset":2186859,"endOffset":2187246,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForLibraryResolution","ranges":[{"startOffset":2187249,"endOffset":2187394,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":2187397,"endOffset":2187600,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameFromCache","ranges":[{"startOffset":2187603,"endOffset":2187898,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleName","ranges":[{"startOffset":2187901,"endOffset":2191999,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingOptionalResolutionSettings","ranges":[{"startOffset":2192002,"endOffset":2192515,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingPathsIfEligible","ranges":[{"startOffset":2192518,"endOffset":2193574,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingRootDirs","ranges":[{"startOffset":2193577,"endOffset":2196299,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingBaseUrl","ranges":[{"startOffset":2196302,"endOffset":2196995,"count":0}],"isBlockCoverage":false},{"functionName":"resolveJSModule","ranges":[{"startOffset":2196998,"endOffset":2197432,"count":0}],"isBlockCoverage":false},{"functionName":"node16ModuleNameResolver","ranges":[{"startOffset":2197435,"endOffset":2197787,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextModuleNameResolver","ranges":[{"startOffset":2197790,"endOffset":2198146,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextModuleNameResolverWorker","ranges":[{"startOffset":2198149,"endOffset":2198962,"count":0}],"isBlockCoverage":false},{"functionName":"tryResolveJSModuleWorker","ranges":[{"startOffset":2198965,"endOffset":2199381,"count":0}],"isBlockCoverage":false},{"functionName":"bundlerModuleNameResolver","ranges":[{"startOffset":2199384,"endOffset":2200109,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolver","ranges":[{"startOffset":2200112,"endOffset":2200968,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextJsonConfigResolver","ranges":[{"startOffset":2200971,"endOffset":2201408,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolverWorker","ranges":[{"startOffset":2201411,"endOffset":2208395,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathForCJSResolution","ranges":[{"startOffset":2208398,"endOffset":2208805,"count":0}],"isBlockCoverage":false},{"functionName":"realPath","ranges":[{"startOffset":2208808,"endOffset":2209087,"count":0}],"isBlockCoverage":false},{"functionName":"nodeLoadModuleByRelativeName","ranges":[{"startOffset":2209090,"endOffset":2210873,"count":0}],"isBlockCoverage":false},{"functionName":"pathContainsNodeModules","ranges":[{"startOffset":2210876,"endOffset":2210967,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModuleFromPath","ranges":[{"startOffset":2210970,"endOffset":2211585,"count":0}],"isBlockCoverage":false},{"functionName":"moveToNextDirectorySeparatorIfAvailable","ranges":[{"startOffset":2211588,"endOffset":2211872,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromFileNoPackageId","ranges":[{"startOffset":2211875,"endOffset":2212063,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromFile","ranges":[{"startOffset":2212066,"endOffset":2212627,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromFileNoImplicitExtensions","ranges":[{"startOffset":2212630,"endOffset":2213320,"count":0}],"isBlockCoverage":false},{"functionName":"loadFileNameFromPackageJsonField","ranges":[{"startOffset":2213323,"endOffset":2214258,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddingExtensions","ranges":[{"startOffset":2214261,"endOffset":2217417,"count":0}],"isBlockCoverage":false},{"functionName":"tryFile","ranges":[{"startOffset":2217420,"endOffset":2217936,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileLookup","ranges":[{"startOffset":2217939,"endOffset":2218505,"count":0}],"isBlockCoverage":false},{"functionName":"loadNodeModuleFromDirectory","ranges":[{"startOffset":2218508,"endOffset":2219080,"count":0}],"isBlockCoverage":false},{"functionName":"getEntrypointsFromPackageJsonInfo","ranges":[{"startOffset":2219083,"endOffset":2221171,"count":0}],"isBlockCoverage":false},{"functionName":"loadEntrypointsFromExportMap","ranges":[{"startOffset":2221174,"endOffset":2223921,"count":0}],"isBlockCoverage":false},{"functionName":"getTemporaryModuleResolutionState","ranges":[{"startOffset":2223924,"endOffset":2224468,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeForPath","ranges":[{"startOffset":2224471,"endOffset":2224858,"count":0}],"isBlockCoverage":false},{"functionName":"getVersionPathsOfPackageJsonInfo","ranges":[{"startOffset":2224861,"endOffset":2225199,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonInfo","ranges":[{"startOffset":2225202,"endOffset":2227533,"count":0}],"isBlockCoverage":false},{"functionName":"loadNodeModuleFromDirectoryWorker","ranges":[{"startOffset":2227536,"endOffset":2230675,"count":0}],"isBlockCoverage":false},{"functionName":"extensionIsOk","ranges":[{"startOffset":2230678,"endOffset":2231301,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":2231304,"endOffset":2231641,"count":0}],"isBlockCoverage":false},{"functionName":"allKeysStartWithDot","ranges":[{"startOffset":2231644,"endOffset":2231745,"count":0}],"isBlockCoverage":false},{"functionName":"noKeyStartsWithDot","ranges":[{"startOffset":2231748,"endOffset":2231848,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromSelfNameReference","ranges":[{"startOffset":2231851,"endOffset":2233369,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromExports","ranges":[{"startOffset":2233372,"endOffset":2235515,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromImports","ranges":[{"startOffset":2235518,"endOffset":2237221,"count":0}],"isBlockCoverage":false},{"functionName":"comparePatternKeys","ranges":[{"startOffset":2237224,"endOffset":2237784,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromImportsOrExports","ranges":[{"startOffset":2237787,"endOffset":2240244,"count":0}],"isBlockCoverage":false},{"functionName":"getLoadModuleFromTargetImportOrExport","ranges":[{"startOffset":2240247,"endOffset":2252373,"count":0}],"isBlockCoverage":false},{"functionName":"isApplicableVersionedTypesKey","ranges":[{"startOffset":2252376,"endOffset":2252693,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromNearestNodeModulesDirectory","ranges":[{"startOffset":2252696,"endOffset":2253032,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromNearestNodeModulesDirectoryTypesScope","ranges":[{"startOffset":2253035,"endOffset":2253383,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromNearestNodeModulesDirectoryWorker","ranges":[{"startOffset":2253386,"endOffset":2255010,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromImmediateNodeModulesDirectory","ranges":[{"startOffset":2255013,"endOffset":2256479,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromSpecificNodeModulesDirectory","ranges":[{"startOffset":2256482,"endOffset":2260075,"count":0}],"isBlockCoverage":false},{"functionName":"tryLoadModuleUsingPaths","ranges":[{"startOffset":2260078,"endOffset":2261622,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageNameWithTrace","ranges":[{"startOffset":2261625,"endOffset":2261917,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageName","ranges":[{"startOffset":2261920,"endOffset":2262028,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageName","ranges":[{"startOffset":2262031,"endOffset":2262339,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageNameFromTypesPackageName","ranges":[{"startOffset":2262342,"endOffset":2262612,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleScopedPackageName","ranges":[{"startOffset":2262615,"endOffset":2262845,"count":0}],"isBlockCoverage":false},{"functionName":"tryFindNonRelativeModuleNameInCache","ranges":[{"startOffset":2262848,"endOffset":2263720,"count":0}],"isBlockCoverage":false},{"functionName":"classicNameResolver","ranges":[{"startOffset":2263723,"endOffset":2266790,"count":0}],"isBlockCoverage":false},{"functionName":"resolveFromTypeRoot","ranges":[{"startOffset":2266793,"endOffset":2267945,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAllowImportingTsExtension","ranges":[{"startOffset":2267948,"endOffset":2268137,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromGlobalCache","ranges":[{"startOffset":2268140,"endOffset":2269602,"count":0}],"isBlockCoverage":false},{"functionName":"toSearchResult","ranges":[{"startOffset":2269605,"endOffset":2269691,"count":0}],"isBlockCoverage":false},{"functionName":"traceIfEnabled","ranges":[{"startOffset":2269694,"endOffset":2269833,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":2269836,"endOffset":2270080,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/moduleNameResolver.ts","ranges":[{"startOffset":2270246,"endOffset":2271596,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2270440,"endOffset":2271468,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleInstanceState","ranges":[{"startOffset":2271634,"endOffset":2271956,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceStateCached","ranges":[{"startOffset":2271959,"endOffset":2272328,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceStateWorker","ranges":[{"startOffset":2272331,"endOffset":2274489,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceStateForAliasTarget","ranges":[{"startOffset":2274492,"endOffset":2275654,"count":0}],"isBlockCoverage":false},{"functionName":"initFlowNode","ranges":[{"startOffset":2275657,"endOffset":2275748,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile","ranges":[{"startOffset":2275751,"endOffset":2276078,"count":0}],"isBlockCoverage":false},{"functionName":"createBinder","ranges":[{"startOffset":2276081,"endOffset":2389297,"count":1}],"isBlockCoverage":true},{"functionName":"createDiagnosticForNode2","ranges":[{"startOffset":2276981,"endOffset":2277155,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile2","ranges":[{"startOffset":2277160,"endOffset":2278719,"count":0}],"isBlockCoverage":false},{"functionName":"bindInStrictMode","ranges":[{"startOffset":2278724,"endOffset":2278946,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbol","ranges":[{"startOffset":2278951,"endOffset":2279054,"count":0}],"isBlockCoverage":false},{"functionName":"addDeclarationToSymbol","ranges":[{"startOffset":2279059,"endOffset":2279890,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationName","ranges":[{"startOffset":2279895,"endOffset":2282842,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayName","ranges":[{"startOffset":2282847,"endOffset":2283035,"count":0}],"isBlockCoverage":false},{"functionName":"declareSymbol","ranges":[{"startOffset":2283040,"endOffset":2287441,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleMember","ranges":[{"startOffset":2287446,"endOffset":2289405,"count":0}],"isBlockCoverage":false},{"functionName":"jsdocTreatAsExported","ranges":[{"startOffset":2289410,"endOffset":2290049,"count":0}],"isBlockCoverage":false},{"functionName":"bindContainer","ranges":[{"startOffset":2290054,"endOffset":2294111,"count":0}],"isBlockCoverage":false},{"functionName":"bindEachFunctionsFirst","ranges":[{"startOffset":2294116,"endOffset":2294344,"count":0}],"isBlockCoverage":false},{"functionName":"bindEach","ranges":[{"startOffset":2294349,"endOffset":2294492,"count":0}],"isBlockCoverage":false},{"functionName":"bindEachChild","ranges":[{"startOffset":2294497,"endOffset":2294575,"count":0}],"isBlockCoverage":false},{"functionName":"bindChildren","ranges":[{"startOffset":2294580,"endOffset":2298589,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowingExpression","ranges":[{"startOffset":2298594,"endOffset":2299605,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowableReference","ranges":[{"startOffset":2299610,"endOffset":2300202,"count":0}],"isBlockCoverage":false},{"functionName":"containsNarrowableReference","ranges":[{"startOffset":2300207,"endOffset":2300372,"count":0}],"isBlockCoverage":false},{"functionName":"hasNarrowableArgument","ranges":[{"startOffset":2300377,"endOffset":2300789,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowingTypeofOperands","ranges":[{"startOffset":2300794,"endOffset":2300961,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowingBinaryExpression","ranges":[{"startOffset":2300966,"endOffset":2302097,"count":0}],"isBlockCoverage":false},{"functionName":"isNarrowableOperand","ranges":[{"startOffset":2302102,"endOffset":2302612,"count":0}],"isBlockCoverage":false},{"functionName":"createBranchLabel","ranges":[{"startOffset":2302617,"endOffset":2302733,"count":0}],"isBlockCoverage":false},{"functionName":"createLoopLabel","ranges":[{"startOffset":2302738,"endOffset":2302850,"count":0}],"isBlockCoverage":false},{"functionName":"createReduceLabel","ranges":[{"startOffset":2302855,"endOffset":2303017,"count":0}],"isBlockCoverage":false},{"functionName":"setFlowNodeReferenced","ranges":[{"startOffset":2303022,"endOffset":2303166,"count":0}],"isBlockCoverage":false},{"functionName":"addAntecedent","ranges":[{"startOffset":2303171,"endOffset":2303444,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowCondition","ranges":[{"startOffset":2303449,"endOffset":2304206,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowSwitchClause","ranges":[{"startOffset":2304211,"endOffset":2304459,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowMutation","ranges":[{"startOffset":2304464,"endOffset":2304749,"count":0}],"isBlockCoverage":false},{"functionName":"createFlowCall","ranges":[{"startOffset":2304754,"endOffset":2304916,"count":0}],"isBlockCoverage":false},{"functionName":"finishFlowLabel","ranges":[{"startOffset":2304921,"endOffset":2305165,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementCondition","ranges":[{"startOffset":2305170,"endOffset":2305591,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":2305596,"endOffset":2305999,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalAssignmentExpression","ranges":[{"startOffset":2306004,"endOffset":2306135,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelLogicalExpression","ranges":[{"startOffset":2306140,"endOffset":2306524,"count":0}],"isBlockCoverage":false},{"functionName":"doWithConditionalBranches","ranges":[{"startOffset":2306529,"endOffset":2306898,"count":0}],"isBlockCoverage":false},{"functionName":"bindCondition","ranges":[{"startOffset":2306903,"endOffset":2307393,"count":0}],"isBlockCoverage":false},{"functionName":"bindIterativeStatement","ranges":[{"startOffset":2307398,"endOffset":2307776,"count":0}],"isBlockCoverage":false},{"functionName":"setContinueTarget","ranges":[{"startOffset":2307781,"endOffset":2308061,"count":0}],"isBlockCoverage":false},{"functionName":"bindWhileStatement","ranges":[{"startOffset":2308066,"endOffset":2308659,"count":0}],"isBlockCoverage":false},{"functionName":"bindDoStatement","ranges":[{"startOffset":2308664,"endOffset":2309249,"count":0}],"isBlockCoverage":false},{"functionName":"bindForStatement","ranges":[{"startOffset":2309254,"endOffset":2309895,"count":0}],"isBlockCoverage":false},{"functionName":"bindForInOrForOfStatement","ranges":[{"startOffset":2309900,"endOffset":2310660,"count":0}],"isBlockCoverage":false},{"functionName":"bindIfStatement","ranges":[{"startOffset":2310665,"endOffset":2311204,"count":0}],"isBlockCoverage":false},{"functionName":"bindReturnOrThrow","ranges":[{"startOffset":2311209,"endOffset":2311514,"count":0}],"isBlockCoverage":false},{"functionName":"findActiveLabel","ranges":[{"startOffset":2311519,"endOffset":2311724,"count":0}],"isBlockCoverage":false},{"functionName":"bindBreakOrContinueFlow","ranges":[{"startOffset":2311729,"endOffset":2312016,"count":0}],"isBlockCoverage":false},{"functionName":"bindBreakOrContinueStatement","ranges":[{"startOffset":2312021,"endOffset":2312466,"count":0}],"isBlockCoverage":false},{"functionName":"bindTryStatement","ranges":[{"startOffset":2312471,"endOffset":2314490,"count":0}],"isBlockCoverage":false},{"functionName":"bindSwitchStatement","ranges":[{"startOffset":2314495,"endOffset":2315337,"count":0}],"isBlockCoverage":false},{"functionName":"bindCaseBlock","ranges":[{"startOffset":2315342,"endOffset":2316512,"count":0}],"isBlockCoverage":false},{"functionName":"bindCaseClause","ranges":[{"startOffset":2316517,"endOffset":2316735,"count":0}],"isBlockCoverage":false},{"functionName":"bindExpressionStatement","ranges":[{"startOffset":2316740,"endOffset":2316869,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBindExpressionFlowIfCall","ranges":[{"startOffset":2316874,"endOffset":2317178,"count":0}],"isBlockCoverage":false},{"functionName":"bindLabeledStatement","ranges":[{"startOffset":2317183,"endOffset":2317871,"count":0}],"isBlockCoverage":false},{"functionName":"bindDestructuringTargetFlow","ranges":[{"startOffset":2317876,"endOffset":2318140,"count":0}],"isBlockCoverage":false},{"functionName":"bindAssignmentTargetFlow","ranges":[{"startOffset":2318145,"endOffset":2319099,"count":0}],"isBlockCoverage":false},{"functionName":"bindLogicalLikeExpression","ranges":[{"startOffset":2319104,"endOffset":2320084,"count":0}],"isBlockCoverage":false},{"functionName":"bindPrefixUnaryExpressionFlow","ranges":[{"startOffset":2320089,"endOffset":2320676,"count":0}],"isBlockCoverage":false},{"functionName":"bindPostfixUnaryExpressionFlow","ranges":[{"startOffset":2320681,"endOffset":2320917,"count":0}],"isBlockCoverage":false},{"functionName":"bindDestructuringAssignmentFlow","ranges":[{"startOffset":2320922,"endOffset":2321391,"count":0}],"isBlockCoverage":false},{"functionName":"createBindBinaryExpressionFlow","ranges":[{"startOffset":2321396,"endOffset":2324742,"count":1}],"isBlockCoverage":true},{"functionName":"onEnter","ranges":[{"startOffset":2321625,"endOffset":2322844,"count":0}],"isBlockCoverage":false},{"functionName":"onLeft","ranges":[{"startOffset":2322851,"endOffset":2323134,"count":0}],"isBlockCoverage":false},{"functionName":"onOperator","ranges":[{"startOffset":2323141,"endOffset":2323267,"count":0}],"isBlockCoverage":false},{"functionName":"onRight","ranges":[{"startOffset":2323274,"endOffset":2323561,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2323568,"endOffset":2324557,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind2","ranges":[{"startOffset":2324564,"endOffset":2324736,"count":0}],"isBlockCoverage":false},{"functionName":"bindDeleteExpressionFlow","ranges":[{"startOffset":2324747,"endOffset":2324953,"count":0}],"isBlockCoverage":false},{"functionName":"bindConditionalExpressionFlow","ranges":[{"startOffset":2324958,"endOffset":2325597,"count":0}],"isBlockCoverage":false},{"functionName":"bindInitializedVariableFlow","ranges":[{"startOffset":2325602,"endOffset":2325962,"count":0}],"isBlockCoverage":false},{"functionName":"bindVariableDeclarationFlow","ranges":[{"startOffset":2325967,"endOffset":2326169,"count":0}],"isBlockCoverage":false},{"functionName":"bindBindingElementFlow","ranges":[{"startOffset":2326174,"endOffset":2326347,"count":0}],"isBlockCoverage":false},{"functionName":"bindParameterFlow","ranges":[{"startOffset":2326352,"endOffset":2326576,"count":0}],"isBlockCoverage":false},{"functionName":"bindInitializer","ranges":[{"startOffset":2326581,"endOffset":2326990,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDocTypeAlias","ranges":[{"startOffset":2326995,"endOffset":2327369,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDocClassTag","ranges":[{"startOffset":2327374,"endOffset":2327631,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalExpression","ranges":[{"startOffset":2327636,"endOffset":2328054,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalChainRest","ranges":[{"startOffset":2328059,"endOffset":2328586,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalChain","ranges":[{"startOffset":2328591,"endOffset":2329259,"count":0}],"isBlockCoverage":false},{"functionName":"bindOptionalChainFlow","ranges":[{"startOffset":2329264,"endOffset":2329642,"count":0}],"isBlockCoverage":false},{"functionName":"bindNonNullExpressionFlow","ranges":[{"startOffset":2329647,"endOffset":2329819,"count":0}],"isBlockCoverage":false},{"functionName":"bindAccessExpressionFlow","ranges":[{"startOffset":2329824,"endOffset":2329995,"count":0}],"isBlockCoverage":false},{"functionName":"bindCallExpressionFlow","ranges":[{"startOffset":2330000,"endOffset":2330975,"count":0}],"isBlockCoverage":false},{"functionName":"addToContainerChain","ranges":[{"startOffset":2330980,"endOffset":2331129,"count":0}],"isBlockCoverage":false},{"functionName":"declareSymbolAndAddToSymbolTable","ranges":[{"startOffset":2331134,"endOffset":2333109,"count":0}],"isBlockCoverage":false},{"functionName":"declareClassMember","ranges":[{"startOffset":2333114,"endOffset":2333403,"count":0}],"isBlockCoverage":false},{"functionName":"declareSourceFileMember","ranges":[{"startOffset":2333408,"endOffset":2333716,"count":0}],"isBlockCoverage":false},{"functionName":"hasExportDeclarations","ranges":[{"startOffset":2333721,"endOffset":2333948,"count":0}],"isBlockCoverage":false},{"functionName":"setExportContextFlag","ranges":[{"startOffset":2333953,"endOffset":2334195,"count":0}],"isBlockCoverage":false},{"functionName":"bindModuleDeclaration","ranges":[{"startOffset":2334200,"endOffset":2335615,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleSymbol","ranges":[{"startOffset":2335620,"endOffset":2336022,"count":0}],"isBlockCoverage":false},{"functionName":"bindFunctionOrConstructorType","ranges":[{"startOffset":2336027,"endOffset":2336522,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectLiteralExpression","ranges":[{"startOffset":2336527,"endOffset":2336673,"count":0}],"isBlockCoverage":false},{"functionName":"bindJsxAttributes","ranges":[{"startOffset":2336678,"endOffset":2336828,"count":0}],"isBlockCoverage":false},{"functionName":"bindJsxAttribute","ranges":[{"startOffset":2336833,"endOffset":2336983,"count":0}],"isBlockCoverage":false},{"functionName":"bindAnonymousDeclaration","ranges":[{"startOffset":2336988,"endOffset":2337311,"count":0}],"isBlockCoverage":false},{"functionName":"bindBlockScopedDeclaration","ranges":[{"startOffset":2337316,"endOffset":2338203,"count":0}],"isBlockCoverage":false},{"functionName":"delayedBindJSDocTypedefTag","ranges":[{"startOffset":2338208,"endOffset":2341329,"count":0}],"isBlockCoverage":false},{"functionName":"checkContextualIdentifier","ranges":[{"startOffset":2341334,"endOffset":2342845,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictModeIdentifierMessage","ranges":[{"startOffset":2342850,"endOffset":2343341,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrivateIdentifier","ranges":[{"startOffset":2343346,"endOffset":2343647,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeBinaryExpression","ranges":[{"startOffset":2343652,"endOffset":2343885,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeCatchClause","ranges":[{"startOffset":2343890,"endOffset":2344078,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeDeleteExpression","ranges":[{"startOffset":2344083,"endOffset":2344441,"count":0}],"isBlockCoverage":false},{"functionName":"isEvalOrArgumentsIdentifier","ranges":[{"startOffset":2344446,"endOffset":2344598,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeEvalOrArguments","ranges":[{"startOffset":2344603,"endOffset":2345046,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictModeEvalOrArgumentsMessage","ranges":[{"startOffset":2345051,"endOffset":2345627,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeFunctionName","ranges":[{"startOffset":2345632,"endOffset":2345773,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictModeBlockScopeFunctionDeclarationMessage","ranges":[{"startOffset":2345778,"endOffset":2346399,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeFunctionDeclaration","ranges":[{"startOffset":2346404,"endOffset":2346937,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModePostfixUnaryExpression","ranges":[{"startOffset":2346942,"endOffset":2347096,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModePrefixUnaryExpression","ranges":[{"startOffset":2347101,"endOffset":2347368,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeWithStatement","ranges":[{"startOffset":2347373,"endOffset":2347551,"count":0}],"isBlockCoverage":false},{"functionName":"checkStrictModeLabeledStatement","ranges":[{"startOffset":2347556,"endOffset":2347879,"count":0}],"isBlockCoverage":false},{"functionName":"errorOnFirstToken","ranges":[{"startOffset":2347884,"endOffset":2348107,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrSuggestionOnNode","ranges":[{"startOffset":2348112,"endOffset":2348238,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrSuggestionOnRange","ranges":[{"startOffset":2348243,"endOffset":2348445,"count":0}],"isBlockCoverage":false},{"functionName":"addErrorOrSuggestionDiagnostic","ranges":[{"startOffset":2348450,"endOffset":2348824,"count":0}],"isBlockCoverage":false},{"functionName":"bind","ranges":[{"startOffset":2348829,"endOffset":2349628,"count":0}],"isBlockCoverage":false},{"functionName":"bindJSDoc","ranges":[{"startOffset":2349633,"endOffset":2350036,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrictModeStatementList","ranges":[{"startOffset":2350041,"endOffset":2350393,"count":0}],"isBlockCoverage":false},{"functionName":"isUseStrictPrologueDirective","ranges":[{"startOffset":2350398,"endOffset":2350606,"count":0}],"isBlockCoverage":false},{"functionName":"bindWorker","ranges":[{"startOffset":2350611,"endOffset":2360937,"count":0}],"isBlockCoverage":false},{"functionName":"bindPropertyWorker","ranges":[{"startOffset":2360942,"endOffset":2361366,"count":0}],"isBlockCoverage":false},{"functionName":"bindAnonymousTypeWorker","ranges":[{"startOffset":2361371,"endOffset":2361507,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFileIfExternalModule","ranges":[{"startOffset":2361512,"endOffset":2361943,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFileAsExternalModule","ranges":[{"startOffset":2361948,"endOffset":2362101,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportAssignment","ranges":[{"startOffset":2362106,"endOffset":2362611,"count":0}],"isBlockCoverage":false},{"functionName":"bindNamespaceExportDeclaration","ranges":[{"startOffset":2362616,"endOffset":2363470,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportDeclaration","ranges":[{"startOffset":2363475,"endOffset":2364068,"count":0}],"isBlockCoverage":false},{"functionName":"bindImportClause","ranges":[{"startOffset":2364073,"endOffset":2364241,"count":0}],"isBlockCoverage":false},{"functionName":"setCommonJsModuleIndicator","ranges":[{"startOffset":2364246,"endOffset":2364622,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectDefinePropertyExport","ranges":[{"startOffset":2364627,"endOffset":2365240,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportsPropertyAssignment","ranges":[{"startOffset":2365245,"endOffset":2366096,"count":0}],"isBlockCoverage":false},{"functionName":"bindModuleExportsAssignment","ranges":[{"startOffset":2366101,"endOffset":2367009,"count":0}],"isBlockCoverage":false},{"functionName":"bindExportAssignedObjectMemberAlias","ranges":[{"startOffset":2367014,"endOffset":2367196,"count":0}],"isBlockCoverage":false},{"functionName":"bindThisPropertyAssignment","ranges":[{"startOffset":2367201,"endOffset":2370464,"count":0}],"isBlockCoverage":false},{"functionName":"bindDynamicallyNamedThisPropertyAssignment","ranges":[{"startOffset":2370469,"endOffset":2370835,"count":0}],"isBlockCoverage":false},{"functionName":"addLateBoundAssignmentDeclarationToSymbol","ranges":[{"startOffset":2370840,"endOffset":2371083,"count":0}],"isBlockCoverage":false},{"functionName":"bindSpecialPropertyDeclaration","ranges":[{"startOffset":2371088,"endOffset":2371547,"count":0}],"isBlockCoverage":false},{"functionName":"bindPrototypeAssignment","ranges":[{"startOffset":2371552,"endOffset":2371844,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectDefinePrototypeProperty","ranges":[{"startOffset":2371849,"endOffset":2372311,"count":0}],"isBlockCoverage":false},{"functionName":"bindPrototypePropertyAssignment","ranges":[{"startOffset":2372316,"endOffset":2372776,"count":0}],"isBlockCoverage":false},{"functionName":"bindObjectDefinePropertyAssignment","ranges":[{"startOffset":2372781,"endOffset":2373364,"count":0}],"isBlockCoverage":false},{"functionName":"bindSpecialPropertyAssignment","ranges":[{"startOffset":2373369,"endOffset":2374776,"count":0}],"isBlockCoverage":false},{"functionName":"bindStaticPropertyAssignment","ranges":[{"startOffset":2374781,"endOffset":2375081,"count":0}],"isBlockCoverage":false},{"functionName":"bindPotentiallyMissingNamespaces","ranges":[{"startOffset":2375086,"endOffset":2376260,"count":0}],"isBlockCoverage":false},{"functionName":"bindPotentiallyNewExpandoMemberToNamespace","ranges":[{"startOffset":2376265,"endOffset":2377927,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelNamespaceAssignment","ranges":[{"startOffset":2377932,"endOffset":2378201,"count":0}],"isBlockCoverage":false},{"functionName":"bindPropertyAssignment","ranges":[{"startOffset":2378206,"endOffset":2378771,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoSymbol","ranges":[{"startOffset":2378776,"endOffset":2379784,"count":0}],"isBlockCoverage":false},{"functionName":"getParentOfBinaryExpression","ranges":[{"startOffset":2379789,"endOffset":2379949,"count":0}],"isBlockCoverage":false},{"functionName":"lookupSymbolForPropertyAccess","ranges":[{"startOffset":2379954,"endOffset":2380333,"count":0}],"isBlockCoverage":false},{"functionName":"forEachIdentifierInEntityName","ranges":[{"startOffset":2380338,"endOffset":2380942,"count":0}],"isBlockCoverage":false},{"functionName":"bindCallExpression","ranges":[{"startOffset":2380947,"endOffset":2381180,"count":0}],"isBlockCoverage":false},{"functionName":"bindClassLikeDeclaration","ranges":[{"startOffset":2381185,"endOffset":2382224,"count":0}],"isBlockCoverage":false},{"functionName":"bindEnumDeclaration","ranges":[{"startOffset":2382229,"endOffset":2382483,"count":0}],"isBlockCoverage":false},{"functionName":"bindVariableDeclarationOrBindingElement","ranges":[{"startOffset":2382488,"endOffset":2383578,"count":0}],"isBlockCoverage":false},{"functionName":"bindParameter","ranges":[{"startOffset":2383583,"endOffset":2384490,"count":0}],"isBlockCoverage":false},{"functionName":"bindFunctionDeclaration","ranges":[{"startOffset":2384495,"endOffset":2385058,"count":0}],"isBlockCoverage":false},{"functionName":"bindFunctionExpression","ranges":[{"startOffset":2385063,"endOffset":2385574,"count":0}],"isBlockCoverage":false},{"functionName":"bindPropertyOrMethodOrAccessor","ranges":[{"startOffset":2385579,"endOffset":2386132,"count":0}],"isBlockCoverage":false},{"functionName":"getInferTypeContainer","ranges":[{"startOffset":2386137,"endOffset":2386357,"count":0}],"isBlockCoverage":false},{"functionName":"bindTypeParameter","ranges":[{"startOffset":2386362,"endOffset":2387796,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReportErrorOnModuleDeclaration","ranges":[{"startOffset":2387801,"endOffset":2388051,"count":0}],"isBlockCoverage":false},{"functionName":"checkUnreachable","ranges":[{"startOffset":2388056,"endOffset":2389293,"count":0}],"isBlockCoverage":false},{"functionName":"eachUnreachableRange","ranges":[{"startOffset":2389300,"endOffset":2389674,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutableStatement","ranges":[{"startOffset":2389677,"endOffset":2390003,"count":0}],"isBlockCoverage":false},{"functionName":"isPurelyTypeDeclaration","ranges":[{"startOffset":2390006,"endOffset":2390422,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsOrModuleExportsOrAlias","ranges":[{"startOffset":2390425,"endOffset":2391327,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerFlags","ranges":[{"startOffset":2391330,"endOffset":2393884,"count":0}],"isBlockCoverage":false},{"functionName":"lookupSymbolForName","ranges":[{"startOffset":2393887,"endOffset":2394481,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/binder.ts","ranges":[{"startOffset":2394565,"endOffset":2396084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2394706,"endOffset":2395053,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2395123,"endOffset":2396007,"count":1}],"isBlockCoverage":true},{"functionName":"createGetSymbolWalker","ranges":[{"startOffset":2396128,"endOffset":2401259,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/symbolWalker.ts","ranges":[{"startOffset":2401298,"endOffset":2401376,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleSpecifierPreferences","ranges":[{"startOffset":2401424,"endOffset":2404354,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleSpecifier","ranges":[{"startOffset":2404357,"endOffset":2404812,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifier","ranges":[{"startOffset":2404815,"endOffset":2405149,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulesPackageName","ranges":[{"startOffset":2405152,"endOffset":2405717,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierWorker","ranges":[{"startOffset":2405720,"endOffset":2406466,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifiersFromCache","ranges":[{"startOffset":2406469,"endOffset":2406743,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifiersFromCacheWorker","ranges":[{"startOffset":2406746,"endOffset":2407361,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiers","ranges":[{"startOffset":2407364,"endOffset":2407736,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiersWithCacheInfo","ranges":[{"startOffset":2407739,"endOffset":2409056,"count":0}],"isBlockCoverage":false},{"functionName":"computeModuleSpecifiers","ranges":[{"startOffset":2409059,"endOffset":2412243,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":2412246,"endOffset":2412787,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalModuleSpecifier","ranges":[{"startOffset":2412790,"endOffset":2416216,"count":0}],"isBlockCoverage":false},{"functionName":"packageJsonPathsAreEqual","ranges":[{"startOffset":2416219,"endOffset":2416433,"count":0}],"isBlockCoverage":false},{"functionName":"countPathComponents","ranges":[{"startOffset":2416436,"endOffset":2416658,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsByRedirectAndNumberOfDirectorySeparators","ranges":[{"startOffset":2416661,"endOffset":2416844,"count":0}],"isBlockCoverage":false},{"functionName":"getNearestAncestorDirectoryWithPackageJson","ranges":[{"startOffset":2416847,"endOffset":2417220,"count":0}],"isBlockCoverage":false},{"functionName":"forEachFileNameOfModule","ranges":[{"startOffset":2417223,"endOffset":2419661,"count":0}],"isBlockCoverage":false},{"functionName":"getAllModulePaths","ranges":[{"startOffset":2419664,"endOffset":2420527,"count":0}],"isBlockCoverage":false},{"functionName":"getAllModulePathsWorker","ranges":[{"startOffset":2420530,"endOffset":2422430,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromAmbientModule","ranges":[{"startOffset":2422433,"endOffset":2424296,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromPaths","ranges":[{"startOffset":2424299,"endOffset":2425923,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromExportsOrImports","ranges":[{"startOffset":2425926,"endOffset":2431620,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromExports","ranges":[{"startOffset":2431623,"endOffset":2432714,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromPackageJsonImports","ranges":[{"startOffset":2432717,"endOffset":2434420,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromRootDirs","ranges":[{"startOffset":2434423,"endOffset":2435293,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameAsNodeModule","ranges":[{"startOffset":2435296,"endOffset":2441688,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetAnyFileFromPath","ranges":[{"startOffset":2441691,"endOffset":2442119,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsRelativeToRootDirs","ranges":[{"startOffset":2442122,"endOffset":2442453,"count":0}],"isBlockCoverage":false},{"functionName":"processEnding","ranges":[{"startOffset":2442456,"endOffset":2444399,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetRealFileNameForNonJsDeclarationFileName","ranges":[{"startOffset":2444402,"endOffset":2444877,"count":0}],"isBlockCoverage":false},{"functionName":"getJSExtensionForFile","ranges":[{"startOffset":2444880,"endOffset":2445089,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSExtensionForFile","ranges":[{"startOffset":2445092,"endOffset":2445820,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathIfInSameVolume","ranges":[{"startOffset":2445823,"endOffset":2446166,"count":0}],"isBlockCoverage":false},{"functionName":"isPathRelativeToParent","ranges":[{"startOffset":2446169,"endOffset":2446247,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/moduleSpecifiers.ts","ranges":[{"startOffset":2446316,"endOffset":2446885,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2446437,"endOffset":2446851,"count":1}],"isBlockCoverage":true},{"functionName":"RelativePreference","ranges":[{"startOffset":2447052,"endOffset":2447076,"count":0}],"isBlockCoverage":false},{"functionName":"countPathComponents","ranges":[{"startOffset":2447103,"endOffset":2447128,"count":0}],"isBlockCoverage":false},{"functionName":"forEachFileNameOfModule","ranges":[{"startOffset":2447159,"endOffset":2447188,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifier","ranges":[{"startOffset":2447214,"endOffset":2447238,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierPreferences","ranges":[{"startOffset":2447275,"endOffset":2447310,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiers","ranges":[{"startOffset":2447337,"endOffset":2447362,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifiersWithCacheInfo","ranges":[{"startOffset":2447402,"endOffset":2447440,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulesPackageName","ranges":[{"startOffset":2447473,"endOffset":2447504,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSExtensionForFile","ranges":[{"startOffset":2447536,"endOffset":2447566,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifiersFromCache","ranges":[{"startOffset":2447605,"endOffset":2447642,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetRealFileNameForNonJsDeclarationFileName","ranges":[{"startOffset":2447695,"endOffset":2447746,"count":0}],"isBlockCoverage":false},{"functionName":"updateModuleSpecifier","ranges":[{"startOffset":2447775,"endOffset":2447802,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/_namespaces/ts.moduleSpecifiers.ts","ranges":[{"startOffset":2447854,"endOffset":2447964,"count":1}],"isBlockCoverage":true},{"functionName":"NodeLinks","ranges":[{"startOffset":2448003,"endOffset":2448060,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeId","ranges":[{"startOffset":2448063,"endOffset":2448187,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolId","ranges":[{"startOffset":2448190,"endOffset":2448328,"count":0}],"isBlockCoverage":false},{"functionName":"isInstantiatedModule","ranges":[{"startOffset":2448331,"endOffset":2448558,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeChecker","ranges":[{"startOffset":2448561,"endOffset":4520240,"count":0}],"isBlockCoverage":false},{"functionName":"isNotAccessor","ranges":[{"startOffset":4520243,"endOffset":4520321,"count":0}],"isBlockCoverage":false},{"functionName":"isNotOverload","ranges":[{"startOffset":4520324,"endOffset":4520502,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOrImportPropertyName","ranges":[{"startOffset":4520505,"endOffset":4520767,"count":0}],"isBlockCoverage":false},{"functionName":"getIterationTypesKeyFromIterationTypeKind","ranges":[{"startOffset":4520770,"endOffset":4521028,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasRestParameter","ranges":[{"startOffset":4521031,"endOffset":4521125,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasLiteralTypes","ranges":[{"startOffset":4521128,"endOffset":4521220,"count":0}],"isBlockCoverage":false},{"functionName":"createBasicNodeBuilderModuleSpecifierResolutionHost","ranges":[{"startOffset":4521223,"endOffset":4522239,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/checker.ts","ranges":[{"startOffset":4522510,"endOffset":4536116,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4522838,"endOffset":4529031,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4529494,"endOffset":4530131,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4530195,"endOffset":4530885,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4531285,"endOffset":4531917,"count":1}],"isBlockCoverage":true},{"functionName":"_SymbolTrackerImpl","ranges":[{"startOffset":4532010,"endOffset":4532525,"count":0}],"isBlockCoverage":false},{"functionName":"trackSymbol","ranges":[{"startOffset":4532534,"endOffset":4533106,"count":0}],"isBlockCoverage":false},{"functionName":"reportInaccessibleThisError","ranges":[{"startOffset":4533115,"endOffset":4533366,"count":0}],"isBlockCoverage":false},{"functionName":"reportPrivateInBaseOfClassExpression","ranges":[{"startOffset":4533375,"endOffset":4533677,"count":0}],"isBlockCoverage":false},{"functionName":"reportInaccessibleUniqueSymbolError","ranges":[{"startOffset":4533686,"endOffset":4533961,"count":0}],"isBlockCoverage":false},{"functionName":"reportCyclicStructureError","ranges":[{"startOffset":4533970,"endOffset":4534218,"count":0}],"isBlockCoverage":false},{"functionName":"reportLikelyUnsafeImportRequiredError","ranges":[{"startOffset":4534227,"endOffset":4534526,"count":0}],"isBlockCoverage":false},{"functionName":"reportTruncationError","ranges":[{"startOffset":4534535,"endOffset":4534768,"count":0}],"isBlockCoverage":false},{"functionName":"trackReferencedAmbientModule","ranges":[{"startOffset":4534777,"endOffset":4535055,"count":0}],"isBlockCoverage":false},{"functionName":"trackExternalModuleSymbolOfImportTypeNode","ranges":[{"startOffset":4535064,"endOffset":4535369,"count":0}],"isBlockCoverage":false},{"functionName":"reportNonlocalAugmentation","ranges":[{"startOffset":4535378,"endOffset":4535718,"count":0}],"isBlockCoverage":false},{"functionName":"reportNonSerializableProperty","ranges":[{"startOffset":4535727,"endOffset":4536008,"count":0}],"isBlockCoverage":false},{"functionName":"onDiagnosticReported","ranges":[{"startOffset":4536017,"endOffset":4536101,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode","ranges":[{"startOffset":4536161,"endOffset":4536577,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes2","ranges":[{"startOffset":4536580,"endOffset":4537463,"count":0}],"isBlockCoverage":false},{"functionName":"visitArray","ranges":[{"startOffset":4537466,"endOffset":4537836,"count":0}],"isBlockCoverage":false},{"functionName":"visitArrayWorker","ranges":[{"startOffset":4537839,"endOffset":4538834,"count":0}],"isBlockCoverage":false},{"functionName":"visitLexicalEnvironment","ranges":[{"startOffset":4538837,"endOffset":4539246,"count":0}],"isBlockCoverage":false},{"functionName":"visitParameterList","ranges":[{"startOffset":4539249,"endOffset":4539915,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentsIfNeeded","ranges":[{"startOffset":4539918,"endOffset":4540478,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentIfNeeded","ranges":[{"startOffset":4540481,"endOffset":4540835,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentForBindingPattern","ranges":[{"startOffset":4540838,"endOffset":4542087,"count":0}],"isBlockCoverage":false},{"functionName":"addDefaultValueAssignmentForInitializer","ranges":[{"startOffset":4542090,"endOffset":4543393,"count":0}],"isBlockCoverage":false},{"functionName":"visitFunctionBody","ranges":[{"startOffset":4543396,"endOffset":4544013,"count":0}],"isBlockCoverage":false},{"functionName":"visitIterationBody","ranges":[{"startOffset":4544016,"endOffset":4544597,"count":0}],"isBlockCoverage":false},{"functionName":"visitCommaListElements","ranges":[{"startOffset":4544600,"endOffset":4545043,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChild","ranges":[{"startOffset":4545046,"endOffset":4545398,"count":0}],"isBlockCoverage":false},{"functionName":"extractSingleNode","ranges":[{"startOffset":4545401,"endOffset":4545551,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/visitorPublic.ts","ranges":[{"startOffset":4545618,"endOffset":4606011,"count":1}],"isBlockCoverage":true},{"functionName":"visitEachChildOfQualifiedName","ranges":[{"startOffset":4545757,"endOffset":4546117,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfComputedPropertyName","ranges":[{"startOffset":4546161,"endOffset":4546461,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeParameterDeclaration","ranges":[{"startOffset":4546528,"endOffset":4547015,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfParameterDeclaration","ranges":[{"startOffset":4547048,"endOffset":4547758,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDecorator","ranges":[{"startOffset":4547791,"endOffset":4548069,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertySignature","ranges":[{"startOffset":4548135,"endOffset":4548655,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertyDeclaration","ranges":[{"startOffset":4548698,"endOffset":4549451,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMethodSignature","ranges":[{"startOffset":4549490,"endOffset":4550155,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMethodDeclaration","ranges":[{"startOffset":4550196,"endOffset":4551070,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConstructorDeclaration","ranges":[{"startOffset":4551105,"endOffset":4551544,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfGetAccessorDeclaration","ranges":[{"startOffset":4551579,"endOffset":4552156,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSetAccessorDeclaration","ranges":[{"startOffset":4552191,"endOffset":4552711,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfClassStaticBlockDeclaration","ranges":[{"startOffset":4552762,"endOffset":4553156,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCallSignatureDeclaration","ranges":[{"startOffset":4553193,"endOffset":4553610,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConstructSignatureDeclaration","ranges":[{"startOffset":4553652,"endOffset":4554079,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIndexSignatureDeclaration","ranges":[{"startOffset":4554117,"endOffset":4554539,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypePredicateNode","ranges":[{"startOffset":4554593,"endOffset":4555035,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeReferenceNode","ranges":[{"startOffset":4555072,"endOffset":4555430,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfFunctionTypeNode","ranges":[{"startOffset":4555466,"endOffset":4555898,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConstructorTypeNode","ranges":[{"startOffset":4555937,"endOffset":4556438,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeQueryNode","ranges":[{"startOffset":4556471,"endOffset":4556821,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeLiteralNode","ranges":[{"startOffset":4556856,"endOffset":4557125,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrayTypeNode","ranges":[{"startOffset":4557158,"endOffset":4557443,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTupleTypeNode","ranges":[{"startOffset":4557476,"endOffset":4557739,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfOptionalTypeNode","ranges":[{"startOffset":4557775,"endOffset":4558059,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfRestTypeNode","ranges":[{"startOffset":4558091,"endOffset":4558367,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfUnionTypeNode","ranges":[{"startOffset":4558400,"endOffset":4558660,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIntersectionTypeNode","ranges":[{"startOffset":4558700,"endOffset":4558974,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConditionalTypeNode","ranges":[{"startOffset":4559013,"endOffset":4559555,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfInferTypeNode","ranges":[{"startOffset":4559588,"endOffset":4559891,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportTypeNode","ranges":[{"startOffset":4559925,"endOffset":4560437,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportTypeAssertionContainer","ranges":[{"startOffset":4560489,"endOffset":4560837,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamedTupleMember","ranges":[{"startOffset":4560877,"endOffset":4561466,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfParenthesizedType","ranges":[{"startOffset":4561507,"endOffset":4561793,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeOperatorNode","ranges":[{"startOffset":4561829,"endOffset":4562113,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIndexedAccessType","ranges":[{"startOffset":4562154,"endOffset":4562532,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMappedType","ranges":[{"startOffset":4562566,"endOffset":4563304,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfLiteralTypeNode","ranges":[{"startOffset":4563339,"endOffset":4563634,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateLiteralType","ranges":[{"startOffset":4563677,"endOffset":4564052,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateLiteralTypeSpan","ranges":[{"startOffset":4564099,"endOffset":4564497,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfObjectBindingPattern","ranges":[{"startOffset":4564569,"endOffset":4564852,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrayBindingPattern","ranges":[{"startOffset":4564895,"endOffset":4565181,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBindingElement","ranges":[{"startOffset":4565219,"endOffset":4565751,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrayLiteralExpression","ranges":[{"startOffset":4565819,"endOffset":4566102,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfObjectLiteralExpression","ranges":[{"startOffset":4566149,"endOffset":4566450,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertyAccessExpression","ranges":[{"startOffset":4566498,"endOffset":4567273,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfElementAccessExpression","ranges":[{"startOffset":4567320,"endOffset":4568119,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCallExpression","ranges":[{"startOffset":4568157,"endOffset":4568997,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNewExpression","ranges":[{"startOffset":4569034,"endOffset":4569451,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTaggedTemplateExpression","ranges":[{"startOffset":4569499,"endOffset":4569954,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeAssertionExpression","ranges":[{"startOffset":4570001,"endOffset":4570374,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfParenthesizedExpression","ranges":[{"startOffset":4570421,"endOffset":4570727,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfFunctionExpression","ranges":[{"startOffset":4570769,"endOffset":4571507,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfArrowFunction","ranges":[{"startOffset":4571544,"endOffset":4572260,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDeleteExpression","ranges":[{"startOffset":4572300,"endOffset":4572592,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeOfExpression","ranges":[{"startOffset":4572632,"endOffset":4572924,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVoidExpression","ranges":[{"startOffset":4572962,"endOffset":4573250,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfAwaitExpression","ranges":[{"startOffset":4573289,"endOffset":4573579,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPrefixUnaryExpression","ranges":[{"startOffset":4573624,"endOffset":4573923,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPostfixUnaryExpression","ranges":[{"startOffset":4573969,"endOffset":4574270,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBinaryExpression","ranges":[{"startOffset":4574310,"endOffset":4574813,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfConditionalExpression","ranges":[{"startOffset":4574858,"endOffset":4575580,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateExpression","ranges":[{"startOffset":4575622,"endOffset":4575984,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfYieldExpression","ranges":[{"startOffset":4576023,"endOffset":4576404,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSpreadElement","ranges":[{"startOffset":4576441,"endOffset":4576727,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfClassExpression","ranges":[{"startOffset":4576766,"endOffset":4577320,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExpressionWithTypeArguments","ranges":[{"startOffset":4577371,"endOffset":4577751,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfAsExpression","ranges":[{"startOffset":4577787,"endOffset":4578148,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSatisfiesExpression","ranges":[{"startOffset":4578191,"endOffset":4578566,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNonNullExpression","ranges":[{"startOffset":4578607,"endOffset":4579077,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfMetaProperty","ranges":[{"startOffset":4579113,"endOffset":4579391,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTemplateSpan","ranges":[{"startOffset":4579443,"endOffset":4579827,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBlock","ranges":[{"startOffset":4579875,"endOffset":4580125,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVariableStatement","ranges":[{"startOffset":4580166,"endOffset":4580544,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExpressionStatement","ranges":[{"startOffset":4580587,"endOffset":4580885,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfIfStatement","ranges":[{"startOffset":4580920,"endOffset":4581414,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDoStatement","ranges":[{"startOffset":4581449,"endOffset":4581810,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfWhileStatement","ranges":[{"startOffset":4581848,"endOffset":4582215,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfForStatement","ranges":[{"startOffset":4582251,"endOffset":4582729,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfForInStatement","ranges":[{"startOffset":4582767,"endOffset":4583224,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfForOfStatement","ranges":[{"startOffset":4583262,"endOffset":4583829,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfContinueStatement","ranges":[{"startOffset":4583870,"endOffset":4584139,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfBreakStatement","ranges":[{"startOffset":4584177,"endOffset":4584440,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfReturnStatement","ranges":[{"startOffset":4584479,"endOffset":4584749,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfWithStatement","ranges":[{"startOffset":4584786,"endOffset":4585184,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSwitchStatement","ranges":[{"startOffset":4585223,"endOffset":4585596,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfLabeledStatement","ranges":[{"startOffset":4585636,"endOffset":4586035,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfThrowStatement","ranges":[{"startOffset":4586073,"endOffset":4586361,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTryStatement","ranges":[{"startOffset":4586397,"endOffset":4586803,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVariableDeclaration","ranges":[{"startOffset":4586846,"endOffset":4587382,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfVariableDeclarationList","ranges":[{"startOffset":4587429,"endOffset":4587727,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfFunctionDeclaration","ranges":[{"startOffset":4587770,"endOffset":4588510,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfClassDeclaration","ranges":[{"startOffset":4588550,"endOffset":4589106,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfInterfaceDeclaration","ranges":[{"startOffset":4589150,"endOffset":4589733,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfTypeAliasDeclaration","ranges":[{"startOffset":4589777,"endOffset":4590298,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfEnumDeclaration","ranges":[{"startOffset":4590337,"endOffset":4590750,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfModuleDeclaration","ranges":[{"startOffset":4590791,"endOffset":4591204,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfModuleBlock","ranges":[{"startOffset":4591239,"endOffset":4591501,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCaseBlock","ranges":[{"startOffset":4591534,"endOffset":4591799,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamespaceExportDeclaration","ranges":[{"startOffset":4591849,"endOffset":4592155,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportEqualsDeclaration","ranges":[{"startOffset":4592202,"endOffset":4592692,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportDeclaration","ranges":[{"startOffset":4592733,"endOffset":4593238,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportAttributes","ranges":[{"startOffset":4593278,"endOffset":4593582,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportAttribute","ranges":[{"startOffset":4593621,"endOffset":4593994,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportClause","ranges":[{"startOffset":4594030,"endOffset":4594394,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamespaceImport","ranges":[{"startOffset":4594433,"endOffset":4594717,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamespaceExport","ranges":[{"startOffset":4594756,"endOffset":4595040,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamedImports","ranges":[{"startOffset":4595076,"endOffset":4595344,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfImportSpecifier","ranges":[{"startOffset":4595383,"endOffset":4595763,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExportAssignment","ranges":[{"startOffset":4595803,"endOffset":4596161,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExportDeclaration","ranges":[{"startOffset":4596202,"endOffset":4596723,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfNamedExports","ranges":[{"startOffset":4596759,"endOffset":4597027,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExportSpecifier","ranges":[{"startOffset":4597066,"endOffset":4597446,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfExternalModuleReference","ranges":[{"startOffset":4597522,"endOffset":4597828,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxElement","ranges":[{"startOffset":4597877,"endOffset":4598325,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxSelfClosingElement","ranges":[{"startOffset":4598370,"endOffset":4598833,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxOpeningElement","ranges":[{"startOffset":4598874,"endOffset":4599329,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxClosingElement","ranges":[{"startOffset":4599370,"endOffset":4599671,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildInJsxNamespacedName2","ranges":[{"startOffset":4599712,"endOffset":4600083,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxFragment","ranges":[{"startOffset":4600118,"endOffset":4600572,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxAttribute","ranges":[{"startOffset":4600608,"endOffset":4600976,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxAttributes","ranges":[{"startOffset":4601013,"endOffset":4601286,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxSpreadAttribute","ranges":[{"startOffset":4601328,"endOffset":4601624,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfJsxExpression","ranges":[{"startOffset":4601661,"endOffset":4601927,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCaseClause","ranges":[{"startOffset":4601980,"endOffset":4602324,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfDefaultClause","ranges":[{"startOffset":4602361,"endOffset":4602627,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfHeritageClause","ranges":[{"startOffset":4602665,"endOffset":4602946,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCatchClause","ranges":[{"startOffset":4602981,"endOffset":4603336,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPropertyAssignment","ranges":[{"startOffset":4603410,"endOffset":4603788,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfShorthandPropertyAssignment","ranges":[{"startOffset":4603839,"endOffset":4604229,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSpreadAssignment","ranges":[{"startOffset":4604269,"endOffset":4604561,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfEnumMember","ranges":[{"startOffset":4604611,"endOffset":4604953,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfSourceFile","ranges":[{"startOffset":4605014,"endOffset":4605282,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfPartiallyEmittedExpression","ranges":[{"startOffset":4605364,"endOffset":4605676,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChildOfCommaListExpression","ranges":[{"startOffset":4605719,"endOffset":4605996,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapGenerator","ranges":[{"startOffset":4606052,"endOffset":4615865,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":4615868,"endOffset":4616061,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourceMappingURL","ranges":[{"startOffset":4616064,"endOffset":4616438,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNull","ranges":[{"startOffset":4616441,"endOffset":4616521,"count":0}],"isBlockCoverage":false},{"functionName":"isRawSourceMap","ranges":[{"startOffset":4616524,"endOffset":4617055,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseRawSourceMap","ranges":[{"startOffset":4617058,"endOffset":4617254,"count":0}],"isBlockCoverage":false},{"functionName":"decodeMappings","ranges":[{"startOffset":4617257,"endOffset":4621868,"count":0}],"isBlockCoverage":false},{"functionName":"sameMapping","ranges":[{"startOffset":4621871,"endOffset":4622209,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMapping","ranges":[{"startOffset":4622212,"endOffset":4622365,"count":0}],"isBlockCoverage":false},{"functionName":"base64FormatEncode","ranges":[{"startOffset":4622368,"endOffset":4622683,"count":0}],"isBlockCoverage":false},{"functionName":"base64FormatDecode","ranges":[{"startOffset":4622686,"endOffset":4622980,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMappedPosition","ranges":[{"startOffset":4622983,"endOffset":4623103,"count":0}],"isBlockCoverage":false},{"functionName":"sameMappedPosition","ranges":[{"startOffset":4623106,"endOffset":4623305,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourcePositions","ranges":[{"startOffset":4623308,"endOffset":4623485,"count":0}],"isBlockCoverage":false},{"functionName":"compareGeneratedPositions","ranges":[{"startOffset":4623488,"endOffset":4623616,"count":0}],"isBlockCoverage":false},{"functionName":"getSourcePositionOfMapping","ranges":[{"startOffset":4623619,"endOffset":4623700,"count":0}],"isBlockCoverage":false},{"functionName":"getGeneratedPositionOfMapping","ranges":[{"startOffset":4623703,"endOffset":4623790,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentPositionMapper","ranges":[{"startOffset":4623793,"endOffset":4628238,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/sourcemap.ts","ranges":[{"startOffset":4628402,"endOffset":4628853,"count":1}],"isBlockCoverage":true},{"functionName":"getOriginalNodeId","ranges":[{"startOffset":4628907,"endOffset":4629018,"count":0}],"isBlockCoverage":false},{"functionName":"containsDefaultReference","ranges":[{"startOffset":4629021,"endOffset":4629209,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDefaultReference","ranges":[{"startOffset":4629212,"endOffset":4629349,"count":0}],"isBlockCoverage":false},{"functionName":"chainBundle","ranges":[{"startOffset":4629352,"endOffset":4629749,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNeedsImportStarHelper","ranges":[{"startOffset":4629752,"endOffset":4629851,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportStarHelper","ranges":[{"startOffset":4629854,"endOffset":4630472,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportDefaultHelper","ranges":[{"startOffset":4630475,"endOffset":4630741,"count":0}],"isBlockCoverage":false},{"functionName":"collectExternalModuleInfo","ranges":[{"startOffset":4630744,"endOffset":4636126,"count":0}],"isBlockCoverage":false},{"functionName":"collectExportedVariableInfo","ranges":[{"startOffset":4636129,"endOffset":4636890,"count":0}],"isBlockCoverage":false},{"functionName":"multiMapSparseArrayAdd","ranges":[{"startOffset":4636893,"endOffset":4637094,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleCopiableExpression","ranges":[{"startOffset":4637097,"endOffset":4637298,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleInlineableExpression","ranges":[{"startOffset":4637301,"endOffset":4637436,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundAssignment","ranges":[{"startOffset":4637439,"endOffset":4637576,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignmentOperatorForCompoundAssignment","ranges":[{"startOffset":4637579,"endOffset":4638977,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperCallFromStatement","ranges":[{"startOffset":4638980,"endOffset":4639223,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPathWorker","ranges":[{"startOffset":4639226,"endOffset":4639704,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPath","ranges":[{"startOffset":4639707,"endOffset":4639879,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":4639882,"endOffset":4640052,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclarationOrClassStaticBlockDeclaration","ranges":[{"startOffset":4640055,"endOffset":4640226,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticPropertiesAndClassStaticBlock","ranges":[{"startOffset":4640229,"endOffset":4640379,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedOrStaticProperty","ranges":[{"startOffset":4640382,"endOffset":4640599,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclaration","ranges":[{"startOffset":4640602,"endOffset":4640723,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedProperty","ranges":[{"startOffset":4640726,"endOffset":4640861,"count":0}],"isBlockCoverage":false},{"functionName":"isNonStaticMethodOrAccessorWithPrivateName","ranges":[{"startOffset":4640864,"endOffset":4641072,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoratorsOfParameters","ranges":[{"startOffset":4641075,"endOffset":4641814,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClass","ranges":[{"startOffset":4641817,"endOffset":4642122,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClassElement","ranges":[{"startOffset":4642125,"endOffset":4642687,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfAccessors","ranges":[{"startOffset":4642690,"endOffset":4643594,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfMethod","ranges":[{"startOffset":4643597,"endOffset":4643915,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfProperty","ranges":[{"startOffset":4643918,"endOffset":4644100,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpLexicalEnvironments","ranges":[{"startOffset":4644103,"endOffset":4644284,"count":0}],"isBlockCoverage":false},{"functionName":"newPrivateEnvironment","ranges":[{"startOffset":4644287,"endOffset":4644350,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifier","ranges":[{"startOffset":4644353,"endOffset":4644703,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateIdentifier","ranges":[{"startOffset":4644706,"endOffset":4645161,"count":0}],"isBlockCoverage":false},{"functionName":"accessPrivateIdentifier","ranges":[{"startOffset":4645164,"endOffset":4645311,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameter","ranges":[{"startOffset":4645314,"endOffset":4645409,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameterList","ranges":[{"startOffset":4645412,"endOffset":4645499,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/utilities.ts","ranges":[{"startOffset":4645585,"endOffset":4648213,"count":1}],"isBlockCoverage":true},{"functionName":"_IdentifierNameMap","ranges":[{"startOffset":4645729,"endOffset":4645803,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":4645812,"endOffset":4645867,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4645876,"endOffset":4645959,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4645968,"endOffset":4646051,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4646060,"endOffset":4646173,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":4646182,"endOffset":4646329,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":4646338,"endOffset":4646386,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":4646395,"endOffset":4646452,"count":0}],"isBlockCoverage":false},{"functionName":"toKey","ranges":[{"startOffset":4646468,"endOffset":4647650,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":4647733,"endOffset":4647955,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4647964,"endOffset":4648198,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringAssignment","ranges":[{"startOffset":4648271,"endOffset":4651086,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentElementAssignsToName","ranges":[{"startOffset":4651089,"endOffset":4651467,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentPatternAssignsToName","ranges":[{"startOffset":4651470,"endOffset":4651783,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentElementContainsNonLiteralComputedName","ranges":[{"startOffset":4651786,"endOffset":4652282,"count":0}],"isBlockCoverage":false},{"functionName":"bindingOrAssignmentPatternContainsNonLiteralComputedName","ranges":[{"startOffset":4652285,"endOffset":4652495,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringBinding","ranges":[{"startOffset":4652498,"endOffset":4656066,"count":0}],"isBlockCoverage":false},{"functionName":"flattenBindingOrAssignmentElement","ranges":[{"startOffset":4656069,"endOffset":4657518,"count":0}],"isBlockCoverage":false},{"functionName":"flattenObjectBindingOrAssignmentPattern","ranges":[{"startOffset":4657521,"endOffset":4660110,"count":0}],"isBlockCoverage":false},{"functionName":"flattenArrayBindingOrAssignmentPattern","ranges":[{"startOffset":4660113,"endOffset":4663232,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleBindingOrAssignmentElement","ranges":[{"startOffset":4663235,"endOffset":4663939,"count":0}],"isBlockCoverage":false},{"functionName":"createDefaultValueCheck","ranges":[{"startOffset":4663942,"endOffset":4664420,"count":0}],"isBlockCoverage":false},{"functionName":"createDestructuringPropertyAccess","ranges":[{"startOffset":4664423,"endOffset":4665426,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIdentifier","ranges":[{"startOffset":4665429,"endOffset":4666175,"count":0}],"isBlockCoverage":false},{"functionName":"makeArrayBindingPattern","ranges":[{"startOffset":4666178,"endOffset":4666352,"count":0}],"isBlockCoverage":false},{"functionName":"makeArrayAssignmentPattern","ranges":[{"startOffset":4666355,"endOffset":4666605,"count":0}],"isBlockCoverage":false},{"functionName":"makeObjectBindingPattern","ranges":[{"startOffset":4666608,"endOffset":4666779,"count":0}],"isBlockCoverage":false},{"functionName":"makeObjectAssignmentPattern","ranges":[{"startOffset":4666782,"endOffset":4667036,"count":0}],"isBlockCoverage":false},{"functionName":"makeBindingElement","ranges":[{"startOffset":4667039,"endOffset":4667224,"count":0}],"isBlockCoverage":false},{"functionName":"makeAssignmentElement","ranges":[{"startOffset":4667227,"endOffset":4667286,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/destructuring.ts","ranges":[{"startOffset":4667346,"endOffset":4667685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4667471,"endOffset":4667657,"count":1}],"isBlockCoverage":true},{"functionName":"createClassThisAssignmentBlock","ranges":[{"startOffset":4667739,"endOffset":4668229,"count":0}],"isBlockCoverage":false},{"functionName":"isClassThisAssignmentBlock","ranges":[{"startOffset":4668232,"endOffset":4668794,"count":0}],"isBlockCoverage":false},{"functionName":"classHasClassThisAssignment","ranges":[{"startOffset":4668797,"endOffset":4668976,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassThisAssignmentIfMissing","ranges":[{"startOffset":4668979,"endOffset":4669903,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/classThis.ts","ranges":[{"startOffset":4669939,"endOffset":4670027,"count":1}],"isBlockCoverage":true},{"functionName":"getAssignedNameOfIdentifier","ranges":[{"startOffset":4670087,"endOffset":4670493,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedNameOfPropertyName","ranges":[{"startOffset":4670496,"endOffset":4671610,"count":0}],"isBlockCoverage":false},{"functionName":"createClassNamedEvaluationHelperBlock","ranges":[{"startOffset":4671613,"endOffset":4672204,"count":0}],"isBlockCoverage":false},{"functionName":"isClassNamedEvaluationHelperBlock","ranges":[{"startOffset":4672207,"endOffset":4672683,"count":0}],"isBlockCoverage":false},{"functionName":"classHasExplicitlyAssignedName","ranges":[{"startOffset":4672686,"endOffset":4672878,"count":0}],"isBlockCoverage":false},{"functionName":"classHasDeclaredOrExplicitlyAssignedName","ranges":[{"startOffset":4672881,"endOffset":4673006,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassNamedEvaluationHelperBlockIfMissing","ranges":[{"startOffset":4673009,"endOffset":4674216,"count":0}],"isBlockCoverage":false},{"functionName":"finishTransformNamedEvaluation","ranges":[{"startOffset":4674219,"endOffset":4674916,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfPropertyAssignment","ranges":[{"startOffset":4674919,"endOffset":4675402,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfShorthandAssignmentProperty","ranges":[{"startOffset":4675405,"endOffset":4676043,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfVariableDeclaration","ranges":[{"startOffset":4676046,"endOffset":4676650,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfParameterDeclaration","ranges":[{"startOffset":4676653,"endOffset":4677305,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfBindingElement","ranges":[{"startOffset":4677308,"endOffset":4677908,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfPropertyDeclaration","ranges":[{"startOffset":4677911,"endOffset":4678486,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfAssignmentExpression","ranges":[{"startOffset":4678489,"endOffset":4679047,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluationOfExportAssignment","ranges":[{"startOffset":4679050,"endOffset":4679604,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluation","ranges":[{"startOffset":4679607,"endOffset":4680991,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/namedEvaluation.ts","ranges":[{"startOffset":4681033,"endOffset":4681127,"count":1}],"isBlockCoverage":true},{"functionName":"processTaggedTemplateExpression","ranges":[{"startOffset":4681186,"endOffset":4683137,"count":0}],"isBlockCoverage":false},{"functionName":"createTemplateCooked","ranges":[{"startOffset":4683140,"endOffset":4683328,"count":0}],"isBlockCoverage":false},{"functionName":"getRawLiteral","ranges":[{"startOffset":4683331,"endOffset":4683966,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/taggedTemplate.ts","ranges":[{"startOffset":4684027,"endOffset":4684377,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4684153,"endOffset":4684349,"count":1}],"isBlockCoverage":true},{"functionName":"transformTypeScript","ranges":[{"startOffset":4684424,"endOffset":4756414,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/ts.ts","ranges":[{"startOffset":4756479,"endOffset":4756604,"count":1}],"isBlockCoverage":true},{"functionName":"transformClassFields","ranges":[{"startOffset":4756660,"endOffset":4857620,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateStaticFieldInitializer","ranges":[{"startOffset":4857623,"endOffset":4857924,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateInstanceFieldInitializer","ranges":[{"startOffset":4857927,"endOffset":4858238,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateInstanceMethodInitializer","ranges":[{"startOffset":4858241,"endOffset":4858498,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedPrivateName","ranges":[{"startOffset":4858501,"endOffset":4858630,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierInExpression","ranges":[{"startOffset":4858633,"endOffset":4858779,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclaration2","ranges":[{"startOffset":4858782,"endOffset":4858898,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticPropertyDeclarationOrClassStaticBlock","ranges":[{"startOffset":4858901,"endOffset":4859053,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/classFields.ts","ranges":[{"startOffset":4859091,"endOffset":4859181,"count":1}],"isBlockCoverage":true},{"functionName":"createRuntimeTypeSerializer","ranges":[{"startOffset":4859240,"endOffset":4875195,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/typeSerializer.ts","ranges":[{"startOffset":4875236,"endOffset":4875329,"count":1}],"isBlockCoverage":true},{"functionName":"transformLegacyDecorators","ranges":[{"startOffset":4875390,"endOffset":4894988,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/legacyDecorators.ts","ranges":[{"startOffset":4895031,"endOffset":4895126,"count":1}],"isBlockCoverage":true},{"functionName":"transformESDecorators","ranges":[{"startOffset":4895183,"endOffset":4977972,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/esDecorators.ts","ranges":[{"startOffset":4978011,"endOffset":4978102,"count":1}],"isBlockCoverage":true},{"functionName":"transformES2017","ranges":[{"startOffset":4978153,"endOffset":5009870,"count":0}],"isBlockCoverage":false},{"functionName":"createSuperAccessVariableStatement","ranges":[{"startOffset":5009873,"endOffset":5013264,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2017.ts","ranges":[{"startOffset":5013297,"endOffset":5013382,"count":1}],"isBlockCoverage":true},{"functionName":"transformES2018","ranges":[{"startOffset":5013433,"endOffset":5064267,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2018.ts","ranges":[{"startOffset":5064300,"endOffset":5064385,"count":1}],"isBlockCoverage":true},{"functionName":"transformES2019","ranges":[{"startOffset":5064436,"endOffset":5065455,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2019.ts","ranges":[{"startOffset":5065488,"endOffset":5065573,"count":1}],"isBlockCoverage":true},{"functionName":"transformES2020","ranges":[{"startOffset":5065624,"endOffset":5076138,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2020.ts","ranges":[{"startOffset":5076171,"endOffset":5076256,"count":1}],"isBlockCoverage":true},{"functionName":"transformES2021","ranges":[{"startOffset":5076307,"endOffset":5079219,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2021.ts","ranges":[{"startOffset":5079252,"endOffset":5079337,"count":1}],"isBlockCoverage":true},{"functionName":"transformESNext","ranges":[{"startOffset":5079388,"endOffset":5100506,"count":0}],"isBlockCoverage":false},{"functionName":"countPrologueStatements","ranges":[{"startOffset":5100509,"endOffset":5100740,"count":0}],"isBlockCoverage":false},{"functionName":"isUsingVariableDeclarationList","ranges":[{"startOffset":5100743,"endOffset":5100902,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfVariableDeclarationList","ranges":[{"startOffset":5100905,"endOffset":5101134,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfVariableStatement","ranges":[{"startOffset":5101137,"endOffset":5101261,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKind","ranges":[{"startOffset":5101264,"endOffset":5101405,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfStatements","ranges":[{"startOffset":5101408,"endOffset":5101733,"count":0}],"isBlockCoverage":false},{"functionName":"getUsingKindOfCaseOrDefaultClauses","ranges":[{"startOffset":5101736,"endOffset":5102082,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/esnext.ts","ranges":[{"startOffset":5102115,"endOffset":5102200,"count":1}],"isBlockCoverage":true},{"functionName":"transformJsx","ranges":[{"startOffset":5102248,"endOffset":5123988,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/jsx.ts","ranges":[{"startOffset":5124034,"endOffset":5129218,"count":1}],"isBlockCoverage":true},{"functionName":"transformES2016","ranges":[{"startOffset":5129269,"endOffset":5132426,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2016.ts","ranges":[{"startOffset":5132459,"endOffset":5132544,"count":1}],"isBlockCoverage":true},{"functionName":"createSpreadSegment","ranges":[{"startOffset":5132595,"endOffset":5132680,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2015","ranges":[{"startOffset":5132683,"endOffset":5270536,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es2015.ts","ranges":[{"startOffset":5270569,"endOffset":5270654,"count":1}],"isBlockCoverage":true},{"functionName":"transformES5","ranges":[{"startOffset":5270702,"endOffset":5273487,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/es5.ts","ranges":[{"startOffset":5273517,"endOffset":5273599,"count":1}],"isBlockCoverage":true},{"functionName":"getInstructionName","ranges":[{"startOffset":5273654,"endOffset":5274038,"count":0}],"isBlockCoverage":false},{"functionName":"transformGenerators","ranges":[{"startOffset":5274041,"endOffset":5342419,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/generators.ts","ranges":[{"startOffset":5342456,"endOffset":5342545,"count":1}],"isBlockCoverage":true},{"functionName":"transformModule","ranges":[{"startOffset":5342603,"endOffset":5415396,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/module/module.ts","ranges":[{"startOffset":5415459,"endOffset":5415785,"count":1}],"isBlockCoverage":true},{"functionName":"transformSystemModule","ranges":[{"startOffset":5415843,"endOffset":5465880,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/module/system.ts","ranges":[{"startOffset":5465913,"endOffset":5466005,"count":1}],"isBlockCoverage":true},{"functionName":"transformECMAScriptModule","ranges":[{"startOffset":5466070,"endOffset":5476560,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/module/esnextAnd2015.ts","ranges":[{"startOffset":5476600,"endOffset":5476699,"count":1}],"isBlockCoverage":true},{"functionName":"transformNodeModule","ranges":[{"startOffset":5476755,"endOffset":5479231,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/module/node.ts","ranges":[{"startOffset":5479262,"endOffset":5479352,"count":1}],"isBlockCoverage":true},{"functionName":"canProduceDiagnostics","ranges":[{"startOffset":5479421,"endOffset":5480158,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNodeName","ranges":[{"startOffset":5480161,"endOffset":5483749,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNode","ranges":[{"startOffset":5483752,"endOffset":5501690,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/declarations/diagnostics.ts","ranges":[{"startOffset":5501728,"endOffset":5501831,"count":1}],"isBlockCoverage":true},{"functionName":"getDeclarationDiagnostics","ranges":[{"startOffset":5501888,"endOffset":5502285,"count":0}],"isBlockCoverage":false},{"functionName":"transformDeclarations","ranges":[{"startOffset":5502288,"endOffset":5574786,"count":0}],"isBlockCoverage":false},{"functionName":"isAlwaysType","ranges":[{"startOffset":5574789,"endOffset":5574921,"count":0}],"isBlockCoverage":false},{"functionName":"maskModifiers","ranges":[{"startOffset":5574924,"endOffset":5575113,"count":0}],"isBlockCoverage":false},{"functionName":"maskModifierFlags","ranges":[{"startOffset":5575116,"endOffset":5575553,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationFromAccessor","ranges":[{"startOffset":5575556,"endOffset":5575778,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLiteralInitializer","ranges":[{"startOffset":5575781,"endOffset":5576114,"count":0}],"isBlockCoverage":false},{"functionName":"isPreservedDeclarationStatement","ranges":[{"startOffset":5576117,"endOffset":5576689,"count":0}],"isBlockCoverage":false},{"functionName":"isProcessedComponent","ranges":[{"startOffset":5576692,"endOffset":5577487,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformers/declarations.ts","ranges":[{"startOffset":5577565,"endOffset":5577975,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleTransformer","ranges":[{"startOffset":5578018,"endOffset":5578487,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformers","ranges":[{"startOffset":5578490,"endOffset":5578761,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptTransformers","ranges":[{"startOffset":5578764,"endOffset":5580764,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationTransformers","ranges":[{"startOffset":5580767,"endOffset":5581056,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCustomTransformer","ranges":[{"startOffset":5581059,"endOffset":5581221,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCustomTransformerFactory","ranges":[{"startOffset":5581224,"endOffset":5581523,"count":0}],"isBlockCoverage":false},{"functionName":"wrapScriptTransformerFactory","ranges":[{"startOffset":5581526,"endOffset":5581649,"count":0}],"isBlockCoverage":false},{"functionName":"wrapDeclarationTransformerFactory","ranges":[{"startOffset":5581652,"endOffset":5581786,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitSubstitution","ranges":[{"startOffset":5581789,"endOffset":5581852,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitNotification","ranges":[{"startOffset":5581855,"endOffset":5581936,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodes","ranges":[{"startOffset":5581939,"endOffset":5596332,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/transformer.ts","ranges":[{"startOffset":5596419,"endOffset":5597739,"count":1}],"isBlockCoverage":true},{"functionName":"getCompilerOptions","ranges":[{"startOffset":5596745,"endOffset":5596755,"count":0}],"isBlockCoverage":false},{"functionName":"getLexicalEnvironmentFlags","ranges":[{"startOffset":5597127,"endOffset":5597134,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildInfoFile","ranges":[{"startOffset":5597778,"endOffset":5597882,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEmittedFile","ranges":[{"startOffset":5597885,"endOffset":5599113,"count":0}],"isBlockCoverage":false},{"functionName":"getTsBuildInfoEmitOutputFilePath","ranges":[{"startOffset":5599116,"endOffset":5600038,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsForBundle","ranges":[{"startOffset":5600041,"endOffset":5600742,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsFor","ranges":[{"startOffset":5600745,"endOffset":5602027,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapFilePath","ranges":[{"startOffset":5602030,"endOffset":5602175,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputExtension","ranges":[{"startOffset":5602178,"endOffset":5602632,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathWithoutChangingExt","ranges":[{"startOffset":5602635,"endOffset":5602913,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileName","ranges":[{"startOffset":5602916,"endOffset":5603211,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileNameWorker","ranges":[{"startOffset":5603214,"endOffset":5603552,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileName","ranges":[{"startOffset":5603555,"endOffset":5604176,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileNameWorker","ranges":[{"startOffset":5604179,"endOffset":5604475,"count":0}],"isBlockCoverage":false},{"functionName":"createAddOutput","ranges":[{"startOffset":5604478,"endOffset":5604746,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleOutputFileNames","ranges":[{"startOffset":5604749,"endOffset":5605169,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnOutputFileNames","ranges":[{"startOffset":5605172,"endOffset":5605903,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectory","ranges":[{"startOffset":5605906,"endOffset":5606900,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectoryOfConfig","ranges":[{"startOffset":5606903,"endOffset":5607336,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectOutputs","ranges":[{"startOffset":5607339,"endOffset":5607951,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputFileNames","ranges":[{"startOffset":5607954,"endOffset":5608471,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstProjectOutput","ranges":[{"startOffset":5608474,"endOffset":5609775,"count":0}],"isBlockCoverage":false},{"functionName":"emitFiles","ranges":[{"startOffset":5609778,"endOffset":5624380,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildInfo","ranges":[{"startOffset":5624383,"endOffset":5624471,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoText","ranges":[{"startOffset":5624474,"endOffset":5624554,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo","ranges":[{"startOffset":5624557,"endOffset":5624676,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFilesFromBundleBuildInfo","ranges":[{"startOffset":5624679,"endOffset":5626264,"count":0}],"isBlockCoverage":false},{"functionName":"emitUsingBuildInfo","ranges":[{"startOffset":5626267,"endOffset":5626782,"count":0}],"isBlockCoverage":false},{"functionName":"emitUsingBuildInfoWorker","ranges":[{"startOffset":5626785,"endOffset":5632080,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinter","ranges":[{"startOffset":5632083,"endOffset":5810224,"count":0}],"isBlockCoverage":false},{"functionName":"createBracketsMap","ranges":[{"startOffset":5810227,"endOffset":5810517,"count":1}],"isBlockCoverage":true},{"functionName":"getOpeningBracket","ranges":[{"startOffset":5810520,"endOffset":5810619,"count":0}],"isBlockCoverage":false},{"functionName":"getClosingBracket","ranges":[{"startOffset":5810622,"endOffset":5810721,"count":0}],"isBlockCoverage":false},{"functionName":"emitListItemNoParenthesizer","ranges":[{"startOffset":5810724,"endOffset":5810822,"count":0}],"isBlockCoverage":false},{"functionName":"emitListItemWithParenthesizerRuleSelector","ranges":[{"startOffset":5810825,"endOffset":5810984,"count":0}],"isBlockCoverage":false},{"functionName":"emitListItemWithParenthesizerRule","ranges":[{"startOffset":5810987,"endOffset":5811109,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitListItem","ranges":[{"startOffset":5811112,"endOffset":5811347,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/emitter.ts","ranges":[{"startOffset":5811584,"endOffset":5814633,"count":1}],"isBlockCoverage":true},{"functionName":"isLateBound","ranges":[{"startOffset":5812322,"endOffset":5812338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5814176,"endOffset":5814199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5814266,"endOffset":5814311,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5814394,"endOffset":5814463,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5814551,"endOffset":5814625,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDirectoryStructureHost","ranges":[{"startOffset":5814679,"endOffset":5823463,"count":0}],"isBlockCoverage":false},{"functionName":"updateSharedExtendedConfigFileWatcher","ranges":[{"startOffset":5823466,"endOffset":5824789,"count":0}],"isBlockCoverage":false},{"functionName":"clearSharedExtendedConfigFileWatcher","ranges":[{"startOffset":5824792,"endOffset":5825011,"count":0}],"isBlockCoverage":false},{"functionName":"cleanExtendedConfigCache","ranges":[{"startOffset":5825014,"endOffset":5825494,"count":0}],"isBlockCoverage":false},{"functionName":"updateMissingFilePathsWatch","ranges":[{"startOffset":5825497,"endOffset":5825943,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchingWildcardDirectories","ranges":[{"startOffset":5825946,"endOffset":5827101,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredFileFromWildCardWatching","ranges":[{"startOffset":5827104,"endOffset":5830013,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram","ranges":[{"startOffset":5830016,"endOffset":5830087,"count":0}],"isBlockCoverage":false},{"functionName":"isEmittedFileOfProgram","ranges":[{"startOffset":5830090,"endOffset":5830228,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchFactory","ranges":[{"startOffset":5830231,"endOffset":5835239,"count":0}],"isBlockCoverage":false},{"functionName":"getFallbackOptions","ranges":[{"startOffset":5835242,"endOffset":5835480,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcherOf","ranges":[{"startOffset":5835483,"endOffset":5835568,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/watchUtilities.ts","ranges":[{"startOffset":5835650,"endOffset":5836444,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5835769,"endOffset":5836084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5836152,"endOffset":5836415,"count":1}],"isBlockCoverage":true},{"functionName":"findConfigFile","ranges":[{"startOffset":5836483,"endOffset":5836752,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTripleslashReference","ranges":[{"startOffset":5836755,"endOffset":5837037,"count":0}],"isBlockCoverage":false},{"functionName":"computeCommonSourceDirectoryOfFilenames","ranges":[{"startOffset":5837040,"endOffset":5838167,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHost","ranges":[{"startOffset":5838170,"endOffset":5838290,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSourceFile","ranges":[{"startOffset":5838293,"endOffset":5838880,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteFileMeasuringIO","ranges":[{"startOffset":5838883,"endOffset":5839466,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostWorker","ranges":[{"startOffset":5839469,"endOffset":5841750,"count":0}],"isBlockCoverage":false},{"functionName":"changeCompilerHostLikeToUseCache","ranges":[{"startOffset":5841753,"endOffset":5845927,"count":0}],"isBlockCoverage":false},{"functionName":"getPreEmitDiagnostics","ranges":[{"startOffset":5845930,"endOffset":5846746,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostics","ranges":[{"startOffset":5846749,"endOffset":5846942,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostic","ranges":[{"startOffset":5846945,"endOffset":5847612,"count":0}],"isBlockCoverage":false},{"functionName":"getCategoryFormat","ranges":[{"startOffset":5847615,"endOffset":5848002,"count":0}],"isBlockCoverage":false},{"functionName":"formatColorAndReset","ranges":[{"startOffset":5848005,"endOffset":5848111,"count":0}],"isBlockCoverage":false},{"functionName":"formatCodeSpan","ranges":[{"startOffset":5848114,"endOffset":5850224,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":5850227,"endOffset":5850851,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticsWithColorAndContext","ranges":[{"startOffset":5850854,"endOffset":5852346,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDiagnosticMessageText","ranges":[{"startOffset":5852349,"endOffset":5852883,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForFileReference","ranges":[{"startOffset":5852886,"endOffset":5853041,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForResolutionAtIndex","ranges":[{"startOffset":5853044,"endOffset":5853224,"count":0}],"isBlockCoverage":false},{"functionName":"isExclusivelyTypeOnlyImportOrExport","ranges":[{"startOffset":5853227,"endOffset":5853480,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocation","ranges":[{"startOffset":5853483,"endOffset":5853623,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocationWorker","ranges":[{"startOffset":5853626,"endOffset":5855041,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionModeOverride","ranges":[{"startOffset":5855044,"endOffset":5856412,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionName","ranges":[{"startOffset":5856415,"endOffset":5856487,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoader","ranges":[{"startOffset":5856490,"endOffset":5856882,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeReferenceResolutionName","ranges":[{"startOffset":5856885,"endOffset":5857012,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceResolutionLoader","ranges":[{"startOffset":5857015,"endOffset":5857425,"count":0}],"isBlockCoverage":false},{"functionName":"loadWithModeAwareCache","ranges":[{"startOffset":5857428,"endOffset":5858309,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":5858312,"endOffset":5858579,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProjectReference","ranges":[{"startOffset":5858582,"endOffset":5859624,"count":0}],"isBlockCoverage":false},{"functionName":"getInferredLibraryNameResolveFrom","ranges":[{"startOffset":5859627,"endOffset":5859928,"count":0}],"isBlockCoverage":false},{"functionName":"getLibraryNameFromLibFileName","ranges":[{"startOffset":5859931,"endOffset":5860241,"count":0}],"isBlockCoverage":false},{"functionName":"getLibFileNameFromLibReference","ranges":[{"startOffset":5860244,"endOffset":5860449,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedFile","ranges":[{"startOffset":5860452,"endOffset":5860754,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceFileLocation","ranges":[{"startOffset":5860757,"endOffset":5860841,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileLocation","ranges":[{"startOffset":5860844,"endOffset":5862349,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramUptoDate","ranges":[{"startOffset":5862352,"endOffset":5865175,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileParsingDiagnostics","ranges":[{"startOffset":5865178,"endOffset":5865429,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFile","ranges":[{"startOffset":5865432,"endOffset":5865697,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFileWorker","ranges":[{"startOffset":5865700,"endOffset":5866948,"count":0}],"isBlockCoverage":false},{"functionName":"shouldProgramCreateNewSourceFiles","ranges":[{"startOffset":5866951,"endOffset":5867167,"count":0}],"isBlockCoverage":false},{"functionName":"createCreateProgramOptions","ranges":[{"startOffset":5867170,"endOffset":5867461,"count":0}],"isBlockCoverage":false},{"functionName":"createProgram","ranges":[{"startOffset":5867464,"endOffset":6018644,"count":0}],"isBlockCoverage":false},{"functionName":"updateHostForUseSourceOfProjectReferenceRedirect","ranges":[{"startOffset":6018647,"endOffset":6024863,"count":0}],"isBlockCoverage":false},{"functionName":"handleNoEmitOptions","ranges":[{"startOffset":6024866,"endOffset":6026232,"count":0}],"isBlockCoverage":false},{"functionName":"filterSemanticDiagnostics","ranges":[{"startOffset":6026235,"endOffset":6026371,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigHostFromCompilerHostLike","ranges":[{"startOffset":6026374,"endOffset":6027505,"count":0}],"isBlockCoverage":false},{"functionName":"createPrependNodes","ranges":[{"startOffset":6027508,"endOffset":6028464,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectReferencePath","ranges":[{"startOffset":6028467,"endOffset":6028565,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionDiagnostic","ranges":[{"startOffset":6028568,"endOffset":6030003,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNames","ranges":[{"startOffset":6030006,"endOffset":6030255,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNameStringLiteralAt","ranges":[{"startOffset":6030258,"endOffset":6030714,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/program.ts","ranges":[{"startOffset":6031043,"endOffset":6040543,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6031196,"endOffset":6031601,"count":1}],"isBlockCoverage":true},{"functionName":"getMode","ranges":[{"startOffset":6032038,"endOffset":6032125,"count":0}],"isBlockCoverage":false},{"functionName":"getMode","ranges":[{"startOffset":6032252,"endOffset":6032347,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/builderStatePublic.ts","ranges":[{"startOffset":6040635,"endOffset":6040701,"count":1}],"isBlockCoverage":true},{"functionName":"getFileEmitOutput","ranges":[{"startOffset":6040745,"endOffset":6041239,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/builderState.ts","ranges":[{"startOffset":6041298,"endOffset":6061596,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6041378,"endOffset":6061551,"count":1}],"isBlockCoverage":true},{"functionName":"createManyToManyPathMap","ranges":[{"startOffset":6041407,"endOffset":6042918,"count":0}],"isBlockCoverage":false},{"functionName":"addToMultimap","ranges":[{"startOffset":6043000,"endOffset":6043210,"count":0}],"isBlockCoverage":false},{"functionName":"deleteFromMultimap","ranges":[{"startOffset":6043219,"endOffset":6043493,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFilesFromImportedModuleSymbol","ranges":[{"startOffset":6043502,"endOffset":6043770,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFilesFromImportLiteral","ranges":[{"startOffset":6043779,"endOffset":6044001,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileFromFileName","ranges":[{"startOffset":6044010,"endOffset":6044249,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFiles","ranges":[{"startOffset":6044258,"endOffset":6047104,"count":0}],"isBlockCoverage":false},{"functionName":"canReuseOldState","ranges":[{"startOffset":6047113,"endOffset":6047254,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":6047322,"endOffset":6049902,"count":0}],"isBlockCoverage":false},{"functionName":"releaseCache2","ranges":[{"startOffset":6049950,"endOffset":6050092,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedBy","ranges":[{"startOffset":6050153,"endOffset":6050628,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedByWithOldState","ranges":[{"startOffset":6050700,"endOffset":6051305,"count":0}],"isBlockCoverage":false},{"functionName":"updateSignatureOfFile","ranges":[{"startOffset":6051401,"endOffset":6051654,"count":0}],"isBlockCoverage":false},{"functionName":"computeDtsSignature","ranges":[{"startOffset":6051732,"endOffset":6052604,"count":0}],"isBlockCoverage":false},{"functionName":"updateShapeSignature","ranges":[{"startOffset":6052678,"endOffset":6054731,"count":0}],"isBlockCoverage":false},{"functionName":"updateExportedModules","ranges":[{"startOffset":6054807,"endOffset":6055477,"count":0}],"isBlockCoverage":false},{"functionName":"getExportedModules","ranges":[{"startOffset":6055555,"endOffset":6056015,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDependencies","ranges":[{"startOffset":6056087,"endOffset":6057232,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFileNames","ranges":[{"startOffset":6057304,"endOffset":6057639,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedByPaths","ranges":[{"startOffset":6057648,"endOffset":6057841,"count":0}],"isBlockCoverage":false},{"functionName":"containsOnlyAmbientModules","ranges":[{"startOffset":6057917,"endOffset":6058173,"count":0}],"isBlockCoverage":false},{"functionName":"containsGlobalScopeAugmentation","ranges":[{"startOffset":6058182,"endOffset":6058367,"count":0}],"isBlockCoverage":false},{"functionName":"isFileAffectingGlobalScope","ranges":[{"startOffset":6058376,"endOffset":6058616,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFilesExcludingDefaultLibraryFile","ranges":[{"startOffset":6058625,"endOffset":6059494,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedByUpdatedShapeWhenNonModuleEmit","ranges":[{"startOffset":6059606,"endOffset":6060038,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesAffectedByUpdatedShapeWhenModuleEmit","ranges":[{"startOffset":6060047,"endOffset":6061543,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmit","ranges":[{"startOffset":6061635,"endOffset":6062095,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKind","ranges":[{"startOffset":6062098,"endOffset":6062795,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameKeys","ranges":[{"startOffset":6062798,"endOffset":6062973,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramState","ranges":[{"startOffset":6062976,"endOffset":6069759,"count":0}],"isBlockCoverage":false},{"functionName":"addFileToChangeSet","ranges":[{"startOffset":6069762,"endOffset":6069923,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitSignatureFromOldSignature","ranges":[{"startOffset":6069926,"endOffset":6070275,"count":0}],"isBlockCoverage":false},{"functionName":"repopulateDiagnostics","ranges":[{"startOffset":6070278,"endOffset":6070848,"count":0}],"isBlockCoverage":false},{"functionName":"convertOrRepopulateDiagnosticMessageChain","ranges":[{"startOffset":6070851,"endOffset":6071468,"count":0}],"isBlockCoverage":false},{"functionName":"convertOrRepopulateDiagnosticMessageChainArray","ranges":[{"startOffset":6071471,"endOffset":6071707,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnostics","ranges":[{"startOffset":6071710,"endOffset":6072843,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnosticRelatedInformation","ranges":[{"startOffset":6072846,"endOffset":6073307,"count":0}],"isBlockCoverage":false},{"functionName":"releaseCache","ranges":[{"startOffset":6073310,"endOffset":6073410,"count":0}],"isBlockCoverage":false},{"functionName":"backupBuilderProgramEmitState","ranges":[{"startOffset":6073413,"endOffset":6074313,"count":0}],"isBlockCoverage":false},{"functionName":"restoreBuilderProgramEmitState","ranges":[{"startOffset":6074316,"endOffset":6075094,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceFileOkWithoutNextAffectedCall","ranges":[{"startOffset":6075097,"endOffset":6075361,"count":0}],"isBlockCoverage":false},{"functionName":"getNextAffectedFile","ranges":[{"startOffset":6075364,"endOffset":6077299,"count":0}],"isBlockCoverage":false},{"functionName":"clearAffectedFilesPendingEmit","ranges":[{"startOffset":6077302,"endOffset":6077819,"count":0}],"isBlockCoverage":false},{"functionName":"getNextAffectedFilePendingEmit","ranges":[{"startOffset":6077822,"endOffset":6078671,"count":0}],"isBlockCoverage":false},{"functionName":"getNextPendingEmitDiagnosticsFile","ranges":[{"startOffset":6078674,"endOffset":6079396,"count":0}],"isBlockCoverage":false},{"functionName":"removeDiagnosticsOfLibraryFiles","ranges":[{"startOffset":6079399,"endOffset":6079846,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfAffectedFile","ranges":[{"startOffset":6079849,"endOffset":6080542,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOf","ranges":[{"startOffset":6080545,"endOffset":6081267,"count":0}],"isBlockCoverage":false},{"functionName":"removeSemanticDiagnosticsOf","ranges":[{"startOffset":6081270,"endOffset":6081563,"count":0}],"isBlockCoverage":false},{"functionName":"isChangedSignature","ranges":[{"startOffset":6081566,"endOffset":6081822,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfGlobalScope","ranges":[{"startOffset":6081825,"endOffset":6082376,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfReferencingExportOfAffectedFile","ranges":[{"startOffset":6082379,"endOffset":6084216,"count":0}],"isBlockCoverage":false},{"functionName":"handleDtsMayChangeOfFileAndExportsOfFile","ranges":[{"startOffset":6084219,"endOffset":6085321,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDiagnosticsOfFile","ranges":[{"startOffset":6085324,"endOffset":6085592,"count":0}],"isBlockCoverage":false},{"functionName":"getBinderAndCheckerDiagnosticsOfFile","ranges":[{"startOffset":6085595,"endOffset":6086279,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramBundleEmitBuildInfo","ranges":[{"startOffset":6086282,"endOffset":6086373,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo2","ranges":[{"startOffset":6086376,"endOffset":6099120,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderCreationParameters","ranges":[{"startOffset":6099123,"endOffset":6100377,"count":0}],"isBlockCoverage":false},{"functionName":"getTextHandlingSourceMapForSignature","ranges":[{"startOffset":6100380,"endOffset":6100562,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignatureWithDiagnostics","ranges":[{"startOffset":6100565,"endOffset":6101907,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignature","ranges":[{"startOffset":6101910,"endOffset":6102059,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgram","ranges":[{"startOffset":6102062,"endOffset":6115836,"count":0}],"isBlockCoverage":false},{"functionName":"addToAffectedFilesPendingEmit","ranges":[{"startOffset":6115839,"endOffset":6116317,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderStateFileInfoForMultiEmit","ranges":[{"startOffset":6116320,"endOffset":6116737,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderFileEmit","ranges":[{"startOffset":6116740,"endOffset":6116874,"count":0}],"isBlockCoverage":false},{"functionName":"toProgramEmitPending","ranges":[{"startOffset":6116877,"endOffset":6116991,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramUsingProgramBuildInfo","ranges":[{"startOffset":6116994,"endOffset":6122531,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoFileVersionMap","ranges":[{"startOffset":6122534,"endOffset":6123652,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectedBuilderProgram","ranges":[{"startOffset":6123655,"endOffset":6125383,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/builder.ts","ranges":[{"startOffset":6125460,"endOffset":6126685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6125569,"endOffset":6126239,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6126309,"endOffset":6126651,"count":1}],"isBlockCoverage":true},{"functionName":"createSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":6126730,"endOffset":6127184,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitAndSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":6127187,"endOffset":6127655,"count":0}],"isBlockCoverage":false},{"functionName":"createAbstractBuilder","ranges":[{"startOffset":6127658,"endOffset":6128267,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/builderPublic.ts","ranges":[{"startOffset":6128307,"endOffset":6128386,"count":1}],"isBlockCoverage":true},{"functionName":"removeIgnoredPath","ranges":[{"startOffset":6128433,"endOffset":6128665,"count":0}],"isBlockCoverage":false},{"functionName":"perceivedOsRootLengthForWatching","ranges":[{"startOffset":6128668,"endOffset":6129380,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFile","ranges":[{"startOffset":6129383,"endOffset":6129699,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAtTypes","ranges":[{"startOffset":6129702,"endOffset":6129830,"count":0}],"isBlockCoverage":false},{"functionName":"isInDirectoryPath","ranges":[{"startOffset":6129833,"endOffset":6130139,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectedPackageJsonOrNodeModulesOfAtTypes","ranges":[{"startOffset":6130142,"endOffset":6130291,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectingLocation","ranges":[{"startOffset":6130294,"endOffset":6130416,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocation","ranges":[{"startOffset":6130419,"endOffset":6132053,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFromFailedLookupLocationDirectory","ranges":[{"startOffset":6132056,"endOffset":6132796,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryOfFailedLookupWatch","ranges":[{"startOffset":6132799,"endOffset":6133073,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocationFromTypeRoot","ranges":[{"startOffset":6133076,"endOffset":6133976,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDirectoryOfResolutionCache","ranges":[{"startOffset":6133979,"endOffset":6134265,"count":0}],"isBlockCoverage":false},{"functionName":"getRootPathSplitLength","ranges":[{"startOffset":6134268,"endOffset":6134421,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionHost","ranges":[{"startOffset":6134424,"endOffset":6134603,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoaderUsingGlobalCache","ranges":[{"startOffset":6134606,"endOffset":6135080,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameUsingGlobalCache","ranges":[{"startOffset":6135083,"endOffset":6136630,"count":0}],"isBlockCoverage":false},{"functionName":"createResolutionCache","ranges":[{"startOffset":6136633,"endOffset":6179677,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionIsSymlink","ranges":[{"startOffset":6179680,"endOffset":6179917,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/resolutionCache.ts","ranges":[{"startOffset":6179959,"endOffset":6180040,"count":1}],"isBlockCoverage":true},{"functionName":"createDiagnosticReporter","ranges":[{"startOffset":6180077,"endOffset":6180763,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenIfNotWatchingForFileChanges","ranges":[{"startOffset":6180766,"endOffset":6181094,"count":0}],"isBlockCoverage":false},{"functionName":"getPlainDiagnosticFollowingNewLines","ranges":[{"startOffset":6181097,"endOffset":6181264,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleTimeString","ranges":[{"startOffset":6181267,"endOffset":6181822,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter","ranges":[{"startOffset":6181825,"endOffset":6182673,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileWithSystem","ranges":[{"startOffset":6182676,"endOffset":6183184,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCountForSummary","ranges":[{"startOffset":6183187,"endOffset":6183329,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesInErrorForSummary","ranges":[{"startOffset":6183332,"endOffset":6184144,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchErrorSummaryDiagnosticMessage","ranges":[{"startOffset":6184147,"endOffset":6184349,"count":0}],"isBlockCoverage":false},{"functionName":"prettyPathForFileError","ranges":[{"startOffset":6184352,"endOffset":6184723,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSummaryText","ranges":[{"startOffset":6184726,"endOffset":6186053,"count":0}],"isBlockCoverage":false},{"functionName":"createTabularErrorsDisplay","ranges":[{"startOffset":6186056,"endOffset":6187533,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram2","ranges":[{"startOffset":6187536,"endOffset":6187608,"count":0}],"isBlockCoverage":false},{"functionName":"listFiles","ranges":[{"startOffset":6187611,"endOffset":6187980,"count":0}],"isBlockCoverage":false},{"functionName":"explainFiles","ranges":[{"startOffset":6187983,"endOffset":6188659,"count":0}],"isBlockCoverage":false},{"functionName":"explainIfFileIsRedirectAndImpliedFormat","ranges":[{"startOffset":6188662,"endOffset":6190677,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedFileSpec","ranges":[{"startOffset":6190680,"endOffset":6191293,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedIncludeSpec","ranges":[{"startOffset":6191296,"endOffset":6192335,"count":0}],"isBlockCoverage":false},{"functionName":"fileIncludeReasonToDiagnostics","ranges":[{"startOffset":6192338,"endOffset":6198495,"count":0}],"isBlockCoverage":false},{"functionName":"toFileName","ranges":[{"startOffset":6198498,"endOffset":6198679,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrors","ranges":[{"startOffset":6198682,"endOffset":6200647,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrorsAndGetExitStatus","ranges":[{"startOffset":6200650,"endOffset":6201310,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchHost","ranges":[{"startOffset":6201313,"endOffset":6201812,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactory","ranges":[{"startOffset":6201815,"endOffset":6202224,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostFromProgramHost","ranges":[{"startOffset":6202227,"endOffset":6204081,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileVersionAsHashFromText","ranges":[{"startOffset":6204084,"endOffset":6205145,"count":0}],"isBlockCoverage":false},{"functionName":"setGetSourceFileAsHashVersioned","ranges":[{"startOffset":6205148,"endOffset":6205534,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramHost","ranges":[{"startOffset":6205537,"endOffset":6207059,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost","ranges":[{"startOffset":6207062,"endOffset":6207903,"count":0}],"isBlockCoverage":false},{"functionName":"reportUnrecoverableDiagnostic","ranges":[{"startOffset":6207906,"endOffset":6208082,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfConfigFile","ranges":[{"startOffset":6208085,"endOffset":6208879,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfFilesAndCompilerOptions","ranges":[{"startOffset":6208882,"endOffset":6209435,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation","ranges":[{"startOffset":6209438,"endOffset":6210198,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/watch.ts","ranges":[{"startOffset":6210341,"endOffset":6212336,"count":1},{"startOffset":6210645,"endOffset":6210653,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":6210477,"endOffset":6210508,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":6210530,"endOffset":6210547,"count":0}],"isBlockCoverage":false},{"functionName":"returnNoopFileWatcher","ranges":[{"startOffset":6210912,"endOffset":6210933,"count":0}],"isBlockCoverage":false},{"functionName":"readBuilderProgram","ranges":[{"startOffset":6212379,"endOffset":6213041,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalCompilerHost","ranges":[{"startOffset":6213044,"endOffset":6213574,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalProgram","ranges":[{"startOffset":6213577,"endOffset":6214070,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost2","ranges":[{"startOffset":6214073,"endOffset":6215148,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchProgram","ranges":[{"startOffset":6215151,"endOffset":6247487,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/watchPublic.ts","ranges":[{"startOffset":6247525,"endOffset":6247602,"count":1}],"isBlockCoverage":true},{"functionName":"resolveConfigFileProjectName","ranges":[{"startOffset":6247641,"endOffset":6247828,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/tsbuild.ts","ranges":[{"startOffset":6247888,"endOffset":6249840,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6248000,"endOffset":6249806,"count":1}],"isBlockCoverage":true},{"functionName":"getOrCreateValueFromConfigFileMap","ranges":[{"startOffset":6249885,"endOffset":6250183,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateValueMapFromConfigFileMap","ranges":[{"startOffset":6250186,"endOffset":6250366,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentTime","ranges":[{"startOffset":6250369,"endOffset":6250467,"count":0}],"isBlockCoverage":false},{"functionName":"isCircularBuildOrder","ranges":[{"startOffset":6250470,"endOffset":6250569,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFromAnyBuildOrder","ranges":[{"startOffset":6250572,"endOffset":6250723,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderStatusReporter","ranges":[{"startOffset":6250726,"endOffset":6251120,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHostBase","ranges":[{"startOffset":6251123,"endOffset":6251855,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHost","ranges":[{"startOffset":6251858,"endOffset":6252183,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatchHost","ranges":[{"startOffset":6252186,"endOffset":6252572,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsOfBuildOptions","ranges":[{"startOffset":6252575,"endOffset":6252842,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilder","ranges":[{"startOffset":6252845,"endOffset":6253040,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatch","ranges":[{"startOffset":6253043,"endOffset":6253288,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderState","ranges":[{"startOffset":6253291,"endOffset":6258789,"count":0}],"isBlockCoverage":false},{"functionName":"toPath2","ranges":[{"startOffset":6258792,"endOffset":6258943,"count":0}],"isBlockCoverage":false},{"functionName":"toResolvedConfigFilePath","ranges":[{"startOffset":6258946,"endOffset":6259282,"count":0}],"isBlockCoverage":false},{"functionName":"isParsedCommandLine","ranges":[{"startOffset":6259285,"endOffset":6259354,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedParsedConfigFile","ranges":[{"startOffset":6259357,"endOffset":6259546,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFile","ranges":[{"startOffset":6259549,"endOffset":6260796,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectName","ranges":[{"startOffset":6260799,"endOffset":6260947,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildOrder","ranges":[{"startOffset":6260950,"endOffset":6262517,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrder","ranges":[{"startOffset":6262520,"endOffset":6262616,"count":0}],"isBlockCoverage":false},{"functionName":"createStateBuildOrder","ranges":[{"startOffset":6262619,"endOffset":6264882,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFor","ranges":[{"startOffset":6264885,"endOffset":6265895,"count":0}],"isBlockCoverage":false},{"functionName":"enableCache","ranges":[{"startOffset":6265898,"endOffset":6266864,"count":0}],"isBlockCoverage":false},{"functionName":"disableCache","ranges":[{"startOffset":6266867,"endOffset":6267793,"count":0}],"isBlockCoverage":false},{"functionName":"clearProjectStatus","ranges":[{"startOffset":6267796,"endOffset":6267928,"count":0}],"isBlockCoverage":false},{"functionName":"addProjToQueue","ranges":[{"startOffset":6267931,"endOffset":6268225,"count":0}],"isBlockCoverage":false},{"functionName":"setupInitialBuild","ranges":[{"startOffset":6268228,"endOffset":6268858,"count":0}],"isBlockCoverage":false},{"functionName":"doneInvalidatedProject","ranges":[{"startOffset":6268861,"endOffset":6269078,"count":0}],"isBlockCoverage":false},{"functionName":"createUpdateOutputFileStampsProject","ranges":[{"startOffset":6269081,"endOffset":6269882,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildOrUpdateInvalidedProject","ranges":[{"startOffset":6269885,"endOffset":6286449,"count":0}],"isBlockCoverage":false},{"functionName":"needsBuild","ranges":[{"startOffset":6286452,"endOffset":6286735,"count":0}],"isBlockCoverage":false},{"functionName":"getNextInvalidatedProjectCreateInfo","ranges":[{"startOffset":6286738,"endOffset":6290614,"count":0}],"isBlockCoverage":false},{"functionName":"createInvalidatedProjectWithInfo","ranges":[{"startOffset":6290617,"endOffset":6291130,"count":0}],"isBlockCoverage":false},{"functionName":"getNextInvalidatedProject","ranges":[{"startOffset":6291133,"endOffset":6291395,"count":0}],"isBlockCoverage":false},{"functionName":"listEmittedFile","ranges":[{"startOffset":6291398,"endOffset":6291539,"count":0}],"isBlockCoverage":false},{"functionName":"getOldProgram","ranges":[{"startOffset":6291542,"endOffset":6291813,"count":0}],"isBlockCoverage":false},{"functionName":"afterProgramDone","ranges":[{"startOffset":6291816,"endOffset":6292264,"count":0}],"isBlockCoverage":false},{"functionName":"buildErrors","ranges":[{"startOffset":6292267,"endOffset":6292812,"count":0}],"isBlockCoverage":false},{"functionName":"isFileWatcherWithModifiedTime","ranges":[{"startOffset":6292815,"endOffset":6292894,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime2","ranges":[{"startOffset":6292897,"endOffset":6293453,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":6293456,"endOffset":6294746,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputTimeStampMap","ranges":[{"startOffset":6294749,"endOffset":6295058,"count":0}],"isBlockCoverage":false},{"functionName":"setBuildInfo","ranges":[{"startOffset":6295061,"endOffset":6295847,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoCacheEntry","ranges":[{"startOffset":6295850,"endOffset":6296129,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo3","ranges":[{"startOffset":6296132,"endOffset":6296738,"count":0}],"isBlockCoverage":false},{"functionName":"checkConfigFileUpToDateStatus","ranges":[{"startOffset":6296741,"endOffset":6297122,"count":0}],"isBlockCoverage":false},{"functionName":"getUpToDateStatusWorker","ranges":[{"startOffset":6297125,"endOffset":6306808,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameBuildInfo","ranges":[{"startOffset":6306811,"endOffset":6307014,"count":0}],"isBlockCoverage":false},{"functionName":"getUpToDateStatus","ranges":[{"startOffset":6307017,"endOffset":6307676,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutputTimestampsWorker","ranges":[{"startOffset":6307679,"endOffset":6309535,"count":0}],"isBlockCoverage":false},{"functionName":"getLatestChangedDtsTime","ranges":[{"startOffset":6309538,"endOffset":6310206,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutputTimestamps","ranges":[{"startOffset":6310209,"endOffset":6310741,"count":0}],"isBlockCoverage":false},{"functionName":"queueReferencingProjects","ranges":[{"startOffset":6310744,"endOffset":6313282,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":6313285,"endOffset":6313713,"count":0}],"isBlockCoverage":false},{"functionName":"buildWorker","ranges":[{"startOffset":6313716,"endOffset":6314935,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":6314938,"endOffset":6315258,"count":0}],"isBlockCoverage":false},{"functionName":"cleanWorker","ranges":[{"startOffset":6315261,"endOffset":6316817,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateProject","ranges":[{"startOffset":6316820,"endOffset":6317282,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateProjectAndScheduleBuilds","ranges":[{"startOffset":6317285,"endOffset":6317572,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleBuildInvalidatedProject","ranges":[{"startOffset":6317575,"endOffset":6318062,"count":0}],"isBlockCoverage":false},{"functionName":"buildNextInvalidatedProject","ranges":[{"startOffset":6318065,"endOffset":6318475,"count":0}],"isBlockCoverage":false},{"functionName":"buildNextInvalidatedProjectWorker","ranges":[{"startOffset":6318478,"endOffset":6319951,"count":0}],"isBlockCoverage":false},{"functionName":"watchConfigFile","ranges":[{"startOffset":6319954,"endOffset":6320441,"count":0}],"isBlockCoverage":false},{"functionName":"watchExtendedConfigFiles","ranges":[{"startOffset":6320444,"endOffset":6321239,"count":0}],"isBlockCoverage":false},{"functionName":"watchWildCardDirectories","ranges":[{"startOffset":6321242,"endOffset":6322602,"count":0}],"isBlockCoverage":false},{"functionName":"watchInputFiles","ranges":[{"startOffset":6322605,"endOffset":6323220,"count":0}],"isBlockCoverage":false},{"functionName":"watchPackageJsonFiles","ranges":[{"startOffset":6323223,"endOffset":6323918,"count":0}],"isBlockCoverage":false},{"functionName":"startWatching","ranges":[{"startOffset":6323921,"endOffset":6324856,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatching","ranges":[{"startOffset":6324859,"endOffset":6325424,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWorker","ranges":[{"startOffset":6325427,"endOffset":6327054,"count":0}],"isBlockCoverage":false},{"functionName":"relName","ranges":[{"startOffset":6327057,"endOffset":6327215,"count":0}],"isBlockCoverage":false},{"functionName":"reportStatus","ranges":[{"startOffset":6327218,"endOffset":6327358,"count":0}],"isBlockCoverage":false},{"functionName":"reportWatchStatus","ranges":[{"startOffset":6327361,"endOffset":6327620,"count":0}],"isBlockCoverage":false},{"functionName":"reportErrors","ranges":[{"startOffset":6327623,"endOffset":6327725,"count":0}],"isBlockCoverage":false},{"functionName":"reportAndStoreErrors","ranges":[{"startOffset":6327728,"endOffset":6327940,"count":0}],"isBlockCoverage":false},{"functionName":"reportParseConfigFileDiagnostic","ranges":[{"startOffset":6327943,"endOffset":6328076,"count":0}],"isBlockCoverage":false},{"functionName":"reportErrorSummary","ranges":[{"startOffset":6328079,"endOffset":6329585,"count":0}],"isBlockCoverage":false},{"functionName":"reportBuildQueue","ranges":[{"startOffset":6329588,"endOffset":6329814,"count":0}],"isBlockCoverage":false},{"functionName":"reportUpToDateStatus","ranges":[{"startOffset":6329817,"endOffset":6334833,"count":0}],"isBlockCoverage":false},{"functionName":"verboseReportProjectStatus","ranges":[{"startOffset":6334836,"endOffset":6335006,"count":0}],"isBlockCoverage":false},{"functionName":"src/compiler/tsbuildPublic.ts","ranges":[{"startOffset":6335102,"endOffset":6335769,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6335362,"endOffset":6335731,"count":1}],"isBlockCoverage":true},{"functionName":"src/compiler/_namespaces/ts.ts","ranges":[{"startOffset":6335842,"endOffset":6337738,"count":1}],"isBlockCoverage":true},{"functionName":"hasArgument","ranges":[{"startOffset":6337776,"endOffset":6337860,"count":0}],"isBlockCoverage":false},{"functionName":"findArgument","ranges":[{"startOffset":6337863,"endOffset":6338039,"count":0}],"isBlockCoverage":false},{"functionName":"nowString","ranges":[{"startOffset":6338042,"endOffset":6338311,"count":0}],"isBlockCoverage":false},{"functionName":"indent2","ranges":[{"startOffset":6338314,"endOffset":6338395,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndented","ranges":[{"startOffset":6338398,"endOffset":6338489,"count":0}],"isBlockCoverage":false},{"functionName":"src/jsTyping/shared.ts","ranges":[{"startOffset":6338724,"endOffset":6339761,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6339234,"endOffset":6339694,"count":1}],"isBlockCoverage":true},{"functionName":"src/jsTyping/types.ts","ranges":[{"startOffset":6339828,"endOffset":6339881,"count":1}],"isBlockCoverage":true},{"functionName":"src/jsTyping/_namespaces/ts.server.ts","ranges":[{"startOffset":6339967,"endOffset":6340078,"count":1}],"isBlockCoverage":true},{"functionName":"isTypingUpToDate","ranges":[{"startOffset":6340118,"endOffset":6340410,"count":0}],"isBlockCoverage":false},{"functionName":"nonRelativeModuleNameForTypingCache","ranges":[{"startOffset":6340413,"endOffset":6340541,"count":0}],"isBlockCoverage":false},{"functionName":"loadSafeList","ranges":[{"startOffset":6340544,"endOffset":6340722,"count":0}],"isBlockCoverage":false},{"functionName":"loadTypesMap","ranges":[{"startOffset":6340725,"endOffset":6341016,"count":0}],"isBlockCoverage":false},{"functionName":"discoverTypings","ranges":[{"startOffset":6341019,"endOffset":6347609,"count":0}],"isBlockCoverage":false},{"functionName":"validatePackageName","ranges":[{"startOffset":6347612,"endOffset":6347765,"count":0}],"isBlockCoverage":false},{"functionName":"validatePackageNameWorker","ranges":[{"startOffset":6347768,"endOffset":6349050,"count":0}],"isBlockCoverage":false},{"functionName":"renderPackageNameValidationFailure","ranges":[{"startOffset":6349053,"endOffset":6349382,"count":0}],"isBlockCoverage":false},{"functionName":"renderPackageNameValidationFailureWorker","ranges":[{"startOffset":6349385,"endOffset":6350278,"count":0}],"isBlockCoverage":false},{"functionName":"src/jsTyping/jsTyping.ts","ranges":[{"startOffset":6350458,"endOffset":6352530,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6351575,"endOffset":6351599,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6351794,"endOffset":6352460,"count":1}],"isBlockCoverage":true},{"functionName":"NameValidationResult","ranges":[{"startOffset":6352675,"endOffset":6352701,"count":0}],"isBlockCoverage":false},{"functionName":"discoverTypings","ranges":[{"startOffset":6352724,"endOffset":6352745,"count":0}],"isBlockCoverage":false},{"functionName":"isTypingUpToDate","ranges":[{"startOffset":6352769,"endOffset":6352791,"count":0}],"isBlockCoverage":false},{"functionName":"loadSafeList","ranges":[{"startOffset":6352811,"endOffset":6352829,"count":0}],"isBlockCoverage":false},{"functionName":"loadTypesMap","ranges":[{"startOffset":6352849,"endOffset":6352867,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCoreModuleList","ranges":[{"startOffset":6352893,"endOffset":6352917,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCoreModules","ranges":[{"startOffset":6352940,"endOffset":6352961,"count":0}],"isBlockCoverage":false},{"functionName":"nonRelativeModuleNameForTypingCache","ranges":[{"startOffset":6353004,"endOffset":6353045,"count":0}],"isBlockCoverage":false},{"functionName":"prefixedNodeCoreModuleList","ranges":[{"startOffset":6353079,"endOffset":6353111,"count":0}],"isBlockCoverage":false},{"functionName":"renderPackageNameValidationFailure","ranges":[{"startOffset":6353153,"endOffset":6353193,"count":0}],"isBlockCoverage":false},{"functionName":"validatePackageName","ranges":[{"startOffset":6353220,"endOffset":6353245,"count":0}],"isBlockCoverage":false},{"functionName":"src/jsTyping/_namespaces/ts.JsTyping.ts","ranges":[{"startOffset":6353289,"endOffset":6353383,"count":1}],"isBlockCoverage":true},{"functionName":"src/jsTyping/_namespaces/ts.ts","ranges":[{"startOffset":6353456,"endOffset":6353586,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultFormatCodeSettings","ranges":[{"startOffset":6353623,"endOffset":6354800,"count":1},{"startOffset":6353774,"endOffset":6353781,"count":0}],"isBlockCoverage":true},{"functionName":"src/services/types.ts","ranges":[{"startOffset":6355311,"endOffset":6373916,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6355366,"endOffset":6355950,"count":1}],"isBlockCoverage":true},{"functionName":"StringScriptSnapshot","ranges":[{"startOffset":6355436,"endOffset":6355497,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":6355508,"endOffset":6355647,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":6355658,"endOffset":6355720,"count":0}],"isBlockCoverage":false},{"functionName":"getChangeRange","ranges":[{"startOffset":6355731,"endOffset":6355788,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":6355807,"endOffset":6355893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6356046,"endOffset":6356660,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6356754,"endOffset":6357135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6357222,"endOffset":6357553,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6357662,"endOffset":6357880,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6357964,"endOffset":6358211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6358288,"endOffset":6358679,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6358750,"endOffset":6358943,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6359010,"endOffset":6359304,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6359369,"endOffset":6359600,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6359667,"endOffset":6359892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6360032,"endOffset":6362368,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6362445,"endOffset":6363272,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6363345,"endOffset":6363609,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6363677,"endOffset":6363964,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6364029,"endOffset":6364816,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6364877,"endOffset":6365611,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6365675,"endOffset":6368140,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6368219,"endOffset":6369708,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6369793,"endOffset":6371503,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6371581,"endOffset":6373882,"count":1}],"isBlockCoverage":true},{"functionName":"getMeaningFromDeclaration","ranges":[{"startOffset":6373957,"endOffset":6375958,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromLocation","ranges":[{"startOffset":6375961,"endOffset":6377205,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromRightHandSideOfImportEquals","ranges":[{"startOffset":6377208,"endOffset":6377526,"count":0}],"isBlockCoverage":false},{"functionName":"isInRightSideOfInternalImportEqualsDeclaration","ranges":[{"startOffset":6377529,"endOffset":6377792,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReference","ranges":[{"startOffset":6377795,"endOffset":6377932,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedNameNamespaceReference","ranges":[{"startOffset":6377935,"endOffset":6378329,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessNamespaceReference","ranges":[{"startOffset":6378332,"endOffset":6379106,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReference","ranges":[{"startOffset":6379109,"endOffset":6379674,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionTarget","ranges":[{"startOffset":6379677,"endOffset":6379933,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionTarget","ranges":[{"startOffset":6379936,"endOffset":6380190,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpressionTarget","ranges":[{"startOffset":6380193,"endOffset":6380459,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateTag","ranges":[{"startOffset":6380462,"endOffset":6380712,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorTarget","ranges":[{"startOffset":6380715,"endOffset":6380961,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElementTagName","ranges":[{"startOffset":6380964,"endOffset":6381223,"count":0}],"isBlockCoverage":false},{"functionName":"selectExpressionOfCallOrNewExpressionOrDecorator","ranges":[{"startOffset":6381226,"endOffset":6381323,"count":0}],"isBlockCoverage":false},{"functionName":"selectTagOfTaggedTemplateExpression","ranges":[{"startOffset":6381326,"endOffset":6381403,"count":0}],"isBlockCoverage":false},{"functionName":"selectTagNameOfJsxOpeningLikeElement","ranges":[{"startOffset":6381406,"endOffset":6381488,"count":0}],"isBlockCoverage":false},{"functionName":"isCalleeWorker","ranges":[{"startOffset":6381491,"endOffset":6381902,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyAccess","ranges":[{"startOffset":6381905,"endOffset":6382016,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyOrElementAccess","ranges":[{"startOffset":6382019,"endOffset":6382184,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetLabel","ranges":[{"startOffset":6382187,"endOffset":6382495,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAccessExpressionWithName","ranges":[{"startOffset":6382498,"endOffset":6382697,"count":0}],"isBlockCoverage":false},{"functionName":"isJumpStatementTarget","ranges":[{"startOffset":6382700,"endOffset":6382883,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelOfLabeledStatement","ranges":[{"startOffset":6382886,"endOffset":6383065,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelName","ranges":[{"startOffset":6383068,"endOffset":6383175,"count":0}],"isBlockCoverage":false},{"functionName":"isTagName","ranges":[{"startOffset":6383178,"endOffset":6383313,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedName","ranges":[{"startOffset":6383316,"endOffset":6383471,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfPropertyAccess","ranges":[{"startOffset":6383474,"endOffset":6383640,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentExpressionOfElementAccess","ranges":[{"startOffset":6383643,"endOffset":6383830,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfModuleDeclaration","ranges":[{"startOffset":6383833,"endOffset":6383990,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfFunctionDeclaration","ranges":[{"startOffset":6383993,"endOffset":6384169,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralNameOfPropertyDeclarationOrIndexAccess","ranges":[{"startOffset":6384172,"endOffset":6384988,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":6384991,"endOffset":6385218,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerNode","ranges":[{"startOffset":6385221,"endOffset":6385934,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeKind","ranges":[{"startOffset":6385937,"endOffset":6390567,"count":0}],"isBlockCoverage":false},{"functionName":"isThis","ranges":[{"startOffset":6390570,"endOffset":6390842,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStartPositionForPosition","ranges":[{"startOffset":6390845,"endOffset":6391066,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRange","ranges":[{"startOffset":6391069,"endOffset":6391164,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRangeExclusive","ranges":[{"startOffset":6391167,"endOffset":6391318,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPosition","ranges":[{"startOffset":6391321,"endOffset":6391406,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPositionExclusive","ranges":[{"startOffset":6391409,"endOffset":6391501,"count":0}],"isBlockCoverage":false},{"functionName":"startEndContainsRange","ranges":[{"startOffset":6391504,"endOffset":6391610,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsStartEnd","ranges":[{"startOffset":6391613,"endOffset":6391719,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOverlapsWithStartEnd","ranges":[{"startOffset":6391722,"endOffset":6391847,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithStartEnd","ranges":[{"startOffset":6391850,"endOffset":6392009,"count":0}],"isBlockCoverage":false},{"functionName":"startEndOverlapsWithStartEnd","ranges":[{"startOffset":6392012,"endOffset":6392189,"count":0}],"isBlockCoverage":false},{"functionName":"positionBelongsToNode","ranges":[{"startOffset":6392192,"endOffset":6392386,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletedNode","ranges":[{"startOffset":6392389,"endOffset":6396748,"count":0}],"isBlockCoverage":false},{"functionName":"nodeEndsWith","ranges":[{"startOffset":6396751,"endOffset":6397191,"count":0}],"isBlockCoverage":false},{"functionName":"findListItemInfo","ranges":[{"startOffset":6397194,"endOffset":6397466,"count":0}],"isBlockCoverage":false},{"functionName":"hasChildOfKind","ranges":[{"startOffset":6397469,"endOffset":6397570,"count":0}],"isBlockCoverage":false},{"functionName":"findChildOfKind","ranges":[{"startOffset":6397573,"endOffset":6397692,"count":0}],"isBlockCoverage":false},{"functionName":"findContainingList","ranges":[{"startOffset":6397695,"endOffset":6397943,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier2","ranges":[{"startOffset":6397946,"endOffset":6398035,"count":0}],"isBlockCoverage":false},{"functionName":"isClassKeyword","ranges":[{"startOffset":6398038,"endOffset":6398121,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionKeyword","ranges":[{"startOffset":6398124,"endOffset":6398214,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForClass","ranges":[{"startOffset":6398217,"endOffset":6398685,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForFunction","ranges":[{"startOffset":6398688,"endOffset":6399159,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestorTypeNode","ranges":[{"startOffset":6399162,"endOffset":6399444,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParentOrAncestorTypeNode","ranges":[{"startOffset":6399447,"endOffset":6399875,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForDeclaration","ranges":[{"startOffset":6399878,"endOffset":6400406,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForImportDeclaration","ranges":[{"startOffset":6400409,"endOffset":6401198,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForExportDeclaration","ranges":[{"startOffset":6401201,"endOffset":6401703,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocationForHeritageClause","ranges":[{"startOffset":6401706,"endOffset":6401843,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedLocation","ranges":[{"startOffset":6401846,"endOffset":6407674,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedReferenceLocation","ranges":[{"startOffset":6407677,"endOffset":6407809,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRenameLocation","ranges":[{"startOffset":6407812,"endOffset":6407940,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingPropertyName","ranges":[{"startOffset":6407943,"endOffset":6408134,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingToken","ranges":[{"startOffset":6408137,"endOffset":6408439,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":6408442,"endOffset":6408726,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPositionWorker","ranges":[{"startOffset":6408729,"endOffset":6411160,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonJsxWhitespaceToken","ranges":[{"startOffset":6411163,"endOffset":6411552,"count":0}],"isBlockCoverage":false},{"functionName":"findTokenOnLeftOfPosition","ranges":[{"startOffset":6411555,"endOffset":6411878,"count":0}],"isBlockCoverage":false},{"functionName":"findNextToken","ranges":[{"startOffset":6411881,"endOffset":6412547,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingToken","ranges":[{"startOffset":6412550,"endOffset":6414749,"count":0}],"isBlockCoverage":false},{"functionName":"isNonWhitespaceToken","ranges":[{"startOffset":6414752,"endOffset":6414844,"count":0}],"isBlockCoverage":false},{"functionName":"findRightmostToken","ranges":[{"startOffset":6414847,"endOffset":6415288,"count":0}],"isBlockCoverage":false},{"functionName":"findRightmostChildNodeWithTokens","ranges":[{"startOffset":6415291,"endOffset":6415866,"count":0}],"isBlockCoverage":false},{"functionName":"isInString","ranges":[{"startOffset":6415869,"endOffset":6416328,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElementOrAttribute","ranges":[{"startOffset":6416331,"endOffset":6417087,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceOnlyJsxText","ranges":[{"startOffset":6417090,"endOffset":6417200,"count":0}],"isBlockCoverage":false},{"functionName":"isInTemplateString","ranges":[{"startOffset":6417203,"endOffset":6417405,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXText","ranges":[{"startOffset":6417408,"endOffset":6417884,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElement","ranges":[{"startOffset":6417887,"endOffset":6418747,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingMatchingToken","ranges":[{"startOffset":6418750,"endOffset":6419928,"count":0}],"isBlockCoverage":false},{"functionName":"removeOptionality","ranges":[{"startOffset":6419931,"endOffset":6420124,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyTypeArgumentPosition","ranges":[{"startOffset":6420127,"endOffset":6420485,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleGenericSignatures","ranges":[{"startOffset":6420488,"endOffset":6421048,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypeArgumentsInfo","ranges":[{"startOffset":6421051,"endOffset":6423636,"count":0}],"isBlockCoverage":false},{"functionName":"isInComment","ranges":[{"startOffset":6423639,"endOffset":6423867,"count":0}],"isBlockCoverage":false},{"functionName":"hasDocComment","ranges":[{"startOffset":6423870,"endOffset":6424023,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasTokens","ranges":[{"startOffset":6424026,"endOffset":6424158,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModifiers","ranges":[{"startOffset":6424161,"endOffset":6425302,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeArgumentOrTypeParameterList","ranges":[{"startOffset":6425305,"endOffset":6425673,"count":0}],"isBlockCoverage":false},{"functionName":"isComment","ranges":[{"startOffset":6425676,"endOffset":6425802,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrRegularExpressionOrTemplateLiteral","ranges":[{"startOffset":6425805,"endOffset":6426033,"count":0}],"isBlockCoverage":false},{"functionName":"areIntersectedTypesAvoidingStringReduction","ranges":[{"startOffset":6426036,"endOffset":6426194,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAndEmptyAnonymousObjectIntersection","ranges":[{"startOffset":6426197,"endOffset":6426541,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideTemplateLiteral","ranges":[{"startOffset":6426544,"endOffset":6426770,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessibilityModifier","ranges":[{"startOffset":6426773,"endOffset":6426994,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCompilerOptions","ranges":[{"startOffset":6426997,"endOffset":6427162,"count":10}],"isBlockCoverage":true},{"functionName":"isArrayLiteralOrObjectLiteralDestructuringPattern","ranges":[{"startOffset":6427165,"endOffset":6427848,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceComment","ranges":[{"startOffset":6427851,"endOffset":6428027,"count":0}],"isBlockCoverage":false},{"functionName":"isInNonReferenceComment","ranges":[{"startOffset":6428030,"endOffset":6428210,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceCommentWorker","ranges":[{"startOffset":6428213,"endOffset":6428537,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementSpanForContextToken","ranges":[{"startOffset":6428540,"endOffset":6428912,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromNode","ranges":[{"startOffset":6428915,"endOffset":6429073,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromStringLiteralLikeContent","ranges":[{"startOffset":6429076,"endOffset":6429266,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromNode","ranges":[{"startOffset":6429269,"endOffset":6429386,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromRange","ranges":[{"startOffset":6429389,"endOffset":6429493,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromSpan","ranges":[{"startOffset":6429496,"endOffset":6429602,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeFromStartLength","ranges":[{"startOffset":6429605,"endOffset":6429746,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChange","ranges":[{"startOffset":6429749,"endOffset":6429825,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeyword","ranges":[{"startOffset":6429828,"endOffset":6429903,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordToken","ranges":[{"startOffset":6429906,"endOffset":6429993,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordTokenOrIdentifier","ranges":[{"startOffset":6429996,"endOffset":6430130,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleSymbol","ranges":[{"startOffset":6430133,"endOffset":6430299,"count":0}],"isBlockCoverage":false},{"functionName":"nodeSeenTracker","ranges":[{"startOffset":6430302,"endOffset":6430464,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotText","ranges":[{"startOffset":6430467,"endOffset":6430549,"count":0}],"isBlockCoverage":false},{"functionName":"repeatString","ranges":[{"startOffset":6430552,"endOffset":6430696,"count":0}],"isBlockCoverage":false},{"functionName":"skipConstraint","ranges":[{"startOffset":6430699,"endOffset":6430807,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromPropertyName","ranges":[{"startOffset":6430810,"endOffset":6431071,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsModules","ranges":[{"startOffset":6431074,"endOffset":6431300,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsEsModules","ranges":[{"startOffset":6431303,"endOffset":6431500,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsIndicateEsModules","ranges":[{"startOffset":6431503,"endOffset":6431690,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierResolutionHost","ranges":[{"startOffset":6431693,"endOffset":6432975,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierResolverHost","ranges":[{"startOffset":6432978,"endOffset":6433192,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionUsesNodeModules","ranges":[{"startOffset":6433195,"endOffset":6433428,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportIfNecessary","ranges":[{"startOffset":6433431,"endOffset":6433680,"count":0}],"isBlockCoverage":false},{"functionName":"makeImport","ranges":[{"startOffset":6433683,"endOffset":6434210,"count":0}],"isBlockCoverage":false},{"functionName":"makeStringLiteral","ranges":[{"startOffset":6434213,"endOffset":6434350,"count":0}],"isBlockCoverage":false},{"functionName":"quotePreferenceFromString","ranges":[{"startOffset":6434353,"endOffset":6434494,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotePreference","ranges":[{"startOffset":6434497,"endOffset":6435000,"count":0}],"isBlockCoverage":false},{"functionName":"getQuoteFromPreference","ranges":[{"startOffset":6435003,"endOffset":6435215,"count":0}],"isBlockCoverage":false},{"functionName":"symbolNameNoDefault","ranges":[{"startOffset":6435218,"endOffset":6435394,"count":0}],"isBlockCoverage":false},{"functionName":"symbolEscapedNameNoDefault","ranges":[{"startOffset":6435397,"endOffset":6435739,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierLike","ranges":[{"startOffset":6435742,"endOffset":6436103,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingElementWithoutPropertyName","ranges":[{"startOffset":6436106,"endOffset":6436341,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolFromBindingElement","ranges":[{"startOffset":6436344,"endOffset":6436591,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNodeInSpan","ranges":[{"startOffset":6436594,"endOffset":6436854,"count":0}],"isBlockCoverage":false},{"functionName":"spanContainsNode","ranges":[{"startOffset":6436857,"endOffset":6437008,"count":0}],"isBlockCoverage":false},{"functionName":"findModifier","ranges":[{"startOffset":6437011,"endOffset":6437141,"count":0}],"isBlockCoverage":false},{"functionName":"insertImports","ranges":[{"startOffset":6437144,"endOffset":6439456,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeKeywordOfTypeOnlyImport","ranges":[{"startOffset":6439459,"endOffset":6439650,"count":0}],"isBlockCoverage":false},{"functionName":"textSpansEqual","ranges":[{"startOffset":6439653,"endOffset":6439759,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpansEqual","ranges":[{"startOffset":6439762,"endOffset":6439996,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentSpansEqualityComparer","ranges":[{"startOffset":6439999,"endOffset":6440149,"count":0}],"isBlockCoverage":false},{"functionName":"forEachUnique","ranges":[{"startOffset":6440152,"endOffset":6440460,"count":0}],"isBlockCoverage":false},{"functionName":"isTextWhiteSpaceLike","ranges":[{"startOffset":6440463,"endOffset":6440672,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocation","ranges":[{"startOffset":6440675,"endOffset":6440907,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpan","ranges":[{"startOffset":6440910,"endOffset":6441772,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpan","ranges":[{"startOffset":6441775,"endOffset":6442423,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstDeclarationOfSymbolParameter","ranges":[{"startOffset":6442426,"endOffset":6442744,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayPartWriter","ranges":[{"startOffset":6442747,"endOffset":6445740,"count":1}],"isBlockCoverage":true},{"functionName":"unknownWrite","ranges":[{"startOffset":6442971,"endOffset":6443011,"count":0}],"isBlockCoverage":false},{"functionName":"displayParts","ranges":[{"startOffset":6443046,"endOffset":6443503,"count":0}],"isBlockCoverage":false},{"functionName":"writeKeyword","ranges":[{"startOffset":6443525,"endOffset":6443567,"count":0}],"isBlockCoverage":false},{"functionName":"writeOperator","ranges":[{"startOffset":6443590,"endOffset":6443634,"count":0}],"isBlockCoverage":false},{"functionName":"writePunctuation","ranges":[{"startOffset":6443660,"endOffset":6443707,"count":0}],"isBlockCoverage":false},{"functionName":"writeTrailingSemicolon","ranges":[{"startOffset":6443739,"endOffset":6443786,"count":0}],"isBlockCoverage":false},{"functionName":"writeSpace","ranges":[{"startOffset":6443806,"endOffset":6443847,"count":0}],"isBlockCoverage":false},{"functionName":"writeStringLiteral","ranges":[{"startOffset":6443875,"endOffset":6443923,"count":0}],"isBlockCoverage":false},{"functionName":"writeParameter","ranges":[{"startOffset":6443947,"endOffset":6443996,"count":0}],"isBlockCoverage":false},{"functionName":"writeProperty","ranges":[{"startOffset":6444019,"endOffset":6444067,"count":0}],"isBlockCoverage":false},{"functionName":"writeLiteral","ranges":[{"startOffset":6444089,"endOffset":6444137,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":6444251,"endOffset":6444259,"count":0}],"isBlockCoverage":false},{"functionName":"getTextPos","ranges":[{"startOffset":6444279,"endOffset":6444286,"count":0}],"isBlockCoverage":false},{"functionName":"getColumn","ranges":[{"startOffset":6444305,"endOffset":6444312,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":6444329,"endOffset":6444336,"count":0}],"isBlockCoverage":false},{"functionName":"isAtStartOfLine","ranges":[{"startOffset":6444361,"endOffset":6444372,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingWhitespace","ranges":[{"startOffset":6444403,"endOffset":6444414,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingComment","ranges":[{"startOffset":6444442,"endOffset":6444453,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":6444504,"endOffset":6444517,"count":0}],"isBlockCoverage":false},{"functionName":"increaseIndent","ranges":[{"startOffset":6444541,"endOffset":6444575,"count":0}],"isBlockCoverage":false},{"functionName":"decreaseIndent","ranges":[{"startOffset":6444599,"endOffset":6444633,"count":0}],"isBlockCoverage":false},{"functionName":"writeIndent","ranges":[{"startOffset":6444671,"endOffset":6445025,"count":0}],"isBlockCoverage":false},{"functionName":"writeKind","ranges":[{"startOffset":6445030,"endOffset":6445228,"count":0}],"isBlockCoverage":false},{"functionName":"writeSymbol","ranges":[{"startOffset":6445233,"endOffset":6445436,"count":0}],"isBlockCoverage":false},{"functionName":"writeLine","ranges":[{"startOffset":6445441,"endOffset":6445614,"count":0}],"isBlockCoverage":false},{"functionName":"resetWriter","ranges":[{"startOffset":6445619,"endOffset":6445736,"count":1}],"isBlockCoverage":true},{"functionName":"symbolPart","ranges":[{"startOffset":6445743,"endOffset":6447082,"count":0}],"isBlockCoverage":false},{"functionName":"displayPart","ranges":[{"startOffset":6447085,"endOffset":6447179,"count":2}],"isBlockCoverage":true},{"functionName":"spacePart","ranges":[{"startOffset":6447182,"endOffset":6447253,"count":1}],"isBlockCoverage":true},{"functionName":"keywordPart","ranges":[{"startOffset":6447256,"endOffset":6447350,"count":0}],"isBlockCoverage":false},{"functionName":"punctuationPart","ranges":[{"startOffset":6447353,"endOffset":6447456,"count":1}],"isBlockCoverage":true},{"functionName":"operatorPart","ranges":[{"startOffset":6447459,"endOffset":6447556,"count":0}],"isBlockCoverage":false},{"functionName":"parameterNamePart","ranges":[{"startOffset":6447559,"endOffset":6447651,"count":0}],"isBlockCoverage":false},{"functionName":"propertyNamePart","ranges":[{"startOffset":6447654,"endOffset":6447744,"count":0}],"isBlockCoverage":false},{"functionName":"textOrKeywordPart","ranges":[{"startOffset":6447747,"endOffset":6447888,"count":0}],"isBlockCoverage":false},{"functionName":"textPart","ranges":[{"startOffset":6447891,"endOffset":6447965,"count":0}],"isBlockCoverage":false},{"functionName":"typeAliasNamePart","ranges":[{"startOffset":6447968,"endOffset":6448055,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterNamePart","ranges":[{"startOffset":6448058,"endOffset":6448158,"count":0}],"isBlockCoverage":false},{"functionName":"linkTextPart","ranges":[{"startOffset":6448161,"endOffset":6448243,"count":0}],"isBlockCoverage":false},{"functionName":"linkNamePart","ranges":[{"startOffset":6448246,"endOffset":6448502,"count":0}],"isBlockCoverage":false},{"functionName":"linkPart","ranges":[{"startOffset":6448505,"endOffset":6448579,"count":0}],"isBlockCoverage":false},{"functionName":"buildLinkParts","ranges":[{"startOffset":6448582,"endOffset":6449861,"count":0}],"isBlockCoverage":false},{"functionName":"skipSeparatorFromLinkText","ranges":[{"startOffset":6449864,"endOffset":6450122,"count":0}],"isBlockCoverage":false},{"functionName":"findLinkNameEnd","ranges":[{"startOffset":6450125,"endOffset":6450677,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineOrDefaultFromHost","ranges":[{"startOffset":6450680,"endOffset":6450910,"count":0}],"isBlockCoverage":false},{"functionName":"lineBreakPart","ranges":[{"startOffset":6450913,"endOffset":6450992,"count":0}],"isBlockCoverage":false},{"functionName":"mapToDisplayParts","ranges":[{"startOffset":6450995,"endOffset":6451202,"count":0}],"isBlockCoverage":false},{"functionName":"typeToDisplayParts","ranges":[{"startOffset":6451205,"endOffset":6451510,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToDisplayParts","ranges":[{"startOffset":6451513,"endOffset":6451803,"count":0}],"isBlockCoverage":false},{"functionName":"signatureToDisplayParts","ranges":[{"startOffset":6451806,"endOffset":6452293,"count":0}],"isBlockCoverage":false},{"functionName":"nodeToDisplayParts","ranges":[{"startOffset":6452296,"endOffset":6452607,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifierName","ranges":[{"startOffset":6452610,"endOffset":6452785,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":6452788,"endOffset":6452923,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolTarget","ranges":[{"startOffset":6452926,"endOffset":6453257,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasSymbol","ranges":[{"startOffset":6453260,"endOffset":6453351,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueSymbolId","ranges":[{"startOffset":6453354,"endOffset":6453455,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNonSpaceCharacterPosition","ranges":[{"startOffset":6453458,"endOffset":6453628,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedingNonSpaceCharacterPosition","ranges":[{"startOffset":6453631,"endOffset":6453832,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClone","ranges":[{"startOffset":6453835,"endOffset":6454066,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWithReplacements","ranges":[{"startOffset":6454069,"endOffset":6454433,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWorker","ranges":[{"startOffset":6454436,"endOffset":6455403,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClones","ranges":[{"startOffset":6455406,"endOffset":6455702,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClonesWithReplacements","ranges":[{"startOffset":6455705,"endOffset":6455945,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingAndTrailingTrivia","ranges":[{"startOffset":6455948,"endOffset":6456068,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingTrivia","ranges":[{"startOffset":6456071,"endOffset":6456193,"count":0}],"isBlockCoverage":false},{"functionName":"suppressTrailingTrivia","ranges":[{"startOffset":6456196,"endOffset":6456319,"count":0}],"isBlockCoverage":false},{"functionName":"copyComments","ranges":[{"startOffset":6456322,"endOffset":6456724,"count":0}],"isBlockCoverage":false},{"functionName":"hasLeadingLineBreak","ranges":[{"startOffset":6456727,"endOffset":6456982,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlagsRecursively","ranges":[{"startOffset":6456985,"endOffset":6457178,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstChild","ranges":[{"startOffset":6457181,"endOffset":6457263,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueName","ranges":[{"startOffset":6457266,"endOffset":6457482,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocation","ranges":[{"startOffset":6457485,"endOffset":6458192,"count":0}],"isBlockCoverage":false},{"functionName":"copyLeadingComments","ranges":[{"startOffset":6458195,"endOffset":6458472,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingComments","ranges":[{"startOffset":6458475,"endOffset":6458755,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingAsLeadingComments","ranges":[{"startOffset":6458758,"endOffset":6459046,"count":0}],"isBlockCoverage":false},{"functionName":"getAddCommentsFunction","ranges":[{"startOffset":6459049,"endOffset":6459458,"count":0}],"isBlockCoverage":false},{"functionName":"indexInTextChange","ranges":[{"startOffset":6459461,"endOffset":6459757,"count":0}],"isBlockCoverage":false},{"functionName":"needsParentheses","ranges":[{"startOffset":6459760,"endOffset":6460065,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParent","ranges":[{"startOffset":6460068,"endOffset":6460770,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":6460773,"endOffset":6461071,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorKind","ranges":[{"startOffset":6461074,"endOffset":6461379,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrTemplate","ranges":[{"startOffset":6461382,"endOffset":6461691,"count":0}],"isBlockCoverage":false},{"functionName":"hasIndexSignature","ranges":[{"startOffset":6461694,"endOffset":6461803,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchedType","ranges":[{"startOffset":6461806,"endOffset":6461932,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNodeIfAccessible","ranges":[{"startOffset":6461935,"endOffset":6462866,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingCommaOrSemicolonOrASI","ranges":[{"startOffset":6462869,"endOffset":6463134,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingFunctionBlockOrSemicolonOrASI","ranges":[{"startOffset":6463137,"endOffset":6463402,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingModuleBlockOrSemicolonOrASI","ranges":[{"startOffset":6463405,"endOffset":6463524,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingSemicolonOrASI","ranges":[{"startOffset":6463527,"endOffset":6464200,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsASICandidate","ranges":[{"startOffset":6464203,"endOffset":6465617,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsASICandidate","ranges":[{"startOffset":6465620,"endOffset":6465956,"count":0}],"isBlockCoverage":false},{"functionName":"probablyUsesSemicolons","ranges":[{"startOffset":6465959,"endOffset":6467428,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDirectories","ranges":[{"startOffset":6467431,"endOffset":6467566,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadDirectory","ranges":[{"startOffset":6467569,"endOffset":6467752,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileExists","ranges":[{"startOffset":6467755,"endOffset":6467858,"count":0}],"isBlockCoverage":false},{"functionName":"tryDirectoryExists","ranges":[{"startOffset":6467861,"endOffset":6467989,"count":0}],"isBlockCoverage":false},{"functionName":"tryAndIgnoreErrors","ranges":[{"startOffset":6467992,"endOffset":6468099,"count":0}],"isBlockCoverage":false},{"functionName":"tryIOAndConsumeErrors","ranges":[{"startOffset":6468102,"endOffset":6468237,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJsons","ranges":[{"startOffset":6468240,"endOffset":6468657,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJson","ranges":[{"startOffset":6468660,"endOffset":6469023,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":6469026,"endOffset":6469539,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfo","ranges":[{"startOffset":6469542,"endOffset":6471023,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonImportFilter","ranges":[{"startOffset":6471026,"endOffset":6475497,"count":0}],"isBlockCoverage":false},{"functionName":"consumesNodeCoreModules","ranges":[{"startOffset":6475500,"endOffset":6475648,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":6475651,"endOffset":6475775,"count":0}],"isBlockCoverage":false},{"functionName":"isDiagnosticWithLocation","ranges":[{"startOffset":6475778,"endOffset":6475931,"count":0}],"isBlockCoverage":false},{"functionName":"findDiagnosticForNode","ranges":[{"startOffset":6475934,"endOffset":6476425,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWithinSpan","ranges":[{"startOffset":6476428,"endOffset":6477162,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContextSpan","ranges":[{"startOffset":6477165,"endOffset":6477340,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanExpression","ranges":[{"startOffset":6477343,"endOffset":6477772,"count":0}],"isBlockCoverage":false},{"functionName":"mapOneOrMany","ranges":[{"startOffset":6477775,"endOffset":6477964,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrOnly","ranges":[{"startOffset":6477967,"endOffset":6478078,"count":0}],"isBlockCoverage":false},{"functionName":"getNamesForExportedSymbol","ranges":[{"startOffset":6478081,"endOffset":6478842,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportedSymbol","ranges":[{"startOffset":6478845,"endOffset":6479179,"count":0}],"isBlockCoverage":false},{"functionName":"needsNameFromDeclaration","ranges":[{"startOffset":6479182,"endOffset":6479391,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportNameFromDeclaration","ranges":[{"startOffset":6479394,"endOffset":6479958,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolParentOrFail","ranges":[{"startOffset":6479961,"endOffset":6480511,"count":0}],"isBlockCoverage":false},{"functionName":"stringContainsAt","ranges":[{"startOffset":6480514,"endOffset":6480858,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUnderscore","ranges":[{"startOffset":6480861,"endOffset":6480948,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalDeclaration","ranges":[{"startOffset":6480951,"endOffset":6481047,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalDeclaration","ranges":[{"startOffset":6481050,"endOffset":6481393,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecatedDeclaration","ranges":[{"startOffset":6481396,"endOffset":6481526,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseUriStyleNodeCoreModules","ranges":[{"startOffset":6481529,"endOffset":6481854,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineKind","ranges":[{"startOffset":6481857,"endOffset":6481994,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticToString","ranges":[{"startOffset":6481997,"endOffset":6482173,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettingsForWriting","ranges":[{"startOffset":6482176,"endOffset":6482650,"count":0}],"isBlockCoverage":false},{"functionName":"jsxModeNeedsExplicitImport","ranges":[{"startOffset":6482653,"endOffset":6482764,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileFromLibrary","ranges":[{"startOffset":6482767,"endOffset":6482922,"count":0}],"isBlockCoverage":false},{"functionName":"newCaseClauseTracker","ranges":[{"startOffset":6482925,"endOffset":6484939,"count":0}],"isBlockCoverage":false},{"functionName":"fileShouldUseJavaScriptRequire","ranges":[{"startOffset":6484942,"endOffset":6486158,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/utilities.ts","ranges":[{"startOffset":6486357,"endOffset":6488385,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6486569,"endOffset":6486968,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6487775,"endOffset":6487977,"count":1}],"isBlockCoverage":true},{"functionName":"createCacheableExportInfoMap","ranges":[{"startOffset":6488430,"endOffset":6498249,"count":0}],"isBlockCoverage":false},{"functionName":"isImportableFile","ranges":[{"startOffset":6498252,"endOffset":6499796,"count":0}],"isBlockCoverage":false},{"functionName":"isImportablePath","ranges":[{"startOffset":6499799,"endOffset":6500338,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModuleToImportFrom","ranges":[{"startOffset":6500341,"endOffset":6502003,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModule","ranges":[{"startOffset":6502006,"endOffset":6503526,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfoMap","ranges":[{"startOffset":6503529,"endOffset":6506414,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportInfo","ranges":[{"startOffset":6506417,"endOffset":6506784,"count":0}],"isBlockCoverage":false},{"functionName":"isImportableSymbol","ranges":[{"startOffset":6506787,"endOffset":6506984,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportWorker","ranges":[{"startOffset":6506987,"endOffset":6507433,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultExportInfoWorker","ranges":[{"startOffset":6507436,"endOffset":6508401,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportDefault","ranges":[{"startOffset":6508404,"endOffset":6508977,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/exportInfoMap.ts","ranges":[{"startOffset":6509047,"endOffset":6509836,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6509157,"endOffset":6509457,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6509514,"endOffset":6509810,"count":1}],"isBlockCoverage":true},{"functionName":"createClassifier","ranges":[{"startOffset":6509878,"endOffset":6513960,"count":0}],"isBlockCoverage":false},{"functionName":"getNewEndOfLineState","ranges":[{"startOffset":6513963,"endOffset":6515456,"count":0}],"isBlockCoverage":false},{"functionName":"pushEncodedClassification","ranges":[{"startOffset":6515459,"endOffset":6515800,"count":0}],"isBlockCoverage":false},{"functionName":"convertClassificationsToResult","ranges":[{"startOffset":6515803,"endOffset":6516699,"count":0}],"isBlockCoverage":false},{"functionName":"convertClassification","ranges":[{"startOffset":6516702,"endOffset":6517671,"count":0}],"isBlockCoverage":false},{"functionName":"canFollow","ranges":[{"startOffset":6517674,"endOffset":6518058,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefixFromLexState","ranges":[{"startOffset":6518061,"endOffset":6518790,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpressionOperatorToken","ranges":[{"startOffset":6518793,"endOffset":6520629,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpressionOperatorToken","ranges":[{"startOffset":6520632,"endOffset":6520980,"count":0}],"isBlockCoverage":false},{"functionName":"classFromKind","ranges":[{"startOffset":6520983,"endOffset":6522127,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":6522130,"endOffset":6522386,"count":0}],"isBlockCoverage":false},{"functionName":"checkForClassificationCancellation","ranges":[{"startOffset":6522389,"endOffset":6522826,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":6522829,"endOffset":6523917,"count":0}],"isBlockCoverage":false},{"functionName":"classifySymbol","ranges":[{"startOffset":6523920,"endOffset":6524904,"count":0}],"isBlockCoverage":false},{"functionName":"hasValueSideModule","ranges":[{"startOffset":6524907,"endOffset":6525101,"count":0}],"isBlockCoverage":false},{"functionName":"getClassificationTypeName","ranges":[{"startOffset":6525104,"endOffset":6527252,"count":0}],"isBlockCoverage":false},{"functionName":"convertClassificationsToSpans","ranges":[{"startOffset":6527255,"endOffset":6527667,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications","ranges":[{"startOffset":6527670,"endOffset":6527864,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":6527867,"endOffset":6543002,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/classifier.ts","ranges":[{"startOffset":6543059,"endOffset":6543706,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6543655,"endOffset":6543671,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6543681,"endOffset":6543691,"count":13}],"isBlockCoverage":true},{"functionName":"src/services/documentHighlights.ts","ranges":[{"startOffset":6543824,"endOffset":6563190,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6543910,"endOffset":6563133,"count":1}],"isBlockCoverage":true},{"functionName":"getDocumentHighlights","ranges":[{"startOffset":6543945,"endOffset":6544723,"count":0}],"isBlockCoverage":false},{"functionName":"getHighlightSpanForNode","ranges":[{"startOffset":6544807,"endOffset":6545044,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDocumentHighlights","ranges":[{"startOffset":6545053,"endOffset":6546562,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticDocumentHighlights","ranges":[{"startOffset":6546571,"endOffset":6546798,"count":0}],"isBlockCoverage":false},{"functionName":"getHighlightSpans","ranges":[{"startOffset":6546807,"endOffset":6550356,"count":0}],"isBlockCoverage":false},{"functionName":"aggregateOwnedThrowStatements","ranges":[{"startOffset":6550365,"endOffset":6550925,"count":0}],"isBlockCoverage":false},{"functionName":"getThrowStatementOwner","ranges":[{"startOffset":6550934,"endOffset":6551439,"count":0}],"isBlockCoverage":false},{"functionName":"aggregateAllBreakAndContinueStatements","ranges":[{"startOffset":6551448,"endOffset":6551669,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapChildren","ranges":[{"startOffset":6551678,"endOffset":6551966,"count":0}],"isBlockCoverage":false},{"functionName":"ownsBreakOrContinueStatement","ranges":[{"startOffset":6551975,"endOffset":6552165,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakOrContinueOwner","ranges":[{"startOffset":6552174,"endOffset":6552898,"count":0}],"isBlockCoverage":false},{"functionName":"getModifierOccurrences","ranges":[{"startOffset":6552907,"endOffset":6553110,"count":0}],"isBlockCoverage":false},{"functionName":"getNodesToSearchForModifier","ranges":[{"startOffset":6553119,"endOffset":6554807,"count":0}],"isBlockCoverage":false},{"functionName":"pushKeywordIf","ranges":[{"startOffset":6554816,"endOffset":6555038,"count":0}],"isBlockCoverage":false},{"functionName":"getLoopBreakContinueOccurrences","ranges":[{"startOffset":6555047,"endOffset":6555958,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakOrContinueStatementOccurrences","ranges":[{"startOffset":6555967,"endOffset":6556627,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchCaseDefaultOccurrences","ranges":[{"startOffset":6556636,"endOffset":6557331,"count":0}],"isBlockCoverage":false},{"functionName":"getTryCatchFinallyOccurrences","ranges":[{"startOffset":6557340,"endOffset":6557953,"count":0}],"isBlockCoverage":false},{"functionName":"getThrowOccurrences","ranges":[{"startOffset":6557962,"endOffset":6558638,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnOccurrences","ranges":[{"startOffset":6558647,"endOffset":6559288,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncAndAwaitOccurrences","ranges":[{"startOffset":6559297,"endOffset":6559993,"count":0}],"isBlockCoverage":false},{"functionName":"getYieldOccurrences","ranges":[{"startOffset":6560002,"endOffset":6560506,"count":0}],"isBlockCoverage":false},{"functionName":"traverseWithoutCrossingFunction","ranges":[{"startOffset":6560515,"endOffset":6560874,"count":0}],"isBlockCoverage":false},{"functionName":"getIfElseOccurrences","ranges":[{"startOffset":6560883,"endOffset":6562092,"count":0}],"isBlockCoverage":false},{"functionName":"getIfElseKeywords","ranges":[{"startOffset":6562101,"endOffset":6562933,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledBy","ranges":[{"startOffset":6562942,"endOffset":6563125,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentRegistryEntry","ranges":[{"startOffset":6563238,"endOffset":6563314,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistry","ranges":[{"startOffset":6563317,"endOffset":6563525,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistryInternal","ranges":[{"startOffset":6563528,"endOffset":6572601,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilationSettings","ranges":[{"startOffset":6572604,"endOffset":6572740,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentRegistryBucketKeyWithMode","ranges":[{"startOffset":6572743,"endOffset":6572847,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/documentRegistry.ts","ranges":[{"startOffset":6572890,"endOffset":6572972,"count":1}],"isBlockCoverage":true},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":6573025,"endOffset":6573904,"count":0}],"isBlockCoverage":false},{"functionName":"getPathUpdater","ranges":[{"startOffset":6573907,"endOffset":6574799,"count":0}],"isBlockCoverage":false},{"functionName":"makeCorrespondingRelativeChange","ranges":[{"startOffset":6574802,"endOffset":6575009,"count":0}],"isBlockCoverage":false},{"functionName":"updateTsconfigFiles","ranges":[{"startOffset":6575012,"endOffset":6578440,"count":0}],"isBlockCoverage":false},{"functionName":"updateImports","ranges":[{"startOffset":6578443,"endOffset":6580534,"count":0}],"isBlockCoverage":false},{"functionName":"combineNormal","ranges":[{"startOffset":6580537,"endOffset":6580633,"count":0}],"isBlockCoverage":false},{"functionName":"combinePathsSafe","ranges":[{"startOffset":6580636,"endOffset":6580748,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileToImport","ranges":[{"startOffset":6580751,"endOffset":6581694,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileToImportFromResolved","ranges":[{"startOffset":6581697,"endOffset":6582934,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportsWorker","ranges":[{"startOffset":6582937,"endOffset":6583609,"count":0}],"isBlockCoverage":false},{"functionName":"createStringRange","ranges":[{"startOffset":6583612,"endOffset":6583731,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProperty","ranges":[{"startOffset":6583734,"endOffset":6584037,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/getEditsForFileRename.ts","ranges":[{"startOffset":6584085,"endOffset":6584172,"count":1}],"isBlockCoverage":true},{"functionName":"createPatternMatch","ranges":[{"startOffset":6584218,"endOffset":6584328,"count":0}],"isBlockCoverage":false},{"functionName":"createPatternMatcher","ranges":[{"startOffset":6584331,"endOffset":6585411,"count":0}],"isBlockCoverage":false},{"functionName":"getFullMatch","ranges":[{"startOffset":6585414,"endOffset":6586049,"count":0}],"isBlockCoverage":false},{"functionName":"getWordSpans","ranges":[{"startOffset":6586052,"endOffset":6586260,"count":0}],"isBlockCoverage":false},{"functionName":"matchTextChunk","ranges":[{"startOffset":6586263,"endOffset":6588241,"count":0}],"isBlockCoverage":false},{"functionName":"matchSegment","ranges":[{"startOffset":6588244,"endOffset":6588817,"count":0}],"isBlockCoverage":false},{"functionName":"betterMatch","ranges":[{"startOffset":6588820,"endOffset":6588892,"count":0}],"isBlockCoverage":false},{"functionName":"compareMatches","ranges":[{"startOffset":6588895,"endOffset":6589103,"count":0}],"isBlockCoverage":false},{"functionName":"partStartsWith","ranges":[{"startOffset":6589106,"endOffset":6589449,"count":0}],"isBlockCoverage":false},{"functionName":"equalChars","ranges":[{"startOffset":6589452,"endOffset":6589578,"count":0}],"isBlockCoverage":false},{"functionName":"tryCamelCaseMatch","ranges":[{"startOffset":6589581,"endOffset":6591134,"count":0}],"isBlockCoverage":false},{"functionName":"createSegment","ranges":[{"startOffset":6591137,"endOffset":6591294,"count":0}],"isBlockCoverage":false},{"functionName":"isUpperCaseLetter","ranges":[{"startOffset":6591297,"endOffset":6591605,"count":0}],"isBlockCoverage":false},{"functionName":"isLowerCaseLetter","ranges":[{"startOffset":6591608,"endOffset":6591917,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfIgnoringCase","ranges":[{"startOffset":6591920,"endOffset":6592205,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase2","ranges":[{"startOffset":6592208,"endOffset":6592469,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit2","ranges":[{"startOffset":6592472,"endOffset":6592550,"count":0}],"isBlockCoverage":false},{"functionName":"isWordChar","ranges":[{"startOffset":6592553,"endOffset":6592699,"count":0}],"isBlockCoverage":false},{"functionName":"breakPatternIntoTextChunks","ranges":[{"startOffset":6592702,"endOffset":6593326,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChunk","ranges":[{"startOffset":6593329,"endOffset":6593559,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoCharacterSpans","ranges":[{"startOffset":6593562,"endOffset":6593691,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoWordSpans","ranges":[{"startOffset":6593694,"endOffset":6593817,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoSpans","ranges":[{"startOffset":6593820,"endOffset":6594845,"count":0}],"isBlockCoverage":false},{"functionName":"charIsPunctuation","ranges":[{"startOffset":6594848,"endOffset":6595629,"count":0}],"isBlockCoverage":false},{"functionName":"isAllPunctuation","ranges":[{"startOffset":6595632,"endOffset":6595782,"count":0}],"isBlockCoverage":false},{"functionName":"transitionFromUpperToLower","ranges":[{"startOffset":6595785,"endOffset":6596086,"count":0}],"isBlockCoverage":false},{"functionName":"transitionFromLowerToUpper","ranges":[{"startOffset":6596089,"endOffset":6596362,"count":0}],"isBlockCoverage":false},{"functionName":"everyInRange","ranges":[{"startOffset":6596365,"endOffset":6596525,"count":0}],"isBlockCoverage":false},{"functionName":"every2","ranges":[{"startOffset":6596528,"endOffset":6596655,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/patternMatcher.ts","ranges":[{"startOffset":6596720,"endOffset":6597229,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6596837,"endOffset":6597197,"count":1}],"isBlockCoverage":true},{"functionName":"preProcessFile","ranges":[{"startOffset":6597271,"endOffset":6609182,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/preProcess.ts","ranges":[{"startOffset":6609219,"endOffset":6609295,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapper","ranges":[{"startOffset":6609337,"endOffset":6613388,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":6613391,"endOffset":6614653,"count":0}],"isBlockCoverage":false},{"functionName":"convertDocumentToSourceMapper","ranges":[{"startOffset":6614656,"endOffset":6615025,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFileLike","ranges":[{"startOffset":6615028,"endOffset":6615252,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/sourcemaps.ts","ranges":[{"startOffset":6615312,"endOffset":6615497,"count":1}],"isBlockCoverage":true},{"functionName":"computeSuggestionDiagnostics","ranges":[{"startOffset":6615550,"endOffset":6619034,"count":0}],"isBlockCoverage":false},{"functionName":"containsTopLevelCommonjs","ranges":[{"startOffset":6619037,"endOffset":6619962,"count":0}],"isBlockCoverage":false},{"functionName":"propertyAccessLeftHandSide","ranges":[{"startOffset":6619965,"endOffset":6620110,"count":0}],"isBlockCoverage":false},{"functionName":"importNameForConvertToDefaultImport","ranges":[{"startOffset":6620113,"endOffset":6620631,"count":0}],"isBlockCoverage":false},{"functionName":"addConvertToAsyncFunctionDiagnostics","ranges":[{"startOffset":6620634,"endOffset":6621058,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleFunction","ranges":[{"startOffset":6621061,"endOffset":6621275,"count":0}],"isBlockCoverage":false},{"functionName":"returnsPromise","ranges":[{"startOffset":6621278,"endOffset":6621551,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorNodeFromCommonJsIndicator","ranges":[{"startOffset":6621554,"endOffset":6621740,"count":0}],"isBlockCoverage":false},{"functionName":"hasReturnStatementWithPromiseHandler","ranges":[{"startOffset":6621743,"endOffset":6621931,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":6621934,"endOffset":6622116,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseHandler","ranges":[{"startOffset":6622119,"endOffset":6622850,"count":0}],"isBlockCoverage":false},{"functionName":"isPromiseHandler","ranges":[{"startOffset":6622853,"endOffset":6623090,"count":0}],"isBlockCoverage":false},{"functionName":"hasSupportedNumberOfArguments","ranges":[{"startOffset":6623093,"endOffset":6623587,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseArgument","ranges":[{"startOffset":6623590,"endOffset":6624495,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyFromNode","ranges":[{"startOffset":6624498,"endOffset":6624590,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToClass","ranges":[{"startOffset":6624593,"endOffset":6625233,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToAsync","ranges":[{"startOffset":6625236,"endOffset":6625526,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/suggestionDiagnostics.ts","ranges":[{"startOffset":6625615,"endOffset":6625771,"count":1}],"isBlockCoverage":true},{"functionName":"transpileModule","ranges":[{"startOffset":6625812,"endOffset":6629261,"count":0}],"isBlockCoverage":false},{"functionName":"transpile","ranges":[{"startOffset":6629264,"endOffset":6629544,"count":0}],"isBlockCoverage":false},{"functionName":"fixupCompilerOptions","ranges":[{"startOffset":6629547,"endOffset":6630306,"count":10},{"startOffset":6629669,"endOffset":6629788,"count":1},{"startOffset":6629889,"endOffset":6630282,"count":70},{"startOffset":6629934,"endOffset":6629961,"count":50},{"startOffset":6629961,"endOffset":6630028,"count":20},{"startOffset":6630028,"endOffset":6630113,"count":0},{"startOffset":6630113,"endOffset":6630276,"count":20},{"startOffset":6630178,"endOffset":6630268,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6629699,"endOffset":6629787,"count":121},{"startOffset":6629733,"endOffset":6629787,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6629758,"endOffset":6629786,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6630157,"endOffset":6630175,"count":134}],"isBlockCoverage":true},{"functionName":"src/services/transpile.ts","ranges":[{"startOffset":6630422,"endOffset":6630674,"count":1}],"isBlockCoverage":true},{"functionName":"getNavigateToItems","ranges":[{"startOffset":6630716,"endOffset":6631764,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExcludeFile","ranges":[{"startOffset":6631767,"endOffset":6631959,"count":0}],"isBlockCoverage":false},{"functionName":"getItemsFromNamedDeclaration","ranges":[{"startOffset":6631962,"endOffset":6632814,"count":0}],"isBlockCoverage":false},{"functionName":"shouldKeepItem","ranges":[{"startOffset":6632817,"endOffset":6633448,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddSingleDeclarationName","ranges":[{"startOffset":6633451,"endOffset":6633731,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddComputedPropertyName","ranges":[{"startOffset":6633734,"endOffset":6634003,"count":0}],"isBlockCoverage":false},{"functionName":"pushLiteral","ranges":[{"startOffset":6634006,"endOffset":6634153,"count":0}],"isBlockCoverage":false},{"functionName":"getContainers","ranges":[{"startOffset":6634156,"endOffset":6634716,"count":0}],"isBlockCoverage":false},{"functionName":"compareNavigateToItems","ranges":[{"startOffset":6634719,"endOffset":6634869,"count":0}],"isBlockCoverage":false},{"functionName":"createNavigateToItem","ranges":[{"startOffset":6634872,"endOffset":6635650,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/navigateTo.ts","ranges":[{"startOffset":6635687,"endOffset":6635763,"count":1}],"isBlockCoverage":true},{"functionName":"getNavigateToItems","ranges":[{"startOffset":6635912,"endOffset":6635936,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.NavigateTo.ts","ranges":[{"startOffset":6635982,"endOffset":6636080,"count":1}],"isBlockCoverage":true},{"functionName":"getNavigationBarItems","ranges":[{"startOffset":6636125,"endOffset":6636426,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree","ranges":[{"startOffset":6636429,"endOffset":6636680,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":6636683,"endOffset":6636842,"count":0}],"isBlockCoverage":false},{"functionName":"nodeText","ranges":[{"startOffset":6636845,"endOffset":6636925,"count":0}],"isBlockCoverage":false},{"functionName":"navigationBarNodeKind","ranges":[{"startOffset":6636928,"endOffset":6636991,"count":0}],"isBlockCoverage":false},{"functionName":"pushChild","ranges":[{"startOffset":6636994,"endOffset":6637151,"count":0}],"isBlockCoverage":false},{"functionName":"rootNavigationBarNode","ranges":[{"startOffset":6637154,"endOffset":6637567,"count":0}],"isBlockCoverage":false},{"functionName":"addLeafNode","ranges":[{"startOffset":6637570,"endOffset":6637667,"count":0}],"isBlockCoverage":false},{"functionName":"emptyNavigationBarNode","ranges":[{"startOffset":6637670,"endOffset":6637955,"count":0}],"isBlockCoverage":false},{"functionName":"addTrackedEs5Class","ranges":[{"startOffset":6637958,"endOffset":6638125,"count":0}],"isBlockCoverage":false},{"functionName":"endNestedNodes","ranges":[{"startOffset":6638128,"endOffset":6638217,"count":0}],"isBlockCoverage":false},{"functionName":"startNestedNodes","ranges":[{"startOffset":6638220,"endOffset":6638806,"count":0}],"isBlockCoverage":false},{"functionName":"startNode","ranges":[{"startOffset":6638809,"endOffset":6639070,"count":0}],"isBlockCoverage":false},{"functionName":"endNode","ranges":[{"startOffset":6639073,"endOffset":6639300,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeWithRecursiveChild","ranges":[{"startOffset":6639303,"endOffset":6639439,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeWithRecursiveInitializer","ranges":[{"startOffset":6639442,"endOffset":6639749,"count":0}],"isBlockCoverage":false},{"functionName":"hasNavigationBarName","ranges":[{"startOffset":6639752,"endOffset":6640115,"count":0}],"isBlockCoverage":false},{"functionName":"addChildrenRecursively","ranges":[{"startOffset":6640118,"endOffset":6648176,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChildren","ranges":[{"startOffset":6648179,"endOffset":6649183,"count":0}],"isBlockCoverage":false},{"functionName":"tryMergeEs5Class","ranges":[{"startOffset":6649186,"endOffset":6652772,"count":0}],"isBlockCoverage":false},{"functionName":"tryMerge","ranges":[{"startOffset":6652775,"endOffset":6653013,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReallyMerge","ranges":[{"startOffset":6653016,"endOffset":6653601,"count":0}],"isBlockCoverage":false},{"functionName":"isSynthesized","ranges":[{"startOffset":6653604,"endOffset":6653688,"count":0}],"isBlockCoverage":false},{"functionName":"isOwnChild","ranges":[{"startOffset":6653691,"endOffset":6653873,"count":0}],"isBlockCoverage":false},{"functionName":"areSameModule","ranges":[{"startOffset":6653876,"endOffset":6654100,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":6654103,"endOffset":6654531,"count":0}],"isBlockCoverage":false},{"functionName":"sortChildren","ranges":[{"startOffset":6654534,"endOffset":6654607,"count":0}],"isBlockCoverage":false},{"functionName":"compareChildren","ranges":[{"startOffset":6654610,"endOffset":6654827,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetName","ranges":[{"startOffset":6654830,"endOffset":6655430,"count":0}],"isBlockCoverage":false},{"functionName":"getItemName","ranges":[{"startOffset":6655433,"endOffset":6656856,"count":0}],"isBlockCoverage":false},{"functionName":"primaryNavBarMenuItems","ranges":[{"startOffset":6656859,"endOffset":6658455,"count":0}],"isBlockCoverage":false},{"functionName":"convertToTree","ranges":[{"startOffset":6658458,"endOffset":6658749,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPrimaryNavBarMenuItem","ranges":[{"startOffset":6658752,"endOffset":6659468,"count":0}],"isBlockCoverage":false},{"functionName":"getSpans","ranges":[{"startOffset":6659471,"endOffset":6659684,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":6659687,"endOffset":6659897,"count":0}],"isBlockCoverage":false},{"functionName":"getFullyQualifiedModuleName","ranges":[{"startOffset":6659900,"endOffset":6660294,"count":0}],"isBlockCoverage":false},{"functionName":"getInteriorModule","ranges":[{"startOffset":6660297,"endOffset":6660429,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedProperty","ranges":[{"startOffset":6660432,"endOffset":6660553,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeSpan","ranges":[{"startOffset":6660556,"endOffset":6660713,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers2","ranges":[{"startOffset":6660716,"endOffset":6660894,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionOrClassName","ranges":[{"startOffset":6660897,"endOffset":6662110,"count":0}],"isBlockCoverage":false},{"functionName":"getCalledExpressionName","ranges":[{"startOffset":6662113,"endOffset":6662458,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrClassExpression","ranges":[{"startOffset":6662461,"endOffset":6662713,"count":0}],"isBlockCoverage":false},{"functionName":"cleanText","ranges":[{"startOffset":6662716,"endOffset":6662889,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/navigationBar.ts","ranges":[{"startOffset":6663104,"endOffset":6663789,"count":1}],"isBlockCoverage":true},{"functionName":"getNavigationBarItems","ranges":[{"startOffset":6663950,"endOffset":6663977,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree","ranges":[{"startOffset":6664002,"endOffset":6664025,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.NavigationBar.ts","ranges":[{"startOffset":6664074,"endOffset":6664178,"count":1}],"isBlockCoverage":true},{"functionName":"registerRefactor","ranges":[{"startOffset":6664226,"endOffset":6664308,"count":15}],"isBlockCoverage":true},{"functionName":"getApplicableRefactors","ranges":[{"startOffset":6664311,"endOffset":6664760,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor","ranges":[{"startOffset":6664763,"endOffset":6665020,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactorProvider.ts","ranges":[{"startOffset":6665080,"endOffset":6665233,"count":1}],"isBlockCoverage":true},{"functionName":"getInfo2","ranges":[{"startOffset":6665288,"endOffset":6668014,"count":0}],"isBlockCoverage":false},{"functionName":"doChange","ranges":[{"startOffset":6668017,"endOffset":6668246,"count":0}],"isBlockCoverage":false},{"functionName":"changeExport","ranges":[{"startOffset":6668249,"endOffset":6670354,"count":0}],"isBlockCoverage":false},{"functionName":"changeImports","ranges":[{"startOffset":6670357,"endOffset":6671151,"count":0}],"isBlockCoverage":false},{"functionName":"changeDefaultToNamedImport","ranges":[{"startOffset":6671154,"endOffset":6673375,"count":0}],"isBlockCoverage":false},{"functionName":"changeNamedToDefaultImport","ranges":[{"startOffset":6673378,"endOffset":6674384,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportSpecifier","ranges":[{"startOffset":6674387,"endOffset":6674640,"count":0}],"isBlockCoverage":false},{"functionName":"makeExportSpecifier","ranges":[{"startOffset":6674643,"endOffset":6674896,"count":0}],"isBlockCoverage":false},{"functionName":"getExportingModuleSymbol","ranges":[{"startOffset":6674899,"endOffset":6675229,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertExport.ts","ranges":[{"startOffset":6675333,"endOffset":6677778,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertBetweenNamedAndDefaultExports","ranges":[{"startOffset":6676135,"endOffset":6677123,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertBetweenNamedAndDefaultExports","ranges":[{"startOffset":6677152,"endOffset":6677762,"count":0}],"isBlockCoverage":false},{"functionName":"getImportConversionInfo","ranges":[{"startOffset":6677833,"endOffset":6679213,"count":0}],"isBlockCoverage":false},{"functionName":"getShouldUseDefault","ranges":[{"startOffset":6679216,"endOffset":6679434,"count":0}],"isBlockCoverage":false},{"functionName":"doChange2","ranges":[{"startOffset":6679437,"endOffset":6679864,"count":0}],"isBlockCoverage":false},{"functionName":"doChangeNamespaceToNamed","ranges":[{"startOffset":6679867,"endOffset":6682207,"count":0}],"isBlockCoverage":false},{"functionName":"getRightOfPropertyAccessOrQualifiedName","ranges":[{"startOffset":6682210,"endOffset":6682440,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftOfPropertyAccessOrQualifiedName","ranges":[{"startOffset":6682443,"endOffset":6682677,"count":0}],"isBlockCoverage":false},{"functionName":"doChangeNamedToNamespaceOrDefault","ranges":[{"startOffset":6682680,"endOffset":6685606,"count":0}],"isBlockCoverage":false},{"functionName":"isExportEqualsModule","ranges":[{"startOffset":6685609,"endOffset":6685916,"count":0}],"isBlockCoverage":false},{"functionName":"updateImport","ranges":[{"startOffset":6685919,"endOffset":6686318,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertImport.ts","ranges":[{"startOffset":6686388,"endOffset":6688865,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6687406,"endOffset":6687419,"count":3}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertBetweenNamedAndNamespacedImports","ranges":[{"startOffset":6687451,"endOffset":6688236,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertBetweenNamedAndNamespacedImports","ranges":[{"startOffset":6688265,"endOffset":6688849,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToExtract","ranges":[{"startOffset":6688918,"endOffset":6690738,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTypeAt","ranges":[{"startOffset":6690741,"endOffset":6691388,"count":0}],"isBlockCoverage":false},{"functionName":"flattenTypeLiteralNodeReference","ranges":[{"startOffset":6691391,"endOffset":6692551,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsSkipTrivia","ranges":[{"startOffset":6692554,"endOffset":6692689,"count":0}],"isBlockCoverage":false},{"functionName":"collectTypeParameters","ranges":[{"startOffset":6692692,"endOffset":6695675,"count":0}],"isBlockCoverage":false},{"functionName":"doTypeAliasChange","ranges":[{"startOffset":6695678,"endOffset":6696744,"count":0}],"isBlockCoverage":false},{"functionName":"doInterfaceChange","ranges":[{"startOffset":6696747,"endOffset":6697763,"count":0}],"isBlockCoverage":false},{"functionName":"doTypedefChange","ranges":[{"startOffset":6697766,"endOffset":6699789,"count":0}],"isBlockCoverage":false},{"functionName":"getNodesToEdit","ranges":[{"startOffset":6699792,"endOffset":6700288,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingNode","ranges":[{"startOffset":6700291,"endOffset":6700427,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandedSelectionNode","ranges":[{"startOffset":6700430,"endOffset":6700750,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/extractType.ts","ranges":[{"startOffset":6700885,"endOffset":6704439,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToExtractType","ranges":[{"startOffset":6701855,"endOffset":6702957,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToExtractType","ranges":[{"startOffset":6702986,"endOffset":6704423,"count":0}],"isBlockCoverage":false},{"functionName":"isRefactorErrorInfo","ranges":[{"startOffset":6704488,"endOffset":6704562,"count":0}],"isBlockCoverage":false},{"functionName":"refactorKindBeginsWith","ranges":[{"startOffset":6704565,"endOffset":6704719,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/helpers.ts","ranges":[{"startOffset":6704753,"endOffset":6704818,"count":1}],"isBlockCoverage":true},{"functionName":"getInliningInfo","ranges":[{"startOffset":6704874,"endOffset":6706859,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationExported","ranges":[{"startOffset":6706862,"endOffset":6707059,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceNodes","ranges":[{"startOffset":6707062,"endOffset":6707811,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementExpression","ranges":[{"startOffset":6707814,"endOffset":6708743,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/inlineVariable.ts","ranges":[{"startOffset":6708848,"endOffset":6711194,"count":1}],"isBlockCoverage":true},{"functionName":"getAvailableActions","ranges":[{"startOffset":6709327,"endOffset":6710291,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForAction","ranges":[{"startOffset":6710301,"endOffset":6711178,"count":0}],"isBlockCoverage":false},{"functionName":"doChange3","ranges":[{"startOffset":6711249,"endOffset":6711778,"count":0}],"isBlockCoverage":false},{"functionName":"getNewStatementsAndRemoveFromOldFile","ranges":[{"startOffset":6711781,"endOffset":6713706,"count":0}],"isBlockCoverage":false},{"functionName":"getNewFileImportsAndAddExportInOldFile","ranges":[{"startOffset":6713709,"endOffset":6715175,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/moveToNewFile.ts","ranges":[{"startOffset":6715270,"endOffset":6716894,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToMoveToNewFile","ranges":[{"startOffset":6715741,"endOffset":6716364,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToMoveToNewFile","ranges":[{"startOffset":6716393,"endOffset":6716878,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":6716946,"endOffset":6717082,"count":0}],"isBlockCoverage":false},{"functionName":"doChange4","ranges":[{"startOffset":6717085,"endOffset":6718048,"count":0}],"isBlockCoverage":false},{"functionName":"getNewStatementsAndRemoveFromOldFile2","ranges":[{"startOffset":6718051,"endOffset":6720837,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetFileImportsAndAddExportInOldFile","ranges":[{"startOffset":6720840,"endOffset":6724250,"count":0}],"isBlockCoverage":false},{"functionName":"addNewFileToTsconfig","ranges":[{"startOffset":6724253,"endOffset":6725166,"count":0}],"isBlockCoverage":false},{"functionName":"deleteMovedStatements","ranges":[{"startOffset":6725169,"endOffset":6725369,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedOldImports","ranges":[{"startOffset":6725372,"endOffset":6725718,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportsInOtherFiles","ranges":[{"startOffset":6725721,"endOffset":6727395,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceLikeImport","ranges":[{"startOffset":6727398,"endOffset":6727954,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceLikeImport","ranges":[{"startOffset":6727957,"endOffset":6729235,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamespaceLikeImportNode","ranges":[{"startOffset":6729238,"endOffset":6730573,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireCall","ranges":[{"startOffset":6730576,"endOffset":6730778,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierFromImport","ranges":[{"startOffset":6730781,"endOffset":6731002,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportInStatement","ranges":[{"startOffset":6731005,"endOffset":6731701,"count":0}],"isBlockCoverage":false},{"functionName":"createOldFileImportsFromTargetFile","ranges":[{"startOffset":6731704,"endOffset":6732306,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportOrRequire","ranges":[{"startOffset":6732309,"endOffset":6733651,"count":0}],"isBlockCoverage":false},{"functionName":"makeVariableStatement","ranges":[{"startOffset":6733654,"endOffset":6734013,"count":0}],"isBlockCoverage":false},{"functionName":"addExports","ranges":[{"startOffset":6734016,"endOffset":6734627,"count":0}],"isBlockCoverage":false},{"functionName":"isExported","ranges":[{"startOffset":6734630,"endOffset":6735121,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedImports","ranges":[{"startOffset":6735124,"endOffset":6735794,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedImportsInDeclaration","ranges":[{"startOffset":6735797,"endOffset":6737103,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedImportsInVariableDeclaration","ranges":[{"startOffset":6737106,"endOffset":6738342,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelDeclarationStatement","ranges":[{"startOffset":6738345,"endOffset":6738559,"count":0}],"isBlockCoverage":false},{"functionName":"addExport","ranges":[{"startOffset":6738562,"endOffset":6738682,"count":0}],"isBlockCoverage":false},{"functionName":"addEs6Export","ranges":[{"startOffset":6738685,"endOffset":6740294,"count":0}],"isBlockCoverage":false},{"functionName":"addCommonjsExport","ranges":[{"startOffset":6740297,"endOffset":6740419,"count":0}],"isBlockCoverage":false},{"functionName":"createExportAssignment","ranges":[{"startOffset":6740422,"endOffset":6740750,"count":0}],"isBlockCoverage":false},{"functionName":"getNamesToExportInCommonJS","ranges":[{"startOffset":6740753,"endOffset":6741536,"count":0}],"isBlockCoverage":false},{"functionName":"filterImport","ranges":[{"startOffset":6741539,"endOffset":6742671,"count":0}],"isBlockCoverage":false},{"functionName":"filterNamedBindings","ranges":[{"startOffset":6742674,"endOffset":6743034,"count":0}],"isBlockCoverage":false},{"functionName":"filterBindingName","ranges":[{"startOffset":6743037,"endOffset":6743523,"count":0}],"isBlockCoverage":false},{"functionName":"nameOfTopLevelDeclaration","ranges":[{"startOffset":6743526,"endOffset":6743686,"count":0}],"isBlockCoverage":false},{"functionName":"getTopLevelDeclarationStatement","ranges":[{"startOffset":6743689,"endOffset":6744057,"count":0}],"isBlockCoverage":false},{"functionName":"addExportToChanges","ranges":[{"startOffset":6744060,"endOffset":6744525,"count":0}],"isBlockCoverage":false},{"functionName":"createNewFileName","ranges":[{"startOffset":6744528,"endOffset":6745383,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToMove","ranges":[{"startOffset":6745386,"endOffset":6746503,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementsToMove","ranges":[{"startOffset":6746506,"endOffset":6747021,"count":0}],"isBlockCoverage":false},{"functionName":"containsJsx","ranges":[{"startOffset":6747024,"endOffset":6747158,"count":0}],"isBlockCoverage":false},{"functionName":"isAllowedStatementToMove","ranges":[{"startOffset":6747161,"endOffset":6747283,"count":0}],"isBlockCoverage":false},{"functionName":"isPureImport","ranges":[{"startOffset":6747286,"endOffset":6747790,"count":0}],"isBlockCoverage":false},{"functionName":"getUsageInfo","ranges":[{"startOffset":6747793,"endOffset":6750765,"count":0}],"isBlockCoverage":false},{"functionName":"makeUniqueFilename","ranges":[{"startOffset":6750768,"endOffset":6751105,"count":0}],"isBlockCoverage":false},{"functionName":"inferNewFileName","ranges":[{"startOffset":6751108,"endOffset":6751299,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReference","ranges":[{"startOffset":6751302,"endOffset":6751666,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTopLevelDeclaration","ranges":[{"startOffset":6751669,"endOffset":6752495,"count":0}],"isBlockCoverage":false},{"functionName":"isInImport","ranges":[{"startOffset":6752498,"endOffset":6753017,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInImport","ranges":[{"startOffset":6753020,"endOffset":6753246,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelDeclaration","ranges":[{"startOffset":6753249,"endOffset":6753445,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileOfTopLevelDeclaration","ranges":[{"startOffset":6753448,"endOffset":6753582,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTopLevelDeclarationInBindingName","ranges":[{"startOffset":6753585,"endOffset":6754124,"count":0}],"isBlockCoverage":false},{"functionName":"isNonVariableTopLevelDeclaration","ranges":[{"startOffset":6754127,"endOffset":6754560,"count":0}],"isBlockCoverage":false},{"functionName":"moveStatementsToTargetFile","ranges":[{"startOffset":6754563,"endOffset":6757394,"count":0}],"isBlockCoverage":false},{"functionName":"getOverloadRangeToMove","ranges":[{"startOffset":6757397,"endOffset":6758183,"count":0}],"isBlockCoverage":false},{"functionName":"getExistingLocals","ranges":[{"startOffset":6758186,"endOffset":6759593,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/moveToFile.ts","ranges":[{"startOffset":6759695,"endOffset":6762265,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToMoveToFile","ranges":[{"startOffset":6760218,"endOffset":6761004,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToMoveToFile","ranges":[{"startOffset":6761033,"endOffset":6762249,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToConvertOverloadsToOneSignature","ranges":[{"startOffset":6762343,"endOffset":6762726,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertOverloadsToOneSignature","ranges":[{"startOffset":6762729,"endOffset":6767748,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertableSignatureDeclaration","ranges":[{"startOffset":6767751,"endOffset":6768100,"count":0}],"isBlockCoverage":false},{"functionName":"getConvertableOverloadListAtPosition","ranges":[{"startOffset":6768103,"endOffset":6769593,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertOverloadListToSingleSignature.ts","ranges":[{"startOffset":6769723,"endOffset":6770460,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToRemoveFunctionBraces","ranges":[{"startOffset":6770534,"endOffset":6771397,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToRemoveFunctionBraces","ranges":[{"startOffset":6771400,"endOffset":6773228,"count":0}],"isBlockCoverage":false},{"functionName":"getConvertibleArrowFunctionAtPosition","ranges":[{"startOffset":6773231,"endOffset":6774696,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/addOrRemoveBracesToArrowFunction.ts","ranges":[{"startOffset":6774835,"endOffset":6775831,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/_namespaces/ts.refactor.addOrRemoveBracesToArrowFunction.ts","ranges":[{"startOffset":6776052,"endOffset":6776254,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertFunctionExpressions","ranges":[{"startOffset":6776336,"endOffset":6778159,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertFunctionExpressions","ranges":[{"startOffset":6778162,"endOffset":6779191,"count":0}],"isBlockCoverage":false},{"functionName":"containingThis","ranges":[{"startOffset":6779194,"endOffset":6779568,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionInfo","ranges":[{"startOffset":6779571,"endOffset":6780484,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleVariableDeclaration","ranges":[{"startOffset":6780487,"endOffset":6780656,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetFunctionFromVariableDeclaration","ranges":[{"startOffset":6780659,"endOffset":6781196,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBlock","ranges":[{"startOffset":6781199,"endOffset":6781798,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableInfo","ranges":[{"startOffset":6781801,"endOffset":6782404,"count":0}],"isBlockCoverage":false},{"functionName":"getEditInfoForConvertToAnonymousFunction","ranges":[{"startOffset":6782407,"endOffset":6782873,"count":0}],"isBlockCoverage":false},{"functionName":"getEditInfoForConvertToNamedFunction","ranges":[{"startOffset":6782876,"endOffset":6783916,"count":0}],"isBlockCoverage":false},{"functionName":"getEditInfoForConvertToArrowFunction","ranges":[{"startOffset":6783919,"endOffset":6784592,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToExpression","ranges":[{"startOffset":6784595,"endOffset":6784739,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionReferencedInFile","ranges":[{"startOffset":6784742,"endOffset":6784936,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertArrowFunctionOrFunctionExpression.ts","ranges":[{"startOffset":6785119,"endOffset":6786460,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/_namespaces/ts.refactor.convertArrowFunctionOrFunctionExpression.ts","ranges":[{"startOffset":6786705,"endOffset":6786872,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertParametersToDestructuredObject","ranges":[{"startOffset":6786947,"endOffset":6787463,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertParametersToDestructuredObject","ranges":[{"startOffset":6787466,"endOffset":6788292,"count":0}],"isBlockCoverage":false},{"functionName":"doChange5","ranges":[{"startOffset":6788295,"endOffset":6790296,"count":0}],"isBlockCoverage":false},{"functionName":"getGroupedReferences","ranges":[{"startOffset":6790299,"endOffset":6794347,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolForContextualType","ranges":[{"startOffset":6794350,"endOffset":6794762,"count":0}],"isBlockCoverage":false},{"functionName":"entryToImportOrExport","ranges":[{"startOffset":6794765,"endOffset":6795132,"count":0}],"isBlockCoverage":false},{"functionName":"entryToDeclaration","ranges":[{"startOffset":6795135,"endOffset":6795269,"count":0}],"isBlockCoverage":false},{"functionName":"entryToFunctionCall","ranges":[{"startOffset":6795272,"endOffset":6796953,"count":0}],"isBlockCoverage":false},{"functionName":"entryToAccessExpression","ranges":[{"startOffset":6796956,"endOffset":6797777,"count":0}],"isBlockCoverage":false},{"functionName":"entryToType","ranges":[{"startOffset":6797780,"endOffset":6798029,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionDeclarationAtPosition","ranges":[{"startOffset":6798032,"endOffset":6798565,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelJSDoc","ranges":[{"startOffset":6798568,"endOffset":6798888,"count":0}],"isBlockCoverage":false},{"functionName":"isValidMethodSignature","ranges":[{"startOffset":6798891,"endOffset":6799045,"count":0}],"isBlockCoverage":false},{"functionName":"isValidFunctionDeclaration","ranges":[{"startOffset":6799048,"endOffset":6800440,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleImplementation","ranges":[{"startOffset":6800443,"endOffset":6800609,"count":0}],"isBlockCoverage":false},{"functionName":"hasNameOrDefault","ranges":[{"startOffset":6800612,"endOffset":6800865,"count":0}],"isBlockCoverage":false},{"functionName":"isValidParameterNodeArray","ranges":[{"startOffset":6800868,"endOffset":6801133,"count":0}],"isBlockCoverage":false},{"functionName":"isValidParameterDeclaration","ranges":[{"startOffset":6801136,"endOffset":6801509,"count":0}],"isBlockCoverage":false},{"functionName":"isValidVariableDeclaration","ranges":[{"startOffset":6801512,"endOffset":6801660,"count":0}],"isBlockCoverage":false},{"functionName":"hasThisParameter","ranges":[{"startOffset":6801663,"endOffset":6801770,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorableParametersLength","ranges":[{"startOffset":6801773,"endOffset":6801943,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorableParameters","ranges":[{"startOffset":6801946,"endOffset":6802161,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyOrShorthandAssignment","ranges":[{"startOffset":6802164,"endOffset":6802456,"count":0}],"isBlockCoverage":false},{"functionName":"createNewArgument","ranges":[{"startOffset":6802459,"endOffset":6803720,"count":0}],"isBlockCoverage":false},{"functionName":"createNewParameters","ranges":[{"startOffset":6803723,"endOffset":6807770,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterName","ranges":[{"startOffset":6807773,"endOffset":6807886,"count":0}],"isBlockCoverage":false},{"functionName":"getClassNames","ranges":[{"startOffset":6807889,"endOffset":6808752,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionNames","ranges":[{"startOffset":6808755,"endOffset":6810249,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertParamsToDestructuredObject.ts","ranges":[{"startOffset":6810398,"endOffset":6811180,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/_namespaces/ts.refactor.convertParamsToDestructuredObject.ts","ranges":[{"startOffset":6811404,"endOffset":6811557,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertToTemplateString","ranges":[{"startOffset":6811629,"endOffset":6812672,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeOrParentOfParentheses","ranges":[{"startOffset":6812675,"endOffset":6813127,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertToTemplateString","ranges":[{"startOffset":6813130,"endOffset":6813518,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForToTemplateLiteral","ranges":[{"startOffset":6813521,"endOffset":6814365,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEqualsOperator","ranges":[{"startOffset":6814368,"endOffset":6814528,"count":0}],"isBlockCoverage":false},{"functionName":"getParentBinaryExpression","ranges":[{"startOffset":6814531,"endOffset":6815034,"count":0}],"isBlockCoverage":false},{"functionName":"treeToArray","ranges":[{"startOffset":6815037,"endOffset":6816170,"count":0}],"isBlockCoverage":false},{"functionName":"escapeRawStringForTemplate","ranges":[{"startOffset":6816173,"endOffset":6816289,"count":0}],"isBlockCoverage":false},{"functionName":"getRawTextOfTemplate","ranges":[{"startOffset":6816292,"endOffset":6816471,"count":0}],"isBlockCoverage":false},{"functionName":"concatConsecutiveString","ranges":[{"startOffset":6816474,"endOffset":6817078,"count":0}],"isBlockCoverage":false},{"functionName":"nodesToTemplate","ranges":[{"startOffset":6817081,"endOffset":6819310,"count":0}],"isBlockCoverage":false},{"functionName":"copyExpressionComments","ranges":[{"startOffset":6819313,"endOffset":6819733,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionFromParenthesesOrExpression","ranges":[{"startOffset":6819736,"endOffset":6819929,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertStringOrTemplateLiteral.ts","ranges":[{"startOffset":6820107,"endOffset":6821589,"count":1}],"isBlockCoverage":true},{"functionName":"copyTrailingOperatorComments","ranges":[{"startOffset":6820808,"endOffset":6821125,"count":0}],"isBlockCoverage":false},{"functionName":"copyCommentFromMultiNode","ranges":[{"startOffset":6821160,"endOffset":6821582,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.refactor.convertStringOrTemplateLiteral.ts","ranges":[{"startOffset":6821804,"endOffset":6821951,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToConvertToOptionalChain","ranges":[{"startOffset":6822025,"endOffset":6822701,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToConvertToOptionalChain","ranges":[{"startOffset":6822704,"endOffset":6823136,"count":0}],"isBlockCoverage":false},{"functionName":"isValidExpression","ranges":[{"startOffset":6823139,"endOffset":6823247,"count":0}],"isBlockCoverage":false},{"functionName":"isValidStatement","ranges":[{"startOffset":6823250,"endOffset":6823383,"count":0}],"isBlockCoverage":false},{"functionName":"isValidExpressionOrStatement","ranges":[{"startOffset":6823386,"endOffset":6823497,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo3","ranges":[{"startOffset":6823500,"endOffset":6824591,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionalInfo","ranges":[{"startOffset":6824594,"endOffset":6825503,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryInfo","ranges":[{"startOffset":6825506,"endOffset":6826205,"count":0}],"isBlockCoverage":false},{"functionName":"getOccurrencesInExpression","ranges":[{"startOffset":6826208,"endOffset":6826835,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchingStart","ranges":[{"startOffset":6826838,"endOffset":6827094,"count":0}],"isBlockCoverage":false},{"functionName":"chainStartsWith","ranges":[{"startOffset":6827097,"endOffset":6827809,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfChainNode","ranges":[{"startOffset":6827812,"endOffset":6828174,"count":0}],"isBlockCoverage":false},{"functionName":"getValidParentNodeContainingSpan","ranges":[{"startOffset":6828177,"endOffset":6828451,"count":0}],"isBlockCoverage":false},{"functionName":"getValidParentNodeOfEmptySpan","ranges":[{"startOffset":6828454,"endOffset":6828704,"count":0}],"isBlockCoverage":false},{"functionName":"getExpression","ranges":[{"startOffset":6828707,"endOffset":6829163,"count":0}],"isBlockCoverage":false},{"functionName":"getFinalExpressionInChain","ranges":[{"startOffset":6829166,"endOffset":6829517,"count":0}],"isBlockCoverage":false},{"functionName":"convertOccurrences","ranges":[{"startOffset":6829520,"endOffset":6830992,"count":0}],"isBlockCoverage":false},{"functionName":"doChange6","ranges":[{"startOffset":6830995,"endOffset":6831823,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/convertToOptionalChainExpression.ts","ranges":[{"startOffset":6831968,"endOffset":6832717,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/_namespaces/ts.refactor.convertToOptionalChainExpression.ts","ranges":[{"startOffset":6832938,"endOffset":6833089,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToExtractSymbol","ranges":[{"startOffset":6833144,"endOffset":6837741,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToExtractSymbol","ranges":[{"startOffset":6837744,"endOffset":6838700,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToExtract2","ranges":[{"startOffset":6838703,"endOffset":6850442,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedSpanFromNodes","ranges":[{"startOffset":6850445,"endOffset":6850730,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementOrExpressionRange","ranges":[{"startOffset":6850733,"endOffset":6851040,"count":0}],"isBlockCoverage":false},{"functionName":"isScope","ranges":[{"startOffset":6851043,"endOffset":6851233,"count":0}],"isBlockCoverage":false},{"functionName":"collectEnclosingScopes","ranges":[{"startOffset":6851236,"endOffset":6852126,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionExtractionAtIndex","ranges":[{"startOffset":6852129,"endOffset":6852725,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantExtractionAtIndex","ranges":[{"startOffset":6852728,"endOffset":6853525,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleExtractions","ranges":[{"startOffset":6853528,"endOffset":6855791,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleExtractionsWorker","ranges":[{"startOffset":6855794,"endOffset":6856281,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForFunctionInScope","ranges":[{"startOffset":6856284,"endOffset":6856447,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForConstantInScope","ranges":[{"startOffset":6856450,"endOffset":6856567,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForFunctionLikeDeclaration","ranges":[{"startOffset":6856570,"endOffset":6857296,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForClassLikeDeclaration","ranges":[{"startOffset":6857299,"endOffset":6857574,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptionForModuleLikeDeclaration","ranges":[{"startOffset":6857577,"endOffset":6857799,"count":0}],"isBlockCoverage":false},{"functionName":"extractFunctionInScope","ranges":[{"startOffset":6857802,"endOffset":6870086,"count":0}],"isBlockCoverage":false},{"functionName":"extractConstantInScope","ranges":[{"startOffset":6870089,"endOffset":6878152,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingVariableDeclarationIfInList","ranges":[{"startOffset":6878155,"endOffset":6878528,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstDeclarationBeforePosition","ranges":[{"startOffset":6878531,"endOffset":6878961,"count":0}],"isBlockCoverage":false},{"functionName":"compareTypesByDeclarationOrder","ranges":[{"startOffset":6878964,"endOffset":6879351,"count":0}],"isBlockCoverage":false},{"functionName":"getCalledExpression","ranges":[{"startOffset":6879354,"endOffset":6879776,"count":0}],"isBlockCoverage":false},{"functionName":"transformFunctionBody","ranges":[{"startOffset":6879779,"endOffset":6882635,"count":0}],"isBlockCoverage":false},{"functionName":"transformConstantInitializer","ranges":[{"startOffset":6882638,"endOffset":6883045,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementsOrClassElements","ranges":[{"startOffset":6883048,"endOffset":6883465,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertFunctionBefore","ranges":[{"startOffset":6883468,"endOffset":6883685,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertPropertyBefore","ranges":[{"startOffset":6883688,"endOffset":6884294,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertConstantBefore","ranges":[{"startOffset":6884297,"endOffset":6885240,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentsForWritesAndVariableDeclarations","ranges":[{"startOffset":6885243,"endOffset":6885748,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyArray","ranges":[{"startOffset":6885751,"endOffset":6885807,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingTextRange","ranges":[{"startOffset":6885810,"endOffset":6886034,"count":0}],"isBlockCoverage":false},{"functionName":"collectReadsAndWrites","ranges":[{"startOffset":6886037,"endOffset":6898794,"count":0}],"isBlockCoverage":false},{"functionName":"getExtractableParent","ranges":[{"startOffset":6898797,"endOffset":6898965,"count":0}],"isBlockCoverage":false},{"functionName":"isExtractableExpression","ranges":[{"startOffset":6898968,"endOffset":6899649,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockLike","ranges":[{"startOffset":6899652,"endOffset":6899901,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXContent","ranges":[{"startOffset":6899904,"endOffset":6900126,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralJsxAttribute","ranges":[{"startOffset":6900129,"endOffset":6900257,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/extractSymbol.ts","ranges":[{"startOffset":6900387,"endOffset":6904821,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6901210,"endOffset":6904184,"count":1}],"isBlockCoverage":true},{"functionName":"createMessage","ranges":[{"startOffset":6901235,"endOffset":6901358,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6904252,"endOffset":6904795,"count":1}],"isBlockCoverage":true},{"functionName":"Messages","ranges":[{"startOffset":6904996,"endOffset":6905010,"count":0}],"isBlockCoverage":false},{"functionName":"RangeFacts","ranges":[{"startOffset":6905028,"endOffset":6905044,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeToExtract","ranges":[{"startOffset":6905069,"endOffset":6905093,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToExtractSymbol","ranges":[{"startOffset":6905134,"endOffset":6905173,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorEditsToExtractSymbol","ranges":[{"startOffset":6905212,"endOffset":6905249,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.refactor.extractSymbol.ts","ranges":[{"startOffset":6905307,"endOffset":6905420,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/refactors/generateGetAccessorAndSetAccessor.ts","ranges":[{"startOffset":6905611,"endOffset":6908239,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorActionsToGenerateGetAndSetAccessors","ranges":[{"startOffset":6906168,"endOffset":6907325,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableActions","ranges":[{"startOffset":6907335,"endOffset":6908223,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.refactor.generateGetAccessorAndSetAccessor.ts","ranges":[{"startOffset":6908463,"endOffset":6908616,"count":1}],"isBlockCoverage":true},{"functionName":"getRefactorEditsToInferReturnType","ranges":[{"startOffset":6908681,"endOffset":6909063,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorActionsToInferReturnType","ranges":[{"startOffset":6909066,"endOffset":6909660,"count":0}],"isBlockCoverage":false},{"functionName":"doChange7","ranges":[{"startOffset":6909663,"endOffset":6910322,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo4","ranges":[{"startOffset":6910325,"endOffset":6911386,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleDeclaration","ranges":[{"startOffset":6911389,"endOffset":6911682,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetReturnType","ranges":[{"startOffset":6911685,"endOffset":6912171,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/refactors/inferFunctionReturnType.ts","ranges":[{"startOffset":6912288,"endOffset":6912951,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/_namespaces/ts.refactor.inferFunctionReturnType.ts","ranges":[{"startOffset":6913145,"endOffset":6913278,"count":1}],"isBlockCoverage":true},{"functionName":"addExportToChanges","ranges":[{"startOffset":6913421,"endOffset":6913445,"count":0}],"isBlockCoverage":false},{"functionName":"addExports","ranges":[{"startOffset":6913463,"endOffset":6913479,"count":0}],"isBlockCoverage":false},{"functionName":"addNewFileToTsconfig","ranges":[{"startOffset":6913507,"endOffset":6913533,"count":0}],"isBlockCoverage":false},{"functionName":"addOrRemoveBracesToArrowFunction","ranges":[{"startOffset":6913573,"endOffset":6913631,"count":0}],"isBlockCoverage":false},{"functionName":"containsJsx","ranges":[{"startOffset":6913650,"endOffset":6913667,"count":0}],"isBlockCoverage":false},{"functionName":"convertArrowFunctionOrFunctionExpression","ranges":[{"startOffset":6913715,"endOffset":6913781,"count":0}],"isBlockCoverage":false},{"functionName":"convertParamsToDestructuredObject","ranges":[{"startOffset":6913822,"endOffset":6913881,"count":0}],"isBlockCoverage":false},{"functionName":"convertStringOrTemplateLiteral","ranges":[{"startOffset":6913919,"endOffset":6913975,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionalChainExpression","ranges":[{"startOffset":6914015,"endOffset":6914073,"count":0}],"isBlockCoverage":false},{"functionName":"createNewFileName","ranges":[{"startOffset":6914098,"endOffset":6914121,"count":0}],"isBlockCoverage":false},{"functionName":"createOldFileImportsFromTargetFile","ranges":[{"startOffset":6914163,"endOffset":6914203,"count":0}],"isBlockCoverage":false},{"functionName":"deleteMovedStatements","ranges":[{"startOffset":6914232,"endOffset":6914259,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedImports","ranges":[{"startOffset":6914286,"endOffset":6914311,"count":0}],"isBlockCoverage":false},{"functionName":"deleteUnusedOldImports","ranges":[{"startOffset":6914341,"endOffset":6914369,"count":0}],"isBlockCoverage":false},{"functionName":"doChangeNamedToNamespaceOrDefault","ranges":[{"startOffset":6914410,"endOffset":6914449,"count":0}],"isBlockCoverage":false},{"functionName":"extractSymbol","ranges":[{"startOffset":6914470,"endOffset":6914509,"count":0}],"isBlockCoverage":false},{"functionName":"filterImport","ranges":[{"startOffset":6914529,"endOffset":6914547,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportInStatement","ranges":[{"startOffset":6914579,"endOffset":6914609,"count":0}],"isBlockCoverage":false},{"functionName":"generateGetAccessorAndSetAccessor","ranges":[{"startOffset":6914650,"endOffset":6914709,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableRefactors","ranges":[{"startOffset":6914739,"endOffset":6914767,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor","ranges":[{"startOffset":6914794,"endOffset":6914819,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementsToMove","ranges":[{"startOffset":6914846,"endOffset":6914871,"count":0}],"isBlockCoverage":false},{"functionName":"getTopLevelDeclarationStatement","ranges":[{"startOffset":6914910,"endOffset":6914947,"count":0}],"isBlockCoverage":false},{"functionName":"getUsageInfo","ranges":[{"startOffset":6914967,"endOffset":6914985,"count":0}],"isBlockCoverage":false},{"functionName":"inferFunctionReturnType","ranges":[{"startOffset":6915016,"endOffset":6915065,"count":0}],"isBlockCoverage":false},{"functionName":"isRefactorErrorInfo","ranges":[{"startOffset":6915092,"endOffset":6915117,"count":0}],"isBlockCoverage":false},{"functionName":"isTopLevelDeclaration","ranges":[{"startOffset":6915146,"endOffset":6915173,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportOrRequire","ranges":[{"startOffset":6915200,"endOffset":6915225,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierFromImport","ranges":[{"startOffset":6915258,"endOffset":6915289,"count":0}],"isBlockCoverage":false},{"functionName":"nameOfTopLevelDeclaration","ranges":[{"startOffset":6915322,"endOffset":6915353,"count":0}],"isBlockCoverage":false},{"functionName":"refactorKindBeginsWith","ranges":[{"startOffset":6915383,"endOffset":6915411,"count":0}],"isBlockCoverage":false},{"functionName":"registerRefactor","ranges":[{"startOffset":6915435,"endOffset":6915457,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportsInOtherFiles","ranges":[{"startOffset":6915490,"endOffset":6915521,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.refactor.ts","ranges":[{"startOffset":6915565,"endOffset":6916305,"count":1}],"isBlockCoverage":true},{"functionName":"getSemanticClassifications2","ranges":[{"startOffset":6916351,"endOffset":6916873,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications2","ranges":[{"startOffset":6916876,"endOffset":6917104,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticTokens","ranges":[{"startOffset":6917107,"endOffset":6917549,"count":0}],"isBlockCoverage":false},{"functionName":"collectTokens","ranges":[{"startOffset":6917552,"endOffset":6920972,"count":0}],"isBlockCoverage":false},{"functionName":"classifySymbol2","ranges":[{"startOffset":6920975,"endOffset":6921735,"count":0}],"isBlockCoverage":false},{"functionName":"reclassifyByType","ranges":[{"startOffset":6921738,"endOffset":6922522,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalDeclaration","ranges":[{"startOffset":6922525,"endOffset":6922983,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationForBindingElement","ranges":[{"startOffset":6922986,"endOffset":6923221,"count":0}],"isBlockCoverage":false},{"functionName":"inImportClause","ranges":[{"startOffset":6923224,"endOffset":6923401,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionInCallExpression","ranges":[{"startOffset":6923404,"endOffset":6923626,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess2","ranges":[{"startOffset":6923629,"endOffset":6923836,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/classifier2020.ts","ranges":[{"startOffset":6923959,"endOffset":6926877,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6924079,"endOffset":6924327,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6924392,"endOffset":6925172,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6925231,"endOffset":6925707,"count":1}],"isBlockCoverage":true},{"functionName":"createNode","ranges":[{"startOffset":6926917,"endOffset":6927367,"count":0}],"isBlockCoverage":false},{"functionName":"createChildren","ranges":[{"startOffset":6927370,"endOffset":6928288,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticNodes","ranges":[{"startOffset":6928291,"endOffset":6928924,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxList","ranges":[{"startOffset":6928927,"endOffset":6929345,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocInheritDocTag","ranges":[{"startOffset":6929348,"endOffset":6929507,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagsOfDeclarations","ranges":[{"startOffset":6929510,"endOffset":6930532,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentationComment","ranges":[{"startOffset":6930535,"endOffset":6931536,"count":0}],"isBlockCoverage":false},{"functionName":"findBaseOfDeclaration","ranges":[{"startOffset":6931539,"endOffset":6932294,"count":0}],"isBlockCoverage":false},{"functionName":"getServicesObjectAllocator","ranges":[{"startOffset":6932297,"endOffset":6932843,"count":1}],"isBlockCoverage":true},{"functionName":"getNodeConstructor","ranges":[{"startOffset":6932376,"endOffset":6932392,"count":2}],"isBlockCoverage":true},{"functionName":"getTokenConstructor","ranges":[{"startOffset":6932421,"endOffset":6932438,"count":2}],"isBlockCoverage":true},{"functionName":"getIdentifierConstructor","ranges":[{"startOffset":6932472,"endOffset":6932494,"count":3}],"isBlockCoverage":true},{"functionName":"getPrivateIdentifierConstructor","ranges":[{"startOffset":6932535,"endOffset":6932564,"count":2}],"isBlockCoverage":true},{"functionName":"getSourceFileConstructor","ranges":[{"startOffset":6932598,"endOffset":6932620,"count":2}],"isBlockCoverage":true},{"functionName":"getSymbolConstructor","ranges":[{"startOffset":6932650,"endOffset":6932668,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeConstructor","ranges":[{"startOffset":6932696,"endOffset":6932712,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureConstructor","ranges":[{"startOffset":6932745,"endOffset":6932766,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapSourceConstructor","ranges":[{"startOffset":6932805,"endOffset":6932832,"count":0}],"isBlockCoverage":false},{"functionName":"toEditorSettings","ranges":[{"startOffset":6932846,"endOffset":6933462,"count":0}],"isBlockCoverage":false},{"functionName":"isCamelCase","ranges":[{"startOffset":6933465,"endOffset":6933561,"count":0}],"isBlockCoverage":false},{"functionName":"displayPartsToString","ranges":[{"startOffset":6933564,"endOffset":6933736,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions2","ranges":[{"startOffset":6933739,"endOffset":6933857,"count":10}],"isBlockCoverage":true},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":6933860,"endOffset":6933954,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceFileFields","ranges":[{"startOffset":6933957,"endOffset":6934112,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageServiceSourceFile","ranges":[{"startOffset":6934115,"endOffset":6934469,"count":0}],"isBlockCoverage":false},{"functionName":"updateLanguageServiceSourceFile","ranges":[{"startOffset":6934472,"endOffset":6936321,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageService","ranges":[{"startOffset":6936324,"endOffset":6996424,"count":0}],"isBlockCoverage":false},{"functionName":"getNameTable","ranges":[{"startOffset":6996427,"endOffset":6996577,"count":0}],"isBlockCoverage":false},{"functionName":"initializeNameTable","ranges":[{"startOffset":6996580,"endOffset":6997362,"count":0}],"isBlockCoverage":false},{"functionName":"literalIsName","ranges":[{"startOffset":6997365,"endOffset":6997588,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElement","ranges":[{"startOffset":6997591,"endOffset":6997833,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElementWorker","ranges":[{"startOffset":6997836,"endOffset":6998493,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolAtLocationForQuickInfo","ranges":[{"startOffset":6998496,"endOffset":6999038,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromContextualType","ranges":[{"startOffset":6999041,"endOffset":7000160,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentOfElementAccessExpression","ranges":[{"startOffset":7000163,"endOffset":7000352,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFilePath","ranges":[{"startOffset":7000355,"endOffset":7000638,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/services.ts","ranges":[{"startOffset":7001040,"endOffset":7027119,"count":1}],"isBlockCoverage":true},{"functionName":"NodeObject","ranges":[{"startOffset":7001314,"endOffset":7001598,"count":54}],"isBlockCoverage":true},{"functionName":"assertHasRealPosition","ranges":[{"startOffset":7001607,"endOffset":7001807,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":7001816,"endOffset":7001887,"count":0}],"isBlockCoverage":false},{"functionName":"getStart","ranges":[{"startOffset":7001896,"endOffset":7002064,"count":0}],"isBlockCoverage":false},{"functionName":"getFullStart","ranges":[{"startOffset":7002073,"endOffset":7002166,"count":0}],"isBlockCoverage":false},{"functionName":"getEnd","ranges":[{"startOffset":7002175,"endOffset":7002262,"count":0}],"isBlockCoverage":false},{"functionName":"getWidth","ranges":[{"startOffset":7002271,"endOffset":7002403,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":7002412,"endOffset":7002516,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingTriviaWidth","ranges":[{"startOffset":7002525,"endOffset":7002665,"count":0}],"isBlockCoverage":false},{"functionName":"getFullText","ranges":[{"startOffset":7002674,"endOffset":7002839,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":7002848,"endOffset":7003093,"count":0}],"isBlockCoverage":false},{"functionName":"getChildCount","ranges":[{"startOffset":7003102,"endOffset":7003193,"count":0}],"isBlockCoverage":false},{"functionName":"getChildAt","ranges":[{"startOffset":7003202,"endOffset":7003297,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":7003306,"endOffset":7003602,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstToken","ranges":[{"startOffset":7003611,"endOffset":7004035,"count":0}],"isBlockCoverage":false},{"functionName":"getLastToken","ranges":[{"startOffset":7004044,"endOffset":7004383,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":7004392,"endOffset":7004495,"count":0}],"isBlockCoverage":false},{"functionName":"TokenOrIdentifierObject","ranges":[{"startOffset":7004553,"endOffset":7004803,"count":14}],"isBlockCoverage":true},{"functionName":"getSourceFile","ranges":[{"startOffset":7004812,"endOffset":7004883,"count":0}],"isBlockCoverage":false},{"functionName":"getStart","ranges":[{"startOffset":7004892,"endOffset":7005020,"count":0}],"isBlockCoverage":false},{"functionName":"getFullStart","ranges":[{"startOffset":7005029,"endOffset":7005082,"count":0}],"isBlockCoverage":false},{"functionName":"getEnd","ranges":[{"startOffset":7005091,"endOffset":7005138,"count":0}],"isBlockCoverage":false},{"functionName":"getWidth","ranges":[{"startOffset":7005147,"endOffset":7005239,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":7005248,"endOffset":7005312,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingTriviaWidth","ranges":[{"startOffset":7005321,"endOffset":7005421,"count":0}],"isBlockCoverage":false},{"functionName":"getFullText","ranges":[{"startOffset":7005430,"endOffset":7005555,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":7005564,"endOffset":7005769,"count":0}],"isBlockCoverage":false},{"functionName":"getChildCount","ranges":[{"startOffset":7005778,"endOffset":7005849,"count":0}],"isBlockCoverage":false},{"functionName":"getChildAt","ranges":[{"startOffset":7005858,"endOffset":7005931,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":7005940,"endOffset":7006060,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstToken","ranges":[{"startOffset":7006069,"endOffset":7006121,"count":0}],"isBlockCoverage":false},{"functionName":"getLastToken","ranges":[{"startOffset":7006130,"endOffset":7006181,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":7006190,"endOffset":7006241,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolObject","ranges":[{"startOffset":7006288,"endOffset":7006440,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":7006449,"endOffset":7006500,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":7006509,"endOffset":7006566,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedName","ranges":[{"startOffset":7006575,"endOffset":7006638,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":7006647,"endOffset":7006696,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarations","ranges":[{"startOffset":7006705,"endOffset":7006770,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentationComment","ranges":[{"startOffset":7006779,"endOffset":7007448,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualDocumentationComment","ranges":[{"startOffset":7007457,"endOffset":7008503,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTags","ranges":[{"startOffset":7008512,"endOffset":7008703,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualJsDocTags","ranges":[{"startOffset":7008712,"endOffset":7009614,"count":0}],"isBlockCoverage":false},{"functionName":"TokenObject","ranges":[{"startOffset":7009692,"endOffset":7009786,"count":14}],"isBlockCoverage":true},{"functionName":"IdentifierObject","ranges":[{"startOffset":7009869,"endOffset":7009979,"count":0}],"isBlockCoverage":false},{"functionName":"get text","ranges":[{"startOffset":7009988,"endOffset":7010041,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierObject","ranges":[{"startOffset":7010192,"endOffset":7010309,"count":0}],"isBlockCoverage":false},{"functionName":"get text","ranges":[{"startOffset":7010318,"endOffset":7010371,"count":0}],"isBlockCoverage":false},{"functionName":"TypeObject","ranges":[{"startOffset":7010491,"endOffset":7010594,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":7010603,"endOffset":7010654,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbol","ranges":[{"startOffset":7010663,"endOffset":7010716,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":7010725,"endOffset":7010809,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":7010818,"endOffset":7010924,"count":0}],"isBlockCoverage":false},{"functionName":"getApparentProperties","ranges":[{"startOffset":7010933,"endOffset":7011034,"count":0}],"isBlockCoverage":false},{"functionName":"getCallSignatures","ranges":[{"startOffset":7011043,"endOffset":7011145,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructSignatures","ranges":[{"startOffset":7011154,"endOffset":7011266,"count":0}],"isBlockCoverage":false},{"functionName":"getStringIndexType","ranges":[{"startOffset":7011275,"endOffset":7011379,"count":0}],"isBlockCoverage":false},{"functionName":"getNumberIndexType","ranges":[{"startOffset":7011388,"endOffset":7011492,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseTypes","ranges":[{"startOffset":7011501,"endOffset":7011614,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableType","ranges":[{"startOffset":7011623,"endOffset":7011703,"count":0}],"isBlockCoverage":false},{"functionName":"getNonNullableType","ranges":[{"startOffset":7011712,"endOffset":7011800,"count":0}],"isBlockCoverage":false},{"functionName":"getNonOptionalType","ranges":[{"startOffset":7011809,"endOffset":7011897,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraint","ranges":[{"startOffset":7011906,"endOffset":7011994,"count":0}],"isBlockCoverage":false},{"functionName":"getDefault","ranges":[{"startOffset":7012003,"endOffset":7012092,"count":0}],"isBlockCoverage":false},{"functionName":"isUnion","ranges":[{"startOffset":7012101,"endOffset":7012177,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersection","ranges":[{"startOffset":7012186,"endOffset":7012276,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionOrIntersection","ranges":[{"startOffset":7012285,"endOffset":7012389,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":7012398,"endOffset":7012535,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":7012544,"endOffset":7012632,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":7012641,"endOffset":7012729,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":7012738,"endOffset":7012829,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrInterface","ranges":[{"startOffset":7012838,"endOffset":7012940,"count":0}],"isBlockCoverage":false},{"functionName":"isClass","ranges":[{"startOffset":7012949,"endOffset":7013029,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexType","ranges":[{"startOffset":7013038,"endOffset":7013118,"count":0}],"isBlockCoverage":false},{"functionName":"get typeArguments","ranges":[{"startOffset":7013225,"endOffset":7013407,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureObject","ranges":[{"startOffset":7013473,"endOffset":7013576,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaration","ranges":[{"startOffset":7013585,"endOffset":7013648,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameters","ranges":[{"startOffset":7013657,"endOffset":7013726,"count":0}],"isBlockCoverage":false},{"functionName":"getParameters","ranges":[{"startOffset":7013735,"endOffset":7013796,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnType","ranges":[{"startOffset":7013805,"endOffset":7013894,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterAtPosition","ranges":[{"startOffset":7013903,"endOffset":7014278,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentationComment","ranges":[{"startOffset":7014287,"endOffset":7014477,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTags","ranges":[{"startOffset":7014486,"endOffset":7014646,"count":0}],"isBlockCoverage":false},{"functionName":"SourceFileObject","ranges":[{"startOffset":7014716,"endOffset":7014832,"count":2}],"isBlockCoverage":true},{"functionName":"update","ranges":[{"startOffset":7014841,"endOffset":7014952,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":7014961,"endOffset":7015076,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":7015085,"endOffset":7015150,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":7015159,"endOffset":7015342,"count":0}],"isBlockCoverage":false},{"functionName":"getLineEndOfPosition","ranges":[{"startOffset":7015351,"endOffset":7015894,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedDeclarations","ranges":[{"startOffset":7015903,"endOffset":7016101,"count":0}],"isBlockCoverage":false},{"functionName":"computeNamedDeclarations","ranges":[{"startOffset":7016110,"endOffset":7021018,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapSourceObject","ranges":[{"startOffset":7021074,"endOffset":7021231,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":7021240,"endOffset":7021345,"count":0}],"isBlockCoverage":false},{"functionName":"SyntaxTreeCache","ranges":[{"startOffset":7021395,"endOffset":7021452,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentSourceFile","ranges":[{"startOffset":7021461,"endOffset":7023760,"count":0}],"isBlockCoverage":false},{"functionName":"CancellationTokenObject","ranges":[{"startOffset":7023948,"endOffset":7024044,"count":0}],"isBlockCoverage":false},{"functionName":"isCancellationRequested","ranges":[{"startOffset":7024053,"endOffset":7024157,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfCancellationRequested","ranges":[{"startOffset":7024166,"endOffset":7024478,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledCancellationToken","ranges":[{"startOffset":7024539,"endOffset":7025022,"count":0}],"isBlockCoverage":false},{"functionName":"isCancellationRequested","ranges":[{"startOffset":7025031,"endOffset":7025399,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfCancellationRequested","ranges":[{"startOffset":7025408,"endOffset":7025723,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":7027160,"endOffset":7027680,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/transform.ts","ranges":[{"startOffset":7027716,"endOffset":7027791,"count":1}],"isBlockCoverage":true},{"functionName":"spanInSourceFileAtLocation","ranges":[{"startOffset":7027834,"endOffset":7049992,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/breakpoints.ts","ranges":[{"startOffset":7050030,"endOffset":7050107,"count":1}],"isBlockCoverage":true},{"functionName":"spanInSourceFileAtLocation","ranges":[{"startOffset":7050288,"endOffset":7050320,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.BreakpointResolver.ts","ranges":[{"startOffset":7050374,"endOffset":7050481,"count":1}],"isBlockCoverage":true},{"functionName":"isNamedExpression","ranges":[{"startOffset":7050526,"endOffset":7050660,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike2","ranges":[{"startOffset":7050663,"endOffset":7050770,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignedExpression","ranges":[{"startOffset":7050773,"endOffset":7051106,"count":0}],"isBlockCoverage":false},{"functionName":"isPossibleCallHierarchyDeclaration","ranges":[{"startOffset":7051109,"endOffset":7051503,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCallHierarchyDeclaration","ranges":[{"startOffset":7051506,"endOffset":7051924,"count":0}],"isBlockCoverage":false},{"functionName":"getCallHierarchyDeclarationReferenceNode","ranges":[{"startOffset":7051927,"endOffset":7052251,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier3","ranges":[{"startOffset":7052254,"endOffset":7052343,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolOfCallHierarchyDeclaration","ranges":[{"startOffset":7052346,"endOffset":7052550,"count":0}],"isBlockCoverage":false},{"functionName":"getCallHierarchyItemName","ranges":[{"startOffset":7052553,"endOffset":7054457,"count":0}],"isBlockCoverage":false},{"functionName":"getCallHierarchItemContainerName","ranges":[{"startOffset":7054460,"endOffset":7055744,"count":0}],"isBlockCoverage":false},{"functionName":"findImplementation","ranges":[{"startOffset":7055747,"endOffset":7056318,"count":0}],"isBlockCoverage":false},{"functionName":"findAllInitialDeclarations","ranges":[{"startOffset":7056321,"endOffset":7057234,"count":0}],"isBlockCoverage":false},{"functionName":"findImplementationOrAllInitialDeclarations","ranges":[{"startOffset":7057237,"endOffset":7057609,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCallHierarchyDeclaration","ranges":[{"startOffset":7057612,"endOffset":7059812,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyItem","ranges":[{"startOffset":7059815,"endOffset":7060516,"count":0}],"isBlockCoverage":false},{"functionName":"isDefined","ranges":[{"startOffset":7060519,"endOffset":7060571,"count":0}],"isBlockCoverage":false},{"functionName":"convertEntryToCallSite","ranges":[{"startOffset":7060574,"endOffset":7061646,"count":0}],"isBlockCoverage":false},{"functionName":"getCallSiteGroupKey","ranges":[{"startOffset":7061649,"endOffset":7061731,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyIncomingCall","ranges":[{"startOffset":7061734,"endOffset":7061829,"count":0}],"isBlockCoverage":false},{"functionName":"convertCallSiteGroupToIncomingCall","ranges":[{"startOffset":7061832,"endOffset":7062064,"count":0}],"isBlockCoverage":false},{"functionName":"getIncomingCalls","ranges":[{"startOffset":7062067,"endOffset":7062805,"count":0}],"isBlockCoverage":false},{"functionName":"createCallSiteCollector","ranges":[{"startOffset":7062808,"endOffset":7065917,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfSourceFile","ranges":[{"startOffset":7065920,"endOffset":7066017,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfModuleDeclaration","ranges":[{"startOffset":7066020,"endOffset":7066236,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfFunctionLikeDeclaration","ranges":[{"startOffset":7066239,"endOffset":7066508,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfClassStaticBlockDeclaration","ranges":[{"startOffset":7066511,"endOffset":7066610,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSitesOfClassLikeDeclaration","ranges":[{"startOffset":7066613,"endOffset":7067291,"count":0}],"isBlockCoverage":false},{"functionName":"collectCallSites","ranges":[{"startOffset":7067294,"endOffset":7068372,"count":0}],"isBlockCoverage":false},{"functionName":"createCallHierarchyOutgoingCall","ranges":[{"startOffset":7068375,"endOffset":7068466,"count":0}],"isBlockCoverage":false},{"functionName":"convertCallSiteGroupToOutgoingCall","ranges":[{"startOffset":7068469,"endOffset":7068701,"count":0}],"isBlockCoverage":false},{"functionName":"getOutgoingCalls","ranges":[{"startOffset":7068704,"endOffset":7069014,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/callHierarchy.ts","ranges":[{"startOffset":7069054,"endOffset":7069133,"count":1}],"isBlockCoverage":true},{"functionName":"createCallHierarchyItem","ranges":[{"startOffset":7069296,"endOffset":7069325,"count":0}],"isBlockCoverage":false},{"functionName":"getIncomingCalls","ranges":[{"startOffset":7069349,"endOffset":7069371,"count":0}],"isBlockCoverage":false},{"functionName":"getOutgoingCalls","ranges":[{"startOffset":7069395,"endOffset":7069417,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCallHierarchyDeclaration","ranges":[{"startOffset":7069456,"endOffset":7069493,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.CallHierarchy.ts","ranges":[{"startOffset":7069542,"endOffset":7069646,"count":1}],"isBlockCoverage":true},{"functionName":"TokenEncodingConsts","ranges":[{"startOffset":7069814,"endOffset":7069839,"count":0}],"isBlockCoverage":false},{"functionName":"TokenModifier","ranges":[{"startOffset":7069860,"endOffset":7069879,"count":0}],"isBlockCoverage":false},{"functionName":"TokenType","ranges":[{"startOffset":7069896,"endOffset":7069911,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":7069952,"endOffset":7069992,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":7070026,"endOffset":7070059,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.classifier.v2020.ts","ranges":[{"startOffset":7070111,"endOffset":7070219,"count":1}],"isBlockCoverage":true},{"functionName":"v2020","ranges":[{"startOffset":7070355,"endOffset":7070388,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.classifier.ts","ranges":[{"startOffset":7070434,"endOffset":7070541,"count":1}],"isBlockCoverage":true},{"functionName":"createCodeFixActionWithoutFixAll","ranges":[{"startOffset":7070588,"endOffset":7070855,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixAction","ranges":[{"startOffset":7070858,"endOffset":7071110,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionMaybeFixAll","ranges":[{"startOffset":7071113,"endOffset":7071397,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionWorker","ranges":[{"startOffset":7071400,"endOffset":7071655,"count":0}],"isBlockCoverage":false},{"functionName":"registerCodeFix","ranges":[{"startOffset":7071658,"endOffset":7072011,"count":69},{"startOffset":7071731,"endOffset":7071825,"count":1438},{"startOffset":7071846,"endOffset":7072007,"count":64},{"startOffset":7071888,"endOffset":7072001,"count":80}],"isBlockCoverage":true},{"functionName":"getSupportedErrorCodes","ranges":[{"startOffset":7072014,"endOffset":7072151,"count":0}],"isBlockCoverage":false},{"functionName":"removeFixIdIfFixAllUnavailable","ranges":[{"startOffset":7072154,"endOffset":7072723,"count":0}],"isBlockCoverage":false},{"functionName":"getFixes","ranges":[{"startOffset":7072726,"endOffset":7073004,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFixes","ranges":[{"startOffset":7073007,"endOffset":7073136,"count":0}],"isBlockCoverage":false},{"functionName":"createCombinedCodeActions","ranges":[{"startOffset":7073139,"endOffset":7073232,"count":0}],"isBlockCoverage":false},{"functionName":"createFileTextChanges","ranges":[{"startOffset":7073235,"endOffset":7073347,"count":0}],"isBlockCoverage":false},{"functionName":"codeFixAll","ranges":[{"startOffset":7073350,"endOffset":7073672,"count":0}],"isBlockCoverage":false},{"functionName":"eachDiagnostic","ranges":[{"startOffset":7073675,"endOffset":7073863,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnostics","ranges":[{"startOffset":7073866,"endOffset":7074182,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codeFixProvider.ts","ranges":[{"startOffset":7074292,"endOffset":7074471,"count":1}],"isBlockCoverage":true},{"functionName":"makeChange","ranges":[{"startOffset":7074554,"endOffset":7074963,"count":0}],"isBlockCoverage":false},{"functionName":"getAssertion","ranges":[{"startOffset":7074966,"endOffset":7075183,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addConvertToUnknownForNonOverlappingTypes.ts","ranges":[{"startOffset":7075276,"endOffset":7076615,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddConvertToUnknownForNonOverlappingTypes","ranges":[{"startOffset":7075749,"endOffset":7076306,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7076360,"endOffset":7076599,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addEmptyExportDeclaration.ts","ranges":[{"startOffset":7076731,"endOffset":7078341,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddEmptyExportDeclaration","ranges":[{"startOffset":7077583,"endOffset":7078325,"count":0}],"isBlockCoverage":false},{"functionName":"getFix","ranges":[{"startOffset":7078398,"endOffset":7078726,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange2","ranges":[{"startOffset":7078729,"endOffset":7079425,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanDeclaration","ranges":[{"startOffset":7079428,"endOffset":7079977,"count":0}],"isBlockCoverage":false},{"functionName":"getIsMatchingAsyncError","ranges":[{"startOffset":7079980,"endOffset":7080360,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addMissingAsync.ts","ranges":[{"startOffset":7080429,"endOffset":7082393,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddMissingAsync","ranges":[{"startOffset":7080919,"endOffset":7081694,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7081723,"endOffset":7082377,"count":0}],"isBlockCoverage":false},{"functionName":"getAwaitErrorSpanExpression","ranges":[{"startOffset":7082450,"endOffset":7082783,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationSiteFix","ranges":[{"startOffset":7082786,"endOffset":7083863,"count":0}],"isBlockCoverage":false},{"functionName":"getUseSiteFix","ranges":[{"startOffset":7083866,"endOffset":7084232,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingAwaitError","ranges":[{"startOffset":7084235,"endOffset":7084779,"count":0}],"isBlockCoverage":false},{"functionName":"findAwaitableInitializers","ranges":[{"startOffset":7084782,"endOffset":7086535,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifiersFromErrorSpanExpression","ranges":[{"startOffset":7086538,"endOffset":7087410,"count":0}],"isBlockCoverage":false},{"functionName":"symbolReferenceIsAlsoMissingAwait","ranges":[{"startOffset":7087413,"endOffset":7088474,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideAwaitableBody","ranges":[{"startOffset":7088477,"endOffset":7088943,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange3","ranges":[{"startOffset":7088946,"endOffset":7091876,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeadingSemicolonIfNeeded","ranges":[{"startOffset":7091879,"endOffset":7092233,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addMissingAwait.ts","ranges":[{"startOffset":7092355,"endOffset":7095961,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddMissingAwait","ranges":[{"startOffset":7094454,"endOffset":7095145,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7095174,"endOffset":7095945,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange4","ranges":[{"startOffset":7096018,"endOffset":7097426,"count":0}],"isBlockCoverage":false},{"functionName":"applyChange","ranges":[{"startOffset":7097429,"endOffset":7097666,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyPartOfDestructuring","ranges":[{"startOffset":7097669,"endOffset":7098022,"count":0}],"isBlockCoverage":false},{"functionName":"arrayElementCouldBeVariableDeclaration","ranges":[{"startOffset":7098025,"endOffset":7098387,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyPartOfCommaSeperatedInitializer","ranges":[{"startOffset":7098390,"endOffset":7098644,"count":0}],"isBlockCoverage":false},{"functionName":"expressionCouldBeVariableDeclaration","ranges":[{"startOffset":7098647,"endOffset":7099142,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addMissingConst.ts","ranges":[{"startOffset":7099211,"endOffset":7100366,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddMissingConst","ranges":[{"startOffset":7099637,"endOffset":7100068,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7100123,"endOffset":7100350,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange5","ranges":[{"startOffset":7100433,"endOffset":7100866,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addMissingDeclareProperty.ts","ranges":[{"startOffset":7100945,"endOffset":7102119,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddMissingDeclareOnProperty","ranges":[{"startOffset":7101407,"endOffset":7101838,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7101893,"endOffset":7102103,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange6","ranges":[{"startOffset":7102193,"endOffset":7102685,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addMissingInvocationForDecorator.ts","ranges":[{"startOffset":7102771,"endOffset":7103723,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddMissingInvocationForDecorator","ranges":[{"startOffset":7103173,"endOffset":7103540,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7103595,"endOffset":7103707,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange7","ranges":[{"startOffset":7103791,"endOffset":7105102,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNextParam","ranges":[{"startOffset":7105105,"endOffset":7105444,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addNameToNamelessParameter.ts","ranges":[{"startOffset":7105524,"endOffset":7106416,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddNameToNamelessParameter","ranges":[{"startOffset":7105868,"endOffset":7106233,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7106288,"endOffset":7106400,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesToAdd","ranges":[{"startOffset":7106486,"endOffset":7107194,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseParentTypeOfProperty","ranges":[{"startOffset":7107197,"endOffset":7107494,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTarget","ranges":[{"startOffset":7107497,"endOffset":7109265,"count":0}],"isBlockCoverage":false},{"functionName":"addUndefinedToOptionalProperty","ranges":[{"startOffset":7109268,"endOffset":7109743,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/addOptionalPropertyUndefined.ts","ranges":[{"startOffset":7109847,"endOffset":7111252,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7110656,"endOffset":7111188,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaration","ranges":[{"startOffset":7111319,"endOffset":7111521,"count":0}],"isBlockCoverage":false},{"functionName":"parameterShouldGetTypeFromJSDoc","ranges":[{"startOffset":7111524,"endOffset":7111640,"count":0}],"isBlockCoverage":false},{"functionName":"hasUsableJSDoc","ranges":[{"startOffset":7111643,"endOffset":7111842,"count":0}],"isBlockCoverage":false},{"functionName":"doChange8","ranges":[{"startOffset":7111845,"endOffset":7113451,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithType","ranges":[{"startOffset":7113454,"endOffset":7113679,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocType","ranges":[{"startOffset":7113682,"endOffset":7114737,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocTypeLiteral","ranges":[{"startOffset":7114740,"endOffset":7115325,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocOptionalType","ranges":[{"startOffset":7115328,"endOffset":7115529,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocNullableType","ranges":[{"startOffset":7115532,"endOffset":7115728,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocVariadicType","ranges":[{"startOffset":7115731,"endOffset":7115872,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocFunctionType","ranges":[{"startOffset":7115875,"endOffset":7116089,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocParameter","ranges":[{"startOffset":7116092,"endOffset":7116642,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocTypeReference","ranges":[{"startOffset":7116645,"endOffset":7117646,"count":0}],"isBlockCoverage":false},{"functionName":"transformJSDocIndexSignature","ranges":[{"startOffset":7117649,"endOffset":7118355,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/annotateWithTypeFromJSDoc.ts","ranges":[{"startOffset":7118434,"endOffset":7119475,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7118749,"endOffset":7119192,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7119247,"endOffset":7119459,"count":0}],"isBlockCoverage":false},{"functionName":"doChange9","ranges":[{"startOffset":7119542,"endOffset":7129889,"count":0}],"isBlockCoverage":false},{"functionName":"getModifierKindFromSource","ranges":[{"startOffset":7129892,"endOffset":7130057,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorAssignment","ranges":[{"startOffset":7130060,"endOffset":7130238,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyName","ranges":[{"startOffset":7130241,"endOffset":7130829,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertFunctionToEs6Class.ts","ranges":[{"startOffset":7130909,"endOffset":7131955,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7131247,"endOffset":7131686,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7131741,"endOffset":7131939,"count":0}],"isBlockCoverage":false},{"functionName":"convertToAsyncFunction","ranges":[{"startOffset":7132019,"endOffset":7134265,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnStatementsWithPromiseHandlers","ranges":[{"startOffset":7134268,"endOffset":7134515,"count":0}],"isBlockCoverage":false},{"functionName":"getAllPromiseExpressionsToReturn","ranges":[{"startOffset":7134518,"endOffset":7135374,"count":0}],"isBlockCoverage":false},{"functionName":"isPromiseReturningCallExpression","ranges":[{"startOffset":7135377,"endOffset":7135725,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceToType","ranges":[{"startOffset":7135728,"endOffset":7135861,"count":0}],"isBlockCoverage":false},{"functionName":"getExplicitPromisedTypeOfPromiseReturningCallExpression","ranges":[{"startOffset":7135864,"endOffset":7136623,"count":0}],"isBlockCoverage":false},{"functionName":"isPromiseTypedExpression","ranges":[{"startOffset":7136626,"endOffset":7136809,"count":0}],"isBlockCoverage":false},{"functionName":"renameCollidingVarNames","ranges":[{"startOffset":7136812,"endOffset":7140011,"count":0}],"isBlockCoverage":false},{"functionName":"getNewNameIfConflict","ranges":[{"startOffset":7140014,"endOffset":7140312,"count":0}],"isBlockCoverage":false},{"functionName":"hasFailed","ranges":[{"startOffset":7140315,"endOffset":7140374,"count":0}],"isBlockCoverage":false},{"functionName":"silentFail","ranges":[{"startOffset":7140377,"endOffset":7140460,"count":0}],"isBlockCoverage":false},{"functionName":"transformExpression","ranges":[{"startOffset":7140463,"endOffset":7141772,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined2","ranges":[{"startOffset":7141775,"endOffset":7142124,"count":0}],"isBlockCoverage":false},{"functionName":"createUniqueSynthName","ranges":[{"startOffset":7142127,"endOffset":7142329,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleNameForVarDecl","ranges":[{"startOffset":7142332,"endOffset":7143173,"count":0}],"isBlockCoverage":false},{"functionName":"finishCatchOrFinallyTransform","ranges":[{"startOffset":7143176,"endOffset":7144853,"count":0}],"isBlockCoverage":false},{"functionName":"transformFinally","ranges":[{"startOffset":7144856,"endOffset":7146236,"count":0}],"isBlockCoverage":false},{"functionName":"transformCatch","ranges":[{"startOffset":7146239,"endOffset":7147723,"count":0}],"isBlockCoverage":false},{"functionName":"transformThen","ranges":[{"startOffset":7147726,"endOffset":7148686,"count":0}],"isBlockCoverage":false},{"functionName":"transformPromiseExpressionOfPropertyAccess","ranges":[{"startOffset":7148689,"endOffset":7149276,"count":0}],"isBlockCoverage":false},{"functionName":"createVariableOrAssignmentOrExpressionStatement","ranges":[{"startOffset":7149279,"endOffset":7150174,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAnnotateAndReturn","ranges":[{"startOffset":7150177,"endOffset":7150637,"count":0}],"isBlockCoverage":false},{"functionName":"transformCallbackArgument","ranges":[{"startOffset":7150640,"endOffset":7155257,"count":0}],"isBlockCoverage":false},{"functionName":"getPossiblyAwaitedRightHandSide","ranges":[{"startOffset":7155260,"endOffset":7155500,"count":0}],"isBlockCoverage":false},{"functionName":"getLastCallSignature","ranges":[{"startOffset":7155503,"endOffset":7155673,"count":0}],"isBlockCoverage":false},{"functionName":"removeReturns","ranges":[{"startOffset":7155676,"endOffset":7157445,"count":0}],"isBlockCoverage":false},{"functionName":"transformReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":7157448,"endOffset":7158029,"count":0}],"isBlockCoverage":false},{"functionName":"getArgBindingName","ranges":[{"startOffset":7158032,"endOffset":7159770,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingName","ranges":[{"startOffset":7159773,"endOffset":7160019,"count":0}],"isBlockCoverage":false},{"functionName":"createSynthIdentifier","ranges":[{"startOffset":7160022,"endOffset":7160192,"count":0}],"isBlockCoverage":false},{"functionName":"createSynthBindingPattern","ranges":[{"startOffset":7160195,"endOffset":7160364,"count":0}],"isBlockCoverage":false},{"functionName":"referenceSynthIdentifier","ranges":[{"startOffset":7160367,"endOffset":7160484,"count":0}],"isBlockCoverage":false},{"functionName":"declareSynthBindingName","ranges":[{"startOffset":7160487,"endOffset":7160653,"count":0}],"isBlockCoverage":false},{"functionName":"declareSynthBindingPattern","ranges":[{"startOffset":7160656,"endOffset":7160848,"count":0}],"isBlockCoverage":false},{"functionName":"declareSynthIdentifier","ranges":[{"startOffset":7160851,"endOffset":7160964,"count":0}],"isBlockCoverage":false},{"functionName":"isSynthIdentifier","ranges":[{"startOffset":7160967,"endOffset":7161064,"count":0}],"isBlockCoverage":false},{"functionName":"isSynthBindingPattern","ranges":[{"startOffset":7161067,"endOffset":7161172,"count":0}],"isBlockCoverage":false},{"functionName":"shouldReturn","ranges":[{"startOffset":7161175,"endOffset":7161337,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertToAsyncFunction.ts","ranges":[{"startOffset":7161436,"endOffset":7162440,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7161780,"endOffset":7162216,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7162272,"endOffset":7162424,"count":0}],"isBlockCoverage":false},{"functionName":"fixImportOfModuleExports","ranges":[{"startOffset":7162499,"endOffset":7163659,"count":0}],"isBlockCoverage":false},{"functionName":"convertFileToEsModule","ranges":[{"startOffset":7163662,"endOffset":7165002,"count":0}],"isBlockCoverage":false},{"functionName":"collectExportRenames","ranges":[{"startOffset":7165005,"endOffset":7165504,"count":0}],"isBlockCoverage":false},{"functionName":"convertExportsAccesses","ranges":[{"startOffset":7165507,"endOffset":7165835,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExportReference","ranges":[{"startOffset":7165838,"endOffset":7166296,"count":0}],"isBlockCoverage":false},{"functionName":"convertStatement","ranges":[{"startOffset":7166299,"endOffset":7167604,"count":0}],"isBlockCoverage":false},{"functionName":"convertVariableStatement","ranges":[{"startOffset":7167607,"endOffset":7169319,"count":0}],"isBlockCoverage":false},{"functionName":"convertPropertyAccessImport","ranges":[{"startOffset":7169322,"endOffset":7170146,"count":0}],"isBlockCoverage":false},{"functionName":"convertAssignment","ranges":[{"startOffset":7170149,"endOffset":7171342,"count":0}],"isBlockCoverage":false},{"functionName":"tryChangeModuleExportsObject","ranges":[{"startOffset":7171345,"endOffset":7172275,"count":0}],"isBlockCoverage":false},{"functionName":"convertNamedExport","ranges":[{"startOffset":7172278,"endOffset":7172932,"count":0}],"isBlockCoverage":false},{"functionName":"convertReExportAll","ranges":[{"startOffset":7172935,"endOffset":7173600,"count":0}],"isBlockCoverage":false},{"functionName":"reExportStar","ranges":[{"startOffset":7173603,"endOffset":7173751,"count":0}],"isBlockCoverage":false},{"functionName":"reExportDefault","ranges":[{"startOffset":7173754,"endOffset":7173979,"count":0}],"isBlockCoverage":false},{"functionName":"convertExportsPropertyAssignment","ranges":[{"startOffset":7173982,"endOffset":7174908,"count":0}],"isBlockCoverage":false},{"functionName":"convertExportsDotXEquals_replaceNode","ranges":[{"startOffset":7174911,"endOffset":7175773,"count":0}],"isBlockCoverage":false},{"functionName":"replaceImportUseSites","ranges":[{"startOffset":7175776,"endOffset":7176547,"count":0}],"isBlockCoverage":false},{"functionName":"convertSingleImport","ranges":[{"startOffset":7176550,"endOffset":7178056,"count":0}],"isBlockCoverage":false},{"functionName":"convertSingleIdentifierImport","ranges":[{"startOffset":7178059,"endOffset":7180065,"count":0}],"isBlockCoverage":false},{"functionName":"makeUniqueName","ranges":[{"startOffset":7180068,"endOffset":7180283,"count":0}],"isBlockCoverage":false},{"functionName":"collectFreeIdentifiers","ranges":[{"startOffset":7180286,"endOffset":7180445,"count":0}],"isBlockCoverage":false},{"functionName":"forEachFreeIdentifier","ranges":[{"startOffset":7180448,"endOffset":7180632,"count":0}],"isBlockCoverage":false},{"functionName":"isFreeIdentifier","ranges":[{"startOffset":7180635,"endOffset":7181032,"count":0}],"isBlockCoverage":false},{"functionName":"functionExpressionToDeclaration","ranges":[{"startOffset":7181035,"endOffset":7181566,"count":0}],"isBlockCoverage":false},{"functionName":"classExpressionToDeclaration","ranges":[{"startOffset":7181569,"endOffset":7181975,"count":0}],"isBlockCoverage":false},{"functionName":"makeSingleImport","ranges":[{"startOffset":7181978,"endOffset":7182410,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportSpecifier2","ranges":[{"startOffset":7182413,"endOffset":7182694,"count":0}],"isBlockCoverage":false},{"functionName":"makeConst","ranges":[{"startOffset":7182697,"endOffset":7183060,"count":0}],"isBlockCoverage":false},{"functionName":"makeExportDeclaration","ranges":[{"startOffset":7183063,"endOffset":7183414,"count":0}],"isBlockCoverage":false},{"functionName":"convertedImports","ranges":[{"startOffset":7183417,"endOffset":7183545,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertToEsModule.ts","ranges":[{"startOffset":7183589,"endOffset":7184677,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7183836,"endOffset":7184661,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedName","ranges":[{"startOffset":7184758,"endOffset":7185059,"count":0}],"isBlockCoverage":false},{"functionName":"doChange10","ranges":[{"startOffset":7185062,"endOffset":7185509,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/correctQualifiedNameToIndexedAccessType.ts","ranges":[{"startOffset":7185604,"endOffset":7186903,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7186029,"endOffset":7186610,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7186666,"endOffset":7186887,"count":0}],"isBlockCoverage":false},{"functionName":"getExportSpecifierForDiagnosticSpan","ranges":[{"startOffset":7186968,"endOffset":7187126,"count":0}],"isBlockCoverage":false},{"functionName":"fixSingleExportDeclaration","ranges":[{"startOffset":7187129,"endOffset":7188659,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeExportSpecifiers","ranges":[{"startOffset":7188662,"endOffset":7189297,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertToTypeOnlyExport.ts","ranges":[{"startOffset":7189376,"endOffset":7190815,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToConvertToTypeOnlyExport","ranges":[{"startOffset":7189726,"endOffset":7190209,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToConvertToTypeOnlyExport","ranges":[{"startOffset":7190265,"endOffset":7190799,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaration2","ranges":[{"startOffset":7190880,"endOffset":7191110,"count":0}],"isBlockCoverage":false},{"functionName":"canConvertImportDeclarationForSpecifier","ranges":[{"startOffset":7191113,"endOffset":7191807,"count":0}],"isBlockCoverage":false},{"functionName":"doChange11","ranges":[{"startOffset":7191810,"endOffset":7194769,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertToTypeOnlyImport.ts","ranges":[{"startOffset":7194848,"endOffset":7198210,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToConvertToTypeOnlyImport","ranges":[{"startOffset":7195528,"endOffset":7196904,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToConvertToTypeOnlyImport","ranges":[{"startOffset":7196960,"endOffset":7198194,"count":0}],"isBlockCoverage":false},{"functionName":"doChange12","ranges":[{"startOffset":7198272,"endOffset":7199542,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftAndRightSiblings","ranges":[{"startOffset":7199545,"endOffset":7200123,"count":0}],"isBlockCoverage":false},{"functionName":"findEndOfTextBetween","ranges":[{"startOffset":7200126,"endOffset":7200460,"count":0}],"isBlockCoverage":false},{"functionName":"createDeclaration","ranges":[{"startOffset":7200463,"endOffset":7200972,"count":0}],"isBlockCoverage":false},{"functionName":"createInterfaceForTypeLiteral","ranges":[{"startOffset":7200975,"endOffset":7201375,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAliasForTypeExpression","ranges":[{"startOffset":7201378,"endOffset":7201750,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureFromTypeLiteral","ranges":[{"startOffset":7201753,"endOffset":7202771,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyName","ranges":[{"startOffset":7202774,"endOffset":7202897,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypedefNodes","ranges":[{"startOffset":7202900,"endOffset":7203157,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertTypedefToType.ts","ranges":[{"startOffset":7203233,"endOffset":7204844,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7203573,"endOffset":7204363,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7204392,"endOffset":7204828,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo5","ranges":[{"startOffset":7204916,"endOffset":7205418,"count":0}],"isBlockCoverage":false},{"functionName":"doChange13","ranges":[{"startOffset":7205421,"endOffset":7205966,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertLiteralTypeToMappedType.ts","ranges":[{"startOffset":7206052,"endOffset":7207311,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToConvertLiteralTypeToMappedType","ranges":[{"startOffset":7206437,"endOffset":7207017,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7207073,"endOffset":7207295,"count":0}],"isBlockCoverage":false},{"functionName":"getClass","ranges":[{"startOffset":7207391,"endOffset":7207557,"count":0}],"isBlockCoverage":false},{"functionName":"symbolPointsToNonPrivateMember","ranges":[{"startOffset":7207560,"endOffset":7207725,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingDeclarations","ranges":[{"startOffset":7207728,"endOffset":7209848,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClauseSymbolTable","ranges":[{"startOffset":7209851,"endOffset":7210320,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixClassIncorrectlyImplementsInterface.ts","ranges":[{"startOffset":7210414,"endOffset":7212255,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7210900,"endOffset":7211596,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7211633,"endOffset":7212239,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAdder","ranges":[{"startOffset":7212308,"endOffset":7212575,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAdderWorker","ranges":[{"startOffset":7212578,"endOffset":7220760,"count":0}],"isBlockCoverage":false},{"functionName":"createImportSpecifierResolver","ranges":[{"startOffset":7220763,"endOffset":7221699,"count":0}],"isBlockCoverage":false},{"functionName":"getImportCompletionAction","ranges":[{"startOffset":7221702,"endOffset":7223262,"count":0}],"isBlockCoverage":false},{"functionName":"getPromoteTypeOnlyCompletionAction","ranges":[{"startOffset":7223265,"endOffset":7223962,"count":0}],"isBlockCoverage":false},{"functionName":"getImportFixForSymbol","ranges":[{"startOffset":7223965,"endOffset":7224394,"count":0}],"isBlockCoverage":false},{"functionName":"codeFixActionToCodeAction","ranges":[{"startOffset":7224397,"endOffset":7224548,"count":0}],"isBlockCoverage":false},{"functionName":"getAllExportInfoForSymbol","ranges":[{"startOffset":7224551,"endOffset":7225158,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleExportInfoForSymbol","ranges":[{"startOffset":7225161,"endOffset":7226643,"count":0}],"isBlockCoverage":false},{"functionName":"getImportFixes","ranges":[{"startOffset":7226646,"endOffset":7227848,"count":0}],"isBlockCoverage":false},{"functionName":"tryUseExistingNamespaceImport","ranges":[{"startOffset":7227851,"endOffset":7228433,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceLikeImportText","ranges":[{"startOffset":7228436,"endOffset":7229017,"count":0}],"isBlockCoverage":false},{"functionName":"getAddAsTypeOnly","ranges":[{"startOffset":7229020,"endOffset":7229566,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddToExistingImport","ranges":[{"startOffset":7229569,"endOffset":7231940,"count":0}],"isBlockCoverage":false},{"functionName":"createExistingImportMap","ranges":[{"startOffset":7231943,"endOffset":7233362,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseRequire","ranges":[{"startOffset":7233365,"endOffset":7234437,"count":0}],"isBlockCoverage":false},{"functionName":"createGetChecker","ranges":[{"startOffset":7234440,"endOffset":7234637,"count":0}],"isBlockCoverage":false},{"functionName":"getNewImportFixes","ranges":[{"startOffset":7234640,"endOffset":7238046,"count":0}],"isBlockCoverage":false},{"functionName":"getFixesForAddImport","ranges":[{"startOffset":7238049,"endOffset":7238633,"count":0}],"isBlockCoverage":false},{"functionName":"newImportInfoFromExistingSpecifier","ranges":[{"startOffset":7238636,"endOffset":7239301,"count":0}],"isBlockCoverage":false},{"functionName":"getFixInfos","ranges":[{"startOffset":7239304,"endOffset":7240549,"count":0}],"isBlockCoverage":false},{"functionName":"sortFixInfo","ranges":[{"startOffset":7240552,"endOffset":7241008,"count":0}],"isBlockCoverage":false},{"functionName":"getBestFix","ranges":[{"startOffset":7241011,"endOffset":7241702,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiers","ranges":[{"startOffset":7241705,"endOffset":7242448,"count":0}],"isBlockCoverage":false},{"functionName":"isFixPossiblyReExportingImportingFile","ranges":[{"startOffset":7242451,"endOffset":7242867,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexFileName","ranges":[{"startOffset":7242870,"endOffset":7243052,"count":0}],"isBlockCoverage":false},{"functionName":"compareNodeCoreModuleSpecifiers","ranges":[{"startOffset":7243055,"endOffset":7243503,"count":0}],"isBlockCoverage":false},{"functionName":"getFixesInfoForUMDImport","ranges":[{"startOffset":7243506,"endOffset":7244481,"count":0}],"isBlockCoverage":false},{"functionName":"getUmdSymbol","ranges":[{"startOffset":7244484,"endOffset":7245158,"count":0}],"isBlockCoverage":false},{"functionName":"getImportKind","ranges":[{"startOffset":7245161,"endOffset":7245904,"count":0}],"isBlockCoverage":false},{"functionName":"getUmdImportKind","ranges":[{"startOffset":7245907,"endOffset":7246942,"count":0}],"isBlockCoverage":false},{"functionName":"getFixesInfoForNonUMDImport","ranges":[{"startOffset":7246945,"endOffset":7248123,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeOnlyPromotionFix","ranges":[{"startOffset":7248126,"endOffset":7248716,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNamesToImport","ranges":[{"startOffset":7248719,"endOffset":7249518,"count":0}],"isBlockCoverage":false},{"functionName":"needsJsxNamespaceFix","ranges":[{"startOffset":7249521,"endOffset":7249967,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfos","ranges":[{"startOffset":7249970,"endOffset":7252607,"count":0}],"isBlockCoverage":false},{"functionName":"getExportEqualsImportKind","ranges":[{"startOffset":7252610,"endOffset":7253427,"count":0}],"isBlockCoverage":false},{"functionName":"codeActionForFix","ranges":[{"startOffset":7253430,"endOffset":7253907,"count":0}],"isBlockCoverage":false},{"functionName":"codeActionForFixWorker","ranges":[{"startOffset":7253910,"endOffset":7257226,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierText","ranges":[{"startOffset":7257229,"endOffset":7257680,"count":0}],"isBlockCoverage":false},{"functionName":"promoteFromTypeOnly","ranges":[{"startOffset":7257683,"endOffset":7261673,"count":0}],"isBlockCoverage":false},{"functionName":"doAddExistingFix","ranges":[{"startOffset":7261676,"endOffset":7266159,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespaceQualifier","ranges":[{"startOffset":7266162,"endOffset":7266329,"count":0}],"isBlockCoverage":false},{"functionName":"addImportType","ranges":[{"startOffset":7266332,"endOffset":7266545,"count":0}],"isBlockCoverage":false},{"functionName":"getImportTypePrefix","ranges":[{"startOffset":7266548,"endOffset":7266736,"count":0}],"isBlockCoverage":false},{"functionName":"needsTypeOnly","ranges":[{"startOffset":7266739,"endOffset":7266833,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseTypeOnly","ranges":[{"startOffset":7266836,"endOffset":7267007,"count":0}],"isBlockCoverage":false},{"functionName":"getNewImports","ranges":[{"startOffset":7267010,"endOffset":7269175,"count":0}],"isBlockCoverage":false},{"functionName":"getNewRequires","ranges":[{"startOffset":7269178,"endOffset":7270367,"count":0}],"isBlockCoverage":false},{"functionName":"createConstEqualsRequireDeclaration","ranges":[{"startOffset":7270370,"endOffset":7271006,"count":0}],"isBlockCoverage":false},{"functionName":"symbolHasMeaning","ranges":[{"startOffset":7271009,"endOffset":7271155,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSymbolToValidIdentifier","ranges":[{"startOffset":7271158,"endOffset":7271364,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierToValidIdentifier","ranges":[{"startOffset":7271367,"endOffset":7272286,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/importFixes.ts","ranges":[{"startOffset":7272372,"endOffset":7276259,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7274872,"endOffset":7275595,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7275655,"endOffset":7276243,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo6","ranges":[{"startOffset":7276324,"endOffset":7277589,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingConstraint","ranges":[{"startOffset":7277592,"endOffset":7278700,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetConstraintFromDiagnosticMessage","ranges":[{"startOffset":7278703,"endOffset":7278900,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetConstraintType","ranges":[{"startOffset":7278903,"endOffset":7279207,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAddMissingConstraint.ts","ranges":[{"startOffset":7279286,"endOffset":7281812,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7280505,"endOffset":7281045,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7281101,"endOffset":7281796,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchChanges","ranges":[{"startOffset":7281873,"endOffset":7283452,"count":0}],"isBlockCoverage":false},{"functionName":"doAddOverrideModifierChange","ranges":[{"startOffset":7283455,"endOffset":7284601,"count":0}],"isBlockCoverage":false},{"functionName":"doRemoveOverrideModifierChange","ranges":[{"startOffset":7284604,"endOffset":7285088,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElementLikeHasJSDoc","ranges":[{"startOffset":7285091,"endOffset":7285509,"count":0}],"isBlockCoverage":false},{"functionName":"findContainerClassElementLike","ranges":[{"startOffset":7285512,"endOffset":7285893,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixOverrideModifier.ts","ranges":[{"startOffset":7286026,"endOffset":7291676,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixOverrideModifierIssues","ranges":[{"startOffset":7290665,"endOffset":7291252,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7291347,"endOffset":7291660,"count":0}],"isBlockCoverage":false},{"functionName":"doChange14","ranges":[{"startOffset":7291755,"endOffset":7292276,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAccessExpression","ranges":[{"startOffset":7292279,"endOffset":7292427,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixNoPropertyAccessFromIndexSignature.ts","ranges":[{"startOffset":7292520,"endOffset":7293658,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7292931,"endOffset":7293439,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7293468,"endOffset":7293642,"count":0}],"isBlockCoverage":false},{"functionName":"doChange15","ranges":[{"startOffset":7293715,"endOffset":7295256,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixImplicitThis.ts","ranges":[{"startOffset":7295327,"endOffset":7296390,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixImplicitThis","ranges":[{"startOffset":7295668,"endOffset":7296149,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7296205,"endOffset":7296374,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo7","ranges":[{"startOffset":7296458,"endOffset":7297958,"count":0}],"isBlockCoverage":false},{"functionName":"doChange16","ranges":[{"startOffset":7297961,"endOffset":7298453,"count":0}],"isBlockCoverage":false},{"functionName":"doChanges","ranges":[{"startOffset":7298456,"endOffset":7298751,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExportDeclaration","ranges":[{"startOffset":7298754,"endOffset":7298985,"count":0}],"isBlockCoverage":false},{"functionName":"updateExport","ranges":[{"startOffset":7298988,"endOffset":7299824,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":7299827,"endOffset":7300302,"count":0}],"isBlockCoverage":false},{"functionName":"createExportSpecifiers","ranges":[{"startOffset":7300305,"endOffset":7300552,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeOfSymbol","ranges":[{"startOffset":7300555,"endOffset":7301007,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixImportNonExportedMember.ts","ranges":[{"startOffset":7301089,"endOffset":7304011,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7301458,"endOffset":7301985,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7301995,"endOffset":7303995,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedTupleMember","ranges":[{"startOffset":7304081,"endOffset":7304265,"count":0}],"isBlockCoverage":false},{"functionName":"doChange17","ranges":[{"startOffset":7304268,"endOffset":7305344,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixIncorrectNamedTupleSyntax.ts","ranges":[{"startOffset":7305428,"endOffset":7306554,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixIncorrectNamedTupleSyntax","ranges":[{"startOffset":7305992,"endOffset":7306511,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo8","ranges":[{"startOffset":7306607,"endOffset":7309867,"count":0}],"isBlockCoverage":false},{"functionName":"doChange18","ranges":[{"startOffset":7309870,"endOffset":7310604,"count":0}],"isBlockCoverage":false},{"functionName":"convertSemanticMeaningToSymbolFlags","ranges":[{"startOffset":7310607,"endOffset":7310935,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedSourceFileFromImportDeclaration","ranges":[{"startOffset":7310938,"endOffset":7311424,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixSpelling.ts","ranges":[{"startOffset":7311491,"endOffset":7313873,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7312764,"endOffset":7313444,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7313500,"endOffset":7313857,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectTypeFromLabeledExpression","ranges":[{"startOffset":7313933,"endOffset":7314325,"count":0}],"isBlockCoverage":false},{"functionName":"getFixInfo","ranges":[{"startOffset":7314328,"endOffset":7316877,"count":0}],"isBlockCoverage":false},{"functionName":"checkFixedAssignableTo","ranges":[{"startOffset":7316880,"endOffset":7317803,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo9","ranges":[{"startOffset":7317806,"endOffset":7319683,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableLikeInitializer","ranges":[{"startOffset":7319686,"endOffset":7320404,"count":0}],"isBlockCoverage":false},{"functionName":"addReturnStatement","ranges":[{"startOffset":7320407,"endOffset":7320905,"count":0}],"isBlockCoverage":false},{"functionName":"removeBlockBodyBrace","ranges":[{"startOffset":7320908,"endOffset":7321302,"count":0}],"isBlockCoverage":false},{"functionName":"wrapBlockWithParen","ranges":[{"startOffset":7321305,"endOffset":7321490,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForfixAddReturnStatement","ranges":[{"startOffset":7321493,"endOffset":7321875,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForFixRemoveBracesFromArrowFunctionBody","ranges":[{"startOffset":7321878,"endOffset":7322442,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForfixWrapTheBlockWithParen","ranges":[{"startOffset":7322445,"endOffset":7322897,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/returnValueCorrect.ts","ranges":[{"startOffset":7323062,"endOffset":7325897,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToCorrectReturnValue","ranges":[{"startOffset":7323899,"endOffset":7324682,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7324711,"endOffset":7325881,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo10","ranges":[{"startOffset":7325958,"endOffset":7332521,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForMissingMemberDeclaration","ranges":[{"startOffset":7332524,"endOffset":7332768,"count":0}],"isBlockCoverage":false},{"functionName":"createActionForAddMissingMemberInJavascriptFile","ranges":[{"startOffset":7332771,"endOffset":7333636,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingMemberInJs","ranges":[{"startOffset":7333639,"endOffset":7335064,"count":0}],"isBlockCoverage":false},{"functionName":"initializePropertyToUndefined","ranges":[{"startOffset":7335067,"endOffset":7335280,"count":0}],"isBlockCoverage":false},{"functionName":"createActionsForAddMissingMemberInTypeScriptFile","ranges":[{"startOffset":7335283,"endOffset":7336547,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode2","ranges":[{"startOffset":7336550,"endOffset":7337408,"count":0}],"isBlockCoverage":false},{"functionName":"addPropertyDeclaration","ranges":[{"startOffset":7337411,"endOffset":7338244,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeToInsertPropertyAfter","ranges":[{"startOffset":7338247,"endOffset":7338449,"count":0}],"isBlockCoverage":false},{"functionName":"createAddIndexSignatureAction","ranges":[{"startOffset":7338452,"endOffset":7339288,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForMissingMethodDeclaration","ranges":[{"startOffset":7339291,"endOffset":7340289,"count":0}],"isBlockCoverage":false},{"functionName":"addMethodDeclaration","ranges":[{"startOffset":7340292,"endOffset":7341177,"count":0}],"isBlockCoverage":false},{"functionName":"addEnumMemberDeclaration","ranges":[{"startOffset":7341180,"endOffset":7341932,"count":0}],"isBlockCoverage":false},{"functionName":"addFunctionDeclaration","ranges":[{"startOffset":7341935,"endOffset":7343281,"count":0}],"isBlockCoverage":false},{"functionName":"addJsxAttributes","ranges":[{"startOffset":7343284,"endOffset":7344618,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectLiteralProperties","ranges":[{"startOffset":7344621,"endOffset":7345834,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetValueFromType","ranges":[{"startOffset":7345837,"endOffset":7350167,"count":0}],"isBlockCoverage":false},{"functionName":"createUndefined","ranges":[{"startOffset":7350170,"endOffset":7350252,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralType","ranges":[{"startOffset":7350255,"endOffset":7350482,"count":0}],"isBlockCoverage":false},{"functionName":"getUnmatchedAttributes","ranges":[{"startOffset":7350485,"endOffset":7351485,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetContainingMethodDeclaration","ranges":[{"startOffset":7351488,"endOffset":7351814,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameFromSymbol","ranges":[{"startOffset":7351817,"endOffset":7352406,"count":0}],"isBlockCoverage":false},{"functionName":"findScope","ranges":[{"startOffset":7352409,"endOffset":7352665,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAddMissingMember.ts","ranges":[{"startOffset":7352824,"endOffset":7359226,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7353798,"endOffset":7355797,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7355937,"endOffset":7359210,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingNewOperator","ranges":[{"startOffset":7359292,"endOffset":7359607,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestorMatchingSpan2","ranges":[{"startOffset":7359610,"endOffset":7359845,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAddMissingNewOperator.ts","ranges":[{"startOffset":7359925,"endOffset":7360826,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7360253,"endOffset":7360629,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7360685,"endOffset":7360810,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo11","ranges":[{"startOffset":7360886,"endOffset":7363535,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetName2","ranges":[{"startOffset":7363538,"endOffset":7363839,"count":0}],"isBlockCoverage":false},{"functionName":"typeToTypeNode","ranges":[{"startOffset":7363842,"endOffset":7364076,"count":0}],"isBlockCoverage":false},{"functionName":"doChange19","ranges":[{"startOffset":7364079,"endOffset":7365112,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleSignatureDeclaration","ranges":[{"startOffset":7365115,"endOffset":7365417,"count":0}],"isBlockCoverage":false},{"functionName":"updateParameters","ranges":[{"startOffset":7365420,"endOffset":7366233,"count":0}],"isBlockCoverage":false},{"functionName":"getOverloads","ranges":[{"startOffset":7366236,"endOffset":7366704,"count":0}],"isBlockCoverage":false},{"functionName":"isOverload","ranges":[{"startOffset":7366707,"endOffset":7366835,"count":0}],"isBlockCoverage":false},{"functionName":"createParameter","ranges":[{"startOffset":7366838,"endOffset":7367102,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalPos","ranges":[{"startOffset":7367105,"endOffset":7367311,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAddMissingParam.ts","ranges":[{"startOffset":7367421,"endOffset":7369964,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7367834,"endOffset":7369320,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7369349,"endOffset":7369948,"count":0}],"isBlockCoverage":false},{"functionName":"getInstallCommand","ranges":[{"startOffset":7370025,"endOffset":7370149,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportedPackageName","ranges":[{"startOffset":7370152,"endOffset":7370539,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageNameToInstall","ranges":[{"startOffset":7370542,"endOffset":7370887,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixCannotFindModule.ts","ranges":[{"startOffset":7371016,"endOffset":7373136,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixNotFoundModule","ranges":[{"startOffset":7371589,"endOffset":7372333,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7372406,"endOffset":7373120,"count":0}],"isBlockCoverage":false},{"functionName":"getClass2","ranges":[{"startOffset":7373224,"endOffset":7373364,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingMembers","ranges":[{"startOffset":7373367,"endOffset":7374175,"count":0}],"isBlockCoverage":false},{"functionName":"symbolPointsToNonPrivateAndAbstractMember","ranges":[{"startOffset":7374178,"endOffset":7374392,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixClassDoesntImplementInheritedAbstractMember.ts","ranges":[{"startOffset":7374494,"endOffset":7376024,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixClassNotImplementingInheritedMembers","ranges":[{"startOffset":7374907,"endOffset":7375425,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToFixClassDoesntImplementInheritedAbstractMember","ranges":[{"startOffset":7375481,"endOffset":7376008,"count":0}],"isBlockCoverage":false},{"functionName":"doChange20","ranges":[{"startOffset":7376100,"endOffset":7376291,"count":0}],"isBlockCoverage":false},{"functionName":"getNodes","ranges":[{"startOffset":7376294,"endOffset":7376735,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperCall","ranges":[{"startOffset":7376738,"endOffset":7376901,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixClassSuperMustPrecedeThisAccess.ts","ranges":[{"startOffset":7376991,"endOffset":7378544,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7377360,"endOffset":7377948,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7377985,"endOffset":7378528,"count":0}],"isBlockCoverage":false},{"functionName":"getNode","ranges":[{"startOffset":7378623,"endOffset":7378850,"count":0}],"isBlockCoverage":false},{"functionName":"doChange21","ranges":[{"startOffset":7378853,"endOffset":7379177,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixConstructorForDerivedNeedSuperCall.ts","ranges":[{"startOffset":7379270,"endOffset":7380235,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7379623,"endOffset":7380022,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7380078,"endOffset":7380219,"count":0}],"isBlockCoverage":false},{"functionName":"doChange22","ranges":[{"startOffset":7380293,"endOffset":7380449,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixEnableJsxFlag.ts","ranges":[{"startOffset":7380519,"endOffset":7381669,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixEnableJsxFlag","ranges":[{"startOffset":7380835,"endOffset":7381335,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7381389,"endOffset":7381653,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo12","ranges":[{"startOffset":7381725,"endOffset":7382577,"count":0}],"isBlockCoverage":false},{"functionName":"doChange23","ranges":[{"startOffset":7382580,"endOffset":7383197,"count":0}],"isBlockCoverage":false},{"functionName":"getSuggestion","ranges":[{"startOffset":7383200,"endOffset":7383365,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixNaNEquality.ts","ranges":[{"startOffset":7383435,"endOffset":7384678,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7383738,"endOffset":7384275,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7384331,"endOffset":7384662,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixModuleAndTargetOptions.ts","ranges":[{"startOffset":7384794,"endOffset":7387503,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixModuleAndTarget","ranges":[{"startOffset":7385610,"endOffset":7387487,"count":0}],"isBlockCoverage":false},{"functionName":"doChange24","ranges":[{"startOffset":7387566,"endOffset":7387740,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty2","ranges":[{"startOffset":7387743,"endOffset":7387879,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixPropertyAssignment.ts","ranges":[{"startOffset":7387956,"endOffset":7389016,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7388397,"endOffset":7388833,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7388862,"endOffset":7389000,"count":0}],"isBlockCoverage":false},{"functionName":"getNodes2","ranges":[{"startOffset":7389094,"endOffset":7389425,"count":0}],"isBlockCoverage":false},{"functionName":"doChanges2","ranges":[{"startOffset":7389428,"endOffset":7390297,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixExtendsInterfaceBecomesImplements.ts","ranges":[{"startOffset":7390389,"endOffset":7391616,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7390734,"endOffset":7391296,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7391352,"endOffset":7391600,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo13","ranges":[{"startOffset":7391688,"endOffset":7391979,"count":0}],"isBlockCoverage":false},{"functionName":"doChange25","ranges":[{"startOffset":7391982,"endOffset":7392254,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixForgottenThisPropertyAccess.ts","ranges":[{"startOffset":7392368,"endOffset":7393923,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7393065,"endOffset":7393622,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7393678,"endOffset":7393907,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCharacter","ranges":[{"startOffset":7393988,"endOffset":7394077,"count":0}],"isBlockCoverage":false},{"functionName":"doChange26","ranges":[{"startOffset":7394080,"endOffset":7394477,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixInvalidJsxCharacters.ts","ranges":[{"startOffset":7394593,"endOffset":7396513,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7395113,"endOffset":7396185,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7396195,"endOffset":7396422,"count":0}],"isBlockCoverage":false},{"functionName":"getDeleteAction","ranges":[{"startOffset":7396576,"endOffset":7397086,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameAction","ranges":[{"startOffset":7397089,"endOffset":7398444,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo14","ranges":[{"startOffset":7398447,"endOffset":7398966,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixUnmatchedParameter.ts","ranges":[{"startOffset":7399086,"endOffset":7400927,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixUnmatchedParameter","ranges":[{"startOffset":7399602,"endOffset":7400018,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToFixUnmatchedParameter","ranges":[{"startOffset":7400047,"endOffset":7400911,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclaration","ranges":[{"startOffset":7401004,"endOffset":7401493,"count":0}],"isBlockCoverage":false},{"functionName":"doTypeOnlyImportChange","ranges":[{"startOffset":7401496,"endOffset":7402334,"count":0}],"isBlockCoverage":false},{"functionName":"doNamespaceImportChange","ranges":[{"startOffset":7402337,"endOffset":7402539,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixUnreferenceableDecoratorMetadata.ts","ranges":[{"startOffset":7402630,"endOffset":7404186,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7403097,"endOffset":7404143,"count":0}],"isBlockCoverage":false},{"functionName":"changeInferToUnknown","ranges":[{"startOffset":7404247,"endOffset":7404418,"count":0}],"isBlockCoverage":false},{"functionName":"createDeleteFix","ranges":[{"startOffset":7404421,"endOffset":7404582,"count":0}],"isBlockCoverage":false},{"functionName":"deleteTypeParameters","ranges":[{"startOffset":7404585,"endOffset":7404820,"count":0}],"isBlockCoverage":false},{"functionName":"isImport","ranges":[{"startOffset":7404823,"endOffset":7405043,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetFullImport","ranges":[{"startOffset":7405046,"endOffset":7405189,"count":0}],"isBlockCoverage":false},{"functionName":"canDeleteEntireVariableStatement","ranges":[{"startOffset":7405192,"endOffset":7405367,"count":0}],"isBlockCoverage":false},{"functionName":"deleteEntireVariableStatement","ranges":[{"startOffset":7405370,"endOffset":7405544,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDestructuringElements","ranges":[{"startOffset":7405547,"endOffset":7405682,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDestructuring","ranges":[{"startOffset":7405685,"endOffset":7406662,"count":0}],"isBlockCoverage":false},{"functionName":"tryPrefixDeclaration","ranges":[{"startOffset":7406665,"endOffset":7407392,"count":0}],"isBlockCoverage":false},{"functionName":"canPrefix","ranges":[{"startOffset":7407395,"endOffset":7407825,"count":0}],"isBlockCoverage":false},{"functionName":"tryDeleteDeclaration","ranges":[{"startOffset":7407828,"endOffset":7408450,"count":0}],"isBlockCoverage":false},{"functionName":"tryDeleteDeclarationWorker","ranges":[{"startOffset":7408453,"endOffset":7409151,"count":0}],"isBlockCoverage":false},{"functionName":"tryDeleteParameter","ranges":[{"startOffset":7409154,"endOffset":7409936,"count":0}],"isBlockCoverage":false},{"functionName":"isNotProvidedArguments","ranges":[{"startOffset":7409939,"endOffset":7410234,"count":0}],"isBlockCoverage":false},{"functionName":"mayDeleteParameter","ranges":[{"startOffset":7410237,"endOffset":7412368,"count":0}],"isBlockCoverage":false},{"functionName":"isCallbackLike","ranges":[{"startOffset":7412371,"endOffset":7412656,"count":0}],"isBlockCoverage":false},{"functionName":"isLastParameter","ranges":[{"startOffset":7412659,"endOffset":7413030,"count":0}],"isBlockCoverage":false},{"functionName":"mayDeleteExpression","ranges":[{"startOffset":7413033,"endOffset":7413308,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixUnusedIdentifier.ts","ranges":[{"startOffset":7413442,"endOffset":7422006,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7414335,"endOffset":7418941,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7419046,"endOffset":7421990,"count":0}],"isBlockCoverage":false},{"functionName":"doChange27","ranges":[{"startOffset":7422066,"endOffset":7423678,"count":0}],"isBlockCoverage":false},{"functionName":"lastWhere","ranges":[{"startOffset":7423681,"endOffset":7423842,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixUnreachableCode.ts","ranges":[{"startOffset":7423916,"endOffset":7424961,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7424201,"endOffset":7424751,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7424807,"endOffset":7424945,"count":0}],"isBlockCoverage":false},{"functionName":"doChange28","ranges":[{"startOffset":7425017,"endOffset":7425612,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixUnusedLabel.ts","ranges":[{"startOffset":7425682,"endOffset":7426443,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7425946,"endOffset":7426259,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7426315,"endOffset":7426427,"count":0}],"isBlockCoverage":false},{"functionName":"doChange29","ranges":[{"startOffset":7426498,"endOffset":7426750,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo15","ranges":[{"startOffset":7426753,"endOffset":7426999,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeContainer","ranges":[{"startOffset":7427002,"endOffset":7427742,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":7427745,"endOffset":7428180,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixJSDocTypes.ts","ranges":[{"startOffset":7428267,"endOffset":7430657,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7428860,"endOffset":7429945,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7430000,"endOffset":7430641,"count":0}],"isBlockCoverage":false},{"functionName":"doChange30","ranges":[{"startOffset":7430724,"endOffset":7430845,"count":0}],"isBlockCoverage":false},{"functionName":"getCallName","ranges":[{"startOffset":7430848,"endOffset":7431246,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixMissingCallParentheses.ts","ranges":[{"startOffset":7431327,"endOffset":7432497,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7431752,"endOffset":7432229,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7432258,"endOffset":7432481,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnType","ranges":[{"startOffset":7432561,"endOffset":7432794,"count":0}],"isBlockCoverage":false},{"functionName":"getNodes3","ranges":[{"startOffset":7432797,"endOffset":7433791,"count":0}],"isBlockCoverage":false},{"functionName":"doChange31","ranges":[{"startOffset":7433794,"endOffset":7434291,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAwaitInSyncFunction.ts","ranges":[{"startOffset":7434369,"endOffset":7436049,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7435073,"endOffset":7435550,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActionsToFixAwaitInSyncFunction","ranges":[{"startOffset":7435606,"endOffset":7436033,"count":0}],"isBlockCoverage":false},{"functionName":"doChange32","ranges":[{"startOffset":7436118,"endOffset":7437701,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixPropertyOverrideAccessor.ts","ranges":[{"startOffset":7437784,"endOffset":7439050,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7438277,"endOffset":7438657,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7438713,"endOffset":7439034,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnostic","ranges":[{"startOffset":7439106,"endOffset":7440002,"count":0}],"isBlockCoverage":false},{"functionName":"mapSuggestionDiagnostic","ranges":[{"startOffset":7440005,"endOffset":7441805,"count":0}],"isBlockCoverage":false},{"functionName":"doChange33","ranges":[{"startOffset":7441808,"endOffset":7446397,"count":0}],"isBlockCoverage":false},{"functionName":"annotateVariableDeclaration","ranges":[{"startOffset":7446400,"endOffset":7446726,"count":0}],"isBlockCoverage":false},{"functionName":"annotateParameters","ranges":[{"startOffset":7446729,"endOffset":7448046,"count":0}],"isBlockCoverage":false},{"functionName":"annotateThis","ranges":[{"startOffset":7448049,"endOffset":7448788,"count":0}],"isBlockCoverage":false},{"functionName":"annotateJSDocThis","ranges":[{"startOffset":7448791,"endOffset":7449071,"count":0}],"isBlockCoverage":false},{"functionName":"annotateSetAccessor","ranges":[{"startOffset":7449074,"endOffset":7449878,"count":0}],"isBlockCoverage":false},{"functionName":"annotate","ranges":[{"startOffset":7449881,"endOffset":7451095,"count":0}],"isBlockCoverage":false},{"functionName":"tryReplaceImportTypeNodeWithAutoImport","ranges":[{"startOffset":7451098,"endOffset":7451645,"count":0}],"isBlockCoverage":false},{"functionName":"annotateJSDocParameters","ranges":[{"startOffset":7451648,"endOffset":7453893,"count":0}],"isBlockCoverage":false},{"functionName":"getReferences","ranges":[{"startOffset":7453896,"endOffset":7454220,"count":0}],"isBlockCoverage":false},{"functionName":"inferTypeForVariableFromUsage","ranges":[{"startOffset":7454223,"endOffset":7454460,"count":0}],"isBlockCoverage":false},{"functionName":"inferTypeForParametersFromUsage","ranges":[{"startOffset":7454463,"endOffset":7454958,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionReferences","ranges":[{"startOffset":7454961,"endOffset":7455877,"count":0}],"isBlockCoverage":false},{"functionName":"inferTypeFromReferences","ranges":[{"startOffset":7455880,"endOffset":7480916,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/inferFromUsage.ts","ranges":[{"startOffset":7480986,"endOffset":7484809,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7483415,"endOffset":7484345,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7484382,"endOffset":7484793,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo16","ranges":[{"startOffset":7484879,"endOffset":7485653,"count":0}],"isBlockCoverage":false},{"functionName":"doChange34","ranges":[{"startOffset":7485656,"endOffset":7485853,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixReturnTypeInAsyncFunction.ts","ranges":[{"startOffset":7485937,"endOffset":7487604,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToFixReturnTypeInAsyncFunction","ranges":[{"startOffset":7486388,"endOffset":7487264,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7487293,"endOffset":7487588,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange8","ranges":[{"startOffset":7487666,"endOffset":7487974,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/disableJsDiagnostics.ts","ranges":[{"startOffset":7488060,"endOffset":7490392,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7488315,"endOffset":7488444,"count":1987},{"startOffset":7488414,"endOffset":7488426,"count":1244},{"startOffset":7488427,"endOffset":7488435,"count":743}],"isBlockCoverage":true},{"functionName":"getCodeActionsToDisableJsDiagnostics","ranges":[{"startOffset":7488529,"endOffset":7489973,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7490029,"endOffset":7490376,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingMemberNodes","ranges":[{"startOffset":7490441,"endOffset":7491002,"count":0}],"isBlockCoverage":false},{"functionName":"getNoopSymbolTrackerWithResolver","ranges":[{"startOffset":7491005,"endOffset":7491201,"count":0}],"isBlockCoverage":false},{"functionName":"addNewNodeForMemberSymbol","ranges":[{"startOffset":7491204,"endOffset":7499371,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromSignature","ranges":[{"startOffset":7499374,"endOffset":7504130,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromCallExpression","ranges":[{"startOffset":7504133,"endOffset":7507048,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeParametersForArguments","ranges":[{"startOffset":7507051,"endOffset":7508084,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeParameterName","ranges":[{"startOffset":7508087,"endOffset":7508233,"count":0}],"isBlockCoverage":false},{"functionName":"typeToAutoImportableTypeNode","ranges":[{"startOffset":7508236,"endOffset":7508786,"count":0}],"isBlockCoverage":false},{"functionName":"typeContainsTypeParameter","ranges":[{"startOffset":7508789,"endOffset":7508990,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentTypesAndTypeParameters","ranges":[{"startOffset":7508993,"endOffset":7510667,"count":0}],"isBlockCoverage":false},{"functionName":"isAnonymousObjectConstraintType","ranges":[{"startOffset":7510670,"endOffset":7510810,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTypeParameterName","ranges":[{"startOffset":7510813,"endOffset":7511252,"count":0}],"isBlockCoverage":false},{"functionName":"createDummyParameters","ranges":[{"startOffset":7511255,"endOffset":7512301,"count":0}],"isBlockCoverage":false},{"functionName":"createMethodImplementingSignatures","ranges":[{"startOffset":7512304,"endOffset":7514238,"count":0}],"isBlockCoverage":false},{"functionName":"getReturnTypeFromSignatures","ranges":[{"startOffset":7514241,"endOffset":7514593,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedMethod","ranges":[{"startOffset":7514596,"endOffset":7515022,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedMethodBody","ranges":[{"startOffset":7515025,"endOffset":7515171,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedBody","ranges":[{"startOffset":7515174,"endOffset":7515680,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValues","ranges":[{"startOffset":7515683,"endOffset":7517013,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValue","ranges":[{"startOffset":7517016,"endOffset":7517198,"count":0}],"isBlockCoverage":false},{"functionName":"createJsonPropertyAssignment","ranges":[{"startOffset":7517201,"endOffset":7517356,"count":0}],"isBlockCoverage":false},{"functionName":"findJsonProperty","ranges":[{"startOffset":7517359,"endOffset":7517529,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetAutoImportableReferenceFromTypeNode","ranges":[{"startOffset":7517532,"endOffset":7518506,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstIdentifierOfEntityName","ranges":[{"startOffset":7518509,"endOffset":7518772,"count":0}],"isBlockCoverage":false},{"functionName":"importSymbols","ranges":[{"startOffset":7518775,"endOffset":7518954,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestorMatchingSpan","ranges":[{"startOffset":7518957,"endOffset":7519191,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/helpers.ts","ranges":[{"startOffset":7519255,"endOffset":7519734,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7519380,"endOffset":7519697,"count":1}],"isBlockCoverage":true},{"functionName":"generateAccessorFromProperty","ranges":[{"startOffset":7519793,"endOffset":7522122,"count":0}],"isBlockCoverage":false},{"functionName":"isConvertibleName","ranges":[{"startOffset":7522125,"endOffset":7522219,"count":0}],"isBlockCoverage":false},{"functionName":"isAcceptedDeclaration","ranges":[{"startOffset":7522222,"endOffset":7522387,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyName","ranges":[{"startOffset":7522390,"endOffset":7522551,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorAccessExpression","ranges":[{"startOffset":7522554,"endOffset":7522900,"count":0}],"isBlockCoverage":false},{"functionName":"prepareModifierFlagsForAccessor","ranges":[{"startOffset":7522903,"endOffset":7523162,"count":0}],"isBlockCoverage":false},{"functionName":"prepareModifierFlagsForField","ranges":[{"startOffset":7523165,"endOffset":7523366,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessorConvertiblePropertyAtPosition","ranges":[{"startOffset":7523369,"endOffset":7525155,"count":0}],"isBlockCoverage":false},{"functionName":"generateGetAccessor","ranges":[{"startOffset":7525158,"endOffset":7525591,"count":0}],"isBlockCoverage":false},{"functionName":"generateSetAccessor","ranges":[{"startOffset":7525594,"endOffset":7526344,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyDeclaration","ranges":[{"startOffset":7526347,"endOffset":7526732,"count":0}],"isBlockCoverage":false},{"functionName":"updatePropertyAssignmentDeclaration","ranges":[{"startOffset":7526735,"endOffset":7527319,"count":0}],"isBlockCoverage":false},{"functionName":"updateFieldDeclaration","ranges":[{"startOffset":7527322,"endOffset":7527962,"count":0}],"isBlockCoverage":false},{"functionName":"insertAccessor","ranges":[{"startOffset":7527965,"endOffset":7528344,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadonlyPropertyInitializerStatementConstructor","ranges":[{"startOffset":7528347,"endOffset":7529255,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationType","ranges":[{"startOffset":7529258,"endOffset":7529883,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSupers","ranges":[{"startOffset":7529886,"endOffset":7530480,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/generateAccessors.ts","ranges":[{"startOffset":7530524,"endOffset":7530617,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeFixesForImportDeclaration","ranges":[{"startOffset":7530681,"endOffset":7531577,"count":0}],"isBlockCoverage":false},{"functionName":"createAction","ranges":[{"startOffset":7531580,"endOffset":7531908,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForUsageOfInvalidImport","ranges":[{"startOffset":7531911,"endOffset":7532405,"count":0}],"isBlockCoverage":false},{"functionName":"getActionsForInvalidImportLocation","ranges":[{"startOffset":7532408,"endOffset":7532794,"count":0}],"isBlockCoverage":false},{"functionName":"getImportCodeFixesForExpression","ranges":[{"startOffset":7532797,"endOffset":7533721,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixInvalidImportSyntax.ts","ranges":[{"startOffset":7533786,"endOffset":7535398,"count":1}],"isBlockCoverage":true},{"functionName":"getInfo17","ranges":[{"startOffset":7535468,"endOffset":7535827,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForAddMissingDefiniteAssignmentAssertion","ranges":[{"startOffset":7535830,"endOffset":7536347,"count":0}],"isBlockCoverage":false},{"functionName":"addDefiniteAssignmentAssertion","ranges":[{"startOffset":7536350,"endOffset":7536897,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForAddMissingUndefinedType","ranges":[{"startOffset":7536900,"endOffset":7537303,"count":0}],"isBlockCoverage":false},{"functionName":"addUndefinedType","ranges":[{"startOffset":7537306,"endOffset":7537944,"count":0}],"isBlockCoverage":false},{"functionName":"getActionForAddMissingInitializer","ranges":[{"startOffset":7537947,"endOffset":7538554,"count":0}],"isBlockCoverage":false},{"functionName":"addInitializer","ranges":[{"startOffset":7538557,"endOffset":7539068,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializer","ranges":[{"startOffset":7539071,"endOffset":7539230,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultValueFromType","ranges":[{"startOffset":7539233,"endOffset":7540639,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixStrictClassInitialization.ts","ranges":[{"startOffset":7540806,"endOffset":7543012,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsForStrictClassInitializationErrors","ranges":[{"startOffset":7541400,"endOffset":7541893,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7542022,"endOffset":7542996,"count":0}],"isBlockCoverage":false},{"functionName":"doChange35","ranges":[{"startOffset":7543065,"endOffset":7543820,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo18","ranges":[{"startOffset":7543823,"endOffset":7544672,"count":0}],"isBlockCoverage":false},{"functionName":"tryCreateNamedImportsFromObjectBindingPattern","ranges":[{"startOffset":7544675,"endOffset":7545199,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/requireInTs.ts","ranges":[{"startOffset":7545266,"endOffset":7546337,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7545554,"endOffset":7546017,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7546073,"endOffset":7546321,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo19","ranges":[{"startOffset":7546395,"endOffset":7546954,"count":0}],"isBlockCoverage":false},{"functionName":"doChange36","ranges":[{"startOffset":7546957,"endOffset":7547227,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/useDefaultImport.ts","ranges":[{"startOffset":7547299,"endOffset":7548384,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7547598,"endOffset":7548082,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7548138,"endOffset":7548368,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange9","ranges":[{"startOffset":7548442,"endOffset":7548805,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/useBigintLiteral.ts","ranges":[{"startOffset":7548877,"endOffset":7549906,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToUseBigintLiteral","ranges":[{"startOffset":7549282,"endOffset":7549697,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7549753,"endOffset":7549890,"count":0}],"isBlockCoverage":false},{"functionName":"getImportTypeNode","ranges":[{"startOffset":7549982,"endOffset":7550312,"count":0}],"isBlockCoverage":false},{"functionName":"doChange37","ranges":[{"startOffset":7550315,"endOffset":7550660,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAddModuleReferTypeMissingTypeof.ts","ranges":[{"startOffset":7550773,"endOffset":7551883,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToAddMissingTypeof","ranges":[{"startOffset":7551223,"endOffset":7551660,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7551716,"endOffset":7551867,"count":0}],"isBlockCoverage":false},{"functionName":"findNodeToFix","ranges":[{"startOffset":7551942,"endOffset":7552418,"count":0}],"isBlockCoverage":false},{"functionName":"doChange38","ranges":[{"startOffset":7552421,"endOffset":7552682,"count":0}],"isBlockCoverage":false},{"functionName":"flattenInvalidBinaryExpr","ranges":[{"startOffset":7552685,"endOffset":7553271,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/wrapJsxInFragment.ts","ranges":[{"startOffset":7553343,"endOffset":7554477,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToWrapJsxInFragment","ranges":[{"startOffset":7553660,"endOffset":7554151,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7554206,"endOffset":7554461,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo20","ranges":[{"startOffset":7554544,"endOffset":7555012,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAliasFromInterface","ranges":[{"startOffset":7555015,"endOffset":7555199,"count":0}],"isBlockCoverage":false},{"functionName":"doChange39","ranges":[{"startOffset":7555202,"endOffset":7556384,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertToMappedObjectType.ts","ranges":[{"startOffset":7556465,"endOffset":7557725,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToConvertToMappedTypeObject","ranges":[{"startOffset":7556876,"endOffset":7557444,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7557500,"endOffset":7557709,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/removeAccidentalCallParentheses.ts","ranges":[{"startOffset":7557882,"endOffset":7558865,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7558275,"endOffset":7558822,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange10","ranges":[{"startOffset":7558929,"endOffset":7559955,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/removeUnnecessaryAwait.ts","ranges":[{"startOffset":7560033,"endOffset":7561002,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToRemoveUnnecessaryAwait","ranges":[{"startOffset":7560383,"endOffset":7560792,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7560848,"endOffset":7560986,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclaration2","ranges":[{"startOffset":7561063,"endOffset":7561207,"count":0}],"isBlockCoverage":false},{"functionName":"splitTypeOnlyImport","ranges":[{"startOffset":7561210,"endOffset":7562294,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/splitTypeOnlyImport.ts","ranges":[{"startOffset":7562369,"endOffset":7563470,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToSplitTypeOnlyImport","ranges":[{"startOffset":7562752,"endOffset":7563245,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7563274,"endOffset":7563454,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo21","ranges":[{"startOffset":7563529,"endOffset":7564131,"count":0}],"isBlockCoverage":false},{"functionName":"doChange40","ranges":[{"startOffset":7564134,"endOffset":7564274,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/convertConstToLet.ts","ranges":[{"startOffset":7564347,"endOffset":7565863,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActionsToConvertConstToLet","ranges":[{"startOffset":7564667,"endOffset":7565179,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7565208,"endOffset":7565820,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo22","ranges":[{"startOffset":7565921,"endOffset":7566189,"count":0}],"isBlockCoverage":false},{"functionName":"doChange41","ranges":[{"startOffset":7566192,"endOffset":7566362,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixExpectedComma.ts","ranges":[{"startOffset":7566453,"endOffset":7567611,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7566765,"endOffset":7567310,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7567366,"endOffset":7567595,"count":0}],"isBlockCoverage":false},{"functionName":"makeChange11","ranges":[{"startOffset":7567672,"endOffset":7569668,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeArguments","ranges":[{"startOffset":7569671,"endOffset":7570165,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/codefixes/fixAddVoidToPromise.ts","ranges":[{"startOffset":7570250,"endOffset":7571477,"count":1}],"isBlockCoverage":true},{"functionName":"getCodeActions","ranges":[{"startOffset":7570828,"endOffset":7571255,"count":0}],"isBlockCoverage":false},{"functionName":"getAllCodeActions","ranges":[{"startOffset":7571265,"endOffset":7571461,"count":0}],"isBlockCoverage":false},{"functionName":"PreserveOptionalFlags","ranges":[{"startOffset":7571620,"endOffset":7571647,"count":0}],"isBlockCoverage":false},{"functionName":"addNewNodeForMemberSymbol","ranges":[{"startOffset":7571680,"endOffset":7571711,"count":0}],"isBlockCoverage":false},{"functionName":"codeFixAll","ranges":[{"startOffset":7571729,"endOffset":7571745,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixAction","ranges":[{"startOffset":7571772,"endOffset":7571797,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionMaybeFixAll","ranges":[{"startOffset":7571835,"endOffset":7571871,"count":0}],"isBlockCoverage":false},{"functionName":"createCodeFixActionWithoutFixAll","ranges":[{"startOffset":7571911,"endOffset":7571949,"count":0}],"isBlockCoverage":false},{"functionName":"createCombinedCodeActions","ranges":[{"startOffset":7571982,"endOffset":7572013,"count":0}],"isBlockCoverage":false},{"functionName":"createFileTextChanges","ranges":[{"startOffset":7572042,"endOffset":7572069,"count":0}],"isBlockCoverage":false},{"functionName":"createImportAdder","ranges":[{"startOffset":7572094,"endOffset":7572117,"count":0}],"isBlockCoverage":false},{"functionName":"createImportSpecifierResolver","ranges":[{"startOffset":7572154,"endOffset":7572189,"count":0}],"isBlockCoverage":false},{"functionName":"createJsonPropertyAssignment","ranges":[{"startOffset":7572225,"endOffset":7572259,"count":0}],"isBlockCoverage":false},{"functionName":"createMissingMemberNodes","ranges":[{"startOffset":7572291,"endOffset":7572321,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromCallExpression","ranges":[{"startOffset":7572373,"endOffset":7572423,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureDeclarationFromSignature","ranges":[{"startOffset":7572470,"endOffset":7572515,"count":0}],"isBlockCoverage":false},{"functionName":"createStubbedBody","ranges":[{"startOffset":7572540,"endOffset":7572563,"count":0}],"isBlockCoverage":false},{"functionName":"eachDiagnostic","ranges":[{"startOffset":7572585,"endOffset":7572605,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestorMatchingSpan","ranges":[{"startOffset":7572637,"endOffset":7572667,"count":0}],"isBlockCoverage":false},{"functionName":"findJsonProperty","ranges":[{"startOffset":7572691,"endOffset":7572713,"count":0}],"isBlockCoverage":false},{"functionName":"generateAccessorFromProperty","ranges":[{"startOffset":7572749,"endOffset":7572783,"count":0}],"isBlockCoverage":false},{"functionName":"getAccessorConvertiblePropertyAtPosition","ranges":[{"startOffset":7572831,"endOffset":7572877,"count":0}],"isBlockCoverage":false},{"functionName":"getAllFixes","ranges":[{"startOffset":7572896,"endOffset":7572913,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSupers","ranges":[{"startOffset":7572933,"endOffset":7572951,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentTypesAndTypeParameters","ranges":[{"startOffset":7572992,"endOffset":7573031,"count":0}],"isBlockCoverage":false},{"functionName":"getFixes","ranges":[{"startOffset":7573047,"endOffset":7573061,"count":0}],"isBlockCoverage":false},{"functionName":"getImportCompletionAction","ranges":[{"startOffset":7573094,"endOffset":7573125,"count":0}],"isBlockCoverage":false},{"functionName":"getImportKind","ranges":[{"startOffset":7573146,"endOffset":7573165,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypedefNodes","ranges":[{"startOffset":7573193,"endOffset":7573219,"count":0}],"isBlockCoverage":false},{"functionName":"getNoopSymbolTrackerWithResolver","ranges":[{"startOffset":7573259,"endOffset":7573297,"count":0}],"isBlockCoverage":false},{"functionName":"getPromoteTypeOnlyCompletionAction","ranges":[{"startOffset":7573339,"endOffset":7573379,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedErrorCodes","ranges":[{"startOffset":7573409,"endOffset":7573437,"count":0}],"isBlockCoverage":false},{"functionName":"importFixName","ranges":[{"startOffset":7573458,"endOffset":7573477,"count":0}],"isBlockCoverage":false},{"functionName":"importSymbols","ranges":[{"startOffset":7573498,"endOffset":7573517,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierToValidIdentifier","ranges":[{"startOffset":7573557,"endOffset":7573595,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSymbolToValidIdentifier","ranges":[{"startOffset":7573632,"endOffset":7573667,"count":0}],"isBlockCoverage":false},{"functionName":"parameterShouldGetTypeFromJSDoc","ranges":[{"startOffset":7573706,"endOffset":7573743,"count":0}],"isBlockCoverage":false},{"functionName":"registerCodeFix","ranges":[{"startOffset":7573766,"endOffset":7573787,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValue","ranges":[{"startOffset":7573821,"endOffset":7573853,"count":0}],"isBlockCoverage":false},{"functionName":"setJsonCompilerOptionValues","ranges":[{"startOffset":7573888,"endOffset":7573921,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetAutoImportableReferenceFromTypeNode","ranges":[{"startOffset":7573970,"endOffset":7574017,"count":0}],"isBlockCoverage":false},{"functionName":"typeToAutoImportableTypeNode","ranges":[{"startOffset":7574053,"endOffset":7574087,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.codefix.ts","ranges":[{"startOffset":7574130,"endOffset":7576888,"count":1}],"isBlockCoverage":true},{"functionName":"originIsThisType","ranges":[{"startOffset":7576931,"endOffset":7577017,"count":0}],"isBlockCoverage":false},{"functionName":"originIsSymbolMember","ranges":[{"startOffset":7577020,"endOffset":7577114,"count":0}],"isBlockCoverage":false},{"functionName":"originIsExport","ranges":[{"startOffset":7577117,"endOffset":7577209,"count":0}],"isBlockCoverage":false},{"functionName":"originIsResolvedExport","ranges":[{"startOffset":7577212,"endOffset":7577323,"count":0}],"isBlockCoverage":false},{"functionName":"originIncludesSymbolName","ranges":[{"startOffset":7577326,"endOffset":7577482,"count":0}],"isBlockCoverage":false},{"functionName":"originIsPackageJsonImport","ranges":[{"startOffset":7577485,"endOffset":7577634,"count":0}],"isBlockCoverage":false},{"functionName":"originIsPromise","ranges":[{"startOffset":7577637,"endOffset":7577721,"count":0}],"isBlockCoverage":false},{"functionName":"originIsNullableMember","ranges":[{"startOffset":7577724,"endOffset":7577817,"count":0}],"isBlockCoverage":false},{"functionName":"originIsTypeOnlyAlias","ranges":[{"startOffset":7577820,"endOffset":7577927,"count":0}],"isBlockCoverage":false},{"functionName":"originIsObjectLiteralMethod","ranges":[{"startOffset":7577930,"endOffset":7578050,"count":0}],"isBlockCoverage":false},{"functionName":"originIsIgnore","ranges":[{"startOffset":7578053,"endOffset":7578147,"count":0}],"isBlockCoverage":false},{"functionName":"originIsComputedPropertyName","ranges":[{"startOffset":7578150,"endOffset":7578272,"count":0}],"isBlockCoverage":false},{"functionName":"resolvingModuleSpecifiers","ranges":[{"startOffset":7578275,"endOffset":7581016,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsAtPosition","ranges":[{"startOffset":7581019,"endOffset":7584958,"count":0}],"isBlockCoverage":false},{"functionName":"compareCompletionEntries","ranges":[{"startOffset":7584961,"endOffset":7585691,"count":0}],"isBlockCoverage":false},{"functionName":"completionEntryDataIsResolved","ranges":[{"startOffset":7585694,"endOffset":7585805,"count":0}],"isBlockCoverage":false},{"functionName":"continuePreviousIncompleteResponse","ranges":[{"startOffset":7585808,"endOffset":7588379,"count":0}],"isBlockCoverage":false},{"functionName":"jsdocCompletionInfo","ranges":[{"startOffset":7588382,"endOffset":7588535,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterCompletions","ranges":[{"startOffset":7588538,"endOffset":7591927,"count":0}],"isBlockCoverage":false},{"functionName":"generateJSDocParamTagsForDestructuring","ranges":[{"startOffset":7591930,"endOffset":7594794,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParamAnnotation","ranges":[{"startOffset":7594797,"endOffset":7597023,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParamNameWithInitializer","ranges":[{"startOffset":7597026,"endOffset":7597313,"count":0}],"isBlockCoverage":false},{"functionName":"keywordToCompletionEntry","ranges":[{"startOffset":7597316,"endOffset":7597536,"count":0}],"isBlockCoverage":false},{"functionName":"specificKeywordCompletionInfo","ranges":[{"startOffset":7597539,"endOffset":7597765,"count":0}],"isBlockCoverage":false},{"functionName":"keywordCompletionData","ranges":[{"startOffset":7597768,"endOffset":7598040,"count":0}],"isBlockCoverage":false},{"functionName":"keywordFiltersFromSyntaxKind","ranges":[{"startOffset":7598043,"endOffset":7598312,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionalReplacementSpan","ranges":[{"startOffset":7598315,"endOffset":7598490,"count":0}],"isBlockCoverage":false},{"functionName":"completionInfoFromData","ranges":[{"startOffset":7598493,"endOffset":7603356,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckedFile","ranges":[{"startOffset":7603359,"endOffset":7603514,"count":0}],"isBlockCoverage":false},{"functionName":"getExhaustiveCaseSnippets","ranges":[{"startOffset":7603517,"endOffset":7607397,"count":0}],"isBlockCoverage":false},{"functionName":"typeNodeToExpression","ranges":[{"startOffset":7607400,"endOffset":7608983,"count":0}],"isBlockCoverage":false},{"functionName":"entityNameToExpression","ranges":[{"startOffset":7608986,"endOffset":7609701,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberCompletionKind","ranges":[{"startOffset":7609704,"endOffset":7609943,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxClosingTagCompletion","ranges":[{"startOffset":7609946,"endOffset":7611191,"count":0}],"isBlockCoverage":false},{"functionName":"getJSCompletionEntries","ranges":[{"startOffset":7611194,"endOffset":7611831,"count":0}],"isBlockCoverage":false},{"functionName":"completionNameForLiteral","ranges":[{"startOffset":7611834,"endOffset":7612073,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionEntryForLiteral","ranges":[{"startOffset":7612076,"endOffset":7612333,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionEntry","ranges":[{"startOffset":7612336,"endOffset":7620590,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLikeMemberCompletion","ranges":[{"startOffset":7620593,"endOffset":7621179,"count":0}],"isBlockCoverage":false},{"functionName":"getEntryForMemberCompletion","ranges":[{"startOffset":7621182,"endOffset":7625864,"count":0}],"isBlockCoverage":false},{"functionName":"getPresentModifiers","ranges":[{"startOffset":7625867,"endOffset":7626967,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike2","ranges":[{"startOffset":7626970,"endOffset":7627300,"count":0}],"isBlockCoverage":false},{"functionName":"getEntryForObjectLiteralMethodCompletion","ranges":[{"startOffset":7627303,"endOffset":7629118,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectLiteralMethod","ranges":[{"startOffset":7629121,"endOffset":7632262,"count":0}],"isBlockCoverage":false},{"functionName":"createSnippetPrinter","ranges":[{"startOffset":7632265,"endOffset":7636579,"count":0}],"isBlockCoverage":false},{"functionName":"originToCompletionEntryData","ranges":[{"startOffset":7636582,"endOffset":7637469,"count":0}],"isBlockCoverage":false},{"functionName":"completionEntryDataToSymbolOriginInfo","ranges":[{"startOffset":7637472,"endOffset":7638420,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertTextAndReplacementSpanForImportCompletion","ranges":[{"startOffset":7638423,"endOffset":7640342,"count":0}],"isBlockCoverage":false},{"functionName":"quotePropertyName","ranges":[{"startOffset":7640345,"endOffset":7640512,"count":0}],"isBlockCoverage":false},{"functionName":"isRecommendedCompletionMatch","ranges":[{"startOffset":7640515,"endOffset":7640780,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFromOrigin","ranges":[{"startOffset":7640783,"endOffset":7641264,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesFromSymbols","ranges":[{"startOffset":7641267,"endOffset":7646599,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelCompletionAtPosition","ranges":[{"startOffset":7646602,"endOffset":7646851,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelStatementCompletions","ranges":[{"startOffset":7646854,"endOffset":7647493,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolCompletionFromEntryId","ranges":[{"startOffset":7647496,"endOffset":7650093,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails","ranges":[{"startOffset":7650096,"endOffset":7653910,"count":0}],"isBlockCoverage":false},{"functionName":"createSimpleDetails","ranges":[{"startOffset":7653913,"endOffset":7654057,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetailsForSymbol","ranges":[{"startOffset":7654060,"endOffset":7654644,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetails","ranges":[{"startOffset":7654647,"endOffset":7654889,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryCodeActionsAndSourceDisplay","ranges":[{"startOffset":7654892,"endOffset":7658602,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntrySymbol","ranges":[{"startOffset":7658605,"endOffset":7658897,"count":0}],"isBlockCoverage":false},{"functionName":"getRecommendedCompletion","ranges":[{"startOffset":7658900,"endOffset":7659354,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualType","ranges":[{"startOffset":7659357,"endOffset":7661155,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstSymbolInChain","ranges":[{"startOffset":7661158,"endOffset":7661600,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSymbol","ranges":[{"startOffset":7661603,"endOffset":7661762,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionData","ranges":[{"startOffset":7661765,"endOffset":7729194,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetObjectLikeCompletionContainer","ranges":[{"startOffset":7729197,"endOffset":7731587,"count":0}],"isBlockCoverage":false},{"functionName":"getRelevantTokens","ranges":[{"startOffset":7731590,"endOffset":7732098,"count":0}],"isBlockCoverage":false},{"functionName":"getAutoImportSymbolFromCompletionEntryData","ranges":[{"startOffset":7732101,"endOffset":7733113,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDisplayNameForSymbol","ranges":[{"startOffset":7733116,"endOffset":7734447,"count":0}],"isBlockCoverage":false},{"functionName":"getKeywordCompletions","ranges":[{"startOffset":7734450,"endOffset":7734864,"count":0}],"isBlockCoverage":false},{"functionName":"getTypescriptKeywordCompletions","ranges":[{"startOffset":7734867,"endOffset":7736278,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeScriptOnlyKeyword","ranges":[{"startOffset":7736281,"endOffset":7737389,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceOrTypeLiteralCompletionKeyword","ranges":[{"startOffset":7737392,"endOffset":7737501,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberCompletionKeyword","ranges":[{"startOffset":7737504,"endOffset":7737954,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeBodyKeyword","ranges":[{"startOffset":7737957,"endOffset":7738293,"count":0}],"isBlockCoverage":false},{"functionName":"keywordForNode","ranges":[{"startOffset":7738296,"endOffset":7738425,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualKeywords","ranges":[{"startOffset":7738428,"endOffset":7739217,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagAtPosition","ranges":[{"startOffset":7739220,"endOffset":7739400,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesForObjectExpression","ranges":[{"startOffset":7739403,"endOffset":7740160,"count":0}],"isBlockCoverage":false},{"functionName":"getApparentProperties","ranges":[{"startOffset":7740163,"endOffset":7740676,"count":0}],"isBlockCoverage":false},{"functionName":"containsNonPublicProperties","ranges":[{"startOffset":7740679,"endOffset":7740846,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesForCompletion","ranges":[{"startOffset":7740849,"endOffset":7741173,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetObjectTypeDeclarationCompletionContainer","ranges":[{"startOffset":7741176,"endOffset":7743737,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetTypeLiteralNode","ranges":[{"startOffset":7743740,"endOffset":7744285,"count":0}],"isBlockCoverage":false},{"functionName":"getConstraintOfTypeArgumentProperty","ranges":[{"startOffset":7744288,"endOffset":7744899,"count":0}],"isBlockCoverage":false},{"functionName":"isFromObjectTypeDeclaration","ranges":[{"startOffset":7744902,"endOffset":7745058,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTrigger","ranges":[{"startOffset":7745061,"endOffset":7746151,"count":0}],"isBlockCoverage":false},{"functionName":"binaryExpressionMayBeOpenTag","ranges":[{"startOffset":7746154,"endOffset":7746239,"count":0}],"isBlockCoverage":false},{"functionName":"isProbablyGlobalType","ranges":[{"startOffset":7746242,"endOffset":7747188,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticProperty","ranges":[{"startOffset":7747191,"endOffset":7747390,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetObjectLiteralContextualType","ranges":[{"startOffset":7747393,"endOffset":7747909,"count":0}],"isBlockCoverage":false},{"functionName":"getImportStatementCompletionInfo","ranges":[{"startOffset":7747912,"endOffset":7750848,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleLineReplacementSpanForImportCompletionNode","ranges":[{"startOffset":7750851,"endOffset":7751793,"count":0}],"isBlockCoverage":false},{"functionName":"getPotentiallyInvalidImportSpecifier","ranges":[{"startOffset":7751796,"endOffset":7752242,"count":0}],"isBlockCoverage":false},{"functionName":"couldBeTypeOnlyImportSpecifier","ranges":[{"startOffset":7752245,"endOffset":7752489,"count":0}],"isBlockCoverage":false},{"functionName":"canCompleteFromNamedBindings","ranges":[{"startOffset":7752492,"endOffset":7753007,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierMissingOrEmpty","ranges":[{"startOffset":7753010,"endOffset":7753283,"count":0}],"isBlockCoverage":false},{"functionName":"getVariableOrParameterDeclaration","ranges":[{"startOffset":7753286,"endOffset":7753927,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionBody","ranges":[{"startOffset":7753930,"endOffset":7754135,"count":0}],"isBlockCoverage":false},{"functionName":"symbolCanBeReferencedAtTypeLocation","ranges":[{"startOffset":7754138,"endOffset":7754754,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecated","ranges":[{"startOffset":7754757,"endOffset":7754950,"count":0}],"isBlockCoverage":false},{"functionName":"charactersFuzzyMatchInString","ranges":[{"startOffset":7754953,"endOffset":7756018,"count":0}],"isBlockCoverage":false},{"functionName":"toUpperCharCode","ranges":[{"startOffset":7756021,"endOffset":7756177,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeywordInAutoImportableExpressionSpace","ranges":[{"startOffset":7756180,"endOffset":7756433,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/completions.ts","ranges":[{"startOffset":7756664,"endOffset":7760433,"count":1}],"isBlockCoverage":true},{"functionName":"Deprecated","ranges":[{"startOffset":7757267,"endOffset":7757332,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectLiteralProperty","ranges":[{"startOffset":7757342,"endOffset":7757472,"count":0}],"isBlockCoverage":false},{"functionName":"SortBelow","ranges":[{"startOffset":7757482,"endOffset":7757546,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7757598,"endOffset":7758102,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7758175,"endOffset":7759383,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7759454,"endOffset":7759976,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7760072,"endOffset":7760425,"count":0}],"isBlockCoverage":false},{"functionName":"createNameAndKindSet","ranges":[{"startOffset":7760482,"endOffset":7760870,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletions","ranges":[{"startOffset":7760873,"endOffset":7761638,"count":0}],"isBlockCoverage":false},{"functionName":"convertStringLiteralCompletions","ranges":[{"startOffset":7761641,"endOffset":7764057,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionDetails","ranges":[{"startOffset":7764060,"endOffset":7764550,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralCompletionDetails","ranges":[{"startOffset":7764553,"endOffset":7765427,"count":0}],"isBlockCoverage":false},{"functionName":"convertPathCompletions","ranges":[{"startOffset":7765430,"endOffset":7765870,"count":0}],"isBlockCoverage":false},{"functionName":"kindModifiersFromExtension","ranges":[{"startOffset":7765873,"endOffset":7767052,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionEntries","ranges":[{"startOffset":7767055,"endOffset":7771400,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParentheses","ranges":[{"startOffset":7771403,"endOffset":7771694,"count":0}],"isBlockCoverage":false},{"functionName":"getAlreadyUsedTypesInStringLiteralUnion","ranges":[{"startOffset":7771697,"endOffset":7771920,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionsFromSignature","ranges":[{"startOffset":7771923,"endOffset":7773033,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralCompletionsFromProperties","ranges":[{"startOffset":7773036,"endOffset":7773362,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralCompletionsForObjectLiteral","ranges":[{"startOffset":7773365,"endOffset":7773957,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralTypes","ranges":[{"startOffset":7773960,"endOffset":7774326,"count":0}],"isBlockCoverage":false},{"functionName":"nameAndKind","ranges":[{"startOffset":7774329,"endOffset":7774416,"count":0}],"isBlockCoverage":false},{"functionName":"directoryResult","ranges":[{"startOffset":7774419,"endOffset":7774566,"count":0}],"isBlockCoverage":false},{"functionName":"addReplacementSpans","ranges":[{"startOffset":7774569,"endOffset":7774989,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionsFromModuleNames","ranges":[{"startOffset":7774992,"endOffset":7775265,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletionsFromModuleNamesWorker","ranges":[{"startOffset":7775268,"endOffset":7776300,"count":0}],"isBlockCoverage":false},{"functionName":"getExtensionOptions","ranges":[{"startOffset":7776303,"endOffset":7776725,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForRelativeModules","ranges":[{"startOffset":7776728,"endOffset":7777403,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsForModuleResolution","ranges":[{"startOffset":7777406,"endOffset":7778088,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectoriesFromRootDirs","ranges":[{"startOffset":7778091,"endOffset":7778836,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForDirectoryFragmentWithRootDirs","ranges":[{"startOffset":7778839,"endOffset":7779692,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForDirectoryFragment","ranges":[{"startOffset":7779695,"endOffset":7782497,"count":0}],"isBlockCoverage":false},{"functionName":"getFilenameWithExtensionOption","ranges":[{"startOffset":7782500,"endOffset":7784446,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionEntriesFromPaths","ranges":[{"startOffset":7784449,"endOffset":7785209,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionEntriesFromPathsOrExports","ranges":[{"startOffset":7785212,"endOffset":7786697,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesForNonRelativeModules","ranges":[{"startOffset":7786700,"endOffset":7791231,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromFirstMatchingCondition","ranges":[{"startOffset":7791234,"endOffset":7791752,"count":0}],"isBlockCoverage":false},{"functionName":"getFragmentDirectory","ranges":[{"startOffset":7791755,"endOffset":7791927,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsForPathMapping","ranges":[{"startOffset":7791930,"endOffset":7793159,"count":0}],"isBlockCoverage":false},{"functionName":"getModulesForPathsPattern","ranges":[{"startOffset":7793162,"endOffset":7795995,"count":0}],"isBlockCoverage":false},{"functionName":"withoutStartAndEnd","ranges":[{"startOffset":7795998,"endOffset":7796155,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDirectorySeparator","ranges":[{"startOffset":7796158,"endOffset":7796276,"count":0}],"isBlockCoverage":false},{"functionName":"getAmbientModuleCompletions","ranges":[{"startOffset":7796279,"endOffset":7796890,"count":0}],"isBlockCoverage":false},{"functionName":"getTripleSlashReferenceCompletion","ranges":[{"startOffset":7796893,"endOffset":7798169,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesFromTypings","ranges":[{"startOffset":7798172,"endOffset":7800097,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateNodeModulesVisibleToScript","ranges":[{"startOffset":7800100,"endOffset":7800730,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryFragmentTextSpan","ranges":[{"startOffset":7800733,"endOffset":7801139,"count":0}],"isBlockCoverage":false},{"functionName":"isPathRelativeToScript","ranges":[{"startOffset":7801142,"endOffset":7801518,"count":0}],"isBlockCoverage":false},{"functionName":"containsSlash","ranges":[{"startOffset":7801521,"endOffset":7801609,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCallArgument","ranges":[{"startOffset":7801612,"endOffset":7801840,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/stringCompletions.ts","ranges":[{"startOffset":7801968,"endOffset":7802513,"count":1}],"isBlockCoverage":true},{"functionName":"getStringLiteralCompletionDetails","ranges":[{"startOffset":7802734,"endOffset":7802773,"count":0}],"isBlockCoverage":false},{"functionName":"getStringLiteralCompletions","ranges":[{"startOffset":7802808,"endOffset":7802841,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.Completions.StringCompletions.ts","ranges":[{"startOffset":7802906,"endOffset":7803030,"count":1}],"isBlockCoverage":true},{"functionName":"CompletionKind","ranges":[{"startOffset":7803178,"endOffset":7803198,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionSource","ranges":[{"startOffset":7803222,"endOffset":7803244,"count":0}],"isBlockCoverage":false},{"functionName":"SortText","ranges":[{"startOffset":7803260,"endOffset":7803274,"count":0}],"isBlockCoverage":false},{"functionName":"StringCompletions","ranges":[{"startOffset":7803299,"endOffset":7803345,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolOriginInfoKind","ranges":[{"startOffset":7803373,"endOffset":7803399,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetails","ranges":[{"startOffset":7803430,"endOffset":7803459,"count":0}],"isBlockCoverage":false},{"functionName":"createCompletionDetailsForSymbol","ranges":[{"startOffset":7803499,"endOffset":7803537,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntriesFromSymbols","ranges":[{"startOffset":7803576,"endOffset":7803613,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails","ranges":[{"startOffset":7803646,"endOffset":7803677,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntrySymbol","ranges":[{"startOffset":7803709,"endOffset":7803739,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionsAtPosition","ranges":[{"startOffset":7803771,"endOffset":7803801,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertiesForObjectExpression","ranges":[{"startOffset":7803841,"endOffset":7803879,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierResolutionCacheAttemptLimit","ranges":[{"startOffset":7803929,"endOffset":7803977,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifierResolutionLimit","ranges":[{"startOffset":7804015,"endOffset":7804051,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.Completions.ts","ranges":[{"startOffset":7804098,"endOffset":7804245,"count":1}],"isBlockCoverage":true},{"functionName":"createImportTracker","ranges":[{"startOffset":7804290,"endOffset":7804831,"count":0}],"isBlockCoverage":false},{"functionName":"getImportersForExport","ranges":[{"startOffset":7804834,"endOffset":7811487,"count":0}],"isBlockCoverage":false},{"functionName":"getSearchesFromDirectImports","ranges":[{"startOffset":7811490,"endOffset":7815064,"count":0}],"isBlockCoverage":false},{"functionName":"findNamespaceReExports","ranges":[{"startOffset":7815067,"endOffset":7815617,"count":0}],"isBlockCoverage":false},{"functionName":"findModuleReferences","ranges":[{"startOffset":7815620,"endOffset":7817120,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectImportsMap","ranges":[{"startOffset":7817123,"endOffset":7817797,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPossibleImportOrExportStatement","ranges":[{"startOffset":7817800,"endOffset":7818181,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImport","ranges":[{"startOffset":7818184,"endOffset":7819109,"count":0}],"isBlockCoverage":false},{"functionName":"getImportOrExportSymbol","ranges":[{"startOffset":7819112,"endOffset":7823288,"count":0}],"isBlockCoverage":false},{"functionName":"getExportEqualsLocalSymbol","ranges":[{"startOffset":7823291,"endOffset":7823909,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNode","ranges":[{"startOffset":7823912,"endOffset":7824342,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeImport","ranges":[{"startOffset":7824345,"endOffset":7824979,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfo","ranges":[{"startOffset":7824982,"endOffset":7825315,"count":0}],"isBlockCoverage":false},{"functionName":"skipExportSpecifierSymbol","ranges":[{"startOffset":7825318,"endOffset":7826211,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingModuleSymbol","ranges":[{"startOffset":7826214,"endOffset":7826365,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLikeForImportDeclaration","ranges":[{"startOffset":7826368,"endOffset":7826751,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModuleDeclaration","ranges":[{"startOffset":7826754,"endOffset":7826900,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEquals","ranges":[{"startOffset":7826903,"endOffset":7827089,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/importTracker.ts","ranges":[{"startOffset":7827162,"endOffset":7827788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7827273,"endOffset":7827516,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7827576,"endOffset":7827760,"count":1}],"isBlockCoverage":true},{"functionName":"nodeEntry","ranges":[{"startOffset":7827837,"endOffset":7827999,"count":0}],"isBlockCoverage":false},{"functionName":"isContextWithStartAndEndNode","ranges":[{"startOffset":7828002,"endOffset":7828092,"count":0}],"isBlockCoverage":false},{"functionName":"getContextNodeForNodeEntry","ranges":[{"startOffset":7828095,"endOffset":7830139,"count":0}],"isBlockCoverage":false},{"functionName":"getContextNode","ranges":[{"startOffset":7830142,"endOffset":7831762,"count":0}],"isBlockCoverage":false},{"functionName":"toContextSpan","ranges":[{"startOffset":7831765,"endOffset":7832133,"count":0}],"isBlockCoverage":false},{"functionName":"findReferencedSymbols","ranges":[{"startOffset":7832136,"endOffset":7833178,"count":0}],"isBlockCoverage":false},{"functionName":"isDefinitionForReference","ranges":[{"startOffset":7833181,"endOffset":7833447,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationsAtPosition","ranges":[{"startOffset":7833450,"endOffset":7834711,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationReferenceEntries","ranges":[{"startOffset":7834714,"endOffset":7835563,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceOrRenameEntries","ranges":[{"startOffset":7835566,"endOffset":7835885,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceEntriesForNode","ranges":[{"startOffset":7835888,"endOffset":7836205,"count":0}],"isBlockCoverage":false},{"functionName":"flattenEntries","ranges":[{"startOffset":7836208,"endOffset":7836334,"count":0}],"isBlockCoverage":false},{"functionName":"definitionToReferencedSymbolDefinitionInfo","ranges":[{"startOffset":7836337,"endOffset":7839300,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndTextSpanFromNode","ranges":[{"startOffset":7839303,"endOffset":7839528,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionKindAndDisplayParts","ranges":[{"startOffset":7839531,"endOffset":7840053,"count":0}],"isBlockCoverage":false},{"functionName":"toRenameLocation","ranges":[{"startOffset":7840056,"endOffset":7840312,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedSymbolEntry","ranges":[{"startOffset":7840315,"endOffset":7840604,"count":0}],"isBlockCoverage":false},{"functionName":"toReferenceEntry","ranges":[{"startOffset":7840607,"endOffset":7840995,"count":0}],"isBlockCoverage":false},{"functionName":"entryToDocumentSpan","ranges":[{"startOffset":7840998,"endOffset":7841422,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefixAndSuffixText","ranges":[{"startOffset":7841425,"endOffset":7843507,"count":0}],"isBlockCoverage":false},{"functionName":"toImplementationLocation","ranges":[{"startOffset":7843510,"endOffset":7843888,"count":0}],"isBlockCoverage":false},{"functionName":"implementationKindDisplayParts","ranges":[{"startOffset":7843891,"endOffset":7844773,"count":0}],"isBlockCoverage":false},{"functionName":"toHighlightSpan","ranges":[{"startOffset":7844776,"endOffset":7845521,"count":0}],"isBlockCoverage":false},{"functionName":"getTextSpan","ranges":[{"startOffset":7845524,"endOffset":7845972,"count":0}],"isBlockCoverage":false},{"functionName":"getTextSpanOfEntry","ranges":[{"startOffset":7845975,"endOffset":7846126,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccessForReference","ranges":[{"startOffset":7846129,"endOffset":7846339,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationOfSymbol","ranges":[{"startOffset":7846342,"endOffset":7846948,"count":0}],"isBlockCoverage":false},{"functionName":"declarationIsWriteAccess","ranges":[{"startOffset":7846951,"endOffset":7848777,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/findAllReferences.ts","ranges":[{"startOffset":7848879,"endOffset":7924545,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7849032,"endOffset":7849520,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7849580,"endOffset":7850003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7850066,"endOffset":7850359,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7850394,"endOffset":7924516,"count":1}],"isBlockCoverage":true},{"functionName":"getReferencedSymbolsForNode","ranges":[{"startOffset":7850415,"endOffset":7854229,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedNode2","ranges":[{"startOffset":7854311,"endOffset":7854612,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForFileName","ranges":[{"startOffset":7854671,"endOffset":7855555,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForNonModule","ranges":[{"startOffset":7855631,"endOffset":7856390,"count":0}],"isBlockCoverage":false},{"functionName":"getMergedAliasedSymbolOfNamespaceExportDeclaration","ranges":[{"startOffset":7856399,"endOffset":7856844,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForModuleIfDeclaredBySourceFile","ranges":[{"startOffset":7856853,"endOffset":7857915,"count":0}],"isBlockCoverage":false},{"functionName":"mergeReferences","ranges":[{"startOffset":7857924,"endOffset":7859697,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileIndexOfEntry","ranges":[{"startOffset":7859706,"endOffset":7859958,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForModule","ranges":[{"startOffset":7859967,"endOffset":7862860,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyTypeOperator","ranges":[{"startOffset":7862869,"endOffset":7863065,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsSpecial","ranges":[{"startOffset":7863074,"endOffset":7864712,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedSymbolsForSymbol","ranges":[{"startOffset":7864721,"endOffset":7866880,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesInContainerOrFiles","ranges":[{"startOffset":7866889,"endOffset":7867530,"count":0}],"isBlockCoverage":false},{"functionName":"getSpecialSearchKind","ranges":[{"startOffset":7867539,"endOffset":7868009,"count":0}],"isBlockCoverage":false},{"functionName":"skipPastExportOrImportSpecifierOrUnion","ranges":[{"startOffset":7868018,"endOffset":7868875,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7868916,"endOffset":7869180,"count":1}],"isBlockCoverage":true},{"functionName":"getNonModuleSymbolOfMergedModuleSymbol","ranges":[{"startOffset":7869238,"endOffset":7869575,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":7869608,"endOffset":7871612,"count":0}],"isBlockCoverage":false},{"functionName":"includesSourceFile","ranges":[{"startOffset":7871623,"endOffset":7871732,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSearches","ranges":[{"startOffset":7871890,"endOffset":7872219,"count":0}],"isBlockCoverage":false},{"functionName":"createSearch","ranges":[{"startOffset":7872320,"endOffset":7872986,"count":0}],"isBlockCoverage":false},{"functionName":"referenceAdder","ranges":[{"startOffset":7873206,"endOffset":7873667,"count":0}],"isBlockCoverage":false},{"functionName":"addStringOrCommentReference","ranges":[{"startOffset":7873742,"endOffset":7873955,"count":0}],"isBlockCoverage":false},{"functionName":"markSearchedSymbols","ranges":[{"startOffset":7874070,"endOffset":7874539,"count":0}],"isBlockCoverage":false},{"functionName":"searchForImportsOfExport","ranges":[{"startOffset":7874558,"endOffset":7876063,"count":0}],"isBlockCoverage":false},{"functionName":"eachExportReference","ranges":[{"startOffset":7876072,"endOffset":7877565,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAddSingleReference","ranges":[{"startOffset":7877631,"endOffset":7878034,"count":0}],"isBlockCoverage":false},{"functionName":"searchForImportedSymbol","ranges":[{"startOffset":7878043,"endOffset":7878451,"count":0}],"isBlockCoverage":false},{"functionName":"searchForName","ranges":[{"startOffset":7878460,"endOffset":7878676,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolOfDestructuringAssignment","ranges":[{"startOffset":7878685,"endOffset":7878931,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolScope","ranges":[{"startOffset":7878940,"endOffset":7880763,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolReferencedInFile","ranges":[{"startOffset":7880772,"endOffset":7880995,"count":0}],"isBlockCoverage":false},{"functionName":"eachSymbolReferenceInFile","ranges":[{"startOffset":7881071,"endOffset":7882144,"count":0}],"isBlockCoverage":false},{"functionName":"getTopMostDeclarationNamesInFile","ranges":[{"startOffset":7882222,"endOffset":7883197,"count":0}],"isBlockCoverage":false},{"functionName":"someSignatureUsage","ranges":[{"startOffset":7883289,"endOffset":7884345,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleSymbolReferenceNodes","ranges":[{"startOffset":7884409,"endOffset":7884798,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleSymbolReferencePositions","ranges":[{"startOffset":7884807,"endOffset":7885787,"count":0}],"isBlockCoverage":false},{"functionName":"getLabelReferencesInNode","ranges":[{"startOffset":7885796,"endOffset":7886441,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReferencePosition","ranges":[{"startOffset":7886450,"endOffset":7887619,"count":0}],"isBlockCoverage":false},{"functionName":"getAllReferencesForImportMeta","ranges":[{"startOffset":7887628,"endOffset":7888251,"count":0}],"isBlockCoverage":false},{"functionName":"getAllReferencesForKeyword","ranges":[{"startOffset":7888260,"endOffset":7888963,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesInSourceFile","ranges":[{"startOffset":7888972,"endOffset":7889238,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesInContainer","ranges":[{"startOffset":7889247,"endOffset":7889675,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingMeaning","ranges":[{"startOffset":7889684,"endOffset":7889835,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtLocation","ranges":[{"startOffset":7889844,"endOffset":7892785,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtJSDocTypeLiteral","ranges":[{"startOffset":7892794,"endOffset":7893196,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesAtExportSpecifier","ranges":[{"startOffset":7893205,"endOffset":7895686,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportSpecifier","ranges":[{"startOffset":7895695,"endOffset":7895970,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifierAlias","ranges":[{"startOffset":7895979,"endOffset":7896391,"count":0}],"isBlockCoverage":false},{"functionName":"getImportOrExportReferences","ranges":[{"startOffset":7896400,"endOffset":7897066,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceForShorthandProperty","ranges":[{"startOffset":7897075,"endOffset":7897536,"count":0}],"isBlockCoverage":false},{"functionName":"addReference","ranges":[{"startOffset":7897545,"endOffset":7898130,"count":0}],"isBlockCoverage":false},{"functionName":"addConstructorReferences","ranges":[{"startOffset":7898139,"endOffset":7899012,"count":0}],"isBlockCoverage":false},{"functionName":"addClassStaticThisReferences","ranges":[{"startOffset":7899021,"endOffset":7899963,"count":0}],"isBlockCoverage":false},{"functionName":"findOwnConstructorReferences","ranges":[{"startOffset":7899972,"endOffset":7901089,"count":0}],"isBlockCoverage":false},{"functionName":"getClassConstructorSymbol","ranges":[{"startOffset":7901098,"endOffset":7901257,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperConstructorAccesses","ranges":[{"startOffset":7901266,"endOffset":7901923,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnConstructor","ranges":[{"startOffset":7901932,"endOffset":7902059,"count":0}],"isBlockCoverage":false},{"functionName":"findInheritedConstructorReferences","ranges":[{"startOffset":7902068,"endOffset":7902519,"count":0}],"isBlockCoverage":false},{"functionName":"addImplementationReferences","ranges":[{"startOffset":7902528,"endOffset":7904410,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeIfInHeritageClause","ranges":[{"startOffset":7904419,"endOffset":7904723,"count":0}],"isBlockCoverage":false},{"functionName":"isImplementationExpression","ranges":[{"startOffset":7904732,"endOffset":7905258,"count":0}],"isBlockCoverage":false},{"functionName":"explicitlyInheritsFrom","ranges":[{"startOffset":7905267,"endOffset":7906113,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForSuperKeyword","ranges":[{"startOffset":7906122,"endOffset":7907685,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterName","ranges":[{"startOffset":7907694,"endOffset":7907861,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForThisKeyword","ranges":[{"startOffset":7907870,"endOffset":7911320,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesForStringLiteral","ranges":[{"startOffset":7911329,"endOffset":7912504,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralPropertyReference","ranges":[{"startOffset":7912513,"endOffset":7912747,"count":0}],"isBlockCoverage":false},{"functionName":"populateSearchSymbolSet","ranges":[{"startOffset":7912756,"endOffset":7913566,"count":0}],"isBlockCoverage":false},{"functionName":"forEachRelatedSymbol","ranges":[{"startOffset":7913575,"endOffset":7919303,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromBaseTypes","ranges":[{"startOffset":7919312,"endOffset":7920129,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticSymbol","ranges":[{"startOffset":7920138,"endOffset":7920386,"count":0}],"isBlockCoverage":false},{"functionName":"getRelatedSymbol","ranges":[{"startOffset":7920395,"endOffset":7921523,"count":0}],"isBlockCoverage":false},{"functionName":"getIntersectingMeaningFromDeclarations","ranges":[{"startOffset":7921532,"endOffset":7922201,"count":0}],"isBlockCoverage":false},{"functionName":"isImplementation","ranges":[{"startOffset":7922305,"endOffset":7922621,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceEntriesForShorthandPropertyAssignment","ranges":[{"startOffset":7922630,"endOffset":7923168,"count":0}],"isBlockCoverage":false},{"functionName":"forEachDescendantOfKind","ranges":[{"startOffset":7923294,"endOffset":7923554,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassByExtendingIdentifier","ranges":[{"startOffset":7923563,"endOffset":7923726,"count":0}],"isBlockCoverage":false},{"functionName":"getParentSymbolsOfPropertyAccess","ranges":[{"startOffset":7923735,"endOffset":7924339,"count":0}],"isBlockCoverage":false},{"functionName":"isForRenameWithPrefixAndSuffixText","ranges":[{"startOffset":7924348,"endOffset":7924508,"count":0}],"isBlockCoverage":false},{"functionName":"Core","ranges":[{"startOffset":7924701,"endOffset":7924711,"count":0}],"isBlockCoverage":false},{"functionName":"DefinitionKind","ranges":[{"startOffset":7924733,"endOffset":7924753,"count":0}],"isBlockCoverage":false},{"functionName":"EntryKind","ranges":[{"startOffset":7924770,"endOffset":7924785,"count":0}],"isBlockCoverage":false},{"functionName":"ExportKind","ranges":[{"startOffset":7924803,"endOffset":7924820,"count":0}],"isBlockCoverage":false},{"functionName":"FindReferencesUse","ranges":[{"startOffset":7924845,"endOffset":7924868,"count":0}],"isBlockCoverage":false},{"functionName":"ImportExport","ranges":[{"startOffset":7924888,"endOffset":7924906,"count":0}],"isBlockCoverage":false},{"functionName":"createImportTracker","ranges":[{"startOffset":7924933,"endOffset":7924958,"count":0}],"isBlockCoverage":false},{"functionName":"findModuleReferences","ranges":[{"startOffset":7924986,"endOffset":7925012,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceOrRenameEntries","ranges":[{"startOffset":7925048,"endOffset":7925082,"count":0}],"isBlockCoverage":false},{"functionName":"findReferencedSymbols","ranges":[{"startOffset":7925111,"endOffset":7925138,"count":0}],"isBlockCoverage":false},{"functionName":"getContextNode","ranges":[{"startOffset":7925160,"endOffset":7925180,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfo","ranges":[{"startOffset":7925201,"endOffset":7925220,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementationsAtPosition","ranges":[{"startOffset":7925256,"endOffset":7925290,"count":0}],"isBlockCoverage":false},{"functionName":"getImportOrExportSymbol","ranges":[{"startOffset":7925321,"endOffset":7925350,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceEntriesForNode","ranges":[{"startOffset":7925384,"endOffset":7925416,"count":0}],"isBlockCoverage":false},{"functionName":"getTextSpanOfEntry","ranges":[{"startOffset":7925442,"endOffset":7925466,"count":0}],"isBlockCoverage":false},{"functionName":"isContextWithStartAndEndNode","ranges":[{"startOffset":7925502,"endOffset":7925536,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationOfSymbol","ranges":[{"startOffset":7925565,"endOffset":7925592,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccessForReference","ranges":[{"startOffset":7925625,"endOffset":7925656,"count":0}],"isBlockCoverage":false},{"functionName":"nodeEntry","ranges":[{"startOffset":7925673,"endOffset":7925688,"count":0}],"isBlockCoverage":false},{"functionName":"toContextSpan","ranges":[{"startOffset":7925709,"endOffset":7925728,"count":0}],"isBlockCoverage":false},{"functionName":"toHighlightSpan","ranges":[{"startOffset":7925751,"endOffset":7925772,"count":0}],"isBlockCoverage":false},{"functionName":"toReferenceEntry","ranges":[{"startOffset":7925796,"endOffset":7925818,"count":0}],"isBlockCoverage":false},{"functionName":"toRenameLocation","ranges":[{"startOffset":7925842,"endOffset":7925864,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.FindAllReferences.ts","ranges":[{"startOffset":7925917,"endOffset":7926057,"count":1}],"isBlockCoverage":true},{"functionName":"getDefinitionAtPosition","ranges":[{"startOffset":7926103,"endOffset":7933372,"count":0}],"isBlockCoverage":false},{"functionName":"symbolMatchesSignature","ranges":[{"startOffset":7933375,"endOffset":7933729,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionFromObjectLiteralElement","ranges":[{"startOffset":7933732,"endOffset":7934300,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionFromOverriddenMember","ranges":[{"startOffset":7934303,"endOffset":7935300,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceAtPosition","ranges":[{"startOffset":7935303,"endOffset":7937424,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUnwrapFirstTypeArgumentTypeDefinitionFromTypeReference","ranges":[{"startOffset":7937427,"endOffset":7937887,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUnwrapFirstTypeArgumentTypeDefinitionFromAlias","ranges":[{"startOffset":7937890,"endOffset":7938400,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstTypeArgumentDefinitions","ranges":[{"startOffset":7938403,"endOffset":7939567,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinitionAtPosition","ranges":[{"startOffset":7939570,"endOffset":7941028,"count":0}],"isBlockCoverage":false},{"functionName":"definitionFromType","ranges":[{"startOffset":7941031,"endOffset":7941291,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetReturnTypeOfFunction","ranges":[{"startOffset":7941294,"endOffset":7941804,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan","ranges":[{"startOffset":7941807,"endOffset":7942537,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionInfoForIndexSignatures","ranges":[{"startOffset":7942540,"endOffset":7942766,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbol","ranges":[{"startOffset":7942769,"endOffset":7943315,"count":0}],"isBlockCoverage":false},{"functionName":"shouldSkipAlias","ranges":[{"startOffset":7943318,"endOffset":7943603,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoDeclaration","ranges":[{"startOffset":7943606,"endOffset":7944026,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionFromSymbol","ranges":[{"startOffset":7944029,"endOffset":7946129,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfo","ranges":[{"startOffset":7946132,"endOffset":7946610,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfoFromName","ranges":[{"startOffset":7946613,"endOffset":7947501,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionInfoFromSwitch","ranges":[{"startOffset":7947504,"endOffset":7948146,"count":0}],"isBlockCoverage":false},{"functionName":"isDefinitionVisible","ranges":[{"startOffset":7948149,"endOffset":7949145,"count":0}],"isBlockCoverage":false},{"functionName":"createDefinitionFromSignatureDeclaration","ranges":[{"startOffset":7949148,"endOffset":7949409,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceInPosition","ranges":[{"startOffset":7949412,"endOffset":7949539,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionInfoForFileReference","ranges":[{"startOffset":7949542,"endOffset":7949877,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestorCallLikeExpression","ranges":[{"startOffset":7949880,"endOffset":7950191,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSignatureDeclaration","ranges":[{"startOffset":7950194,"endOffset":7950498,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorLike","ranges":[{"startOffset":7950501,"endOffset":7950741,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/goToDefinition.ts","ranges":[{"startOffset":7950821,"endOffset":7951394,"count":1}],"isBlockCoverage":true},{"functionName":"createDefinitionInfo","ranges":[{"startOffset":7951557,"endOffset":7951583,"count":0}],"isBlockCoverage":false},{"functionName":"findReferenceInPosition","ranges":[{"startOffset":7951614,"endOffset":7951643,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan","ranges":[{"startOffset":7951676,"endOffset":7951707,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAtPosition","ranges":[{"startOffset":7951738,"endOffset":7951767,"count":0}],"isBlockCoverage":false},{"functionName":"getReferenceAtPosition","ranges":[{"startOffset":7951797,"endOffset":7951825,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinitionAtPosition","ranges":[{"startOffset":7951860,"endOffset":7951893,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.GoToDefinition.ts","ranges":[{"startOffset":7951943,"endOffset":7952049,"count":1}],"isBlockCoverage":true},{"functionName":"shouldShowParameterNameHints","ranges":[{"startOffset":7952091,"endOffset":7952273,"count":0}],"isBlockCoverage":false},{"functionName":"shouldShowLiteralParameterNameHintsOnly","ranges":[{"startOffset":7952276,"endOffset":7952413,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseInteractiveInlayHints","ranges":[{"startOffset":7952416,"endOffset":7952529,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints","ranges":[{"startOffset":7952532,"endOffset":7980704,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/inlayHints.ts","ranges":[{"startOffset":7980788,"endOffset":7981003,"count":1}],"isBlockCoverage":true},{"functionName":"leadingParameterNameCommentRegexFactory","ranges":[{"startOffset":7980907,"endOffset":7980996,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints","ranges":[{"startOffset":7981151,"endOffset":7981174,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.InlayHints.ts","ranges":[{"startOffset":7981220,"endOffset":7981318,"count":1}],"isBlockCoverage":true},{"functionName":"getJsDocCommentsFromDeclarations","ranges":[{"startOffset":7981355,"endOffset":7982631,"count":0}],"isBlockCoverage":false},{"functionName":"isIdenticalListOfDisplayParts","ranges":[{"startOffset":7982634,"endOffset":7982790,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentHavingNodes","ranges":[{"startOffset":7982793,"endOffset":7983331,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagsFromDeclarations","ranges":[{"startOffset":7983334,"endOffset":7983998,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPropertyTagsInfo","ranges":[{"startOffset":7984001,"endOffset":7984260,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocPropertyTags","ranges":[{"startOffset":7984263,"endOffset":7984493,"count":0}],"isBlockCoverage":false},{"functionName":"getDisplayPartsFromComment","ranges":[{"startOffset":7984496,"endOffset":7984782,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentDisplayParts","ranges":[{"startOffset":7984785,"endOffset":7987219,"count":0}],"isBlockCoverage":false},{"functionName":"getTagNameDisplayPart","ranges":[{"startOffset":7987222,"endOffset":7987664,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagNameCompletions","ranges":[{"startOffset":7987667,"endOffset":7988010,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletions","ranges":[{"startOffset":7988013,"endOffset":7988350,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletionDetails","ranges":[{"startOffset":7988353,"endOffset":7988647,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletions","ranges":[{"startOffset":7988650,"endOffset":7989429,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletionDetails","ranges":[{"startOffset":7989432,"endOffset":7989713,"count":0}],"isBlockCoverage":false},{"functionName":"getDocCommentTemplateAtPosition","ranges":[{"startOffset":7989716,"endOffset":7991602,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationStringAtPosition","ranges":[{"startOffset":7991605,"endOffset":7991937,"count":0}],"isBlockCoverage":false},{"functionName":"parameterDocComments","ranges":[{"startOffset":7991940,"endOffset":7992350,"count":0}],"isBlockCoverage":false},{"functionName":"returnsDocComment","ranges":[{"startOffset":7992353,"endOffset":7992463,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentOwnerInfo","ranges":[{"startOffset":7992466,"endOffset":7992607,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentOwnerInfoWorker","ranges":[{"startOffset":7992610,"endOffset":7995068,"count":0}],"isBlockCoverage":false},{"functionName":"hasReturn","ranges":[{"startOffset":7995071,"endOffset":7995390,"count":0}],"isBlockCoverage":false},{"functionName":"getRightHandSideOfAssignment","ranges":[{"startOffset":7995393,"endOffset":7995831,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/jsDoc.ts","ranges":[{"startOffset":7995976,"endOffset":7997722,"count":1}],"isBlockCoverage":true},{"functionName":"getDocCommentTemplateAtPosition","ranges":[{"startOffset":7997869,"endOffset":7997906,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletionDetails","ranges":[{"startOffset":7997952,"endOffset":7997996,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterNameCompletions","ranges":[{"startOffset":7998036,"endOffset":7998074,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletionDetails","ranges":[{"startOffset":7998110,"endOffset":7998144,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagCompletions","ranges":[{"startOffset":7998174,"endOffset":7998202,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagNameCompletionDetails","ranges":[{"startOffset":7998242,"endOffset":7998280,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagNameCompletions","ranges":[{"startOffset":7998314,"endOffset":7998346,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocCommentsFromDeclarations","ranges":[{"startOffset":7998386,"endOffset":7998424,"count":0}],"isBlockCoverage":false},{"functionName":"getJsDocTagsFromDeclarations","ranges":[{"startOffset":7998460,"endOffset":7998494,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.JsDoc.ts","ranges":[{"startOffset":7998535,"endOffset":7998623,"count":1}],"isBlockCoverage":true},{"functionName":"organizeImports","ranges":[{"startOffset":7998670,"endOffset":8002929,"count":0}],"isBlockCoverage":false},{"functionName":"groupByNewlineContiguous","ranges":[{"startOffset":8002932,"endOffset":8003453,"count":0}],"isBlockCoverage":false},{"functionName":"isNewGroup","ranges":[{"startOffset":8003456,"endOffset":8003953,"count":0}],"isBlockCoverage":false},{"functionName":"removeUnusedImports","ranges":[{"startOffset":8003956,"endOffset":8006143,"count":0}],"isBlockCoverage":false},{"functionName":"hasModuleDeclarationMatchingSpecifier","ranges":[{"startOffset":8006146,"endOffset":8006487,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName2","ranges":[{"startOffset":8006490,"endOffset":8006631,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceImports","ranges":[{"startOffset":8006634,"endOffset":8006870,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceImportsWorker","ranges":[{"startOffset":8006873,"endOffset":8011379,"count":0}],"isBlockCoverage":false},{"functionName":"getCategorizedImports","ranges":[{"startOffset":8011382,"endOffset":8012418,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceExports","ranges":[{"startOffset":8012421,"endOffset":8012633,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceExportsWorker","ranges":[{"startOffset":8012636,"endOffset":8014671,"count":0}],"isBlockCoverage":false},{"functionName":"updateImportDeclarationAndClause","ranges":[{"startOffset":8014674,"endOffset":8015102,"count":0}],"isBlockCoverage":false},{"functionName":"sortSpecifiers","ranges":[{"startOffset":8015105,"endOffset":8015280,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportOrExportSpecifiers","ranges":[{"startOffset":8015283,"endOffset":8015762,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiers2","ranges":[{"startOffset":8015765,"endOffset":8015960,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiersWorker","ranges":[{"startOffset":8015963,"endOffset":8016350,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierExpression","ranges":[{"startOffset":8016353,"endOffset":8016834,"count":0}],"isBlockCoverage":false},{"functionName":"detectSorting","ranges":[{"startOffset":8016837,"endOffset":8017042,"count":0}],"isBlockCoverage":false},{"functionName":"detectSortingWorker","ranges":[{"startOffset":8017045,"endOffset":8018801,"count":0}],"isBlockCoverage":false},{"functionName":"detectImportDeclarationSorting","ranges":[{"startOffset":8018804,"endOffset":8019305,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclarationInsertionIndex","ranges":[{"startOffset":8019308,"endOffset":8019561,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSpecifierInsertionIndex","ranges":[{"startOffset":8019564,"endOffset":8019843,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportsOrRequireStatements","ranges":[{"startOffset":8019846,"endOffset":8020061,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportKind","ranges":[{"startOffset":8020064,"endOffset":8020178,"count":0}],"isBlockCoverage":false},{"functionName":"getImportKindOrder","ranges":[{"startOffset":8020181,"endOffset":8020732,"count":0}],"isBlockCoverage":false},{"functionName":"getNewImportSpecifiers","ranges":[{"startOffset":8020735,"endOffset":8021217,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNamedBindingElements","ranges":[{"startOffset":8021220,"endOffset":8021485,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsOrdinalStringComparer","ranges":[{"startOffset":8021488,"endOffset":8021655,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsUnicodeStringComparer","ranges":[{"startOffset":8021658,"endOffset":8022302,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsLocale","ranges":[{"startOffset":8022305,"endOffset":8022693,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsComparer","ranges":[{"startOffset":8022696,"endOffset":8022992,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsComparerWithDetection","ranges":[{"startOffset":8022995,"endOffset":8023335,"count":0}],"isBlockCoverage":false},{"functionName":"getTopLevelExportGroups","ranges":[{"startOffset":8023338,"endOffset":8024253,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/organizeImports.ts","ranges":[{"startOffset":8024360,"endOffset":8027612,"count":1}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":8024488,"endOffset":8024671,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8024680,"endOffset":8024864,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8024873,"endOffset":8025190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8025251,"endOffset":8027569,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceExports","ranges":[{"startOffset":8027773,"endOffset":8027794,"count":0}],"isBlockCoverage":false},{"functionName":"coalesceImports","ranges":[{"startOffset":8027817,"endOffset":8027838,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportOrExportSpecifiers","ranges":[{"startOffset":8027877,"endOffset":8027914,"count":0}],"isBlockCoverage":false},{"functionName":"compareImportsOrRequireStatements","ranges":[{"startOffset":8027955,"endOffset":8027994,"count":0}],"isBlockCoverage":false},{"functionName":"compareModuleSpecifiers","ranges":[{"startOffset":8028025,"endOffset":8028055,"count":0}],"isBlockCoverage":false},{"functionName":"detectImportDeclarationSorting","ranges":[{"startOffset":8028093,"endOffset":8028129,"count":0}],"isBlockCoverage":false},{"functionName":"detectImportSpecifierSorting","ranges":[{"startOffset":8028165,"endOffset":8028199,"count":0}],"isBlockCoverage":false},{"functionName":"detectSorting","ranges":[{"startOffset":8028220,"endOffset":8028239,"count":0}],"isBlockCoverage":false},{"functionName":"getImportDeclarationInsertionIndex","ranges":[{"startOffset":8028281,"endOffset":8028321,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSpecifierInsertionIndex","ranges":[{"startOffset":8028361,"endOffset":8028399,"count":0}],"isBlockCoverage":false},{"functionName":"getOrganizeImportsComparer","ranges":[{"startOffset":8028433,"endOffset":8028465,"count":0}],"isBlockCoverage":false},{"functionName":"organizeImports","ranges":[{"startOffset":8028488,"endOffset":8028509,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.OrganizeImports.ts","ranges":[{"startOffset":8028560,"endOffset":8028668,"count":1}],"isBlockCoverage":true},{"functionName":"collectElements","ranges":[{"startOffset":8028726,"endOffset":8029000,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeOutliningSpans","ranges":[{"startOffset":8029003,"endOffset":8031552,"count":0}],"isBlockCoverage":false},{"functionName":"addRegionOutliningSpans","ranges":[{"startOffset":8031555,"endOffset":8032614,"count":0}],"isBlockCoverage":false},{"functionName":"isRegionDelimiter","ranges":[{"startOffset":8032617,"endOffset":8032850,"count":0}],"isBlockCoverage":false},{"functionName":"addOutliningForLeadingCommentsForPos","ranges":[{"startOffset":8032853,"endOffset":8034418,"count":0}],"isBlockCoverage":false},{"functionName":"addOutliningForLeadingCommentsForNode","ranges":[{"startOffset":8034421,"endOffset":8034633,"count":0}],"isBlockCoverage":false},{"functionName":"createOutliningSpanFromBounds","ranges":[{"startOffset":8034636,"endOffset":8034770,"count":0}],"isBlockCoverage":false},{"functionName":"getOutliningSpanForNode","ranges":[{"startOffset":8034773,"endOffset":8042180,"count":0}],"isBlockCoverage":false},{"functionName":"functionSpan","ranges":[{"startOffset":8042183,"endOffset":8042585,"count":0}],"isBlockCoverage":false},{"functionName":"spanBetweenTokens","ranges":[{"startOffset":8042588,"endOffset":8042979,"count":0}],"isBlockCoverage":false},{"functionName":"createOutliningSpan","ranges":[{"startOffset":8042982,"endOffset":8043162,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetFunctionOpenToken","ranges":[{"startOffset":8043165,"endOffset":8043521,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/outliningElementsCollector.ts","ranges":[{"startOffset":8043603,"endOffset":8043763,"count":1}],"isBlockCoverage":true},{"functionName":"collectElements","ranges":[{"startOffset":8043957,"endOffset":8043978,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.OutliningElementsCollector.ts","ranges":[{"startOffset":8044040,"endOffset":8044170,"count":1}],"isBlockCoverage":true},{"functionName":"getRenameInfo","ranges":[{"startOffset":8044208,"endOffset":8044665,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoForNode","ranges":[{"startOffset":8044668,"endOffset":8046963,"count":0}],"isBlockCoverage":false},{"functionName":"isDefinedInLibraryFile","ranges":[{"startOffset":8046966,"endOffset":8047195,"count":0}],"isBlockCoverage":false},{"functionName":"wouldRenameInOtherNodeModules","ranges":[{"startOffset":8047198,"endOffset":8048622,"count":0}],"isBlockCoverage":false},{"functionName":"getPackagePathComponents","ranges":[{"startOffset":8048625,"endOffset":8048905,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoForModule","ranges":[{"startOffset":8048908,"endOffset":8050049,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoSuccess","ranges":[{"startOffset":8050052,"endOffset":8050364,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfoError","ranges":[{"startOffset":8050367,"endOffset":8050506,"count":0}],"isBlockCoverage":false},{"functionName":"createTriggerSpanForNode","ranges":[{"startOffset":8050509,"endOffset":8050772,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsEligibleForRename","ranges":[{"startOffset":8050775,"endOffset":8051204,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/rename.ts","ranges":[{"startOffset":8051237,"endOffset":8051309,"count":1}],"isBlockCoverage":true},{"functionName":"getRenameInfo","ranges":[{"startOffset":8051441,"endOffset":8051460,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsEligibleForRename","ranges":[{"startOffset":8051491,"endOffset":8051520,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.Rename.ts","ranges":[{"startOffset":8051562,"endOffset":8051652,"count":1}],"isBlockCoverage":true},{"functionName":"getSignatureHelpItems","ranges":[{"startOffset":8051697,"endOffset":8053197,"count":0}],"isBlockCoverage":false},{"functionName":"getCandidateOrTypeInfo","ranges":[{"startOffset":8053200,"endOffset":8054607,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntacticOwner","ranges":[{"startOffset":8054610,"endOffset":8055273,"count":0}],"isBlockCoverage":false},{"functionName":"createJSSignatureHelpItems","ranges":[{"startOffset":8055276,"endOffset":8056414,"count":0}],"isBlockCoverage":false},{"functionName":"containsPrecedingToken","ranges":[{"startOffset":8056417,"endOffset":8056969,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentInfoForCompletions","ranges":[{"startOffset":8056972,"endOffset":8057350,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentOrParameterListInfo","ranges":[{"startOffset":8057353,"endOffset":8057888,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentOrParameterListAndIndex","ranges":[{"startOffset":8057891,"endOffset":8058316,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyContainingArgumentInfo","ranges":[{"startOffset":8058319,"endOffset":8061343,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyContainingArgumentOrContextualParameterInfo","ranges":[{"startOffset":8061346,"endOffset":8061601,"count":0}],"isBlockCoverage":false},{"functionName":"getHighestBinary","ranges":[{"startOffset":8061604,"endOffset":8061712,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryExpressionParameters","ranges":[{"startOffset":8061715,"endOffset":8061853,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetParameterInfo","ranges":[{"startOffset":8061856,"endOffset":8062783,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedNode","ranges":[{"startOffset":8062786,"endOffset":8063125,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualSignatureLocationInfo","ranges":[{"startOffset":8063128,"endOffset":8064508,"count":0}],"isBlockCoverage":false},{"functionName":"chooseBetterSymbol","ranges":[{"startOffset":8064511,"endOffset":8064776,"count":0}],"isBlockCoverage":false},{"functionName":"getSpreadElementCount","ranges":[{"startOffset":8064779,"endOffset":8065242,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentIndex","ranges":[{"startOffset":8065245,"endOffset":8065372,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentCount","ranges":[{"startOffset":8065375,"endOffset":8065537,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentIndexOrCount","ranges":[{"startOffset":8065540,"endOffset":8066450,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentIndexForTemplatePiece","ranges":[{"startOffset":8066453,"endOffset":8066828,"count":0}],"isBlockCoverage":false},{"functionName":"getArgumentListInfoForTemplate","ranges":[{"startOffset":8066831,"endOffset":8067392,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableSpanForArguments","ranges":[{"startOffset":8067395,"endOffset":8067760,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableSpanForTaggedTemplate","ranges":[{"startOffset":8067763,"endOffset":8068407,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingArgumentInfo","ranges":[{"startOffset":8068410,"endOffset":8068979,"count":0}],"isBlockCoverage":false},{"functionName":"getChildListThatStartsWithOpenerToken","ranges":[{"startOffset":8068982,"endOffset":8069316,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionFromInvocation","ranges":[{"startOffset":8069319,"endOffset":8069478,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingDeclarationFromInvocation","ranges":[{"startOffset":8069481,"endOffset":8069685,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureHelpItems","ranges":[{"startOffset":8069688,"endOffset":8071901,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeHelpItems","ranges":[{"startOffset":8071904,"endOffset":8072409,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeHelpItem","ranges":[{"startOffset":8072412,"endOffset":8073170,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItem","ranges":[{"startOffset":8073173,"endOffset":8074011,"count":0}],"isBlockCoverage":false},{"functionName":"returnTypeToDisplayParts","ranges":[{"startOffset":8074014,"endOffset":8074692,"count":0}],"isBlockCoverage":false},{"functionName":"itemInfoForTypeParameters","ranges":[{"startOffset":8074695,"endOffset":8075924,"count":0}],"isBlockCoverage":false},{"functionName":"itemInfoForParameters","ranges":[{"startOffset":8075927,"endOffset":8077288,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureHelpParameterForParameter","ranges":[{"startOffset":8077291,"endOffset":8077990,"count":0}],"isBlockCoverage":false},{"functionName":"createSignatureHelpParameterForTypeParameter","ranges":[{"startOffset":8077993,"endOffset":8078547,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/signatureHelp.ts","ranges":[{"startOffset":8078647,"endOffset":8078961,"count":1}],"isBlockCoverage":true},{"functionName":"getArgumentInfoForCompletions","ranges":[{"startOffset":8079130,"endOffset":8079165,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItems","ranges":[{"startOffset":8079194,"endOffset":8079221,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.SignatureHelp.ts","ranges":[{"startOffset":8079270,"endOffset":8079374,"count":1}],"isBlockCoverage":true},{"functionName":"getSmartSelectionRange","ranges":[{"startOffset":8079420,"endOffset":8083559,"count":0}],"isBlockCoverage":false},{"functionName":"positionShouldSnapToNode","ranges":[{"startOffset":8083562,"endOffset":8083866,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectionChildren","ranges":[{"startOffset":8083869,"endOffset":8086157,"count":0}],"isBlockCoverage":false},{"functionName":"groupChildren","ranges":[{"startOffset":8086160,"endOffset":8086624,"count":0}],"isBlockCoverage":false},{"functionName":"splitChildren","ranges":[{"startOffset":8086627,"endOffset":8087516,"count":0}],"isBlockCoverage":false},{"functionName":"createSyntaxList2","ranges":[{"startOffset":8087519,"endOffset":8087730,"count":0}],"isBlockCoverage":false},{"functionName":"isListOpener","ranges":[{"startOffset":8087733,"endOffset":8087964,"count":0}],"isBlockCoverage":false},{"functionName":"isListCloser","ranges":[{"startOffset":8087967,"endOffset":8088201,"count":0}],"isBlockCoverage":false},{"functionName":"getEndPos","ranges":[{"startOffset":8088204,"endOffset":8088578,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/smartSelection.ts","ranges":[{"startOffset":8088636,"endOffset":8088786,"count":1}],"isBlockCoverage":true},{"functionName":"getSmartSelectionRange","ranges":[{"startOffset":8088966,"endOffset":8088994,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.SmartSelectionRange.ts","ranges":[{"startOffset":8089049,"endOffset":8089160,"count":1}],"isBlockCoverage":true},{"functionName":"getSymbolKind","ranges":[{"startOffset":8089205,"endOffset":8090279,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolKindOfConstructorPropertyMethodAccessorFunctionOrVar","ranges":[{"startOffset":8090282,"endOffset":8093448,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedSymbolModifiers","ranges":[{"startOffset":8093451,"endOffset":8093974,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolModifiers","ranges":[{"startOffset":8093977,"endOffset":8094645,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolDisplayPartsDocumentationAndSymbolKindWorker","ranges":[{"startOffset":8094648,"endOffset":8121286,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolDisplayPartsDocumentationAndSymbolKind","ranges":[{"startOffset":8121289,"endOffset":8121707,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalVariableOrFunction","ranges":[{"startOffset":8121710,"endOffset":8122372,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/symbolDisplay.ts","ranges":[{"startOffset":8122449,"endOffset":8122680,"count":1}],"isBlockCoverage":true},{"functionName":"getSymbolDisplayPartsDocumentationAndSymbolKind","ranges":[{"startOffset":8122867,"endOffset":8122920,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolKind","ranges":[{"startOffset":8122941,"endOffset":8122960,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolModifiers","ranges":[{"startOffset":8122986,"endOffset":8123010,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.SymbolDisplay.ts","ranges":[{"startOffset":8123059,"endOffset":8123163,"count":1}],"isBlockCoverage":true},{"functionName":"getPos2","ranges":[{"startOffset":8123206,"endOffset":8123324,"count":0}],"isBlockCoverage":false},{"functionName":"setPos","ranges":[{"startOffset":8123327,"endOffset":8123418,"count":0}],"isBlockCoverage":false},{"functionName":"getEnd","ranges":[{"startOffset":8123421,"endOffset":8123538,"count":0}],"isBlockCoverage":false},{"functionName":"setEnd","ranges":[{"startOffset":8123541,"endOffset":8123632,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhitespacesAndLineBreaks","ranges":[{"startOffset":8123635,"endOffset":8123824,"count":0}],"isBlockCoverage":false},{"functionName":"hasCommentsBeforeLineBreak","ranges":[{"startOffset":8123827,"endOffset":8124106,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRange","ranges":[{"startOffset":8124109,"endOffset":8124322,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedStartPosition","ranges":[{"startOffset":8124325,"endOffset":8126365,"count":0}],"isBlockCoverage":false},{"functionName":"getEndPositionOfMultilineTrailingComment","ranges":[{"startOffset":8126368,"endOffset":8127341,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedEndPosition","ranges":[{"startOffset":8127344,"endOffset":8128382,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8128385,"endOffset":8128617,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotatable","ranges":[{"startOffset":8128620,"endOffset":8128774,"count":0}],"isBlockCoverage":false},{"functionName":"updateJSDocHost","ranges":[{"startOffset":8128777,"endOffset":8129073,"count":0}],"isBlockCoverage":false},{"functionName":"tryMergeJsdocTags","ranges":[{"startOffset":8129076,"endOffset":8130107,"count":0}],"isBlockCoverage":false},{"functionName":"startPositionToDeleteNodeInList","ranges":[{"startOffset":8130110,"endOffset":8130400,"count":0}],"isBlockCoverage":false},{"functionName":"endPositionToDeleteNodeInList","ranges":[{"startOffset":8130403,"endOffset":8131460,"count":0}],"isBlockCoverage":false},{"functionName":"getClassOrObjectBraceEnds","ranges":[{"startOffset":8131463,"endOffset":8131757,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOrProperties","ranges":[{"startOffset":8131760,"endOffset":8131880,"count":0}],"isBlockCoverage":false},{"functionName":"applyChanges","ranges":[{"startOffset":8131883,"endOffset":8132139,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia2","ranges":[{"startOffset":8132142,"endOffset":8132211,"count":0}],"isBlockCoverage":false},{"functionName":"assignPositionsToNode","ranges":[{"startOffset":8132214,"endOffset":8132571,"count":0}],"isBlockCoverage":false},{"functionName":"assignPositionsToNodeArray","ranges":[{"startOffset":8132574,"endOffset":8132976,"count":0}],"isBlockCoverage":false},{"functionName":"createWriter","ranges":[{"startOffset":8132979,"endOffset":8137484,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertionPositionAtSourceFileTop","ranges":[{"startOffset":8137487,"endOffset":8139851,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLocationToAddComment","ranges":[{"startOffset":8139854,"endOffset":8140085,"count":0}],"isBlockCoverage":false},{"functionName":"needSemicolonBetween","ranges":[{"startOffset":8140088,"endOffset":8140341,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNode","ranges":[{"startOffset":8140344,"endOffset":8140684,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodeInList","ranges":[{"startOffset":8140687,"endOffset":8141491,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/textChanges.ts","ranges":[{"startOffset":8141686,"endOffset":8185697,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8141803,"endOffset":8142197,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8142273,"endOffset":8142610,"count":1}],"isBlockCoverage":true},{"functionName":"_ChangeTracker","ranges":[{"startOffset":8142914,"endOffset":8143288,"count":0}],"isBlockCoverage":false},{"functionName":"fromContext","ranges":[{"startOffset":8143304,"endOffset":8143470,"count":0}],"isBlockCoverage":false},{"functionName":"with","ranges":[{"startOffset":8143486,"endOffset":8143640,"count":0}],"isBlockCoverage":false},{"functionName":"pushRaw","ranges":[{"startOffset":8143649,"endOffset":8144007,"count":0}],"isBlockCoverage":false},{"functionName":"deleteRange","ranges":[{"startOffset":8144016,"endOffset":8144132,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":8144141,"endOffset":8144233,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNode","ranges":[{"startOffset":8144353,"endOffset":8144539,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodes","ranges":[{"startOffset":8144548,"endOffset":8145047,"count":0}],"isBlockCoverage":false},{"functionName":"deleteModifier","ranges":[{"startOffset":8145056,"endOffset":8145321,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodeRange","ranges":[{"startOffset":8145330,"endOffset":8145704,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNodeRangeExcludingEnd","ranges":[{"startOffset":8145713,"endOffset":8146160,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRange","ranges":[{"startOffset":8146169,"endOffset":8146348,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNode","ranges":[{"startOffset":8146357,"endOffset":8146561,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeRange","ranges":[{"startOffset":8146570,"endOffset":8146796,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRangeWithNodes","ranges":[{"startOffset":8146805,"endOffset":8146999,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeWithNodes","ranges":[{"startOffset":8147008,"endOffset":8147232,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeWithText","ranges":[{"startOffset":8147241,"endOffset":8147427,"count":0}],"isBlockCoverage":false},{"functionName":"replaceNodeRangeWithNodes","ranges":[{"startOffset":8147436,"endOffset":8147682,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasTrailingComment","ranges":[{"startOffset":8147691,"endOffset":8147888,"count":0}],"isBlockCoverage":false},{"functionName":"nextCommaToken","ranges":[{"startOffset":8147897,"endOffset":8148086,"count":0}],"isBlockCoverage":false},{"functionName":"replacePropertyAssignment","ranges":[{"startOffset":8148095,"endOffset":8148334,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAt","ranges":[{"startOffset":8148343,"endOffset":8148484,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAt","ranges":[{"startOffset":8148493,"endOffset":8148646,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtTopOfFile","ranges":[{"startOffset":8148655,"endOffset":8148800,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAtTopOfFile","ranges":[{"startOffset":8148809,"endOffset":8148957,"count":0}],"isBlockCoverage":false},{"functionName":"insertAtTopOfFile","ranges":[{"startOffset":8148966,"endOffset":8149550,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAtEndOfFile","ranges":[{"startOffset":8149559,"endOffset":8149707,"count":0}],"isBlockCoverage":false},{"functionName":"insertAtEndOfFile","ranges":[{"startOffset":8149716,"endOffset":8150065,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsInNewFile","ranges":[{"startOffset":8150074,"endOffset":8150314,"count":0}],"isBlockCoverage":false},{"functionName":"insertFirstParameter","ranges":[{"startOffset":8150323,"endOffset":8150621,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeBefore","ranges":[{"startOffset":8150630,"endOffset":8150903,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesBefore","ranges":[{"startOffset":8150912,"endOffset":8151197,"count":0}],"isBlockCoverage":false},{"functionName":"insertModifierAt","ranges":[{"startOffset":8151206,"endOffset":8151361,"count":0}],"isBlockCoverage":false},{"functionName":"insertModifierBefore","ranges":[{"startOffset":8151370,"endOffset":8151540,"count":0}],"isBlockCoverage":false},{"functionName":"insertCommentBeforeLine","ranges":[{"startOffset":8151549,"endOffset":8152292,"count":0}],"isBlockCoverage":false},{"functionName":"insertJsdocCommentBefore","ranges":[{"startOffset":8152301,"endOffset":8153113,"count":0}],"isBlockCoverage":false},{"functionName":"createJSDocText","ranges":[{"startOffset":8153122,"endOffset":8153566,"count":0}],"isBlockCoverage":false},{"functionName":"replaceJSDocComment","ranges":[{"startOffset":8153575,"endOffset":8153805,"count":0}],"isBlockCoverage":false},{"functionName":"addJSDocTags","ranges":[{"startOffset":8153814,"endOffset":8154318,"count":0}],"isBlockCoverage":false},{"functionName":"filterJSDocTags","ranges":[{"startOffset":8154327,"endOffset":8154510,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRangeWithText","ranges":[{"startOffset":8154519,"endOffset":8154654,"count":0}],"isBlockCoverage":false},{"functionName":"insertText","ranges":[{"startOffset":8154663,"endOffset":8154781,"count":0}],"isBlockCoverage":false},{"functionName":"tryInsertTypeAnnotation","ranges":[{"startOffset":8154935,"endOffset":8155565,"count":0}],"isBlockCoverage":false},{"functionName":"tryInsertThisTypeAnnotation","ranges":[{"startOffset":8155574,"endOffset":8155891,"count":0}],"isBlockCoverage":false},{"functionName":"insertTypeParameters","ranges":[{"startOffset":8155900,"endOffset":8156208,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForInsertNodeBefore","ranges":[{"startOffset":8156217,"endOffset":8157027,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtConstructorStart","ranges":[{"startOffset":8157036,"endOffset":8157441,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtConstructorStartAfterSuperCall","ranges":[{"startOffset":8157450,"endOffset":8157939,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtConstructorEnd","ranges":[{"startOffset":8157948,"endOffset":8158346,"count":0}],"isBlockCoverage":false},{"functionName":"replaceConstructorBody","ranges":[{"startOffset":8158355,"endOffset":8158569,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtEndOfScope","ranges":[{"startOffset":8158578,"endOffset":8158997,"count":0}],"isBlockCoverage":false},{"functionName":"insertMemberAtStart","ranges":[{"startOffset":8159006,"endOffset":8159137,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtObjectStart","ranges":[{"startOffset":8159146,"endOffset":8159279,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtStartWorker","ranges":[{"startOffset":8159288,"endOffset":8159658,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentationFromExistingMembers","ranges":[{"startOffset":8159869,"endOffset":8160724,"count":0}],"isBlockCoverage":false},{"functionName":"computeIndentationForNewMember","ranges":[{"startOffset":8160733,"endOffset":8161085,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertNodeAtStartInsertOptions","ranges":[{"startOffset":8161094,"endOffset":8161882,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAfterComma","ranges":[{"startOffset":8161891,"endOffset":8162193,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAfter","ranges":[{"startOffset":8162202,"endOffset":8162457,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAtEndOfList","ranges":[{"startOffset":8162466,"endOffset":8162604,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodesAfter","ranges":[{"startOffset":8162613,"endOffset":8162880,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeAfterWorker","ranges":[{"startOffset":8162889,"endOffset":8163336,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertNodeAfterOptions","ranges":[{"startOffset":8163345,"endOffset":8163663,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertNodeAfterOptionsWorker","ranges":[{"startOffset":8163672,"endOffset":8164513,"count":0}],"isBlockCoverage":false},{"functionName":"insertName","ranges":[{"startOffset":8164522,"endOffset":8166064,"count":0}],"isBlockCoverage":false},{"functionName":"insertExportModifier","ranges":[{"startOffset":8166073,"endOffset":8166200,"count":0}],"isBlockCoverage":false},{"functionName":"insertImportSpecifierAtIndex","ranges":[{"startOffset":8166209,"endOffset":8166784,"count":0}],"isBlockCoverage":false},{"functionName":"insertNodeInListAfter","ranges":[{"startOffset":8167115,"endOffset":8170102,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizeExpression","ranges":[{"startOffset":8170111,"endOffset":8170286,"count":0}],"isBlockCoverage":false},{"functionName":"finishClassesWithNodesInsertedAtStart","ranges":[{"startOffset":8170295,"endOffset":8171124,"count":0}],"isBlockCoverage":false},{"functionName":"finishDeleteDeclarations","ranges":[{"startOffset":8171133,"endOffset":8172324,"count":0}],"isBlockCoverage":false},{"functionName":"getChanges","ranges":[{"startOffset":8172696,"endOffset":8173243,"count":0}],"isBlockCoverage":false},{"functionName":"createNewFile","ranges":[{"startOffset":8173252,"endOffset":8173381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8173398,"endOffset":8179227,"count":1}],"isBlockCoverage":true},{"functionName":"getTextChangesFromChanges","ranges":[{"startOffset":8173428,"endOffset":8174958,"count":0}],"isBlockCoverage":false},{"functionName":"newFileChanges","ranges":[{"startOffset":8175045,"endOffset":8175371,"count":0}],"isBlockCoverage":false},{"functionName":"newFileChangesWorker","ranges":[{"startOffset":8175436,"endOffset":8176208,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewText","ranges":[{"startOffset":8176285,"endOffset":8177331,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattedTextOfNode","ranges":[{"startOffset":8177340,"endOffset":8178619,"count":0}],"isBlockCoverage":false},{"functionName":"getNonformattedText","ranges":[{"startOffset":8178628,"endOffset":8179153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8179550,"endOffset":8185642,"count":1}],"isBlockCoverage":true},{"functionName":"deleteDeclaration2","ranges":[{"startOffset":8179584,"endOffset":8183006,"count":0}],"isBlockCoverage":false},{"functionName":"deleteDefaultImport","ranges":[{"startOffset":8183082,"endOffset":8183927,"count":0}],"isBlockCoverage":false},{"functionName":"deleteImportBinding","ranges":[{"startOffset":8183936,"endOffset":8184409,"count":0}],"isBlockCoverage":false},{"functionName":"deleteVariableDeclaration","ranges":[{"startOffset":8184418,"endOffset":8185634,"count":0}],"isBlockCoverage":false},{"functionName":"ChangeTracker","ranges":[{"startOffset":8185844,"endOffset":8185863,"count":0}],"isBlockCoverage":false},{"functionName":"LeadingTriviaOption","ranges":[{"startOffset":8185890,"endOffset":8185915,"count":0}],"isBlockCoverage":false},{"functionName":"TrailingTriviaOption","ranges":[{"startOffset":8185943,"endOffset":8185969,"count":0}],"isBlockCoverage":false},{"functionName":"applyChanges","ranges":[{"startOffset":8185989,"endOffset":8186007,"count":0}],"isBlockCoverage":false},{"functionName":"assignPositionsToNode","ranges":[{"startOffset":8186036,"endOffset":8186063,"count":0}],"isBlockCoverage":false},{"functionName":"createWriter","ranges":[{"startOffset":8186083,"endOffset":8186101,"count":0}],"isBlockCoverage":false},{"functionName":"deleteNode","ranges":[{"startOffset":8186119,"endOffset":8186135,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotatable","ranges":[{"startOffset":8186164,"endOffset":8186191,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLocationToAddComment","ranges":[{"startOffset":8186226,"endOffset":8186259,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.textChanges.ts","ranges":[{"startOffset":8186306,"endOffset":8186406,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/formatting/formattingContext.ts","ranges":[{"startOffset":8186555,"endOffset":8190673,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8186691,"endOffset":8187399,"count":1}],"isBlockCoverage":true},{"functionName":"FormattingContext","ranges":[{"startOffset":8187473,"endOffset":8187676,"count":0}],"isBlockCoverage":false},{"functionName":"updateContext","ranges":[{"startOffset":8187685,"endOffset":8188370,"count":0}],"isBlockCoverage":false},{"functionName":"ContextNodeAllOnSameLine","ranges":[{"startOffset":8188379,"endOffset":8188619,"count":0}],"isBlockCoverage":false},{"functionName":"NextNodeAllOnSameLine","ranges":[{"startOffset":8188628,"endOffset":8188860,"count":0}],"isBlockCoverage":false},{"functionName":"TokensAreOnSameLine","ranges":[{"startOffset":8188869,"endOffset":8189285,"count":0}],"isBlockCoverage":false},{"functionName":"ContextNodeBlockIsOnOneLine","ranges":[{"startOffset":8189294,"endOffset":8189547,"count":0}],"isBlockCoverage":false},{"functionName":"NextNodeBlockIsOnOneLine","ranges":[{"startOffset":8189556,"endOffset":8189801,"count":0}],"isBlockCoverage":false},{"functionName":"NodeIsOnOneLine","ranges":[{"startOffset":8189810,"endOffset":8190088,"count":0}],"isBlockCoverage":false},{"functionName":"BlockIsOnOneLine","ranges":[{"startOffset":8190097,"endOffset":8190658,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingScanner","ranges":[{"startOffset":8190733,"endOffset":8198800,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/formatting/formattingScanner.ts","ranges":[{"startOffset":8198879,"endOffset":8199263,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/formatting/rule.ts","ranges":[{"startOffset":8199379,"endOffset":8200701,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8199522,"endOffset":8200436,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8200492,"endOffset":8200676,"count":1}],"isBlockCoverage":true},{"functionName":"getAllRules","ranges":[{"startOffset":8200749,"endOffset":8234716,"count":0}],"isBlockCoverage":false},{"functionName":"rule","ranges":[{"startOffset":8234719,"endOffset":8234935,"count":0}],"isBlockCoverage":false},{"functionName":"tokenRangeFrom","ranges":[{"startOffset":8234938,"endOffset":8235016,"count":0}],"isBlockCoverage":false},{"functionName":"toTokenRange","ranges":[{"startOffset":8235019,"endOffset":8235154,"count":0}],"isBlockCoverage":false},{"functionName":"tokenRangeFromRange","ranges":[{"startOffset":8235157,"endOffset":8235403,"count":0}],"isBlockCoverage":false},{"functionName":"optionEquals","ranges":[{"startOffset":8235406,"endOffset":8235546,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionEnabled","ranges":[{"startOffset":8235549,"endOffset":8235709,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionDisabled","ranges":[{"startOffset":8235712,"endOffset":8235872,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionDisabledOrUndefined","ranges":[{"startOffset":8235875,"endOffset":8236048,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionDisabledOrUndefinedOrTokensOnSameLine","ranges":[{"startOffset":8236051,"endOffset":8236275,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionEnabledOrUndefined","ranges":[{"startOffset":8236278,"endOffset":8236451,"count":0}],"isBlockCoverage":false},{"functionName":"isForContext","ranges":[{"startOffset":8236454,"endOffset":8236554,"count":0}],"isBlockCoverage":false},{"functionName":"isNotForContext","ranges":[{"startOffset":8236557,"endOffset":8236631,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOpContext","ranges":[{"startOffset":8236634,"endOffset":8238171,"count":0}],"isBlockCoverage":false},{"functionName":"isNotBinaryOpContext","ranges":[{"startOffset":8238174,"endOffset":8238258,"count":0}],"isBlockCoverage":false},{"functionName":"isNotTypeAnnotationContext","ranges":[{"startOffset":8238261,"endOffset":8238357,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotationContext","ranges":[{"startOffset":8238360,"endOffset":8238685,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalPropertyContext","ranges":[{"startOffset":8238688,"endOffset":8238829,"count":0}],"isBlockCoverage":false},{"functionName":"isNonOptionalPropertyContext","ranges":[{"startOffset":8238832,"endOffset":8238932,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalOperatorContext","ranges":[{"startOffset":8238935,"endOffset":8239118,"count":0}],"isBlockCoverage":false},{"functionName":"isSameLineTokenOrBeforeBlockContext","ranges":[{"startOffset":8239121,"endOffset":8239255,"count":0}],"isBlockCoverage":false},{"functionName":"isBraceWrappedContext","ranges":[{"startOffset":8239258,"endOffset":8239465,"count":0}],"isBlockCoverage":false},{"functionName":"isBeforeMultilineBlockContext","ranges":[{"startOffset":8239468,"endOffset":8239639,"count":0}],"isBlockCoverage":false},{"functionName":"isMultilineBlockContext","ranges":[{"startOffset":8239642,"endOffset":8239807,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleLineBlockContext","ranges":[{"startOffset":8239810,"endOffset":8239975,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockContext","ranges":[{"startOffset":8239978,"endOffset":8240068,"count":0}],"isBlockCoverage":false},{"functionName":"isBeforeBlockContext","ranges":[{"startOffset":8240071,"endOffset":8240171,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsBlockContext","ranges":[{"startOffset":8240174,"endOffset":8240502,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclContext","ranges":[{"startOffset":8240505,"endOffset":8241013,"count":0}],"isBlockCoverage":false},{"functionName":"isNotFunctionDeclContext","ranges":[{"startOffset":8241016,"endOffset":8241108,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclarationOrFunctionExpressionContext","ranges":[{"startOffset":8241111,"endOffset":8241315,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeScriptDeclWithBlockContext","ranges":[{"startOffset":8241318,"endOffset":8241444,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsTypeScriptDeclWithBlockContext","ranges":[{"startOffset":8241447,"endOffset":8241956,"count":0}],"isBlockCoverage":false},{"functionName":"isAfterCodeBlockContext","ranges":[{"startOffset":8241959,"endOffset":8242584,"count":0}],"isBlockCoverage":false},{"functionName":"isControlDeclContext","ranges":[{"startOffset":8242587,"endOffset":8243092,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectContext","ranges":[{"startOffset":8243095,"endOffset":8243209,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionCallContext","ranges":[{"startOffset":8243212,"endOffset":8243323,"count":0}],"isBlockCoverage":false},{"functionName":"isNewContext","ranges":[{"startOffset":8243326,"endOffset":8243427,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionCallOrNewContext","ranges":[{"startOffset":8243430,"endOffset":8243548,"count":0}],"isBlockCoverage":false},{"functionName":"isPreviousTokenNotComma","ranges":[{"startOffset":8243551,"endOffset":8243664,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenNotCloseBracket","ranges":[{"startOffset":8243667,"endOffset":8243787,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenNotCloseParen","ranges":[{"startOffset":8243790,"endOffset":8243906,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionContext","ranges":[{"startOffset":8243909,"endOffset":8244020,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeContext","ranges":[{"startOffset":8244023,"endOffset":8244128,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsxSameLineTokenContext","ranges":[{"startOffset":8244131,"endOffset":8244274,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsxTextContext","ranges":[{"startOffset":8244277,"endOffset":8244378,"count":0}],"isBlockCoverage":false},{"functionName":"isNonJsxElementOrFragmentContext","ranges":[{"startOffset":8244381,"endOffset":8244553,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpressionContext","ranges":[{"startOffset":8244556,"endOffset":8244728,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenParentJsxAttribute","ranges":[{"startOffset":8244731,"endOffset":8244982,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeContext","ranges":[{"startOffset":8244985,"endOffset":8245094,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenParentNotJsxNamespacedName","ranges":[{"startOffset":8245097,"endOffset":8245231,"count":0}],"isBlockCoverage":false},{"functionName":"isNextTokenParentJsxNamespacedName","ranges":[{"startOffset":8245234,"endOffset":8245365,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElementContext","ranges":[{"startOffset":8245368,"endOffset":8245495,"count":0}],"isBlockCoverage":false},{"functionName":"isNotBeforeBlockInFunctionDeclarationContext","ranges":[{"startOffset":8245498,"endOffset":8245644,"count":0}],"isBlockCoverage":false},{"functionName":"isEndOfDecoratorContextOnSameLine","ranges":[{"startOffset":8245647,"endOffset":8245894,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsInDecoratorContext","ranges":[{"startOffset":8245897,"endOffset":8246069,"count":0}],"isBlockCoverage":false},{"functionName":"isStartOfVariableDeclarationList","ranges":[{"startOffset":8246072,"endOffset":8246302,"count":0}],"isBlockCoverage":false},{"functionName":"isNotFormatOnEnter","ranges":[{"startOffset":8246305,"endOffset":8246415,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclContext","ranges":[{"startOffset":8246418,"endOffset":8246530,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeContext","ranges":[{"startOffset":8246533,"endOffset":8246639,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorSignatureContext","ranges":[{"startOffset":8246642,"endOffset":8246765,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeArgumentOrParameterOrAssertion","ranges":[{"startOffset":8246768,"endOffset":8247688,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeArgumentOrParameterOrAssertionContext","ranges":[{"startOffset":8247691,"endOffset":8247949,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionContext","ranges":[{"startOffset":8247952,"endOffset":8248073,"count":0}],"isBlockCoverage":false},{"functionName":"isNonTypeAssertionContext","ranges":[{"startOffset":8248076,"endOffset":8248170,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidOpContext","ranges":[{"startOffset":8248173,"endOffset":8248344,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldOrYieldStarWithOperand","ranges":[{"startOffset":8248347,"endOffset":8248512,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAssertionContext","ranges":[{"startOffset":8248515,"endOffset":8248633,"count":0}],"isBlockCoverage":false},{"functionName":"isNotStatementConditionContext","ranges":[{"startOffset":8248636,"endOffset":8248740,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementConditionContext","ranges":[{"startOffset":8248743,"endOffset":8249112,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonDeletionContext","ranges":[{"startOffset":8249115,"endOffset":8251360,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonInsertionContext","ranges":[{"startOffset":8251363,"endOffset":8251527,"count":0}],"isBlockCoverage":false},{"functionName":"isNotPropertyAccessOnIntegerLiteral","ranges":[{"startOffset":8251530,"endOffset":8251761,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/formatting/rules.ts","ranges":[{"startOffset":8251793,"endOffset":8251903,"count":1}],"isBlockCoverage":true},{"functionName":"getFormatContext","ranges":[{"startOffset":8251954,"endOffset":8252055,"count":0}],"isBlockCoverage":false},{"functionName":"getRulesMap","ranges":[{"startOffset":8252058,"endOffset":8252207,"count":0}],"isBlockCoverage":false},{"functionName":"getRuleActionExclusion","ranges":[{"startOffset":8252210,"endOffset":8252723,"count":0}],"isBlockCoverage":false},{"functionName":"createRulesMap","ranges":[{"startOffset":8252726,"endOffset":8253392,"count":0}],"isBlockCoverage":false},{"functionName":"buildMap","ranges":[{"startOffset":8253395,"endOffset":8254130,"count":0}],"isBlockCoverage":false},{"functionName":"getRuleBucketIndex","ranges":[{"startOffset":8254133,"endOffset":8254349,"count":0}],"isBlockCoverage":false},{"functionName":"addRule","ranges":[{"startOffset":8254352,"endOffset":8254985,"count":0}],"isBlockCoverage":false},{"functionName":"getInsertionIndex","ranges":[{"startOffset":8254988,"endOffset":8255225,"count":0}],"isBlockCoverage":false},{"functionName":"increaseInsertionIndex","ranges":[{"startOffset":8255228,"endOffset":8255554,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/formatting/rulesMap.ts","ranges":[{"startOffset":8255658,"endOffset":8256558,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8255875,"endOffset":8256529,"count":1}],"isBlockCoverage":true},{"functionName":"createTextRangeWithKind","ranges":[{"startOffset":8256611,"endOffset":8256902,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnEnter","ranges":[{"startOffset":8256905,"endOffset":8257663,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnSemicolon","ranges":[{"startOffset":8257666,"endOffset":8257968,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnOpeningCurly","ranges":[{"startOffset":8257971,"endOffset":8258589,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnClosingCurly","ranges":[{"startOffset":8258592,"endOffset":8258916,"count":0}],"isBlockCoverage":false},{"functionName":"formatDocument","ranges":[{"startOffset":8258919,"endOffset":8259129,"count":0}],"isBlockCoverage":false},{"functionName":"formatSelection","ranges":[{"startOffset":8259132,"endOffset":8259381,"count":0}],"isBlockCoverage":false},{"functionName":"findImmediatelyPrecedingTokenOfKind","ranges":[{"startOffset":8259384,"endOffset":8259667,"count":0}],"isBlockCoverage":false},{"functionName":"findOutermostNodeWithinListLevel","ranges":[{"startOffset":8259670,"endOffset":8259923,"count":0}],"isBlockCoverage":false},{"functionName":"isListElement","ranges":[{"startOffset":8259926,"endOffset":8260600,"count":0}],"isBlockCoverage":false},{"functionName":"findEnclosingNode","ranges":[{"startOffset":8260603,"endOffset":8260973,"count":0}],"isBlockCoverage":false},{"functionName":"prepareRangeContainsErrorFunction","ranges":[{"startOffset":8260976,"endOffset":8261791,"count":0}],"isBlockCoverage":false},{"functionName":"getScanStartPosition","ranges":[{"startOffset":8261794,"endOffset":8262296,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnOrInheritedDelta","ranges":[{"startOffset":8262299,"endOffset":8262824,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeGivenIndentation","ranges":[{"startOffset":8262827,"endOffset":8263357,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeLines","ranges":[{"startOffset":8263360,"endOffset":8263674,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpan","ranges":[{"startOffset":8263677,"endOffset":8264473,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpanWorker","ranges":[{"startOffset":8264476,"endOffset":8296080,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeOfEnclosingComment","ranges":[{"startOffset":8296083,"endOffset":8297756,"count":0}],"isBlockCoverage":false},{"functionName":"getOpenTokenForList","ranges":[{"startOffset":8297759,"endOffset":8299436,"count":0}],"isBlockCoverage":false},{"functionName":"getCloseTokenForOpenToken","ranges":[{"startOffset":8299439,"endOffset":8299770,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationString","ranges":[{"startOffset":8299773,"endOffset":8301330,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/formatting/formatting.ts","ranges":[{"startOffset":8301440,"endOffset":8301555,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/formatting/smartIndenter.ts","ranges":[{"startOffset":8301669,"endOffset":8328830,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8301789,"endOffset":8328783,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8301839,"endOffset":8301916,"count":1}],"isBlockCoverage":true},{"functionName":"getIndentation","ranges":[{"startOffset":8301950,"endOffset":8304614,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentIndent","ranges":[{"startOffset":8304679,"endOffset":8305712,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockIndent","ranges":[{"startOffset":8305721,"endOffset":8306198,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartIndent","ranges":[{"startOffset":8306207,"endOffset":8307940,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationForNode","ranges":[{"startOffset":8307949,"endOffset":8308409,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseIndentation","ranges":[{"startOffset":8308488,"endOffset":8308582,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationForNodeWorker","ranges":[{"startOffset":8308655,"endOffset":8310961,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingListOrParentStart","ranges":[{"startOffset":8310970,"endOffset":8311284,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForListItemBeforeComma","ranges":[{"startOffset":8311293,"endOffset":8311725,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForNode","ranges":[{"startOffset":8311734,"endOffset":8312237,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8312274,"endOffset":8312522,"count":1}],"isBlockCoverage":true},{"functionName":"nextTokenIsCurlyBraceOnSameLineAsCursor","ranges":[{"startOffset":8312572,"endOffset":8313250,"count":0}],"isBlockCoverage":false},{"functionName":"getStartLineAndCharacterForNode","ranges":[{"startOffset":8313259,"endOffset":8313409,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentAndStartLineOverlapsExpressionBeingCalled","ranges":[{"startOffset":8313418,"endOffset":8313935,"count":0}],"isBlockCoverage":false},{"functionName":"childStartsOnTheSameLineWithElseInIfStatement","ranges":[{"startOffset":8314074,"endOffset":8314617,"count":0}],"isBlockCoverage":false},{"functionName":"childIsUnindentedBranchOfConditionalExpression","ranges":[{"startOffset":8314744,"endOffset":8315550,"count":0}],"isBlockCoverage":false},{"functionName":"argumentStartsOnSameLineAsPreviousArgument","ranges":[{"startOffset":8315679,"endOffset":8316496,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingList","ranges":[{"startOffset":8316617,"endOffset":8316788,"count":0}],"isBlockCoverage":false},{"functionName":"getListByPosition","ranges":[{"startOffset":8316859,"endOffset":8316989,"count":0}],"isBlockCoverage":false},{"functionName":"getListByRange","ranges":[{"startOffset":8316998,"endOffset":8319027,"count":0}],"isBlockCoverage":false},{"functionName":"getVisualListRange","ranges":[{"startOffset":8319036,"endOffset":8319437,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForListStartLine","ranges":[{"startOffset":8319446,"endOffset":8319740,"count":0}],"isBlockCoverage":false},{"functionName":"getActualIndentationForListItem","ranges":[{"startOffset":8319749,"endOffset":8320575,"count":0}],"isBlockCoverage":false},{"functionName":"deriveActualIndentationFromList","ranges":[{"startOffset":8320584,"endOffset":8321395,"count":0}],"isBlockCoverage":false},{"functionName":"findColumnForFirstNonWhitespaceCharacterInLine","ranges":[{"startOffset":8321404,"endOffset":8321725,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonWhitespaceCharacterAndColumn","ranges":[{"startOffset":8321734,"endOffset":8322327,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonWhitespaceColumn","ranges":[{"startOffset":8322444,"endOffset":8322637,"count":0}],"isBlockCoverage":false},{"functionName":"nodeWillIndentChild","ranges":[{"startOffset":8322730,"endOffset":8327526,"count":0}],"isBlockCoverage":false},{"functionName":"isControlFlowEndingStatement","ranges":[{"startOffset":8327601,"endOffset":8327983,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIndentChildNode","ranges":[{"startOffset":8327992,"endOffset":8328360,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnOneLine","ranges":[{"startOffset":8328439,"endOffset":8328775,"count":0}],"isBlockCoverage":false},{"functionName":"FormattingContext","ranges":[{"startOffset":8328978,"endOffset":8329001,"count":0}],"isBlockCoverage":false},{"functionName":"FormattingRequestKind","ranges":[{"startOffset":8329030,"endOffset":8329057,"count":0}],"isBlockCoverage":false},{"functionName":"RuleAction","ranges":[{"startOffset":8329075,"endOffset":8329091,"count":0}],"isBlockCoverage":false},{"functionName":"RuleFlags","ranges":[{"startOffset":8329108,"endOffset":8329123,"count":0}],"isBlockCoverage":false},{"functionName":"SmartIndenter","ranges":[{"startOffset":8329144,"endOffset":8329163,"count":0}],"isBlockCoverage":false},{"functionName":"anyContext","ranges":[{"startOffset":8329181,"endOffset":8329197,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeWithKind","ranges":[{"startOffset":8329228,"endOffset":8329257,"count":0}],"isBlockCoverage":false},{"functionName":"formatDocument","ranges":[{"startOffset":8329279,"endOffset":8329299,"count":0}],"isBlockCoverage":false},{"functionName":"formatNodeGivenIndentation","ranges":[{"startOffset":8329333,"endOffset":8329365,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnClosingCurly","ranges":[{"startOffset":8329393,"endOffset":8329419,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnEnter","ranges":[{"startOffset":8329440,"endOffset":8329459,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnOpeningCurly","ranges":[{"startOffset":8329487,"endOffset":8329513,"count":0}],"isBlockCoverage":false},{"functionName":"formatOnSemicolon","ranges":[{"startOffset":8329538,"endOffset":8329561,"count":0}],"isBlockCoverage":false},{"functionName":"formatSelection","ranges":[{"startOffset":8329584,"endOffset":8329605,"count":0}],"isBlockCoverage":false},{"functionName":"getAllRules","ranges":[{"startOffset":8329624,"endOffset":8329641,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatContext","ranges":[{"startOffset":8329665,"endOffset":8329687,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingScanner","ranges":[{"startOffset":8329715,"endOffset":8329741,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentationString","ranges":[{"startOffset":8329769,"endOffset":8329795,"count":0}],"isBlockCoverage":false},{"functionName":"getRangeOfEnclosingComment","ranges":[{"startOffset":8329829,"endOffset":8329861,"count":0}],"isBlockCoverage":false},{"functionName":"src/services/_namespaces/ts.formatting.ts","ranges":[{"startOffset":8329907,"endOffset":8330159,"count":1}],"isBlockCoverage":true},{"functionName":"src/services/_namespaces/ts.ts","ranges":[{"startOffset":8330232,"endOffset":8331324,"count":1}],"isBlockCoverage":true},{"functionName":"getTypeScriptVersion","ranges":[{"startOffset":8331373,"endOffset":8331488,"count":2},{"startOffset":8331437,"endOffset":8331483,"count":1}],"isBlockCoverage":true},{"functionName":"formatDeprecationMessage","ranges":[{"startOffset":8331491,"endOffset":8332046,"count":2},{"startOffset":8331628,"endOffset":8331652,"count":0},{"startOffset":8331766,"endOffset":8331783,"count":0},{"startOffset":8331850,"endOffset":8331924,"count":0},{"startOffset":8332006,"endOffset":8332010,"count":0}],"isBlockCoverage":true},{"functionName":"createErrorDeprecation","ranges":[{"startOffset":8332049,"endOffset":8332342,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8332277,"endOffset":8332337,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningDeprecation","ranges":[{"startOffset":8332345,"endOffset":8332765,"count":0}],"isBlockCoverage":false},{"functionName":"createDeprecation","ranges":[{"startOffset":8332768,"endOffset":8333649,"count":2},{"startOffset":8332884,"endOffset":8332924,"count":0},{"startOffset":8333076,"endOffset":8333096,"count":0},{"startOffset":8333191,"endOffset":8333210,"count":0},{"startOffset":8333293,"endOffset":8333321,"count":0},{"startOffset":8333562,"endOffset":8333644,"count":0}],"isBlockCoverage":true},{"functionName":"wrapFunction","ranges":[{"startOffset":8333652,"endOffset":8333792,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8333706,"endOffset":8333787,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":8333795,"endOffset":8334004,"count":2},{"startOffset":8333890,"endOffset":8333898,"count":0},{"startOffset":8333915,"endOffset":8333945,"count":0}],"isBlockCoverage":true},{"functionName":"src/deprecatedCompat/deprecate.ts","ranges":[{"startOffset":8334093,"endOffset":8334216,"count":1}],"isBlockCoverage":true},{"functionName":"createOverload","ranges":[{"startOffset":8334268,"endOffset":8335054,"count":0}],"isBlockCoverage":false},{"functionName":"createBinder2","ranges":[{"startOffset":8335057,"endOffset":8335321,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverload","ranges":[{"startOffset":8335324,"endOffset":8335664,"count":0}],"isBlockCoverage":false},{"functionName":"src/deprecatedCompat/deprecations.ts","ranges":[{"startOffset":8335703,"endOffset":8335813,"count":1}],"isBlockCoverage":true},{"functionName":"src/deprecatedCompat/5.0/identifierProperties.ts","ranges":[{"startOffset":8335921,"endOffset":8337268,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8336070,"endOffset":8337260,"count":1}],"isBlockCoverage":true},{"functionName":"Object.defineProperty.get.deprecate.name","ranges":[{"startOffset":8336351,"endOffset":8336429,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperty.get.deprecate.name","ranges":[{"startOffset":8336865,"endOffset":8336982,"count":0}],"isBlockCoverage":false},{"functionName":"src/deprecatedCompat/_namespaces/ts.ts","ranges":[{"startOffset":8337349,"endOffset":8337499,"count":1}],"isBlockCoverage":true},{"functionName":"src/typingsInstallerCore/_namespaces/ts.ts","ranges":[{"startOffset":8337584,"endOffset":8337719,"count":1}],"isBlockCoverage":true},{"functionName":"typingToFileName","ranges":[{"startOffset":8337779,"endOffset":8338275,"count":0}],"isBlockCoverage":false},{"functionName":"installNpmPackages","ranges":[{"startOffset":8338278,"endOffset":8338658,"count":0}],"isBlockCoverage":false},{"functionName":"getNpmCommandForInstallation","ranges":[{"startOffset":8338661,"endOffset":8339258,"count":0}],"isBlockCoverage":false},{"functionName":"typingsName","ranges":[{"startOffset":8339261,"endOffset":8339359,"count":0}],"isBlockCoverage":false},{"functionName":"src/typingsInstallerCore/typingsInstaller.ts","ranges":[{"startOffset":8339435,"endOffset":8356483,"count":1}],"isBlockCoverage":true},{"functionName":"isEnabled","ranges":[{"startOffset":8339586,"endOffset":8339597,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstaller","ranges":[{"startOffset":8339673,"endOffset":8340814,"count":0}],"isBlockCoverage":false},{"functionName":"handleRequest","ranges":[{"startOffset":8340848,"endOffset":8341617,"count":0}],"isBlockCoverage":false},{"functionName":"closeProject","ranges":[{"startOffset":8341626,"endOffset":8341702,"count":0}],"isBlockCoverage":false},{"functionName":"closeWatchers","ranges":[{"startOffset":8341711,"endOffset":8342444,"count":0}],"isBlockCoverage":false},{"functionName":"install","ranges":[{"startOffset":8342453,"endOffset":8344014,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8344048,"endOffset":8345201,"count":0}],"isBlockCoverage":false},{"functionName":"initializeSafeList","ranges":[{"startOffset":8345210,"endOffset":8345837,"count":0}],"isBlockCoverage":false},{"functionName":"processCacheLocation","ranges":[{"startOffset":8345846,"endOffset":8349003,"count":0}],"isBlockCoverage":false},{"functionName":"filterTypings","ranges":[{"startOffset":8349012,"endOffset":8350557,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePackageDirectoryExists","ranges":[{"startOffset":8350566,"endOffset":8351206,"count":0}],"isBlockCoverage":false},{"functionName":"installTypings","ranges":[{"startOffset":8351215,"endOffset":8354375,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDirectoryExists","ranges":[{"startOffset":8354384,"endOffset":8354729,"count":0}],"isBlockCoverage":false},{"functionName":"watchFiles","ranges":[{"startOffset":8354738,"endOffset":8355392,"count":0}],"isBlockCoverage":false},{"functionName":"createSetTypings","ranges":[{"startOffset":8355401,"endOffset":8355740,"count":0}],"isBlockCoverage":false},{"functionName":"installTypingsAsync","ranges":[{"startOffset":8355749,"endOffset":8355967,"count":0}],"isBlockCoverage":false},{"functionName":"executeWithThrottling","ranges":[{"startOffset":8355976,"endOffset":8356468,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstaller","ranges":[{"startOffset":8356681,"endOffset":8356703,"count":0}],"isBlockCoverage":false},{"functionName":"getNpmCommandForInstallation","ranges":[{"startOffset":8356739,"endOffset":8356773,"count":0}],"isBlockCoverage":false},{"functionName":"installNpmPackages","ranges":[{"startOffset":8356799,"endOffset":8356823,"count":0}],"isBlockCoverage":false},{"functionName":"typingsName","ranges":[{"startOffset":8356842,"endOffset":8356859,"count":0}],"isBlockCoverage":false},{"functionName":"src/typingsInstallerCore/_namespaces/ts.server.typingsInstaller.ts","ranges":[{"startOffset":8356918,"endOffset":8357047,"count":1}],"isBlockCoverage":true},{"functionName":"src/typingsInstallerCore/_namespaces/ts.server.ts","ranges":[{"startOffset":8357146,"endOffset":8357292,"count":1}],"isBlockCoverage":true},{"functionName":"src/server/types.ts","ranges":[{"startOffset":8357357,"endOffset":8357408,"count":1}],"isBlockCoverage":true},{"functionName":"createInstallTypingsRequest","ranges":[{"startOffset":8357453,"endOffset":8358002,"count":0}],"isBlockCoverage":false},{"functionName":"toNormalizedPath","ranges":[{"startOffset":8358005,"endOffset":8358082,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedPathToPath","ranges":[{"startOffset":8358085,"endOffset":8358339,"count":0}],"isBlockCoverage":false},{"functionName":"asNormalizedPath","ranges":[{"startOffset":8358342,"endOffset":8358404,"count":0}],"isBlockCoverage":false},{"functionName":"createNormalizedPathMap","ranges":[{"startOffset":8358407,"endOffset":8358753,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProjectName","ranges":[{"startOffset":8358756,"endOffset":8358855,"count":0}],"isBlockCoverage":false},{"functionName":"makeInferredProjectName","ranges":[{"startOffset":8358858,"endOffset":8358956,"count":0}],"isBlockCoverage":false},{"functionName":"makeAutoImportProviderProjectName","ranges":[{"startOffset":8358959,"endOffset":8359077,"count":0}],"isBlockCoverage":false},{"functionName":"makeAuxiliaryProjectName","ranges":[{"startOffset":8359080,"endOffset":8359180,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray2","ranges":[{"startOffset":8359183,"endOffset":8359233,"count":1}],"isBlockCoverage":true},{"functionName":"src/server/utilitiesPublic.ts","ranges":[{"startOffset":8359319,"endOffset":8360655,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8359428,"endOffset":8359708,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8359799,"endOffset":8359930,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8359951,"endOffset":8360622,"count":1}],"isBlockCoverage":true},{"functionName":"ThrowNoProject","ranges":[{"startOffset":8359974,"endOffset":8360053,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowProjectLanguageServiceDisabled","ranges":[{"startOffset":8360111,"endOffset":8360243,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowProjectDoesNotContainDocument","ranges":[{"startOffset":8360343,"endOffset":8360525,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseConfigFileName","ranges":[{"startOffset":8360694,"endOffset":8360877,"count":0}],"isBlockCoverage":false},{"functionName":"removeSorted","ranges":[{"startOffset":8360880,"endOffset":8361210,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/utilities.ts","ranges":[{"startOffset":8361283,"endOffset":8364186,"count":1}],"isBlockCoverage":true},{"functionName":"_ThrottledOperations","ranges":[{"startOffset":8361441,"endOffset":8361642,"count":0}],"isBlockCoverage":false},{"functionName":"schedule","ranges":[{"startOffset":8362026,"endOffset":8362515,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":8362524,"endOffset":8362793,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":8362809,"endOffset":8363205,"count":0}],"isBlockCoverage":false},{"functionName":"_GcTimer","ranges":[{"startOffset":8363256,"endOffset":8363390,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleCollect","ranges":[{"startOffset":8363399,"endOffset":8363597,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":8363613,"endOffset":8364171,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/protocol.ts","ranges":[{"startOffset":8364511,"endOffset":8379120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8364598,"endOffset":8371828,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8371897,"endOffset":8372144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8372215,"endOffset":8372723,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8372793,"endOffset":8373163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8373236,"endOffset":8373562,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8373638,"endOffset":8374029,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8374100,"endOffset":8374277,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8374346,"endOffset":8374571,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8374636,"endOffset":8374848,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8374904,"endOffset":8375410,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8375479,"endOffset":8375869,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8375939,"endOffset":8376069,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8376132,"endOffset":8376714,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8376784,"endOffset":8379085,"count":1}],"isBlockCoverage":true},{"functionName":"ClassificationType","ranges":[{"startOffset":8379282,"endOffset":8379307,"count":0}],"isBlockCoverage":false},{"functionName":"CommandTypes","ranges":[{"startOffset":8379327,"endOffset":8379345,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionTriggerKind","ranges":[{"startOffset":8379374,"endOffset":8379402,"count":0}],"isBlockCoverage":false},{"functionName":"IndentStyle","ranges":[{"startOffset":8379421,"endOffset":8379439,"count":0}],"isBlockCoverage":false},{"functionName":"JsxEmit","ranges":[{"startOffset":8379454,"endOffset":8379468,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleKind","ranges":[{"startOffset":8379486,"endOffset":8379503,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleResolutionKind","ranges":[{"startOffset":8379531,"endOffset":8379558,"count":0}],"isBlockCoverage":false},{"functionName":"NewLineKind","ranges":[{"startOffset":8379577,"endOffset":8379595,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImportsMode","ranges":[{"startOffset":8379622,"endOffset":8379648,"count":0}],"isBlockCoverage":false},{"functionName":"PollingWatchKind","ranges":[{"startOffset":8379672,"endOffset":8379695,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptTarget","ranges":[{"startOffset":8379715,"endOffset":8379735,"count":0}],"isBlockCoverage":false},{"functionName":"SemicolonPreference","ranges":[{"startOffset":8379762,"endOffset":8379788,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryKind","ranges":[{"startOffset":8379814,"endOffset":8379839,"count":0}],"isBlockCoverage":false},{"functionName":"WatchFileKind","ranges":[{"startOffset":8379860,"endOffset":8379880,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/_namespaces/ts.server.protocol.ts","ranges":[{"startOffset":8379931,"endOffset":8380030,"count":1}],"isBlockCoverage":true},{"functionName":"isDynamicFileName","ranges":[{"startOffset":8380070,"endOffset":8380335,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePrimaryProjectKind","ranges":[{"startOffset":8380338,"endOffset":8380502,"count":0}],"isBlockCoverage":false},{"functionName":"failIfInvalidPosition","ranges":[{"startOffset":8380505,"endOffset":8380722,"count":0}],"isBlockCoverage":false},{"functionName":"failIfInvalidLocation","ranges":[{"startOffset":8380725,"endOffset":8381207,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/scriptInfo.ts","ranges":[{"startOffset":8381275,"endOffset":8400271,"count":1}],"isBlockCoverage":true},{"functionName":"TextStorage","ranges":[{"startOffset":8381405,"endOffset":8381977,"count":0}],"isBlockCoverage":false},{"functionName":"getVersion","ranges":[{"startOffset":8381986,"endOffset":8382119,"count":0}],"isBlockCoverage":false},{"functionName":"hasScriptVersionCache_TestOnly","ranges":[{"startOffset":8382128,"endOffset":8382210,"count":0}],"isBlockCoverage":false},{"functionName":"resetSourceMapInfo","ranges":[{"startOffset":8382219,"endOffset":8382538,"count":0}],"isBlockCoverage":false},{"functionName":"useText","ranges":[{"startOffset":8382581,"endOffset":8382837,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":8382846,"endOffset":8383170,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":8383282,"endOffset":8383689,"count":0}],"isBlockCoverage":false},{"functionName":"reloadWithFileText","ranges":[{"startOffset":8383855,"endOffset":8384270,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleReloadIfNeeded","ranges":[{"startOffset":8384441,"endOffset":8384588,"count":0}],"isBlockCoverage":false},{"functionName":"delayReloadFromFileIntoText","ranges":[{"startOffset":8384597,"endOffset":8384683,"count":0}],"isBlockCoverage":false},{"functionName":"getTelemetryFileSize","ranges":[{"startOffset":8385157,"endOffset":8385357,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshot","ranges":[{"startOffset":8385366,"endOffset":8385609,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePositionAndLineText","ranges":[{"startOffset":8385618,"endOffset":8386169,"count":0}],"isBlockCoverage":false},{"functionName":"lineToTextSpan","ranges":[{"startOffset":8386240,"endOffset":8386618,"count":0}],"isBlockCoverage":false},{"functionName":"lineOffsetToPosition","ranges":[{"startOffset":8386727,"endOffset":8387003,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8387012,"endOffset":8387345,"count":0}],"isBlockCoverage":false},{"functionName":"getFileTextAndSize","ranges":[{"startOffset":8387354,"endOffset":8388293,"count":0}],"isBlockCoverage":false},{"functionName":"switchToScriptVersionCache","ranges":[{"startOffset":8388327,"endOffset":8388607,"count":0}],"isBlockCoverage":false},{"functionName":"tryUseScriptVersionCache","ranges":[{"startOffset":8388616,"endOffset":8389048,"count":0}],"isBlockCoverage":false},{"functionName":"getOrLoadText","ranges":[{"startOffset":8389057,"endOffset":8389363,"count":0}],"isBlockCoverage":false},{"functionName":"getLineMap","ranges":[{"startOffset":8389372,"endOffset":8389571,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":8389580,"endOffset":8389969,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptInfo","ranges":[{"startOffset":8390014,"endOffset":8390726,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicOrHasMixedContent","ranges":[{"startOffset":8390760,"endOffset":8390857,"count":0}],"isBlockCoverage":false},{"functionName":"isScriptOpen","ranges":[{"startOffset":8390866,"endOffset":8390934,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":8390943,"endOffset":8391144,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8391153,"endOffset":8391367,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshot","ranges":[{"startOffset":8391376,"endOffset":8391450,"count":0}],"isBlockCoverage":false},{"functionName":"ensureRealPath","ranges":[{"startOffset":8391459,"endOffset":8392076,"count":0}],"isBlockCoverage":false},{"functionName":"getRealpathIfDifferent","ranges":[{"startOffset":8392110,"endOffset":8392234,"count":0}],"isBlockCoverage":false},{"functionName":"isSymlink","ranges":[{"startOffset":8392421,"endOffset":8392507,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettings","ranges":[{"startOffset":8392516,"endOffset":8392589,"count":0}],"isBlockCoverage":false},{"functionName":"getPreferences","ranges":[{"startOffset":8392598,"endOffset":8392661,"count":0}],"isBlockCoverage":false},{"functionName":"attachToProject","ranges":[{"startOffset":8392670,"endOffset":8393044,"count":0}],"isBlockCoverage":false},{"functionName":"isAttached","ranges":[{"startOffset":8393053,"endOffset":8393486,"count":0}],"isBlockCoverage":false},{"functionName":"detachFromProject","ranges":[{"startOffset":8393495,"endOffset":8394497,"count":0}],"isBlockCoverage":false},{"functionName":"detachAllProjects","ranges":[{"startOffset":8394506,"endOffset":8395230,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultProject","ranges":[{"startOffset":8395239,"endOffset":8397160,"count":0}],"isBlockCoverage":false},{"functionName":"registerFileUpdate","ranges":[{"startOffset":8397169,"endOffset":8397311,"count":0}],"isBlockCoverage":false},{"functionName":"setOptions","ranges":[{"startOffset":8397320,"endOffset":8397928,"count":0}],"isBlockCoverage":false},{"functionName":"getLatestVersion","ranges":[{"startOffset":8397937,"endOffset":8398057,"count":0}],"isBlockCoverage":false},{"functionName":"saveTo","ranges":[{"startOffset":8398066,"endOffset":8398184,"count":0}],"isBlockCoverage":false},{"functionName":"delayReloadNonMixedContentFile","ranges":[{"startOffset":8398218,"endOffset":8398428,"count":0}],"isBlockCoverage":false},{"functionName":"reloadFromFile","ranges":[{"startOffset":8398437,"endOffset":8398655,"count":0}],"isBlockCoverage":false},{"functionName":"editContent","ranges":[{"startOffset":8398664,"endOffset":8398810,"count":0}],"isBlockCoverage":false},{"functionName":"markContainingProjectsAsDirty","ranges":[{"startOffset":8398819,"endOffset":8398969,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8398978,"endOffset":8399074,"count":0}],"isBlockCoverage":false},{"functionName":"isContainedByBackgroundProject","ranges":[{"startOffset":8399108,"endOffset":8399257,"count":0}],"isBlockCoverage":false},{"functionName":"lineToTextSpan","ranges":[{"startOffset":8399328,"endOffset":8399416,"count":0}],"isBlockCoverage":false},{"functionName":"lineOffsetToPosition","ranges":[{"startOffset":8399494,"endOffset":8399634,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8399643,"endOffset":8399874,"count":0}],"isBlockCoverage":false},{"functionName":"isJavaScript","ranges":[{"startOffset":8399883,"endOffset":8399993,"count":0}],"isBlockCoverage":false},{"functionName":"closeSourceMapFileWatcher","ranges":[{"startOffset":8400027,"endOffset":8400256,"count":0}],"isBlockCoverage":false},{"functionName":"setIsEqualTo","ranges":[{"startOffset":8400313,"endOffset":8400925,"count":0}],"isBlockCoverage":false},{"functionName":"typeAcquisitionChanged","ranges":[{"startOffset":8400928,"endOffset":8401107,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsChanged","ranges":[{"startOffset":8401110,"endOffset":8401237,"count":0}],"isBlockCoverage":false},{"functionName":"unresolvedImportsChanged","ranges":[{"startOffset":8401240,"endOffset":8401406,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/typingsCache.ts","ranges":[{"startOffset":8401487,"endOffset":8403986,"count":1}],"isBlockCoverage":true},{"functionName":"TypingsCache","ranges":[{"startOffset":8401989,"endOffset":8402121,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownTypesPackageName","ranges":[{"startOffset":8402130,"endOffset":8402234,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8402243,"endOffset":8402335,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueInstallTypingsForProject","ranges":[{"startOffset":8402344,"endOffset":8403336,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypingsForProject","ranges":[{"startOffset":8403345,"endOffset":8403790,"count":0}],"isBlockCoverage":false},{"functionName":"onProjectClosed","ranges":[{"startOffset":8403799,"endOffset":8403971,"count":0}],"isBlockCoverage":false},{"functionName":"countEachFileTypes","ranges":[{"startOffset":8404023,"endOffset":8405198,"count":0}],"isBlockCoverage":false},{"functionName":"hasOneOrMoreJsAndNoTsFiles","ranges":[{"startOffset":8405201,"endOffset":8405385,"count":0}],"isBlockCoverage":false},{"functionName":"allRootFilesAreJsOrDts","ranges":[{"startOffset":8405388,"endOffset":8405554,"count":0}],"isBlockCoverage":false},{"functionName":"allFilesAreJsOrDts","ranges":[{"startOffset":8405557,"endOffset":8405715,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoTypeScriptSource","ranges":[{"startOffset":8405718,"endOffset":8405933,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedFileWatcher","ranges":[{"startOffset":8405936,"endOffset":8406027,"count":0}],"isBlockCoverage":false},{"functionName":"getUnresolvedImports","ranges":[{"startOffset":8406030,"endOffset":8406694,"count":0}],"isBlockCoverage":false},{"functionName":"extractUnresolvedImportsFromSourceFile","ranges":[{"startOffset":8406697,"endOffset":8407333,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProject","ranges":[{"startOffset":8407336,"endOffset":8407430,"count":0}],"isBlockCoverage":false},{"functionName":"isConfiguredProject","ranges":[{"startOffset":8407433,"endOffset":8407531,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalProject","ranges":[{"startOffset":8407534,"endOffset":8407628,"count":0}],"isBlockCoverage":false},{"functionName":"isBackgroundProject","ranges":[{"startOffset":8407631,"endOffset":8407782,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/project.ts","ranges":[{"startOffset":8407974,"endOffset":8506303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8408120,"endOffset":8408527,"count":1}],"isBlockCoverage":true},{"functionName":"_Project","ranges":[{"startOffset":8408616,"endOffset":8413906,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedProjectReferenceToRedirect","ranges":[{"startOffset":8413940,"endOffset":8414025,"count":0}],"isBlockCoverage":false},{"functionName":"isNonTsProject","ranges":[{"startOffset":8414034,"endOffset":8414143,"count":0}],"isBlockCoverage":false},{"functionName":"isJsOnlyProject","ranges":[{"startOffset":8414152,"endOffset":8414270,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModule","ranges":[{"startOffset":8414286,"endOffset":8414459,"count":0}],"isBlockCoverage":false},{"functionName":"importServicePluginSync","ranges":[{"startOffset":8414500,"endOffset":8415448,"count":0}],"isBlockCoverage":false},{"functionName":"importServicePluginAsync","ranges":[{"startOffset":8415489,"endOffset":8416583,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownTypesPackageName","ranges":[{"startOffset":8416592,"endOffset":8416699,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8416708,"endOffset":8416894,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalTypingsCacheLocation","ranges":[{"startOffset":8416928,"endOffset":8417011,"count":0}],"isBlockCoverage":false},{"functionName":"get typingsCache","ranges":[{"startOffset":8417020,"endOffset":8417101,"count":0}],"isBlockCoverage":false},{"functionName":"getSymlinkCache","ranges":[{"startOffset":8417135,"endOffset":8417680,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilationSettings","ranges":[{"startOffset":8417730,"endOffset":8417805,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptions","ranges":[{"startOffset":8417854,"endOffset":8417934,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":8417943,"endOffset":8418018,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectVersion","ranges":[{"startOffset":8418027,"endOffset":8418112,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectReferences","ranges":[{"startOffset":8418121,"endOffset":8418180,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":8418189,"endOffset":8418615,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoAndAttachToProject","ranges":[{"startOffset":8418624,"endOffset":8419203,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8419212,"endOffset":8419377,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptVersion","ranges":[{"startOffset":8419386,"endOffset":8419619,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptSnapshot","ranges":[{"startOffset":8419628,"endOffset":8419837,"count":0}],"isBlockCoverage":false},{"functionName":"getCancellationToken","ranges":[{"startOffset":8419846,"endOffset":8419921,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":8419930,"endOffset":8420003,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":8420012,"endOffset":8420253,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":8420262,"endOffset":8420370,"count":0}],"isBlockCoverage":false},{"functionName":"readDirectory","ranges":[{"startOffset":8420379,"endOffset":8420550,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":8420559,"endOffset":8420651,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":8420660,"endOffset":8420772,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":8420781,"endOffset":8420950,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameLiterals","ranges":[{"startOffset":8420984,"endOffset":8421280,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionCache","ranges":[{"startOffset":8421314,"endOffset":8421418,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirectiveReferences","ranges":[{"startOffset":8421452,"endOffset":8421878,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":8421912,"endOffset":8422088,"count":0}],"isBlockCoverage":false},{"functionName":"directoryExists","ranges":[{"startOffset":8422097,"endOffset":8422198,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":8422207,"endOffset":8422306,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedDirectoryStructureHost","ranges":[{"startOffset":8422340,"endOffset":8422410,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":8422444,"endOffset":8422571,"count":0}],"isBlockCoverage":false},{"functionName":"watchDirectoryOfFailedLookupLocation","ranges":[{"startOffset":8422605,"endOffset":8422929,"count":0}],"isBlockCoverage":false},{"functionName":"watchAffectingFileLocation","ranges":[{"startOffset":8422963,"endOffset":8423264,"count":0}],"isBlockCoverage":false},{"functionName":"clearInvalidateResolutionOfFailedLookupTimer","ranges":[{"startOffset":8423298,"endOffset":8423473,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleInvalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8423507,"endOffset":8423992,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8424026,"endOffset":8424334,"count":0}],"isBlockCoverage":false},{"functionName":"onInvalidatedResolution","ranges":[{"startOffset":8424368,"endOffset":8424503,"count":0}],"isBlockCoverage":false},{"functionName":"watchTypeRootsDirectory","ranges":[{"startOffset":8424537,"endOffset":8424836,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangedAutomaticTypeDirectiveNames","ranges":[{"startOffset":8424870,"endOffset":8425000,"count":0}],"isBlockCoverage":false},{"functionName":"onChangedAutomaticTypeDirectiveNames","ranges":[{"startOffset":8425034,"endOffset":8425182,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalCache","ranges":[{"startOffset":8425216,"endOffset":8425370,"count":0}],"isBlockCoverage":false},{"functionName":"fileIsOpen","ranges":[{"startOffset":8425404,"endOffset":8425498,"count":0}],"isBlockCoverage":false},{"functionName":"writeLog","ranges":[{"startOffset":8425532,"endOffset":8425601,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":8425610,"endOffset":8425656,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":8425665,"endOffset":8425747,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalCompilerOptionsForEmittingJsFiles","ranges":[{"startOffset":8425756,"endOffset":8425980,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalProjectErrors","ranges":[{"startOffset":8426079,"endOffset":8426209,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectErrors","ranges":[{"startOffset":8426280,"endOffset":8426365,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectErrors","ranges":[{"startOffset":8426374,"endOffset":8426463,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageService","ranges":[{"startOffset":8426472,"endOffset":8426656,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":8426690,"endOffset":8426781,"count":0}],"isBlockCoverage":false},{"functionName":"clearSourceMapperCache","ranges":[{"startOffset":8426815,"endOffset":8426908,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":8426942,"endOffset":8427119,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLike","ranges":[{"startOffset":8427153,"endOffset":8427264,"count":0}],"isBlockCoverage":false},{"functionName":"shouldEmitFile","ranges":[{"startOffset":8427298,"endOffset":8427478,"count":0}],"isBlockCoverage":false},{"functionName":"getCompileOnSaveAffectedFileList","ranges":[{"startOffset":8427487,"endOffset":8428258,"count":0}],"isBlockCoverage":false},{"functionName":"emitFile","ranges":[{"startOffset":8428337,"endOffset":8429637,"count":0}],"isBlockCoverage":false},{"functionName":"enableLanguageService","ranges":[{"startOffset":8429646,"endOffset":8430070,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupProgram","ranges":[{"startOffset":8430104,"endOffset":8430468,"count":0}],"isBlockCoverage":false},{"functionName":"disableLanguageService","ranges":[{"startOffset":8430477,"endOffset":8431407,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectName","ranges":[{"startOffset":8431416,"endOffset":8431479,"count":0}],"isBlockCoverage":false},{"functionName":"removeLocalTypingsFromTypeAcquisition","ranges":[{"startOffset":8431488,"endOffset":8431785,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalFiles","ranges":[{"startOffset":8431794,"endOffset":8432355,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFile","ranges":[{"startOffset":8432364,"endOffset":8432522,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOrConfigFile","ranges":[{"startOffset":8432556,"endOffset":8432758,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8432767,"endOffset":8434665,"count":0}],"isBlockCoverage":false},{"functionName":"detachScriptInfoIfNotRoot","ranges":[{"startOffset":8434674,"endOffset":8434905,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":8434914,"endOffset":8434980,"count":0}],"isBlockCoverage":false},{"functionName":"hasRoots","ranges":[{"startOffset":8434989,"endOffset":8435073,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8435107,"endOffset":8435153,"count":0}],"isBlockCoverage":false},{"functionName":"getRootFiles","ranges":[{"startOffset":8435162,"endOffset":8435268,"count":0}],"isBlockCoverage":false},{"functionName":"getRootFilesMap","ranges":[{"startOffset":8435302,"endOffset":8435367,"count":0}],"isBlockCoverage":false},{"functionName":"getRootScriptInfos","ranges":[{"startOffset":8435376,"endOffset":8435441,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfos","ranges":[{"startOffset":8435450,"endOffset":8435967,"count":0}],"isBlockCoverage":false},{"functionName":"getExcludedFiles","ranges":[{"startOffset":8435976,"endOffset":8436036,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNames","ranges":[{"startOffset":8436045,"endOffset":8437365,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesWithRedirectInfo","ranges":[{"startOffset":8437399,"endOffset":8437708,"count":0}],"isBlockCoverage":false},{"functionName":"hasConfigFile","ranges":[{"startOffset":8437717,"endOffset":8438368,"count":0}],"isBlockCoverage":false},{"functionName":"containsScriptInfo","ranges":[{"startOffset":8438377,"endOffset":8438654,"count":0}],"isBlockCoverage":false},{"functionName":"containsFile","ranges":[{"startOffset":8438663,"endOffset":8438944,"count":0}],"isBlockCoverage":false},{"functionName":"isRoot","ranges":[{"startOffset":8438953,"endOffset":8439112,"count":0}],"isBlockCoverage":false},{"functionName":"addRoot","ranges":[{"startOffset":8439159,"endOffset":8439434,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingFileRoot","ranges":[{"startOffset":8439496,"endOffset":8439680,"count":0}],"isBlockCoverage":false},{"functionName":"removeFile","ranges":[{"startOffset":8439689,"endOffset":8440214,"count":0}],"isBlockCoverage":false},{"functionName":"registerFileUpdate","ranges":[{"startOffset":8440223,"endOffset":8440367,"count":0}],"isBlockCoverage":false},{"functionName":"markFileAsDirty","ranges":[{"startOffset":8440401,"endOffset":8440689,"count":0}],"isBlockCoverage":false},{"functionName":"markAsDirty","ranges":[{"startOffset":8440698,"endOffset":8440835,"count":0}],"isBlockCoverage":false},{"functionName":"onAutoImportProviderSettingsChanged","ranges":[{"startOffset":8440869,"endOffset":8441156,"count":0}],"isBlockCoverage":false},{"functionName":"onPackageJsonChange","ranges":[{"startOffset":8441190,"endOffset":8441380,"count":0}],"isBlockCoverage":false},{"functionName":"onFileAddedOrRemoved","ranges":[{"startOffset":8441414,"endOffset":8441593,"count":0}],"isBlockCoverage":false},{"functionName":"onDiscoveredSymlink","ranges":[{"startOffset":8441627,"endOffset":8441709,"count":0}],"isBlockCoverage":false},{"functionName":"updateFromProject","ranges":[{"startOffset":8441743,"endOffset":8441812,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8442004,"endOffset":8444044,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypingFiles","ranges":[{"startOffset":8444078,"endOffset":8444687,"count":0}],"isBlockCoverage":false},{"functionName":"closeWatchingTypingLocations","ranges":[{"startOffset":8444721,"endOffset":8444899,"count":0}],"isBlockCoverage":false},{"functionName":"onTypingInstallerWatchInvoke","ranges":[{"startOffset":8444933,"endOffset":8445142,"count":0}],"isBlockCoverage":false},{"functionName":"watchTypingLocations","ranges":[{"startOffset":8445176,"endOffset":8448779,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentProgram","ranges":[{"startOffset":8448813,"endOffset":8448875,"count":0}],"isBlockCoverage":false},{"functionName":"removeExistingTypings","ranges":[{"startOffset":8448884,"endOffset":8449104,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraphWorker","ranges":[{"startOffset":8449113,"endOffset":8457095,"count":0}],"isBlockCoverage":false},{"functionName":"sendPerformanceEvent","ranges":[{"startOffset":8457129,"endOffset":8457249,"count":0}],"isBlockCoverage":false},{"functionName":"detachScriptInfoFromProject","ranges":[{"startOffset":8457258,"endOffset":8457713,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingFileWatcher","ranges":[{"startOffset":8457722,"endOffset":8459053,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchedMissingFile","ranges":[{"startOffset":8459062,"endOffset":8459175,"count":0}],"isBlockCoverage":false},{"functionName":"addGeneratedFileWatch","ranges":[{"startOffset":8459209,"endOffset":8460121,"count":0}],"isBlockCoverage":false},{"functionName":"createGeneratedFileWatcher","ranges":[{"startOffset":8460130,"endOffset":8460724,"count":0}],"isBlockCoverage":false},{"functionName":"isValidGeneratedFileWatcher","ranges":[{"startOffset":8460733,"endOffset":8460869,"count":0}],"isBlockCoverage":false},{"functionName":"clearGeneratedFileWatch","ranges":[{"startOffset":8460878,"endOffset":8461239,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoForNormalizedPath","ranges":[{"startOffset":8461248,"endOffset":8461573,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfo","ranges":[{"startOffset":8461582,"endOffset":8461697,"count":0}],"isBlockCoverage":false},{"functionName":"filesToString","ranges":[{"startOffset":8461706,"endOffset":8461959,"count":0}],"isBlockCoverage":false},{"functionName":"filesToStringWorker","ranges":[{"startOffset":8461993,"endOffset":8462824,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":8462858,"endOffset":8464033,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptions","ranges":[{"startOffset":8464042,"endOffset":8464883,"count":0}],"isBlockCoverage":false},{"functionName":"setWatchOptions","ranges":[{"startOffset":8464917,"endOffset":8465002,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchOptions","ranges":[{"startOffset":8465036,"endOffset":8465101,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeAcquisition","ranges":[{"startOffset":8465110,"endOffset":8465307,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAcquisition","ranges":[{"startOffset":8465316,"endOffset":8465393,"count":0}],"isBlockCoverage":false},{"functionName":"getChangesSinceVersion","ranges":[{"startOffset":8465427,"endOffset":8470036,"count":0}],"isBlockCoverage":false},{"functionName":"removeRoot","ranges":[{"startOffset":8470088,"endOffset":8470214,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceOfProjectReferenceRedirect","ranges":[{"startOffset":8470248,"endOffset":8470398,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalPluginSearchPaths","ranges":[{"startOffset":8470432,"endOffset":8470740,"count":0}],"isBlockCoverage":false},{"functionName":"enableGlobalPlugins","ranges":[{"startOffset":8470749,"endOffset":8471657,"count":0}],"isBlockCoverage":false},{"functionName":"enablePlugin","ranges":[{"startOffset":8471666,"endOffset":8471811,"count":0}],"isBlockCoverage":false},{"functionName":"enableProxy","ranges":[{"startOffset":8471845,"endOffset":8473227,"count":0}],"isBlockCoverage":false},{"functionName":"onPluginConfigurationChanged","ranges":[{"startOffset":8473261,"endOffset":8473571,"count":0}],"isBlockCoverage":false},{"functionName":"refreshDiagnostics","ranges":[{"startOffset":8473710,"endOffset":8473812,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":8473846,"endOffset":8474096,"count":0}],"isBlockCoverage":false},{"functionName":"getNearestAncestorDirectoryWithPackageJson","ranges":[{"startOffset":8474130,"endOffset":8474285,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsForAutoImport","ranges":[{"startOffset":8474319,"endOffset":8474495,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonCache","ranges":[{"startOffset":8474529,"endOffset":8474617,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedExportInfoMap","ranges":[{"startOffset":8474651,"endOffset":8474787,"count":0}],"isBlockCoverage":false},{"functionName":"clearCachedExportInfoMap","ranges":[{"startOffset":8474821,"endOffset":8474945,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierCache","ranges":[{"startOffset":8474979,"endOffset":8475060,"count":0}],"isBlockCoverage":false},{"functionName":"includePackageJsonAutoImports","ranges":[{"startOffset":8475094,"endOffset":8475454,"count":0}],"isBlockCoverage":false},{"functionName":"getHostForAutoImportProvider","ranges":[{"startOffset":8475488,"endOffset":8476490,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonAutoImportProvider","ranges":[{"startOffset":8476524,"endOffset":8478090,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultProjectForOpenFiles","ranges":[{"startOffset":8478124,"endOffset":8478369,"count":0}],"isBlockCoverage":false},{"functionName":"watchNodeModulesForPackageJsonChanges","ranges":[{"startOffset":8478403,"endOffset":8478557,"count":0}],"isBlockCoverage":false},{"functionName":"getIncompleteCompletionsCache","ranges":[{"startOffset":8478591,"endOffset":8478704,"count":0}],"isBlockCoverage":false},{"functionName":"getNoDtsResolutionProject","ranges":[{"startOffset":8478738,"endOffset":8479414,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsForNoDtsResolutionProject","ranges":[{"startOffset":8479448,"endOffset":8479856,"count":0}],"isBlockCoverage":false},{"functionName":"InferredProject2","ranges":[{"startOffset":8479949,"endOffset":8481026,"count":0}],"isBlockCoverage":false},{"functionName":"toggleJsInferredProject","ranges":[{"startOffset":8481035,"endOffset":8481270,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptions","ranges":[{"startOffset":8481279,"endOffset":8481852,"count":0}],"isBlockCoverage":false},{"functionName":"addRoot","ranges":[{"startOffset":8481861,"endOffset":8482447,"count":0}],"isBlockCoverage":false},{"functionName":"removeRoot","ranges":[{"startOffset":8482456,"endOffset":8482928,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8482962,"endOffset":8483019,"count":0}],"isBlockCoverage":false},{"functionName":"isProjectWithSingleRoot","ranges":[{"startOffset":8483028,"endOffset":8483196,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8483205,"endOffset":8483378,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAcquisition","ranges":[{"startOffset":8483387,"endOffset":8483590,"count":0}],"isBlockCoverage":false},{"functionName":"AuxiliaryProject","ranges":[{"startOffset":8483658,"endOffset":8484241,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8484250,"endOffset":8484295,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleInvalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8484304,"endOffset":8484388,"count":0}],"isBlockCoverage":false},{"functionName":"_AutoImportProviderProject","ranges":[{"startOffset":8484518,"endOffset":8485491,"count":0}],"isBlockCoverage":false},{"functionName":"getRootFileNames","ranges":[{"startOffset":8485532,"endOffset":8490938,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":8490979,"endOffset":8491580,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":8491614,"endOffset":8491679,"count":0}],"isBlockCoverage":false},{"functionName":"isOrphan","ranges":[{"startOffset":8491688,"endOffset":8491733,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8491742,"endOffset":8492589,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleInvalidateResolutionsOfFailedLookupLocations","ranges":[{"startOffset":8492623,"endOffset":8492707,"count":0}],"isBlockCoverage":false},{"functionName":"hasRoots","ranges":[{"startOffset":8492716,"endOffset":8492833,"count":0}],"isBlockCoverage":false},{"functionName":"markAsDirty","ranges":[{"startOffset":8492842,"endOffset":8492937,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":8492946,"endOffset":8493029,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageService","ranges":[{"startOffset":8493038,"endOffset":8493220,"count":0}],"isBlockCoverage":false},{"functionName":"onAutoImportProviderSettingsChanged","ranges":[{"startOffset":8493254,"endOffset":8493416,"count":0}],"isBlockCoverage":false},{"functionName":"onPackageJsonChange","ranges":[{"startOffset":8493450,"endOffset":8493593,"count":0}],"isBlockCoverage":false},{"functionName":"getHostForAutoImportProvider","ranges":[{"startOffset":8493602,"endOffset":8493804,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectReferences","ranges":[{"startOffset":8493813,"endOffset":8493905,"count":0}],"isBlockCoverage":false},{"functionName":"includePackageJsonAutoImports","ranges":[{"startOffset":8493939,"endOffset":8494012,"count":0}],"isBlockCoverage":false},{"functionName":"getSymlinkCache","ranges":[{"startOffset":8494046,"endOffset":8494128,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleResolutionCache","ranges":[{"startOffset":8494162,"endOffset":8494329,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProject2","ranges":[{"startOffset":8494812,"endOffset":8495970,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerHost","ranges":[{"startOffset":8496004,"endOffset":8496073,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerHost","ranges":[{"startOffset":8496107,"endOffset":8496172,"count":0}],"isBlockCoverage":false},{"functionName":"useSourceOfProjectReferenceRedirect","ranges":[{"startOffset":8496206,"endOffset":8496301,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLine","ranges":[{"startOffset":8496335,"endOffset":8497371,"count":0}],"isBlockCoverage":false},{"functionName":"onReleaseParsedCommandLine","ranges":[{"startOffset":8497405,"endOffset":8497591,"count":0}],"isBlockCoverage":false},{"functionName":"releaseParsedConfig","ranges":[{"startOffset":8497625,"endOffset":8497847,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8498118,"endOffset":8499354,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedDirectoryStructureHost","ranges":[{"startOffset":8499388,"endOffset":8499479,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFilePath","ranges":[{"startOffset":8499488,"endOffset":8499577,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectReferences","ranges":[{"startOffset":8499586,"endOffset":8499661,"count":0}],"isBlockCoverage":false},{"functionName":"updateReferences","ranges":[{"startOffset":8499670,"endOffset":8499797,"count":0}],"isBlockCoverage":false},{"functionName":"setPotentialProjectReference","ranges":[{"startOffset":8499831,"endOffset":8500080,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedProjectReferenceToRedirect","ranges":[{"startOffset":8500114,"endOffset":8500310,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":8500344,"endOffset":8500517,"count":0}],"isBlockCoverage":false},{"functionName":"enablePluginsWithOptions","ranges":[{"startOffset":8500551,"endOffset":8501667,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobalProjectErrors","ranges":[{"startOffset":8501766,"endOffset":8501896,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectErrors","ranges":[{"startOffset":8501967,"endOffset":8502052,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectErrors","ranges":[{"startOffset":8502061,"endOffset":8502150,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":8502159,"endOffset":8502501,"count":0}],"isBlockCoverage":false},{"functionName":"addExternalProjectReference","ranges":[{"startOffset":8502535,"endOffset":8502618,"count":0}],"isBlockCoverage":false},{"functionName":"deleteExternalProjectReference","ranges":[{"startOffset":8502652,"endOffset":8502738,"count":0}],"isBlockCoverage":false},{"functionName":"isSolution","ranges":[{"startOffset":8502772,"endOffset":8502893,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultChildProjectFromProjectWithReferences","ranges":[{"startOffset":8503069,"endOffset":8503352,"count":0}],"isBlockCoverage":false},{"functionName":"hasOpenRef","ranges":[{"startOffset":8503514,"endOffset":8504587,"count":0}],"isBlockCoverage":false},{"functionName":"hasExternalProjectRef","ranges":[{"startOffset":8504621,"endOffset":8504705,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":8504714,"endOffset":8504832,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorOnNoInputFiles","ranges":[{"startOffset":8504866,"endOffset":8505105,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalProject2","ranges":[{"startOffset":8505198,"endOffset":8506049,"count":0}],"isBlockCoverage":false},{"functionName":"updateGraph","ranges":[{"startOffset":8506058,"endOffset":8506212,"count":0}],"isBlockCoverage":false},{"functionName":"getExcludedFiles","ranges":[{"startOffset":8506221,"endOffset":8506288,"count":0}],"isBlockCoverage":false},{"functionName":"prepareConvertersForEnumLikeCompilerOptions","ranges":[{"startOffset":8506347,"endOffset":8506775,"count":2},{"startOffset":8506511,"endOffset":8506754,"count":127},{"startOffset":8506556,"endOffset":8506748,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8506623,"endOffset":8506696,"count":58}],"isBlockCoverage":true},{"functionName":"convertFormatOptions","ranges":[{"startOffset":8506778,"endOffset":8507069,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptions","ranges":[{"startOffset":8507072,"endOffset":8507394,"count":0}],"isBlockCoverage":false},{"functionName":"convertWatchOptions","ranges":[{"startOffset":8507397,"endOffset":8508040,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisition","ranges":[{"startOffset":8508043,"endOffset":8508366,"count":0}],"isBlockCoverage":false},{"functionName":"tryConvertScriptKindName","ranges":[{"startOffset":8508369,"endOffset":8508518,"count":0}],"isBlockCoverage":false},{"functionName":"convertScriptKindName","ranges":[{"startOffset":8508521,"endOffset":8508836,"count":0}],"isBlockCoverage":false},{"functionName":"convertUserPreferences","ranges":[{"startOffset":8508839,"endOffset":8509011,"count":0}],"isBlockCoverage":false},{"functionName":"findProjectByName","ranges":[{"startOffset":8509014,"endOffset":8509190,"count":0}],"isBlockCoverage":false},{"functionName":"isOpenScriptInfo","ranges":[{"startOffset":8509193,"endOffset":8509304,"count":0}],"isBlockCoverage":false},{"functionName":"isAncestorConfigFileInfo","ranges":[{"startOffset":8509307,"endOffset":8509422,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReferenceProject","ranges":[{"startOffset":8509425,"endOffset":8511544,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReferenceProjectWorker","ranges":[{"startOffset":8511547,"endOffset":8512638,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPotentialProjectReference","ranges":[{"startOffset":8512641,"endOffset":8512802,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAnyProjectReferenceKind","ranges":[{"startOffset":8512805,"endOffset":8513142,"count":0}],"isBlockCoverage":false},{"functionName":"callbackRefProject","ranges":[{"startOffset":8513145,"endOffset":8513331,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReferencedProject","ranges":[{"startOffset":8513334,"endOffset":8513732,"count":0}],"isBlockCoverage":false},{"functionName":"getDetailWatchInfo","ranges":[{"startOffset":8513735,"endOffset":8513927,"count":0}],"isBlockCoverage":false},{"functionName":"isScriptInfoWatchedFromNodeModules","ranges":[{"startOffset":8513930,"endOffset":8514043,"count":0}],"isBlockCoverage":false},{"functionName":"projectContainsInfoDirectly","ranges":[{"startOffset":8514046,"endOffset":8514206,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectIfDirty","ranges":[{"startOffset":8514209,"endOffset":8514364,"count":0}],"isBlockCoverage":false},{"functionName":"setProjectOptionsUsed","ranges":[{"startOffset":8514367,"endOffset":8514495,"count":0}],"isBlockCoverage":false},{"functionName":"createProjectNameFactoryWithCounter","ranges":[{"startOffset":8514498,"endOffset":8514621,"count":0}],"isBlockCoverage":false},{"functionName":"getHostWatcherMap","ranges":[{"startOffset":8514624,"endOffset":8514752,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactoryHostUsingWatchEvents","ranges":[{"startOffset":8514755,"endOffset":8518250,"count":0}],"isBlockCoverage":false},{"functionName":"createIncompleteCompletionsCache","ranges":[{"startOffset":8518253,"endOffset":8518481,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigFile","ranges":[{"startOffset":8518484,"endOffset":8518554,"count":0}],"isBlockCoverage":false},{"functionName":"printProjectWithoutFileNames","ranges":[{"startOffset":8518557,"endOffset":8518771,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/editorServices.ts","ranges":[{"startOffset":8519419,"endOffset":8672877,"count":1}],"isBlockCoverage":true},{"functionName":"getFileName","ranges":[{"startOffset":8522110,"endOffset":8522118,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8522143,"endOffset":8522650,"count":0}],"isBlockCoverage":false},{"functionName":"hasMixedContent","ranges":[{"startOffset":8522677,"endOffset":8522810,"count":0}],"isBlockCoverage":false},{"functionName":"getFileName","ranges":[{"startOffset":8522878,"endOffset":8522895,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8522920,"endOffset":8522965,"count":0}],"isBlockCoverage":false},{"functionName":"hasMixedContent","ranges":[{"startOffset":8523018,"endOffset":8523044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8523158,"endOffset":8523577,"count":1}],"isBlockCoverage":true},{"functionName":"_ProjectService","ranges":[{"startOffset":8523675,"endOffset":8531122,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":8531131,"endOffset":8531243,"count":0}],"isBlockCoverage":false},{"functionName":"getExecutingFilePath","ranges":[{"startOffset":8531277,"endOffset":8531394,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":8531428,"endOffset":8531562,"count":0}],"isBlockCoverage":false},{"functionName":"setDocument","ranges":[{"startOffset":8531596,"endOffset":8531772,"count":0}],"isBlockCoverage":false},{"functionName":"getDocument","ranges":[{"startOffset":8531806,"endOffset":8532022,"count":0}],"isBlockCoverage":false},{"functionName":"ensureInferredProjectsUpToDate_TestOnly","ranges":[{"startOffset":8532056,"endOffset":8532159,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsForInferredProjects","ranges":[{"startOffset":8532193,"endOffset":8532302,"count":0}],"isBlockCoverage":false},{"functionName":"onUpdateLanguageServiceStateForProject","ranges":[{"startOffset":8532336,"endOffset":8532673,"count":0}],"isBlockCoverage":false},{"functionName":"loadTypesMap","ranges":[{"startOffset":8532682,"endOffset":8533616,"count":0}],"isBlockCoverage":false},{"functionName":"updateTypingsForProject","ranges":[{"startOffset":8533694,"endOffset":8534439,"count":0}],"isBlockCoverage":false},{"functionName":"watchTypingLocations","ranges":[{"startOffset":8534473,"endOffset":8534649,"count":0}],"isBlockCoverage":false},{"functionName":"delayEnsureProjectForOpenFiles","ranges":[{"startOffset":8534683,"endOffset":8535364,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectGraph","ranges":[{"startOffset":8535373,"endOffset":8535921,"count":0}],"isBlockCoverage":false},{"functionName":"hasPendingProjectUpdate","ranges":[{"startOffset":8535955,"endOffset":8536074,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectsUpdatedInBackgroundEvent","ranges":[{"startOffset":8536108,"endOffset":8536502,"count":0}],"isBlockCoverage":false},{"functionName":"sendLargeFileReferencedEvent","ranges":[{"startOffset":8536536,"endOffset":8536834,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectLoadingStartEvent","ranges":[{"startOffset":8536868,"endOffset":8537206,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectLoadingFinishEvent","ranges":[{"startOffset":8537240,"endOffset":8537602,"count":0}],"isBlockCoverage":false},{"functionName":"sendPerformanceEvent","ranges":[{"startOffset":8537636,"endOffset":8537808,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectGraphAndEnsureProjectStructureForOpenFiles","ranges":[{"startOffset":8537842,"endOffset":8538021,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectGraphs","ranges":[{"startOffset":8538030,"endOffset":8538401,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptionsForInferredProjects","ranges":[{"startOffset":8538410,"endOffset":8540572,"count":0}],"isBlockCoverage":false},{"functionName":"findProject","ranges":[{"startOffset":8540581,"endOffset":8540977,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProject","ranges":[{"startOffset":8541011,"endOffset":8541178,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnabledProject","ranges":[{"startOffset":8541212,"endOffset":8541422,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultProjectForFile","ranges":[{"startOffset":8541431,"endOffset":8541614,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDefaultProjectForFile","ranges":[{"startOffset":8541648,"endOffset":8541950,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDefaultProjectForFile","ranges":[{"startOffset":8541984,"endOffset":8542178,"count":0}],"isBlockCoverage":false},{"functionName":"doEnsureDefaultProjectForFile","ranges":[{"startOffset":8542187,"endOffset":8542657,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoEnsuringProjectsUptoDate","ranges":[{"startOffset":8542666,"endOffset":8542840,"count":0}],"isBlockCoverage":false},{"functionName":"ensureProjectStructuresUptoDate","ranges":[{"startOffset":8543209,"endOffset":8543744,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeOptions","ranges":[{"startOffset":8543753,"endOffset":8543956,"count":0}],"isBlockCoverage":false},{"functionName":"getPreferences","ranges":[{"startOffset":8543965,"endOffset":8544157,"count":0}],"isBlockCoverage":false},{"functionName":"getHostFormatCodeOptions","ranges":[{"startOffset":8544166,"endOffset":8544263,"count":0}],"isBlockCoverage":false},{"functionName":"getHostPreferences","ranges":[{"startOffset":8544272,"endOffset":8544357,"count":0}],"isBlockCoverage":false},{"functionName":"onSourceFileChanged","ranges":[{"startOffset":8544366,"endOffset":8544817,"count":0}],"isBlockCoverage":false},{"functionName":"handleSourceMapProjects","ranges":[{"startOffset":8544826,"endOffset":8545483,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateSourceInfoProjects","ranges":[{"startOffset":8545492,"endOffset":8545686,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectsOfScriptInfoPath","ranges":[{"startOffset":8545695,"endOffset":8545995,"count":0}],"isBlockCoverage":false},{"functionName":"handleDeletedFile","ranges":[{"startOffset":8546004,"endOffset":8546794,"count":0}],"isBlockCoverage":false},{"functionName":"watchWildcardDirectory","ranges":[{"startOffset":8546951,"endOffset":8551245,"count":0}],"isBlockCoverage":false},{"functionName":"delayUpdateProjectsFromParsedConfigOnConfigFileChange","ranges":[{"startOffset":8551279,"endOffset":8552610,"count":0}],"isBlockCoverage":false},{"functionName":"onConfigFileChanged","ranges":[{"startOffset":8552644,"endOffset":8553985,"count":0}],"isBlockCoverage":false},{"functionName":"removeProject","ranges":[{"startOffset":8553994,"endOffset":8555909,"count":0}],"isBlockCoverage":false},{"functionName":"assignOrphanScriptInfoToInferredProject","ranges":[{"startOffset":8555943,"endOffset":8557721,"count":0}],"isBlockCoverage":false},{"functionName":"assignOrphanScriptInfosToInferredProject","ranges":[{"startOffset":8557730,"endOffset":8558050,"count":0}],"isBlockCoverage":false},{"functionName":"closeOpenFile","ranges":[{"startOffset":8558228,"endOffset":8560308,"count":0}],"isBlockCoverage":false},{"functionName":"deleteScriptInfo","ranges":[{"startOffset":8560317,"endOffset":8560650,"count":0}],"isBlockCoverage":false},{"functionName":"configFileExists","ranges":[{"startOffset":8560659,"endOffset":8561793,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigFileWatcherForParsedConfig","ranges":[{"startOffset":8561827,"endOffset":8562904,"count":0}],"isBlockCoverage":false},{"functionName":"configFileExistenceImpactsRootOfInferredProject","ranges":[{"startOffset":8563059,"endOffset":8563296,"count":0}],"isBlockCoverage":false},{"functionName":"releaseParsedConfig","ranges":[{"startOffset":8563330,"endOffset":8564780,"count":0}],"isBlockCoverage":false},{"functionName":"closeConfigFileWatcherOnReleaseOfOpenFile","ranges":[{"startOffset":8565051,"endOffset":8565414,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingConfigFilesForClosedScriptInfo","ranges":[{"startOffset":8565550,"endOffset":8566670,"count":0}],"isBlockCoverage":false},{"functionName":"startWatchingConfigFilesForInferredProjectRoot","ranges":[{"startOffset":8566821,"endOffset":8568074,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingConfigFilesForInferredProjectRoot","ranges":[{"startOffset":8568230,"endOffset":8568914,"count":0}],"isBlockCoverage":false},{"functionName":"forEachConfigFileLocation","ranges":[{"startOffset":8569350,"endOffset":8571313,"count":0}],"isBlockCoverage":false},{"functionName":"findDefaultConfiguredProject","ranges":[{"startOffset":8571347,"endOffset":8571800,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileNameForFile","ranges":[{"startOffset":8572350,"endOffset":8573279,"count":0}],"isBlockCoverage":false},{"functionName":"printProjects","ranges":[{"startOffset":8573288,"endOffset":8574065,"count":0}],"isBlockCoverage":false},{"functionName":"findConfiguredProjectByProjectName","ranges":[{"startOffset":8574099,"endOffset":8574357,"count":0}],"isBlockCoverage":false},{"functionName":"getConfiguredProjectByCanonicalConfigFilePath","ranges":[{"startOffset":8574366,"endOffset":8574519,"count":0}],"isBlockCoverage":false},{"functionName":"findExternalProjectByProjectName","ranges":[{"startOffset":8574528,"endOffset":8574665,"count":0}],"isBlockCoverage":false},{"functionName":"getFilenameForExceededTotalSizeLimitForNonTsFiles","ranges":[{"startOffset":8574799,"endOffset":8576149,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalProject","ranges":[{"startOffset":8576158,"endOffset":8577351,"count":0}],"isBlockCoverage":false},{"functionName":"sendProjectTelemetry","ranges":[{"startOffset":8577385,"endOffset":8579540,"count":0}],"isBlockCoverage":false},{"functionName":"addFilesToNonInferredProject","ranges":[{"startOffset":8579549,"endOffset":8579804,"count":0}],"isBlockCoverage":false},{"functionName":"createConfiguredProject","ranges":[{"startOffset":8579838,"endOffset":8581411,"count":0}],"isBlockCoverage":false},{"functionName":"createConfiguredProjectWithDelayLoad","ranges":[{"startOffset":8581445,"endOffset":8581716,"count":0}],"isBlockCoverage":false},{"functionName":"createAndLoadConfiguredProject","ranges":[{"startOffset":8581750,"endOffset":8581969,"count":0}],"isBlockCoverage":false},{"functionName":"createLoadAndUpdateConfiguredProject","ranges":[{"startOffset":8582003,"endOffset":8582221,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfiguredProject","ranges":[{"startOffset":8582374,"endOffset":8585143,"count":0}],"isBlockCoverage":false},{"functionName":"ensureParsedConfigUptoDate","ranges":[{"startOffset":8585177,"endOffset":8589794,"count":0}],"isBlockCoverage":false},{"functionName":"watchWildcards","ranges":[{"startOffset":8589828,"endOffset":8590791,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingWildCards","ranges":[{"startOffset":8590825,"endOffset":8591682,"count":0}],"isBlockCoverage":false},{"functionName":"updateNonInferredProjectFiles","ranges":[{"startOffset":8591691,"endOffset":8594573,"count":0}],"isBlockCoverage":false},{"functionName":"updateRootAndOptionsOfNonInferredProject","ranges":[{"startOffset":8594582,"endOffset":8595059,"count":0}],"isBlockCoverage":false},{"functionName":"reloadFileNamesOfConfiguredProject","ranges":[{"startOffset":8595209,"endOffset":8595716,"count":0}],"isBlockCoverage":false},{"functionName":"reloadFileNamesOfParsedConfig","ranges":[{"startOffset":8595750,"endOffset":8596489,"count":0}],"isBlockCoverage":false},{"functionName":"setFileNamesOfAutpImportProviderOrAuxillaryProject","ranges":[{"startOffset":8596523,"endOffset":8596695,"count":0}],"isBlockCoverage":false},{"functionName":"reloadConfiguredProject","ranges":[{"startOffset":8596864,"endOffset":8597452,"count":0}],"isBlockCoverage":false},{"functionName":"clearSemanticCache","ranges":[{"startOffset":8597486,"endOffset":8597764,"count":0}],"isBlockCoverage":false},{"functionName":"sendConfigFileDiagEvent","ranges":[{"startOffset":8597773,"endOffset":8598295,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateInferredProjectForProjectRootPathIfEnabled","ranges":[{"startOffset":8598304,"endOffset":8599612,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateSingleInferredProjectIfEnabled","ranges":[{"startOffset":8599621,"endOffset":8600056,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateSingleInferredWithoutProjectRoot","ranges":[{"startOffset":8600065,"endOffset":8600661,"count":0}],"isBlockCoverage":false},{"functionName":"createInferredProject","ranges":[{"startOffset":8600670,"endOffset":8602122,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoNotOpenedByClient","ranges":[{"startOffset":8602156,"endOffset":8602574,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfo","ranges":[{"startOffset":8602583,"endOffset":8602718,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoOrConfig","ranges":[{"startOffset":8602752,"endOffset":8603149,"count":0}],"isBlockCoverage":false},{"functionName":"logErrorForScriptInfoNotFound","ranges":[{"startOffset":8603183,"endOffset":8603509,"count":0}],"isBlockCoverage":false},{"functionName":"getSymlinkedProjects","ranges":[{"startOffset":8603725,"endOffset":8604860,"count":0}],"isBlockCoverage":false},{"functionName":"watchClosedScriptInfo","ranges":[{"startOffset":8604869,"endOffset":8605816,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeModulesWatcher","ranges":[{"startOffset":8605825,"endOffset":8607998,"count":0}],"isBlockCoverage":false},{"functionName":"watchPackageJsonsInNodeModules","ranges":[{"startOffset":8608032,"endOffset":8608760,"count":0}],"isBlockCoverage":false},{"functionName":"watchClosedScriptInfoInNodeModules","ranges":[{"startOffset":8608769,"endOffset":8609253,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":8609262,"endOffset":8609393,"count":0}],"isBlockCoverage":false},{"functionName":"refreshScriptInfo","ranges":[{"startOffset":8609402,"endOffset":8609700,"count":0}],"isBlockCoverage":false},{"functionName":"refreshScriptInfosInDirectory","ranges":[{"startOffset":8609709,"endOffset":8610015,"count":0}],"isBlockCoverage":false},{"functionName":"stopWatchingScriptInfo","ranges":[{"startOffset":8610024,"endOffset":8610187,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoNotOpenedByClientForNormalizedPath","ranges":[{"startOffset":8610196,"endOffset":8610941,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoOpenedByClientForNormalizedPath","ranges":[{"startOffset":8610950,"endOffset":8611326,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoForNormalizedPath","ranges":[{"startOffset":8611335,"endOffset":8611645,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateScriptInfoWorker","ranges":[{"startOffset":8611654,"endOffset":8614437,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoForNormalizedPath","ranges":[{"startOffset":8614633,"endOffset":8614920,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoForPath","ranges":[{"startOffset":8614929,"endOffset":8615029,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":8615063,"endOffset":8618688,"count":0}],"isBlockCoverage":false},{"functionName":"addSourceInfoToSourceMap","ranges":[{"startOffset":8618697,"endOffset":8619088,"count":0}],"isBlockCoverage":false},{"functionName":"addMissingSourceMapFile","ranges":[{"startOffset":8619097,"endOffset":8620020,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileLike","ranges":[{"startOffset":8620054,"endOffset":8621814,"count":0}],"isBlockCoverage":false},{"functionName":"setPerformanceEventHandler","ranges":[{"startOffset":8621848,"endOffset":8621977,"count":0}],"isBlockCoverage":false},{"functionName":"setHostConfiguration","ranges":[{"startOffset":8621986,"endOffset":8624651,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchOptions","ranges":[{"startOffset":8624685,"endOffset":8624810,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchOptionsFromProjectWatchOptions","ranges":[{"startOffset":8624844,"endOffset":8625102,"count":0}],"isBlockCoverage":false},{"functionName":"closeLog","ranges":[{"startOffset":8625111,"endOffset":8625164,"count":0}],"isBlockCoverage":false},{"functionName":"reloadProjects","ranges":[{"startOffset":8625376,"endOffset":8626896,"count":0}],"isBlockCoverage":false},{"functionName":"reloadConfiguredProjectForFiles","ranges":[{"startOffset":8627399,"endOffset":8630174,"count":0}],"isBlockCoverage":false},{"functionName":"removeRootOfInferredProjectIfNowPartOfOtherProject","ranges":[{"startOffset":8630296,"endOffset":8630857,"count":0}],"isBlockCoverage":false},{"functionName":"ensureProjectForOpenFiles","ranges":[{"startOffset":8631268,"endOffset":8631984,"count":0}],"isBlockCoverage":false},{"functionName":"openClientFile","ranges":[{"startOffset":8632240,"endOffset":8632600,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalLocationEnsuringConfiguredProject","ranges":[{"startOffset":8632634,"endOffset":8636061,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":8636095,"endOffset":8636227,"count":0}],"isBlockCoverage":false},{"functionName":"findExternalProjectContainingOpenScriptInfo","ranges":[{"startOffset":8636236,"endOffset":8636458,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateOpenScriptInfo","ranges":[{"startOffset":8636467,"endOffset":8636879,"count":0}],"isBlockCoverage":false},{"functionName":"assignProjectToOpenedScriptInfo","ranges":[{"startOffset":8636888,"endOffset":8640196,"count":0}],"isBlockCoverage":false},{"functionName":"createAncestorProjects","ranges":[{"startOffset":8640205,"endOffset":8641237,"count":0}],"isBlockCoverage":false},{"functionName":"loadAncestorProjectTree","ranges":[{"startOffset":8641271,"endOffset":8641914,"count":0}],"isBlockCoverage":false},{"functionName":"ensureProjectChildren","ranges":[{"startOffset":8641923,"endOffset":8643187,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupAfterOpeningFile","ranges":[{"startOffset":8643196,"endOffset":8643564,"count":0}],"isBlockCoverage":false},{"functionName":"openClientFileWithNormalizedPath","ranges":[{"startOffset":8643573,"endOffset":8644057,"count":0}],"isBlockCoverage":false},{"functionName":"removeOrphanConfiguredProjects","ranges":[{"startOffset":8644066,"endOffset":8646096,"count":0}],"isBlockCoverage":false},{"functionName":"removeOrphanScriptInfos","ranges":[{"startOffset":8646105,"endOffset":8647998,"count":0}],"isBlockCoverage":false},{"functionName":"telemetryOnOpenFile","ranges":[{"startOffset":8648007,"endOffset":8648652,"count":0}],"isBlockCoverage":false},{"functionName":"closeClientFile","ranges":[{"startOffset":8648661,"endOffset":8649096,"count":0}],"isBlockCoverage":false},{"functionName":"collectChanges","ranges":[{"startOffset":8649105,"endOffset":8649521,"count":0}],"isBlockCoverage":false},{"functionName":"synchronizeProjectList","ranges":[{"startOffset":8649555,"endOffset":8650043,"count":0}],"isBlockCoverage":false},{"functionName":"applyChangesInOpenFiles","ranges":[{"startOffset":8650077,"endOffset":8652002,"count":0}],"isBlockCoverage":false},{"functionName":"applyChangesToFile","ranges":[{"startOffset":8652036,"endOffset":8652252,"count":0}],"isBlockCoverage":false},{"functionName":"closeConfiguredProjectReferencedFromExternalProject","ranges":[{"startOffset":8652261,"endOffset":8652693,"count":0}],"isBlockCoverage":false},{"functionName":"closeExternalProject","ranges":[{"startOffset":8652702,"endOffset":8653398,"count":0}],"isBlockCoverage":false},{"functionName":"openExternalProjects","ranges":[{"startOffset":8653407,"endOffset":8654229,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFilenameForRegex","ranges":[{"startOffset":8654245,"endOffset":8654359,"count":0}],"isBlockCoverage":false},{"functionName":"resetSafeList","ranges":[{"startOffset":8654368,"endOffset":8654442,"count":0}],"isBlockCoverage":false},{"functionName":"applySafeList","ranges":[{"startOffset":8654451,"endOffset":8654789,"count":0}],"isBlockCoverage":false},{"functionName":"applySafeListWorker","ranges":[{"startOffset":8654798,"endOffset":8658906,"count":0}],"isBlockCoverage":false},{"functionName":"openExternalProject","ranges":[{"startOffset":8658915,"endOffset":8663050,"count":0}],"isBlockCoverage":false},{"functionName":"hasDeferredExtension","ranges":[{"startOffset":8663059,"endOffset":8663311,"count":0}],"isBlockCoverage":false},{"functionName":"requestEnablePlugin","ranges":[{"startOffset":8663516,"endOffset":8665081,"count":0}],"isBlockCoverage":false},{"functionName":"endEnablePlugin","ranges":[{"startOffset":8665236,"endOffset":8665970,"count":0}],"isBlockCoverage":false},{"functionName":"hasNewPluginEnablementRequests","ranges":[{"startOffset":8666004,"endOffset":8666098,"count":0}],"isBlockCoverage":false},{"functionName":"hasPendingPluginEnablements","ranges":[{"startOffset":8666132,"endOffset":8666229,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingPlugins","ranges":[{"startOffset":8666367,"endOffset":8666531,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPlugins","ranges":[{"startOffset":8666677,"endOffset":8666825,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPluginsAsync","ranges":[{"startOffset":8666834,"endOffset":8667347,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPluginsWorker","ranges":[{"startOffset":8667356,"endOffset":8667739,"count":0}],"isBlockCoverage":false},{"functionName":"enableRequestedPluginsForProjectAsync","ranges":[{"startOffset":8667748,"endOffset":8668099,"count":0}],"isBlockCoverage":false},{"functionName":"configurePlugin","ranges":[{"startOffset":8668108,"endOffset":8668463,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":8668497,"endOffset":8669589,"count":0}],"isBlockCoverage":false},{"functionName":"getNearestAncestorDirectoryWithPackageJson","ranges":[{"startOffset":8669623,"endOffset":8670138,"count":0}],"isBlockCoverage":false},{"functionName":"watchPackageJsonFile","ranges":[{"startOffset":8670172,"endOffset":8671901,"count":0}],"isBlockCoverage":false},{"functionName":"onPackageJsonChange","ranges":[{"startOffset":8671935,"endOffset":8672148,"count":0}],"isBlockCoverage":false},{"functionName":"includePackageJsonAutoImports","ranges":[{"startOffset":8672182,"endOffset":8672493,"count":0}],"isBlockCoverage":false},{"functionName":"getIncompleteCompletionsCache","ranges":[{"startOffset":8672527,"endOffset":8672694,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierCache","ranges":[{"startOffset":8672927,"endOffset":8676587,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/moduleSpecifierCache.ts","ranges":[{"startOffset":8676634,"endOffset":8676718,"count":1}],"isBlockCoverage":true},{"functionName":"createPackageJsonCache","ranges":[{"startOffset":8676764,"endOffset":8678620,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/packageJsonCache.ts","ranges":[{"startOffset":8678663,"endOffset":8678743,"count":1}],"isBlockCoverage":true},{"functionName":"hrTimeToMilliseconds","ranges":[{"startOffset":8678780,"endOffset":8678931,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileInJSOnlyNonConfiguredProject","ranges":[{"startOffset":8678934,"endOffset":8679258,"count":0}],"isBlockCoverage":false},{"functionName":"dtsChangeCanAffectEmit","ranges":[{"startOffset":8679261,"endOffset":8679419,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiag","ranges":[{"startOffset":8679422,"endOffset":8680071,"count":0}],"isBlockCoverage":false},{"functionName":"formatRelatedInformation","ranges":[{"startOffset":8680074,"endOffset":8680741,"count":0}],"isBlockCoverage":false},{"functionName":"convertToLocation","ranges":[{"startOffset":8680744,"endOffset":8680882,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticToProtocol","ranges":[{"startOffset":8680885,"endOffset":8681725,"count":0}],"isBlockCoverage":false},{"functionName":"allEditsBeforePos","ranges":[{"startOffset":8681728,"endOffset":8681836,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage2","ranges":[{"startOffset":8681839,"endOffset":8682199,"count":0}],"isBlockCoverage":false},{"functionName":"toEvent","ranges":[{"startOffset":8682202,"endOffset":8682331,"count":0}],"isBlockCoverage":false},{"functionName":"combineProjectOutput","ranges":[{"startOffset":8682334,"endOffset":8682850,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentSpanSet","ranges":[{"startOffset":8682853,"endOffset":8683062,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocationsWorker","ranges":[{"startOffset":8683065,"endOffset":8684087,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionLocation","ranges":[{"startOffset":8684090,"endOffset":8684551,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencesWorker","ranges":[{"startOffset":8684554,"endOffset":8688474,"count":0}],"isBlockCoverage":false},{"functionName":"forEachProjectInProjects","ranges":[{"startOffset":8688477,"endOffset":8688901,"count":0}],"isBlockCoverage":false},{"functionName":"getPerProjectReferences","ranges":[{"startOffset":8688904,"endOffset":8693020,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInProject","ranges":[{"startOffset":8693023,"endOffset":8693659,"count":0}],"isBlockCoverage":false},{"functionName":"isLocationProjectReferenceRedirect","ranges":[{"startOffset":8693662,"endOffset":8694072,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectKey","ranges":[{"startOffset":8694075,"endOffset":8694214,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpanLocation","ranges":[{"startOffset":8694217,"endOffset":8694322,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocationForProject","ranges":[{"startOffset":8694325,"endOffset":8694498,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpanForProject","ranges":[{"startOffset":8694501,"endOffset":8694690,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpanForProject","ranges":[{"startOffset":8694693,"endOffset":8694880,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolTextSpan","ranges":[{"startOffset":8694883,"endOffset":8695086,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolTextSpanWithContext","ranges":[{"startOffset":8695089,"endOffset":8695438,"count":0}],"isBlockCoverage":false},{"functionName":"convertTextChangeToCodeEdit","ranges":[{"startOffset":8695441,"endOffset":8695668,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8695671,"endOffset":8695868,"count":0}],"isBlockCoverage":false},{"functionName":"convertLinkedEditInfoToRanges","ranges":[{"startOffset":8695871,"endOffset":8696283,"count":0}],"isBlockCoverage":false},{"functionName":"locationFromLineAndCharacter","ranges":[{"startOffset":8696286,"endOffset":8696393,"count":0}],"isBlockCoverage":false},{"functionName":"convertNewFileTextChangeToCodeEdit","ranges":[{"startOffset":8696396,"endOffset":8696791,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationInNewDocument","ranges":[{"startOffset":8696794,"endOffset":8697110,"count":0}],"isBlockCoverage":false},{"functionName":"applyEdits","ranges":[{"startOffset":8697113,"endOffset":8697543,"count":0}],"isBlockCoverage":false},{"functionName":"referenceEntryToReferencesResponseItem","ranges":[{"startOffset":8697546,"endOffset":8698116,"count":0}],"isBlockCoverage":false},{"functionName":"getLineText","ranges":[{"startOffset":8698119,"endOffset":8698338,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionEntryData","ranges":[{"startOffset":8698341,"endOffset":8698728,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/session.ts","ranges":[{"startOffset":8698901,"endOffset":8835172,"count":1}],"isBlockCoverage":true},{"functionName":"isCancellationRequested","ranges":[{"startOffset":8699080,"endOffset":8699091,"count":0}],"isBlockCoverage":false},{"functionName":"setRequest","ranges":[{"startOffset":8699113,"endOffset":8699125,"count":0}],"isBlockCoverage":false},{"functionName":"resetRequest","ranges":[{"startOffset":8699149,"endOffset":8699161,"count":0}],"isBlockCoverage":false},{"functionName":"MultistepOperation","ranges":[{"startOffset":8699249,"endOffset":8699333,"count":0}],"isBlockCoverage":false},{"functionName":"startNew","ranges":[{"startOffset":8699342,"endOffset":8699504,"count":0}],"isBlockCoverage":false},{"functionName":"complete","ranges":[{"startOffset":8699513,"endOffset":8699779,"count":0}],"isBlockCoverage":false},{"functionName":"immediate","ranges":[{"startOffset":8699788,"endOffset":8700268,"count":0}],"isBlockCoverage":false},{"functionName":"delay","ranges":[{"startOffset":8700277,"endOffset":8700817,"count":0}],"isBlockCoverage":false},{"functionName":"executeAction","ranges":[{"startOffset":8700826,"endOffset":8702074,"count":0}],"isBlockCoverage":false},{"functionName":"setTimerHandle","ranges":[{"startOffset":8702083,"endOffset":8702300,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediateId","ranges":[{"startOffset":8702309,"endOffset":8702528,"count":0}],"isBlockCoverage":false},{"functionName":"hasPendingWork","ranges":[{"startOffset":8702537,"endOffset":8702624,"count":0}],"isBlockCoverage":false},{"functionName":"_Session","ranges":[{"startOffset":8705973,"endOffset":8737768,"count":0}],"isBlockCoverage":false},{"functionName":"sendRequestCompletedEvent","ranges":[{"startOffset":8737777,"endOffset":8737895,"count":0}],"isBlockCoverage":false},{"functionName":"addPerformanceData","ranges":[{"startOffset":8737904,"endOffset":8738116,"count":0}],"isBlockCoverage":false},{"functionName":"performanceEventHandler","ranges":[{"startOffset":8738125,"endOffset":8738525,"count":0}],"isBlockCoverage":false},{"functionName":"defaultEventHandler","ranges":[{"startOffset":8738534,"endOffset":8740441,"count":0}],"isBlockCoverage":false},{"functionName":"projectsUpdatedInBackgroundEvent","ranges":[{"startOffset":8740450,"endOffset":8741152,"count":0}],"isBlockCoverage":false},{"functionName":"logError","ranges":[{"startOffset":8741161,"endOffset":8741232,"count":0}],"isBlockCoverage":false},{"functionName":"logErrorWorker","ranges":[{"startOffset":8741241,"endOffset":8742963,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":8742972,"endOffset":8743299,"count":0}],"isBlockCoverage":false},{"functionName":"writeMessage","ranges":[{"startOffset":8743308,"endOffset":8743591,"count":0}],"isBlockCoverage":false},{"functionName":"event","ranges":[{"startOffset":8743600,"endOffset":8743681,"count":0}],"isBlockCoverage":false},{"functionName":"doOutput","ranges":[{"startOffset":8743715,"endOffset":8744789,"count":0}],"isBlockCoverage":false},{"functionName":"semanticCheck","ranges":[{"startOffset":8744798,"endOffset":8745325,"count":0}],"isBlockCoverage":false},{"functionName":"syntacticCheck","ranges":[{"startOffset":8745334,"endOffset":8745730,"count":0}],"isBlockCoverage":false},{"functionName":"suggestionCheck","ranges":[{"startOffset":8745739,"endOffset":8746142,"count":0}],"isBlockCoverage":false},{"functionName":"sendDiagnosticsEvent","ranges":[{"startOffset":8746151,"endOffset":8746424,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorCheck","ranges":[{"startOffset":8746531,"endOffset":8748392,"count":0}],"isBlockCoverage":false},{"functionName":"cleanProjects","ranges":[{"startOffset":8748401,"endOffset":8748766,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":8748775,"endOffset":8749200,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":8749209,"endOffset":8749445,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":8749454,"endOffset":8749777,"count":0}],"isBlockCoverage":false},{"functionName":"getProject","ranges":[{"startOffset":8749786,"endOffset":8749930,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileAndProject","ranges":[{"startOffset":8749939,"endOffset":8750229,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileDiagnostics","ranges":[{"startOffset":8750238,"endOffset":8751014,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnosticsWithLinePositionFromDiagnosticFile","ranges":[{"startOffset":8751023,"endOffset":8751935,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiagnostics","ranges":[{"startOffset":8751944,"endOffset":8752333,"count":0}],"isBlockCoverage":false},{"functionName":"convertToDiagnosticsWithLinePosition","ranges":[{"startOffset":8752342,"endOffset":8753166,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWorker","ranges":[{"startOffset":8753175,"endOffset":8753750,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinition","ranges":[{"startOffset":8753759,"endOffset":8754226,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInfoLocations","ranges":[{"startOffset":8754235,"endOffset":8754827,"count":0}],"isBlockCoverage":false},{"functionName":"getDefinitionAndBoundSpan","ranges":[{"startOffset":8754836,"endOffset":8755998,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceDefinition","ranges":[{"startOffset":8756007,"endOffset":8764657,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitOutput","ranges":[{"startOffset":8764666,"endOffset":8765357,"count":0}],"isBlockCoverage":false},{"functionName":"mapJSDocTagInfo","ranges":[{"startOffset":8765366,"endOffset":8765712,"count":0}],"isBlockCoverage":false},{"functionName":"mapDisplayParts","ranges":[{"startOffset":8765721,"endOffset":8766050,"count":0}],"isBlockCoverage":false},{"functionName":"mapSignatureHelpItems","ranges":[{"startOffset":8766059,"endOffset":8766476,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinitionInfo","ranges":[{"startOffset":8766485,"endOffset":8766723,"count":0}],"isBlockCoverage":false},{"functionName":"mapToOriginalLocation","ranges":[{"startOffset":8767313,"endOffset":8767882,"count":0}],"isBlockCoverage":false},{"functionName":"toFileSpan","ranges":[{"startOffset":8767891,"endOffset":8768345,"count":0}],"isBlockCoverage":false},{"functionName":"toFileSpanWithContext","ranges":[{"startOffset":8768354,"endOffset":8768701,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeDefinition","ranges":[{"startOffset":8768710,"endOffset":8769098,"count":0}],"isBlockCoverage":false},{"functionName":"mapImplementationLocations","ranges":[{"startOffset":8769107,"endOffset":8769491,"count":0}],"isBlockCoverage":false},{"functionName":"getImplementation","ranges":[{"startOffset":8769500,"endOffset":8770069,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticDiagnosticsSync","ranges":[{"startOffset":8770078,"endOffset":8770515,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticDiagnosticsSync","ranges":[{"startOffset":8770524,"endOffset":8771060,"count":0}],"isBlockCoverage":false},{"functionName":"getSuggestionDiagnosticsSync","ranges":[{"startOffset":8771069,"endOffset":8771507,"count":0}],"isBlockCoverage":false},{"functionName":"getJsxClosingTag","ranges":[{"startOffset":8771516,"endOffset":8771883,"count":0}],"isBlockCoverage":false},{"functionName":"getLinkedEditingRange","ranges":[{"startOffset":8771892,"endOffset":8772451,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentHighlights","ranges":[{"startOffset":8772460,"endOffset":8773343,"count":0}],"isBlockCoverage":false},{"functionName":"provideInlayHints","ranges":[{"startOffset":8773352,"endOffset":8774623,"count":0}],"isBlockCoverage":false},{"functionName":"setCompilerOptionsForInferredProjects","ranges":[{"startOffset":8774632,"endOffset":8774792,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectInfo","ranges":[{"startOffset":8774801,"endOffset":8775035,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectInfoWorker","ranges":[{"startOffset":8775044,"endOffset":8775679,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameInfo","ranges":[{"startOffset":8775688,"endOffset":8775995,"count":0}],"isBlockCoverage":false},{"functionName":"getProjects","ranges":[{"startOffset":8776004,"endOffset":8777495,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultProject","ranges":[{"startOffset":8777504,"endOffset":8777929,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocations","ranges":[{"startOffset":8777938,"endOffset":8779065,"count":0}],"isBlockCoverage":false},{"functionName":"mapRenameInfo","ranges":[{"startOffset":8779074,"endOffset":8779518,"count":0}],"isBlockCoverage":false},{"functionName":"toSpanGroups","ranges":[{"startOffset":8779527,"endOffset":8780192,"count":0}],"isBlockCoverage":false},{"functionName":"getReferences","ranges":[{"startOffset":8780201,"endOffset":8781737,"count":0}],"isBlockCoverage":false},{"functionName":"getFileReferences","ranges":[{"startOffset":8781746,"endOffset":8783020,"count":0}],"isBlockCoverage":false},{"functionName":"openClientFile","ranges":[{"startOffset":8783237,"endOffset":8783542,"count":0}],"isBlockCoverage":false},{"functionName":"getPosition","ranges":[{"startOffset":8783551,"endOffset":8783709,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionInFile","ranges":[{"startOffset":8783718,"endOffset":8783899,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndProject","ranges":[{"startOffset":8783908,"endOffset":8784023,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndLanguageServiceForSyntacticOperation","ranges":[{"startOffset":8784032,"endOffset":8784340,"count":0}],"isBlockCoverage":false},{"functionName":"getFileAndProjectWorker","ranges":[{"startOffset":8784349,"endOffset":8784633,"count":0}],"isBlockCoverage":false},{"functionName":"getOutliningSpans","ranges":[{"startOffset":8784642,"endOffset":8785346,"count":0}],"isBlockCoverage":false},{"functionName":"getTodoComments","ranges":[{"startOffset":8785355,"endOffset":8785541,"count":0}],"isBlockCoverage":false},{"functionName":"getDocCommentTemplate","ranges":[{"startOffset":8785550,"endOffset":8785893,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfEnclosingComment","ranges":[{"startOffset":8785902,"endOffset":8786254,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentation","ranges":[{"startOffset":8786263,"endOffset":8786709,"count":0}],"isBlockCoverage":false},{"functionName":"getBreakpointStatement","ranges":[{"startOffset":8786718,"endOffset":8787007,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrDottedNameSpan","ranges":[{"startOffset":8787016,"endOffset":8787307,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBraceCompletion","ranges":[{"startOffset":8787316,"endOffset":8787638,"count":0}],"isBlockCoverage":false},{"functionName":"getQuickInfoWorker","ranges":[{"startOffset":8787647,"endOffset":8789091,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForRange","ranges":[{"startOffset":8789100,"endOffset":8789800,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForRangeFull","ranges":[{"startOffset":8789809,"endOffset":8790176,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsForDocumentFull","ranges":[{"startOffset":8790185,"endOffset":8790525,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsAfterKeystrokeFull","ranges":[{"startOffset":8790534,"endOffset":8790905,"count":0}],"isBlockCoverage":false},{"functionName":"getFormattingEditsAfterKeystroke","ranges":[{"startOffset":8790914,"endOffset":8792973,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletions","ranges":[{"startOffset":8792982,"endOffset":8795825,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionEntryDetails","ranges":[{"startOffset":8795834,"endOffset":8797253,"count":0}],"isBlockCoverage":false},{"functionName":"getCompileOnSaveAffectedFileList","ranges":[{"startOffset":8797262,"endOffset":8798519,"count":0}],"isBlockCoverage":false},{"functionName":"emitFile","ranges":[{"startOffset":8798528,"endOffset":8799422,"count":0}],"isBlockCoverage":false},{"functionName":"getSignatureHelpItems","ranges":[{"startOffset":8799431,"endOffset":8800736,"count":0}],"isBlockCoverage":false},{"functionName":"toPendingErrorCheck","ranges":[{"startOffset":8800745,"endOffset":8800995,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnostics","ranges":[{"startOffset":8801004,"endOffset":8801242,"count":0}],"isBlockCoverage":false},{"functionName":"change","ranges":[{"startOffset":8801251,"endOffset":8801959,"count":0}],"isBlockCoverage":false},{"functionName":"reload","ranges":[{"startOffset":8801968,"endOffset":8802569,"count":0}],"isBlockCoverage":false},{"functionName":"saveToTmp","ranges":[{"startOffset":8802578,"endOffset":8802782,"count":0}],"isBlockCoverage":false},{"functionName":"closeClientFile","ranges":[{"startOffset":8802791,"endOffset":8802988,"count":0}],"isBlockCoverage":false},{"functionName":"mapLocationNavigationBarItems","ranges":[{"startOffset":8802997,"endOffset":8803422,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationBarItems","ranges":[{"startOffset":8803431,"endOffset":8803823,"count":0}],"isBlockCoverage":false},{"functionName":"toLocationNavigationTree","ranges":[{"startOffset":8803832,"endOffset":8804296,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigationTree","ranges":[{"startOffset":8804305,"endOffset":8804680,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigateToItems","ranges":[{"startOffset":8804689,"endOffset":8806099,"count":0}],"isBlockCoverage":false},{"functionName":"getFullNavigateToItems","ranges":[{"startOffset":8806108,"endOffset":8808907,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":8808916,"endOffset":8809412,"count":0}],"isBlockCoverage":false},{"functionName":"isLocation","ranges":[{"startOffset":8809421,"endOffset":8809508,"count":0}],"isBlockCoverage":false},{"functionName":"extractPositionOrRange","ranges":[{"startOffset":8809517,"endOffset":8810033,"count":0}],"isBlockCoverage":false},{"functionName":"getRange","ranges":[{"startOffset":8810042,"endOffset":8810235,"count":0}],"isBlockCoverage":false},{"functionName":"getApplicableRefactors","ranges":[{"startOffset":8810244,"endOffset":8810638,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForRefactor","ranges":[{"startOffset":8810647,"endOffset":8812064,"count":0}],"isBlockCoverage":false},{"functionName":"getMoveToRefactoringFileSuggestions","ranges":[{"startOffset":8812073,"endOffset":8812430,"count":0}],"isBlockCoverage":false},{"functionName":"organizeImports","ranges":[{"startOffset":8812439,"endOffset":8813139,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":8813148,"endOffset":8814303,"count":0}],"isBlockCoverage":false},{"functionName":"getCodeFixes","ranges":[{"startOffset":8814312,"endOffset":8815749,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedCodeFix","ranges":[{"startOffset":8815758,"endOffset":8816312,"count":0}],"isBlockCoverage":false},{"functionName":"applyCodeActionCommand","ranges":[{"startOffset":8816321,"endOffset":8816772,"count":0}],"isBlockCoverage":false},{"functionName":"getStartAndEndPosition","ranges":[{"startOffset":8816781,"endOffset":8817446,"count":0}],"isBlockCoverage":false},{"functionName":"mapCodeAction","ranges":[{"startOffset":8817455,"endOffset":8817638,"count":0}],"isBlockCoverage":false},{"functionName":"mapCodeFixAction","ranges":[{"startOffset":8817647,"endOffset":8817941,"count":0}],"isBlockCoverage":false},{"functionName":"mapTextChangesToCodeEdits","ranges":[{"startOffset":8817950,"endOffset":8818086,"count":0}],"isBlockCoverage":false},{"functionName":"mapTextChangeToCodeEdit","ranges":[{"startOffset":8818095,"endOffset":8818829,"count":0}],"isBlockCoverage":false},{"functionName":"convertTextChangeToCodeEdit","ranges":[{"startOffset":8818838,"endOffset":8819148,"count":0}],"isBlockCoverage":false},{"functionName":"getBraceMatching","ranges":[{"startOffset":8819157,"endOffset":8819667,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsForProject","ranges":[{"startOffset":8819676,"endOffset":8821759,"count":0}],"isBlockCoverage":false},{"functionName":"configurePlugin","ranges":[{"startOffset":8821768,"endOffset":8821854,"count":0}],"isBlockCoverage":false},{"functionName":"getSmartSelectionRange","ranges":[{"startOffset":8821863,"endOffset":8822471,"count":0}],"isBlockCoverage":false},{"functionName":"toggleLineComment","ranges":[{"startOffset":8822480,"endOffset":8823129,"count":0}],"isBlockCoverage":false},{"functionName":"toggleMultilineComment","ranges":[{"startOffset":8823138,"endOffset":8823814,"count":0}],"isBlockCoverage":false},{"functionName":"commentSelection","ranges":[{"startOffset":8823823,"endOffset":8824487,"count":0}],"isBlockCoverage":false},{"functionName":"uncommentSelection","ranges":[{"startOffset":8824496,"endOffset":8825164,"count":0}],"isBlockCoverage":false},{"functionName":"mapSelectionRange","ranges":[{"startOffset":8825173,"endOffset":8825511,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptInfoFromProjectService","ranges":[{"startOffset":8825520,"endOffset":8825916,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolCallHierarchyItem","ranges":[{"startOffset":8825925,"endOffset":8826400,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolCallHierarchyIncomingCall","ranges":[{"startOffset":8826409,"endOffset":8826770,"count":0}],"isBlockCoverage":false},{"functionName":"toProtocolCallHierarchyOutgoingCall","ranges":[{"startOffset":8826779,"endOffset":8827057,"count":0}],"isBlockCoverage":false},{"functionName":"prepareCallHierarchy","ranges":[{"startOffset":8827066,"endOffset":8827582,"count":0}],"isBlockCoverage":false},{"functionName":"provideCallHierarchyIncomingCalls","ranges":[{"startOffset":8827591,"endOffset":8828013,"count":0}],"isBlockCoverage":false},{"functionName":"provideCallHierarchyOutgoingCalls","ranges":[{"startOffset":8828022,"endOffset":8828456,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalFileName","ranges":[{"startOffset":8828465,"endOffset":8828648,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":8828657,"endOffset":8828675,"count":0}],"isBlockCoverage":false},{"functionName":"notRequired","ranges":[{"startOffset":8828684,"endOffset":8828755,"count":0}],"isBlockCoverage":false},{"functionName":"requiredResponse","ranges":[{"startOffset":8828764,"endOffset":8828857,"count":0}],"isBlockCoverage":false},{"functionName":"addProtocolHandler","ranges":[{"startOffset":8828866,"endOffset":8829106,"count":0}],"isBlockCoverage":false},{"functionName":"setCurrentRequest","ranges":[{"startOffset":8829115,"endOffset":8829314,"count":0}],"isBlockCoverage":false},{"functionName":"resetCurrentRequest","ranges":[{"startOffset":8829323,"endOffset":8829526,"count":0}],"isBlockCoverage":false},{"functionName":"executeWithRequestId","ranges":[{"startOffset":8829535,"endOffset":8829751,"count":0}],"isBlockCoverage":false},{"functionName":"executeCommand","ranges":[{"startOffset":8829760,"endOffset":8830508,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":8830517,"endOffset":8834590,"count":0}],"isBlockCoverage":false},{"functionName":"parseMessage","ranges":[{"startOffset":8834599,"endOffset":8834670,"count":0}],"isBlockCoverage":false},{"functionName":"toStringMessage","ranges":[{"startOffset":8834679,"endOffset":8834741,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOptions","ranges":[{"startOffset":8834750,"endOffset":8834849,"count":0}],"isBlockCoverage":false},{"functionName":"getPreferences","ranges":[{"startOffset":8834858,"endOffset":8834949,"count":0}],"isBlockCoverage":false},{"functionName":"getHostFormatOptions","ranges":[{"startOffset":8834958,"endOffset":8835057,"count":0}],"isBlockCoverage":false},{"functionName":"getHostPreferences","ranges":[{"startOffset":8835066,"endOffset":8835157,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/scriptVersionCache.ts","ranges":[{"startOffset":8835426,"endOffset":8862990,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8835604,"endOffset":8836088,"count":1}],"isBlockCoverage":true},{"functionName":"EditWalker","ranges":[{"startOffset":8836150,"endOffset":8836533,"count":0}],"isBlockCoverage":false},{"functionName":"get done","ranges":[{"startOffset":8836542,"endOffset":8836588,"count":0}],"isBlockCoverage":false},{"functionName":"insertLines","ranges":[{"startOffset":8836597,"endOffset":8839395,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":8839404,"endOffset":8839611,"count":0}],"isBlockCoverage":false},{"functionName":"pre","ranges":[{"startOffset":8839620,"endOffset":8841985,"count":0}],"isBlockCoverage":false},{"functionName":"leaf","ranges":[{"startOffset":8842038,"endOffset":8842522,"count":0}],"isBlockCoverage":false},{"functionName":"TextChange9","ranges":[{"startOffset":8842568,"endOffset":8842729,"count":0}],"isBlockCoverage":false},{"functionName":"getTextChangeRange","ranges":[{"startOffset":8842738,"endOffset":8842902,"count":0}],"isBlockCoverage":false},{"functionName":"_ScriptVersionCache","ranges":[{"startOffset":8842976,"endOffset":8843245,"count":0}],"isBlockCoverage":false},{"functionName":"versionToIndex","ranges":[{"startOffset":8843254,"endOffset":8843468,"count":0}],"isBlockCoverage":false},{"functionName":"currentVersionToIndex","ranges":[{"startOffset":8843477,"endOffset":8843584,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":8843652,"endOffset":8844039,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshot","ranges":[{"startOffset":8844048,"endOffset":8844111,"count":0}],"isBlockCoverage":false},{"functionName":"_getSnapshot","ranges":[{"startOffset":8844120,"endOffset":8844922,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotVersion","ranges":[{"startOffset":8844931,"endOffset":8845009,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePositionAndLineText","ranges":[{"startOffset":8845018,"endOffset":8845149,"count":0}],"isBlockCoverage":false},{"functionName":"lineOffsetToPosition","ranges":[{"startOffset":8845158,"endOffset":8845299,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8845308,"endOffset":8845425,"count":0}],"isBlockCoverage":false},{"functionName":"lineToTextSpan","ranges":[{"startOffset":8845434,"endOffset":8845784,"count":0}],"isBlockCoverage":false},{"functionName":"getTextChangesBetweenVersions","ranges":[{"startOffset":8845793,"endOffset":8846538,"count":0}],"isBlockCoverage":false},{"functionName":"getLineCount","ranges":[{"startOffset":8846547,"endOffset":8846632,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":8846648,"endOffset":8846962,"count":0}],"isBlockCoverage":false},{"functionName":"_LineIndexSnapshot","ranges":[{"startOffset":8847232,"endOffset":8847491,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":8847500,"endOffset":8847613,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":8847622,"endOffset":8847686,"count":0}],"isBlockCoverage":false},{"functionName":"getChangeRange","ranges":[{"startOffset":8847695,"endOffset":8848076,"count":0}],"isBlockCoverage":false},{"functionName":"_LineIndex","ranges":[{"startOffset":8848131,"endOffset":8848253,"count":0}],"isBlockCoverage":false},{"functionName":"absolutePositionOfStartOfLine","ranges":[{"startOffset":8848262,"endOffset":8848388,"count":0}],"isBlockCoverage":false},{"functionName":"positionToLineOffset","ranges":[{"startOffset":8848397,"endOffset":8848606,"count":0}],"isBlockCoverage":false},{"functionName":"positionToColumnAndLineText","ranges":[{"startOffset":8848615,"endOffset":8848726,"count":0}],"isBlockCoverage":false},{"functionName":"getLineCount","ranges":[{"startOffset":8848735,"endOffset":8848801,"count":0}],"isBlockCoverage":false},{"functionName":"lineNumberToInfo","ranges":[{"startOffset":8848810,"endOffset":8849221,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":8849230,"endOffset":8849570,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":8849579,"endOffset":8849689,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":8849698,"endOffset":8850179,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":8850188,"endOffset":8850251,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":8850260,"endOffset":8850756,"count":0}],"isBlockCoverage":false},{"functionName":"edit","ranges":[{"startOffset":8850765,"endOffset":8852549,"count":0}],"isBlockCoverage":false},{"functionName":"buildTreeFromBottom","ranges":[{"startOffset":8852565,"endOffset":8853148,"count":0}],"isBlockCoverage":false},{"functionName":"linesFromText","ranges":[{"startOffset":8853164,"endOffset":8853780,"count":0}],"isBlockCoverage":false},{"functionName":"_LineNode","ranges":[{"startOffset":8853833,"endOffset":8854033,"count":0}],"isBlockCoverage":false},{"functionName":"isLeaf","ranges":[{"startOffset":8854042,"endOffset":8854086,"count":0}],"isBlockCoverage":false},{"functionName":"updateCounts","ranges":[{"startOffset":8854095,"endOffset":8854342,"count":0}],"isBlockCoverage":false},{"functionName":"execWalk","ranges":[{"startOffset":8854351,"endOffset":8854916,"count":0}],"isBlockCoverage":false},{"functionName":"skipChild","ranges":[{"startOffset":8854925,"endOffset":8855203,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":8855212,"endOffset":8857102,"count":0}],"isBlockCoverage":false},{"functionName":"charOffsetToLineInfo","ranges":[{"startOffset":8857219,"endOffset":8858363,"count":0}],"isBlockCoverage":false},{"functionName":"lineNumberToInfo","ranges":[{"startOffset":8858615,"endOffset":8859222,"count":0}],"isBlockCoverage":false},{"functionName":"splitAfter","ranges":[{"startOffset":8859231,"endOffset":8859735,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":8859744,"endOffset":8860080,"count":0}],"isBlockCoverage":false},{"functionName":"findChildIndex","ranges":[{"startOffset":8860089,"endOffset":8860253,"count":0}],"isBlockCoverage":false},{"functionName":"insertAt","ranges":[{"startOffset":8860262,"endOffset":8862237,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":8862317,"endOffset":8862458,"count":0}],"isBlockCoverage":false},{"functionName":"charCount","ranges":[{"startOffset":8862467,"endOffset":8862524,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":8862533,"endOffset":8862590,"count":0}],"isBlockCoverage":false},{"functionName":"LineLeaf","ranges":[{"startOffset":8862633,"endOffset":8862690,"count":0}],"isBlockCoverage":false},{"functionName":"isLeaf","ranges":[{"startOffset":8862699,"endOffset":8862742,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":8862751,"endOffset":8862856,"count":0}],"isBlockCoverage":false},{"functionName":"charCount","ranges":[{"startOffset":8862865,"endOffset":8862923,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":8862932,"endOffset":8862975,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/typingInstallerAdapter.ts","ranges":[{"startOffset":8863145,"endOffset":8871249,"count":1}],"isBlockCoverage":true},{"functionName":"_TypingsInstallerAdapter","ranges":[{"startOffset":8863325,"endOffset":8864153,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownTypesPackageName","ranges":[{"startOffset":8864162,"endOffset":8864664,"count":0}],"isBlockCoverage":false},{"functionName":"installPackage","ranges":[{"startOffset":8864673,"endOffset":8865131,"count":0}],"isBlockCoverage":false},{"functionName":"attach","ranges":[{"startOffset":8865140,"endOffset":8865280,"count":0}],"isBlockCoverage":false},{"functionName":"onProjectClosed","ranges":[{"startOffset":8865289,"endOffset":8865409,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueInstallTypingsRequest","ranges":[{"startOffset":8865418,"endOffset":8866195,"count":0}],"isBlockCoverage":false},{"functionName":"handleMessage","ranges":[{"startOffset":8866204,"endOffset":8870087,"count":0}],"isBlockCoverage":false},{"functionName":"scheduleRequest","ranges":[{"startOffset":8870096,"endOffset":8870733,"count":0}],"isBlockCoverage":false},{"functionName":"ActionInvalidate","ranges":[{"startOffset":8871384,"endOffset":8871406,"count":0}],"isBlockCoverage":false},{"functionName":"ActionPackageInstalled","ranges":[{"startOffset":8871436,"endOffset":8871464,"count":0}],"isBlockCoverage":false},{"functionName":"ActionSet","ranges":[{"startOffset":8871481,"endOffset":8871496,"count":0}],"isBlockCoverage":false},{"functionName":"ActionWatchTypingLocations","ranges":[{"startOffset":8871530,"endOffset":8871562,"count":0}],"isBlockCoverage":false},{"functionName":"Arguments","ranges":[{"startOffset":8871579,"endOffset":8871594,"count":0}],"isBlockCoverage":false},{"functionName":"AutoImportProviderProject","ranges":[{"startOffset":8871627,"endOffset":8871658,"count":0}],"isBlockCoverage":false},{"functionName":"AuxiliaryProject","ranges":[{"startOffset":8871682,"endOffset":8871704,"count":0}],"isBlockCoverage":false},{"functionName":"CharRangeSection","ranges":[{"startOffset":8871728,"endOffset":8871750,"count":0}],"isBlockCoverage":false},{"functionName":"CloseFileWatcherEvent","ranges":[{"startOffset":8871779,"endOffset":8871806,"count":0}],"isBlockCoverage":false},{"functionName":"CommandNames","ranges":[{"startOffset":8871826,"endOffset":8871844,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigFileDiagEvent","ranges":[{"startOffset":8871871,"endOffset":8871896,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProject","ranges":[{"startOffset":8871921,"endOffset":8871945,"count":0}],"isBlockCoverage":false},{"functionName":"CreateDirectoryWatcherEvent","ranges":[{"startOffset":8871980,"endOffset":8872013,"count":0}],"isBlockCoverage":false},{"functionName":"CreateFileWatcherEvent","ranges":[{"startOffset":8872043,"endOffset":8872071,"count":0}],"isBlockCoverage":false},{"functionName":"Errors","ranges":[{"startOffset":8872085,"endOffset":8872097,"count":0}],"isBlockCoverage":false},{"functionName":"EventBeginInstallTypes","ranges":[{"startOffset":8872127,"endOffset":8872155,"count":0}],"isBlockCoverage":false},{"functionName":"EventEndInstallTypes","ranges":[{"startOffset":8872183,"endOffset":8872209,"count":0}],"isBlockCoverage":false},{"functionName":"EventInitializationFailed","ranges":[{"startOffset":8872242,"endOffset":8872273,"count":0}],"isBlockCoverage":false},{"functionName":"EventTypesRegistry","ranges":[{"startOffset":8872299,"endOffset":8872323,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalProject","ranges":[{"startOffset":8872346,"endOffset":8872368,"count":0}],"isBlockCoverage":false},{"functionName":"GcTimer","ranges":[{"startOffset":8872383,"endOffset":8872396,"count":0}],"isBlockCoverage":false},{"functionName":"InferredProject","ranges":[{"startOffset":8872419,"endOffset":8872441,"count":0}],"isBlockCoverage":false},{"functionName":"LargeFileReferencedEvent","ranges":[{"startOffset":8872473,"endOffset":8872503,"count":0}],"isBlockCoverage":false},{"functionName":"LineIndex","ranges":[{"startOffset":8872520,"endOffset":8872535,"count":0}],"isBlockCoverage":false},{"functionName":"LineLeaf","ranges":[{"startOffset":8872551,"endOffset":8872565,"count":0}],"isBlockCoverage":false},{"functionName":"LineNode","ranges":[{"startOffset":8872581,"endOffset":8872595,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":8872611,"endOffset":8872626,"count":0}],"isBlockCoverage":false},{"functionName":"Msg","ranges":[{"startOffset":8872637,"endOffset":8872646,"count":0}],"isBlockCoverage":false},{"functionName":"OpenFileInfoTelemetryEvent","ranges":[{"startOffset":8872680,"endOffset":8872712,"count":0}],"isBlockCoverage":false},{"functionName":"Project","ranges":[{"startOffset":8872727,"endOffset":8872741,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectInfoTelemetryEvent","ranges":[{"startOffset":8872774,"endOffset":8872805,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectKind","ranges":[{"startOffset":8872824,"endOffset":8872841,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLanguageServiceStateEvent","ranges":[{"startOffset":8872881,"endOffset":8872919,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingFinishEvent","ranges":[{"startOffset":8872952,"endOffset":8872983,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingStartEvent","ranges":[{"startOffset":8873015,"endOffset":8873045,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectReferenceProjectLoadKind","ranges":[{"startOffset":8873084,"endOffset":8873121,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectService","ranges":[{"startOffset":8873143,"endOffset":8873164,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectsUpdatedInBackgroundEvent","ranges":[{"startOffset":8873204,"endOffset":8873242,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptInfo","ranges":[{"startOffset":8873260,"endOffset":8873276,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptVersionCache","ranges":[{"startOffset":8873302,"endOffset":8873326,"count":0}],"isBlockCoverage":false},{"functionName":"Session","ranges":[{"startOffset":8873341,"endOffset":8873355,"count":0}],"isBlockCoverage":false},{"functionName":"TextStorage","ranges":[{"startOffset":8873374,"endOffset":8873391,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledOperations","ranges":[{"startOffset":8873418,"endOffset":8873443,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsCache","ranges":[{"startOffset":8873463,"endOffset":8873481,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstallerAdapter","ranges":[{"startOffset":8873512,"endOffset":8873541,"count":0}],"isBlockCoverage":false},{"functionName":"allFilesAreJsOrDts","ranges":[{"startOffset":8873567,"endOffset":8873591,"count":0}],"isBlockCoverage":false},{"functionName":"allRootFilesAreJsOrDts","ranges":[{"startOffset":8873621,"endOffset":8873649,"count":0}],"isBlockCoverage":false},{"functionName":"asNormalizedPath","ranges":[{"startOffset":8873673,"endOffset":8873695,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptions","ranges":[{"startOffset":8873725,"endOffset":8873753,"count":0}],"isBlockCoverage":false},{"functionName":"convertFormatOptions","ranges":[{"startOffset":8873781,"endOffset":8873807,"count":0}],"isBlockCoverage":false},{"functionName":"convertScriptKindName","ranges":[{"startOffset":8873836,"endOffset":8873863,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisition","ranges":[{"startOffset":8873893,"endOffset":8873921,"count":0}],"isBlockCoverage":false},{"functionName":"convertUserPreferences","ranges":[{"startOffset":8873951,"endOffset":8873979,"count":0}],"isBlockCoverage":false},{"functionName":"convertWatchOptions","ranges":[{"startOffset":8874006,"endOffset":8874031,"count":0}],"isBlockCoverage":false},{"functionName":"countEachFileTypes","ranges":[{"startOffset":8874057,"endOffset":8874081,"count":0}],"isBlockCoverage":false},{"functionName":"createInstallTypingsRequest","ranges":[{"startOffset":8874116,"endOffset":8874149,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierCache","ranges":[{"startOffset":8874183,"endOffset":8874215,"count":0}],"isBlockCoverage":false},{"functionName":"createNormalizedPathMap","ranges":[{"startOffset":8874246,"endOffset":8874275,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonCache","ranges":[{"startOffset":8874305,"endOffset":8874333,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":8874358,"endOffset":8874382,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":8874400,"endOffset":8874417,"count":0}],"isBlockCoverage":false},{"functionName":"findArgument","ranges":[{"startOffset":8874437,"endOffset":8874455,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReferenceProject","ranges":[{"startOffset":8874501,"endOffset":8874545,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticToProtocol","ranges":[{"startOffset":8874579,"endOffset":8874611,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":8874632,"endOffset":8874652,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseConfigFileName","ranges":[{"startOffset":8874681,"endOffset":8874708,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationInNewDocument","ranges":[{"startOffset":8874740,"endOffset":8874770,"count":0}],"isBlockCoverage":false},{"functionName":"hasArgument","ranges":[{"startOffset":8874789,"endOffset":8874806,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoTypeScriptSource","ranges":[{"startOffset":8874835,"endOffset":8874862,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":8874876,"endOffset":8874889,"count":0}],"isBlockCoverage":false},{"functionName":"isBackgroundProject","ranges":[{"startOffset":8874916,"endOffset":8874941,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigFile","ranges":[{"startOffset":8874961,"endOffset":8874979,"count":0}],"isBlockCoverage":false},{"functionName":"isConfiguredProject","ranges":[{"startOffset":8875006,"endOffset":8875031,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicFileName","ranges":[{"startOffset":8875056,"endOffset":8875079,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalProject","ranges":[{"startOffset":8875104,"endOffset":8875127,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProject","ranges":[{"startOffset":8875152,"endOffset":8875175,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProjectName","ranges":[{"startOffset":8875204,"endOffset":8875231,"count":0}],"isBlockCoverage":false},{"functionName":"makeAutoImportProviderProjectName","ranges":[{"startOffset":8875272,"endOffset":8875311,"count":0}],"isBlockCoverage":false},{"functionName":"makeAuxiliaryProjectName","ranges":[{"startOffset":8875343,"endOffset":8875373,"count":0}],"isBlockCoverage":false},{"functionName":"makeInferredProjectName","ranges":[{"startOffset":8875404,"endOffset":8875433,"count":0}],"isBlockCoverage":false},{"functionName":"maxFileSize","ranges":[{"startOffset":8875452,"endOffset":8875469,"count":0}],"isBlockCoverage":false},{"functionName":"maxProgramSizeForNonTsFiles","ranges":[{"startOffset":8875504,"endOffset":8875537,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedPathToPath","ranges":[{"startOffset":8875565,"endOffset":8875591,"count":0}],"isBlockCoverage":false},{"functionName":"nowString","ranges":[{"startOffset":8875608,"endOffset":8875623,"count":0}],"isBlockCoverage":false},{"functionName":"nullCancellationToken","ranges":[{"startOffset":8875652,"endOffset":8875679,"count":0}],"isBlockCoverage":false},{"functionName":"nullTypingsInstaller","ranges":[{"startOffset":8875707,"endOffset":8875733,"count":0}],"isBlockCoverage":false},{"functionName":"projectContainsInfoDirectly","ranges":[{"startOffset":8875768,"endOffset":8875801,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":8875817,"endOffset":8875849,"count":0}],"isBlockCoverage":false},{"functionName":"removeSorted","ranges":[{"startOffset":8875869,"endOffset":8875887,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndented","ranges":[{"startOffset":8875912,"endOffset":8875935,"count":0}],"isBlockCoverage":false},{"functionName":"toEvent","ranges":[{"startOffset":8875950,"endOffset":8875963,"count":0}],"isBlockCoverage":false},{"functionName":"toNormalizedPath","ranges":[{"startOffset":8875987,"endOffset":8876009,"count":0}],"isBlockCoverage":false},{"functionName":"tryConvertScriptKindName","ranges":[{"startOffset":8876041,"endOffset":8876071,"count":0}],"isBlockCoverage":false},{"functionName":"typingsInstaller","ranges":[{"startOffset":8876095,"endOffset":8876135,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectIfDirty","ranges":[{"startOffset":8876163,"endOffset":8876189,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/_namespaces/ts.server.ts","ranges":[{"startOffset":8876232,"endOffset":8876719,"count":1}],"isBlockCoverage":true},{"functionName":"ANONYMOUS","ranges":[{"startOffset":8876826,"endOffset":8876841,"count":0}],"isBlockCoverage":false},{"functionName":"AccessFlags","ranges":[{"startOffset":8876860,"endOffset":8876877,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionLevel","ranges":[{"startOffset":8876899,"endOffset":8876919,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentDeclarationKind","ranges":[{"startOffset":8876952,"endOffset":8876983,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentKind","ranges":[{"startOffset":8877005,"endOffset":8877025,"count":0}],"isBlockCoverage":false},{"functionName":"Associativity","ranges":[{"startOffset":8877046,"endOffset":8877065,"count":0}],"isBlockCoverage":false},{"functionName":"BreakpointResolver","ranges":[{"startOffset":8877091,"endOffset":8877126,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderFileEmit","ranges":[{"startOffset":8877149,"endOffset":8877170,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderProgramKind","ranges":[{"startOffset":8877196,"endOffset":8877220,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderState","ranges":[{"startOffset":8877240,"endOffset":8877258,"count":0}],"isBlockCoverage":false},{"functionName":"BundleFileSectionKind","ranges":[{"startOffset":8877287,"endOffset":8877314,"count":0}],"isBlockCoverage":false},{"functionName":"CallHierarchy","ranges":[{"startOffset":8877335,"endOffset":8877365,"count":0}],"isBlockCoverage":false},{"functionName":"CharacterCodes","ranges":[{"startOffset":8877387,"endOffset":8877407,"count":0}],"isBlockCoverage":false},{"functionName":"CheckFlags","ranges":[{"startOffset":8877425,"endOffset":8877441,"count":0}],"isBlockCoverage":false},{"functionName":"CheckMode","ranges":[{"startOffset":8877458,"endOffset":8877473,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationType","ranges":[{"startOffset":8877499,"endOffset":8877523,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationTypeNames","ranges":[{"startOffset":8877554,"endOffset":8877583,"count":0}],"isBlockCoverage":false},{"functionName":"CommentDirectiveType","ranges":[{"startOffset":8877611,"endOffset":8877637,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":8877655,"endOffset":8877671,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionInfoFlags","ranges":[{"startOffset":8877698,"endOffset":8877723,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionTriggerKind","ranges":[{"startOffset":8877752,"endOffset":8877779,"count":0}],"isBlockCoverage":false},{"functionName":"Completions","ranges":[{"startOffset":8877798,"endOffset":8877826,"count":0}],"isBlockCoverage":false},{"functionName":"ContainerFlags","ranges":[{"startOffset":8877848,"endOffset":8877868,"count":0}],"isBlockCoverage":false},{"functionName":"ContextFlags","ranges":[{"startOffset":8877888,"endOffset":8877906,"count":0}],"isBlockCoverage":false},{"functionName":"Debug","ranges":[{"startOffset":8877919,"endOffset":8877930,"count":0}],"isBlockCoverage":false},{"functionName":"DiagnosticCategory","ranges":[{"startOffset":8877956,"endOffset":8877980,"count":0}],"isBlockCoverage":false},{"functionName":"Diagnostics","ranges":[{"startOffset":8877999,"endOffset":8878016,"count":0}],"isBlockCoverage":false},{"functionName":"DocumentHighlights","ranges":[{"startOffset":8878042,"endOffset":8878066,"count":0}],"isBlockCoverage":false},{"functionName":"ElementFlags","ranges":[{"startOffset":8878086,"endOffset":8878104,"count":0}],"isBlockCoverage":false},{"functionName":"EmitFlags","ranges":[{"startOffset":8878121,"endOffset":8878136,"count":0}],"isBlockCoverage":false},{"functionName":"EmitHint","ranges":[{"startOffset":8878152,"endOffset":8878166,"count":0}],"isBlockCoverage":false},{"functionName":"EmitOnly","ranges":[{"startOffset":8878182,"endOffset":8878196,"count":0}],"isBlockCoverage":false},{"functionName":"EndOfLineState","ranges":[{"startOffset":8878218,"endOffset":8878238,"count":0}],"isBlockCoverage":false},{"functionName":"EnumKind","ranges":[{"startOffset":8878254,"endOffset":8878268,"count":0}],"isBlockCoverage":false},{"functionName":"ExitStatus","ranges":[{"startOffset":8878286,"endOffset":8878302,"count":0}],"isBlockCoverage":false},{"functionName":"ExportKind","ranges":[{"startOffset":8878320,"endOffset":8878336,"count":0}],"isBlockCoverage":false},{"functionName":"Extension","ranges":[{"startOffset":8878353,"endOffset":8878368,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalEmitHelpers","ranges":[{"startOffset":8878395,"endOffset":8878420,"count":0}],"isBlockCoverage":false},{"functionName":"FileIncludeKind","ranges":[{"startOffset":8878443,"endOffset":8878464,"count":0}],"isBlockCoverage":false},{"functionName":"FilePreprocessingDiagnosticsKind","ranges":[{"startOffset":8878504,"endOffset":8878542,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemEntryKind","ranges":[{"startOffset":8878569,"endOffset":8878594,"count":0}],"isBlockCoverage":false},{"functionName":"FileWatcherEventKind","ranges":[{"startOffset":8878622,"endOffset":8878648,"count":0}],"isBlockCoverage":false},{"functionName":"FindAllReferences","ranges":[{"startOffset":8878673,"endOffset":8878707,"count":0}],"isBlockCoverage":false},{"functionName":"FlattenLevel","ranges":[{"startOffset":8878727,"endOffset":8878745,"count":0}],"isBlockCoverage":false},{"functionName":"FlowFlags","ranges":[{"startOffset":8878762,"endOffset":8878777,"count":0}],"isBlockCoverage":false},{"functionName":"ForegroundColorEscapeSequences","ranges":[{"startOffset":8878815,"endOffset":8878851,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionFlags","ranges":[{"startOffset":8878872,"endOffset":8878891,"count":0}],"isBlockCoverage":false},{"functionName":"GeneratedIdentifierFlags","ranges":[{"startOffset":8878923,"endOffset":8878953,"count":0}],"isBlockCoverage":false},{"functionName":"GetLiteralTextFlags","ranges":[{"startOffset":8878980,"endOffset":8879005,"count":0}],"isBlockCoverage":false},{"functionName":"GoToDefinition","ranges":[{"startOffset":8879027,"endOffset":8879058,"count":0}],"isBlockCoverage":false},{"functionName":"HighlightSpanKind","ranges":[{"startOffset":8879083,"endOffset":8879106,"count":0}],"isBlockCoverage":false},{"functionName":"IdentifierNameMap","ranges":[{"startOffset":8879131,"endOffset":8879154,"count":0}],"isBlockCoverage":false},{"functionName":"IdentifierNameMultiMap","ranges":[{"startOffset":8879184,"endOffset":8879212,"count":0}],"isBlockCoverage":false},{"functionName":"ImportKind","ranges":[{"startOffset":8879230,"endOffset":8879246,"count":0}],"isBlockCoverage":false},{"functionName":"ImportsNotUsedAsValues","ranges":[{"startOffset":8879276,"endOffset":8879304,"count":0}],"isBlockCoverage":false},{"functionName":"IndentStyle","ranges":[{"startOffset":8879323,"endOffset":8879340,"count":0}],"isBlockCoverage":false},{"functionName":"IndexFlags","ranges":[{"startOffset":8879358,"endOffset":8879374,"count":0}],"isBlockCoverage":false},{"functionName":"IndexKind","ranges":[{"startOffset":8879391,"endOffset":8879406,"count":0}],"isBlockCoverage":false},{"functionName":"InferenceFlags","ranges":[{"startOffset":8879428,"endOffset":8879448,"count":0}],"isBlockCoverage":false},{"functionName":"InferencePriority","ranges":[{"startOffset":8879473,"endOffset":8879496,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHintKind","ranges":[{"startOffset":8879517,"endOffset":8879536,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHints","ranges":[{"startOffset":8879554,"endOffset":8879581,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEmitFlags","ranges":[{"startOffset":8879606,"endOffset":8879629,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSymbolName","ranges":[{"startOffset":8879655,"endOffset":8879679,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidatedProjectKind","ranges":[{"startOffset":8879709,"endOffset":8879737,"count":0}],"isBlockCoverage":false},{"functionName":"JSDocParsingMode","ranges":[{"startOffset":8879761,"endOffset":8879783,"count":0}],"isBlockCoverage":false},{"functionName":"JsDoc","ranges":[{"startOffset":8879796,"endOffset":8879818,"count":0}],"isBlockCoverage":false},{"functionName":"JsTyping","ranges":[{"startOffset":8879834,"endOffset":8879859,"count":0}],"isBlockCoverage":false},{"functionName":"JsxEmit","ranges":[{"startOffset":8879874,"endOffset":8879887,"count":0}],"isBlockCoverage":false},{"functionName":"JsxFlags","ranges":[{"startOffset":8879903,"endOffset":8879917,"count":0}],"isBlockCoverage":false},{"functionName":"JsxReferenceKind","ranges":[{"startOffset":8879941,"endOffset":8879963,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageServiceMode","ranges":[{"startOffset":8879990,"endOffset":8880015,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageVariant","ranges":[{"startOffset":8880038,"endOffset":8880059,"count":0}],"isBlockCoverage":false},{"functionName":"LexicalEnvironmentFlags","ranges":[{"startOffset":8880090,"endOffset":8880119,"count":0}],"isBlockCoverage":false},{"functionName":"ListFormat","ranges":[{"startOffset":8880137,"endOffset":8880153,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":8880169,"endOffset":8880183,"count":0}],"isBlockCoverage":false},{"functionName":"MemberOverrideStatus","ranges":[{"startOffset":8880211,"endOffset":8880237,"count":0}],"isBlockCoverage":false},{"functionName":"ModifierFlags","ranges":[{"startOffset":8880258,"endOffset":8880277,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleDetectionKind","ranges":[{"startOffset":8880304,"endOffset":8880329,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleInstanceState","ranges":[{"startOffset":8880356,"endOffset":8880381,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleKind","ranges":[{"startOffset":8880399,"endOffset":8880415,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleResolutionKind","ranges":[{"startOffset":8880443,"endOffset":8880469,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleSpecifierEnding","ranges":[{"startOffset":8880498,"endOffset":8880525,"count":0}],"isBlockCoverage":false},{"functionName":"NavigateTo","ranges":[{"startOffset":8880543,"endOffset":8880570,"count":0}],"isBlockCoverage":false},{"functionName":"NavigationBar","ranges":[{"startOffset":8880591,"endOffset":8880621,"count":0}],"isBlockCoverage":false},{"functionName":"NewLineKind","ranges":[{"startOffset":8880640,"endOffset":8880657,"count":0}],"isBlockCoverage":false},{"functionName":"NodeBuilderFlags","ranges":[{"startOffset":8880681,"endOffset":8880703,"count":0}],"isBlockCoverage":false},{"functionName":"NodeCheckFlags","ranges":[{"startOffset":8880725,"endOffset":8880745,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFactoryFlags","ranges":[{"startOffset":8880769,"endOffset":8880791,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFlags","ranges":[{"startOffset":8880808,"endOffset":8880823,"count":0}],"isBlockCoverage":false},{"functionName":"NodeResolutionFeatures","ranges":[{"startOffset":8880853,"endOffset":8880881,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFlags","ranges":[{"startOffset":8880900,"endOffset":8880917,"count":0}],"isBlockCoverage":false},{"functionName":"OperationCanceledException","ranges":[{"startOffset":8880951,"endOffset":8880983,"count":0}],"isBlockCoverage":false},{"functionName":"OperatorPrecedence","ranges":[{"startOffset":8881009,"endOffset":8881033,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImports","ranges":[{"startOffset":8881056,"endOffset":8881088,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImportsMode","ranges":[{"startOffset":8881115,"endOffset":8881140,"count":0}],"isBlockCoverage":false},{"functionName":"OuterExpressionKinds","ranges":[{"startOffset":8881168,"endOffset":8881194,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningElementsCollector","ranges":[{"startOffset":8881228,"endOffset":8881271,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningSpanKind","ranges":[{"startOffset":8881296,"endOffset":8881319,"count":0}],"isBlockCoverage":false},{"functionName":"OutputFileType","ranges":[{"startOffset":8881341,"endOffset":8881361,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonAutoImportPreference","ranges":[{"startOffset":8881400,"endOffset":8881437,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonDependencyGroup","ranges":[{"startOffset":8881471,"endOffset":8881503,"count":0}],"isBlockCoverage":false},{"functionName":"PatternMatchKind","ranges":[{"startOffset":8881527,"endOffset":8881549,"count":0}],"isBlockCoverage":false},{"functionName":"PollingInterval","ranges":[{"startOffset":8881572,"endOffset":8881593,"count":0}],"isBlockCoverage":false},{"functionName":"PollingWatchKind","ranges":[{"startOffset":8881617,"endOffset":8881639,"count":0}],"isBlockCoverage":false},{"functionName":"PragmaKindFlags","ranges":[{"startOffset":8881662,"endOffset":8881683,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierKind","ranges":[{"startOffset":8881712,"endOffset":8881739,"count":0}],"isBlockCoverage":false},{"functionName":"ProcessLevel","ranges":[{"startOffset":8881759,"endOffset":8881777,"count":0}],"isBlockCoverage":false},{"functionName":"ProgramUpdateLevel","ranges":[{"startOffset":8881803,"endOffset":8881827,"count":0}],"isBlockCoverage":false},{"functionName":"QuotePreference","ranges":[{"startOffset":8881850,"endOffset":8881871,"count":0}],"isBlockCoverage":false},{"functionName":"RelationComparisonResult","ranges":[{"startOffset":8881903,"endOffset":8881933,"count":0}],"isBlockCoverage":false},{"functionName":"Rename","ranges":[{"startOffset":8881947,"endOffset":8881970,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKind","ranges":[{"startOffset":8881995,"endOffset":8882018,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKindModifier","ranges":[{"startOffset":8882051,"endOffset":8882082,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptKind","ranges":[{"startOffset":8882100,"endOffset":8882116,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptSnapshot","ranges":[{"startOffset":8882138,"endOffset":8882158,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptTarget","ranges":[{"startOffset":8882178,"endOffset":8882196,"count":0}],"isBlockCoverage":false},{"functionName":"SemanticClassificationFormat","ranges":[{"startOffset":8882232,"endOffset":8882266,"count":0}],"isBlockCoverage":false},{"functionName":"SemanticMeaning","ranges":[{"startOffset":8882289,"endOffset":8882310,"count":0}],"isBlockCoverage":false},{"functionName":"SemicolonPreference","ranges":[{"startOffset":8882337,"endOffset":8882362,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureCheckMode","ranges":[{"startOffset":8882388,"endOffset":8882412,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureFlags","ranges":[{"startOffset":8882434,"endOffset":8882454,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureHelp","ranges":[{"startOffset":8882475,"endOffset":8882505,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureKind","ranges":[{"startOffset":8882526,"endOffset":8882545,"count":0}],"isBlockCoverage":false},{"functionName":"SmartSelectionRange","ranges":[{"startOffset":8882572,"endOffset":8882608,"count":0}],"isBlockCoverage":false},{"functionName":"SnippetKind","ranges":[{"startOffset":8882627,"endOffset":8882644,"count":0}],"isBlockCoverage":false},{"functionName":"SortKind","ranges":[{"startOffset":8882660,"endOffset":8882674,"count":0}],"isBlockCoverage":false},{"functionName":"StructureIsReused","ranges":[{"startOffset":8882699,"endOffset":8882722,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolAccessibility","ranges":[{"startOffset":8882749,"endOffset":8882774,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplay","ranges":[{"startOffset":8882795,"endOffset":8882825,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplayPartKind","ranges":[{"startOffset":8882854,"endOffset":8882881,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFlags","ranges":[{"startOffset":8882900,"endOffset":8882917,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFormatFlags","ranges":[{"startOffset":8882942,"endOffset":8882965,"count":0}],"isBlockCoverage":false},{"functionName":"SyntaxKind","ranges":[{"startOffset":8882983,"endOffset":8882999,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticSymbolKind","ranges":[{"startOffset":8883026,"endOffset":8883051,"count":0}],"isBlockCoverage":false},{"functionName":"Ternary","ranges":[{"startOffset":8883066,"endOffset":8883079,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledCancellationToken","ranges":[{"startOffset":8883113,"endOffset":8883145,"count":0}],"isBlockCoverage":false},{"functionName":"TokenClass","ranges":[{"startOffset":8883163,"endOffset":8883179,"count":0}],"isBlockCoverage":false},{"functionName":"TokenFlags","ranges":[{"startOffset":8883197,"endOffset":8883213,"count":0}],"isBlockCoverage":false},{"functionName":"TransformFlags","ranges":[{"startOffset":8883235,"endOffset":8883255,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFacts","ranges":[{"startOffset":8883272,"endOffset":8883287,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFlags","ranges":[{"startOffset":8883304,"endOffset":8883319,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFormatFlags","ranges":[{"startOffset":8883342,"endOffset":8883363,"count":0}],"isBlockCoverage":false},{"functionName":"TypeMapKind","ranges":[{"startOffset":8883382,"endOffset":8883399,"count":0}],"isBlockCoverage":false},{"functionName":"TypePredicateKind","ranges":[{"startOffset":8883424,"endOffset":8883447,"count":0}],"isBlockCoverage":false},{"functionName":"TypeReferenceSerializationKind","ranges":[{"startOffset":8883485,"endOffset":8883521,"count":0}],"isBlockCoverage":false},{"functionName":"UnionReduction","ranges":[{"startOffset":8883543,"endOffset":8883563,"count":0}],"isBlockCoverage":false},{"functionName":"UpToDateStatusType","ranges":[{"startOffset":8883589,"endOffset":8883613,"count":0}],"isBlockCoverage":false},{"functionName":"VarianceFlags","ranges":[{"startOffset":8883634,"endOffset":8883653,"count":0}],"isBlockCoverage":false},{"functionName":"Version","ranges":[{"startOffset":8883668,"endOffset":8883681,"count":0}],"isBlockCoverage":false},{"functionName":"VersionRange","ranges":[{"startOffset":8883701,"endOffset":8883719,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryFlags","ranges":[{"startOffset":8883746,"endOffset":8883771,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryKind","ranges":[{"startOffset":8883797,"endOffset":8883821,"count":0}],"isBlockCoverage":false},{"functionName":"WatchFileKind","ranges":[{"startOffset":8883842,"endOffset":8883861,"count":0}],"isBlockCoverage":false},{"functionName":"WatchLogLevel","ranges":[{"startOffset":8883882,"endOffset":8883901,"count":0}],"isBlockCoverage":false},{"functionName":"WatchType","ranges":[{"startOffset":8883918,"endOffset":8883933,"count":0}],"isBlockCoverage":false},{"functionName":"accessPrivateIdentifier","ranges":[{"startOffset":8883964,"endOffset":8883993,"count":0}],"isBlockCoverage":false},{"functionName":"addDisposableResourceHelper","ranges":[{"startOffset":8884028,"endOffset":8884061,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlags","ranges":[{"startOffset":8884081,"endOffset":8884099,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelper","ranges":[{"startOffset":8884120,"endOffset":8884139,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelpers","ranges":[{"startOffset":8884161,"endOffset":8884181,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalEmitFlags","ranges":[{"startOffset":8884209,"endOffset":8884235,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeFactoryPatcher","ranges":[{"startOffset":8884264,"endOffset":8884291,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectAllocatorPatcher","ranges":[{"startOffset":8884324,"endOffset":8884355,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":8884371,"endOffset":8884385,"count":0}],"isBlockCoverage":false},{"functionName":"addRelatedInfo","ranges":[{"startOffset":8884407,"endOffset":8884427,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticLeadingComment","ranges":[{"startOffset":8884461,"endOffset":8884493,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticTrailingComment","ranges":[{"startOffset":8884528,"endOffset":8884561,"count":0}],"isBlockCoverage":false},{"functionName":"addToSeen","ranges":[{"startOffset":8884578,"endOffset":8884593,"count":0}],"isBlockCoverage":false},{"functionName":"advancedAsyncSuperHelper","ranges":[{"startOffset":8884625,"endOffset":8884655,"count":0}],"isBlockCoverage":false},{"functionName":"affectsDeclarationPathOptionDeclarations","ranges":[{"startOffset":8884703,"endOffset":8884749,"count":0}],"isBlockCoverage":false},{"functionName":"affectsEmitOptionDeclarations","ranges":[{"startOffset":8884786,"endOffset":8884821,"count":0}],"isBlockCoverage":false},{"functionName":"allKeysStartWithDot","ranges":[{"startOffset":8884848,"endOffset":8884873,"count":0}],"isBlockCoverage":false},{"functionName":"altDirectorySeparator","ranges":[{"startOffset":8884902,"endOffset":8884929,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":8884940,"endOffset":8884949,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":8884963,"endOffset":8884975,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfUnique","ranges":[{"startOffset":8884997,"endOffset":8885017,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFrom","ranges":[{"startOffset":8885034,"endOffset":8885049,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEqualTo","ranges":[{"startOffset":8885071,"endOffset":8885091,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsHomogeneous","ranges":[{"startOffset":8885117,"endOffset":8885141,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsSorted","ranges":[{"startOffset":8885162,"endOffset":8885181,"count":0}],"isBlockCoverage":false},{"functionName":"arrayOf","ranges":[{"startOffset":8885196,"endOffset":8885209,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReverseIterator","ranges":[{"startOffset":8885237,"endOffset":8885263,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMap","ranges":[{"startOffset":8885281,"endOffset":8885297,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMultiMap","ranges":[{"startOffset":8885320,"endOffset":8885341,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToNumericMap","ranges":[{"startOffset":8885366,"endOffset":8885389,"count":0}],"isBlockCoverage":false},{"functionName":"arraysEqual","ranges":[{"startOffset":8885408,"endOffset":8885425,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":8885443,"endOffset":8885459,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":8885473,"endOffset":8885485,"count":0}],"isBlockCoverage":false},{"functionName":"assignHelper","ranges":[{"startOffset":8885505,"endOffset":8885523,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDelegator","ranges":[{"startOffset":8885545,"endOffset":8885565,"count":0}],"isBlockCoverage":false},{"functionName":"asyncGeneratorHelper","ranges":[{"startOffset":8885593,"endOffset":8885619,"count":0}],"isBlockCoverage":false},{"functionName":"asyncSuperHelper","ranges":[{"startOffset":8885643,"endOffset":8885665,"count":0}],"isBlockCoverage":false},{"functionName":"asyncValues","ranges":[{"startOffset":8885684,"endOffset":8885701,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostics","ranges":[{"startOffset":8885732,"endOffset":8885761,"count":0}],"isBlockCoverage":false},{"functionName":"awaitHelper","ranges":[{"startOffset":8885780,"endOffset":8885797,"count":0}],"isBlockCoverage":false},{"functionName":"awaiterHelper","ranges":[{"startOffset":8885818,"endOffset":8885837,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":8885857,"endOffset":8885875,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":8885895,"endOffset":8885913,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":8885933,"endOffset":8885951,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearchKey","ranges":[{"startOffset":8885974,"endOffset":8885995,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile","ranges":[{"startOffset":8886017,"endOffset":8886037,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoCharacterSpans","ranges":[{"startOffset":8886068,"endOffset":8886097,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoWordSpans","ranges":[{"startOffset":8886123,"endOffset":8886147,"count":0}],"isBlockCoverage":false},{"functionName":"buildLinkParts","ranges":[{"startOffset":8886169,"endOffset":8886189,"count":0}],"isBlockCoverage":false},{"functionName":"buildOpts","ranges":[{"startOffset":8886206,"endOffset":8886221,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverload","ranges":[{"startOffset":8886242,"endOffset":8886261,"count":0}],"isBlockCoverage":false},{"functionName":"bundlerModuleNameResolver","ranges":[{"startOffset":8886294,"endOffset":8886325,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToAsync","ranges":[{"startOffset":8886354,"endOffset":8886381,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveDecorators","ranges":[{"startOffset":8886406,"endOffset":8886429,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveExportModifier","ranges":[{"startOffset":8886458,"endOffset":8886485,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveFlowNode","ranges":[{"startOffset":8886508,"endOffset":8886529,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalDecorators","ranges":[{"startOffset":8886561,"endOffset":8886591,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalModifiers","ranges":[{"startOffset":8886622,"endOffset":8886651,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalType","ranges":[{"startOffset":8886677,"endOffset":8886701,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalTypeParameters","ranges":[{"startOffset":8886737,"endOffset":8886771,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveJSDoc","ranges":[{"startOffset":8886791,"endOffset":8886809,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLocals","ranges":[{"startOffset":8886830,"endOffset":8886849,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModifiers","ranges":[{"startOffset":8886873,"endOffset":8886895,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveSymbol","ranges":[{"startOffset":8886916,"endOffset":8886935,"count":0}],"isBlockCoverage":false},{"functionName":"canJsonReportNoInputFiles","ranges":[{"startOffset":8886968,"endOffset":8886999,"count":0}],"isBlockCoverage":false},{"functionName":"canProduceDiagnostics","ranges":[{"startOffset":8887028,"endOffset":8887055,"count":0}],"isBlockCoverage":false},{"functionName":"canUsePropertyAccess","ranges":[{"startOffset":8887083,"endOffset":8887109,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectingLocation","ranges":[{"startOffset":8887142,"endOffset":8887173,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAtTypes","ranges":[{"startOffset":8887196,"endOffset":8887217,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFile","ranges":[{"startOffset":8887248,"endOffset":8887277,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProduct","ranges":[{"startOffset":8887301,"endOffset":8887323,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":8887335,"endOffset":8887345,"count":0}],"isBlockCoverage":false},{"functionName":"chainBundle","ranges":[{"startOffset":8887364,"endOffset":8887381,"count":0}],"isBlockCoverage":false},{"functionName":"chainDiagnosticMessages","ranges":[{"startOffset":8887412,"endOffset":8887441,"count":0}],"isBlockCoverage":false},{"functionName":"changeAnyExtension","ranges":[{"startOffset":8887467,"endOffset":8887491,"count":0}],"isBlockCoverage":false},{"functionName":"changeCompilerHostLikeToUseCache","ranges":[{"startOffset":8887531,"endOffset":8887569,"count":0}],"isBlockCoverage":false},{"functionName":"changeExtension","ranges":[{"startOffset":8887592,"endOffset":8887613,"count":0}],"isBlockCoverage":false},{"functionName":"changeFullExtension","ranges":[{"startOffset":8887640,"endOffset":8887665,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectModuleResolution","ranges":[{"startOffset":8887702,"endOffset":8887737,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectingProgramStructure","ranges":[{"startOffset":8887777,"endOffset":8887815,"count":0}],"isBlockCoverage":false},{"functionName":"childIsDecorated","ranges":[{"startOffset":8887839,"endOffset":8887861,"count":0}],"isBlockCoverage":false},{"functionName":"classElementOrClassElementParameterIsDecorated","ranges":[{"startOffset":8887915,"endOffset":8887967,"count":0}],"isBlockCoverage":false},{"functionName":"classHasClassThisAssignment","ranges":[{"startOffset":8888002,"endOffset":8888035,"count":0}],"isBlockCoverage":false},{"functionName":"classHasDeclaredOrExplicitlyAssignedName","ranges":[{"startOffset":8888083,"endOffset":8888129,"count":0}],"isBlockCoverage":false},{"functionName":"classHasExplicitlyAssignedName","ranges":[{"startOffset":8888167,"endOffset":8888203,"count":0}],"isBlockCoverage":false},{"functionName":"classOrConstructorParameterIsDecorated","ranges":[{"startOffset":8888249,"endOffset":8888293,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateFieldGetHelper","ranges":[{"startOffset":8888327,"endOffset":8888359,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateFieldInHelper","ranges":[{"startOffset":8888392,"endOffset":8888423,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateFieldSetHelper","ranges":[{"startOffset":8888457,"endOffset":8888489,"count":0}],"isBlockCoverage":false},{"functionName":"classicNameResolver","ranges":[{"startOffset":8888516,"endOffset":8888541,"count":0}],"isBlockCoverage":false},{"functionName":"classifier","ranges":[{"startOffset":8888559,"endOffset":8888586,"count":0}],"isBlockCoverage":false},{"functionName":"cleanExtendedConfigCache","ranges":[{"startOffset":8888618,"endOffset":8888648,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":8888661,"endOffset":8888672,"count":0}],"isBlockCoverage":false},{"functionName":"clearMap","ranges":[{"startOffset":8888688,"endOffset":8888702,"count":0}],"isBlockCoverage":false},{"functionName":"clearSharedExtendedConfigFileWatcher","ranges":[{"startOffset":8888746,"endOffset":8888788,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyAccess","ranges":[{"startOffset":8888819,"endOffset":8888848,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyOrElementAccess","ranges":[{"startOffset":8888888,"endOffset":8888926,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":8888939,"endOffset":8888950,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCompilerOptions","ranges":[{"startOffset":8888978,"endOffset":8889004,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcher","ranges":[{"startOffset":8889028,"endOffset":8889050,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcherOf","ranges":[{"startOffset":8889076,"endOffset":8889100,"count":0}],"isBlockCoverage":false},{"functionName":"codefix","ranges":[{"startOffset":8889115,"endOffset":8889139,"count":0}],"isBlockCoverage":false},{"functionName":"collapseTextChangeRangesAcrossMultipleVersions","ranges":[{"startOffset":8889193,"endOffset":8889245,"count":0}],"isBlockCoverage":false},{"functionName":"collectExternalModuleInfo","ranges":[{"startOffset":8889278,"endOffset":8889309,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":8889324,"endOffset":8889337,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":8889357,"endOffset":8889375,"count":0}],"isBlockCoverage":false},{"functionName":"commentPragmas","ranges":[{"startOffset":8889397,"endOffset":8889417,"count":0}],"isBlockCoverage":false},{"functionName":"commonOptionsWithBuild","ranges":[{"startOffset":8889447,"endOffset":8889475,"count":0}],"isBlockCoverage":false},{"functionName":"commonPackageFolders","ranges":[{"startOffset":8889503,"endOffset":8889529,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":8889544,"endOffset":8889557,"count":0}],"isBlockCoverage":false},{"functionName":"compareBooleans","ranges":[{"startOffset":8889580,"endOffset":8889601,"count":0}],"isBlockCoverage":false},{"functionName":"compareDataObjects","ranges":[{"startOffset":8889627,"endOffset":8889651,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnostics","ranges":[{"startOffset":8889677,"endOffset":8889701,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnosticsSkipRelatedInformation","ranges":[{"startOffset":8889749,"endOffset":8889795,"count":0}],"isBlockCoverage":false},{"functionName":"compareEmitHelpers","ranges":[{"startOffset":8889821,"endOffset":8889845,"count":0}],"isBlockCoverage":false},{"functionName":"compareNumberOfDirectorySeparators","ranges":[{"startOffset":8889887,"endOffset":8889927,"count":0}],"isBlockCoverage":false},{"functionName":"comparePaths","ranges":[{"startOffset":8889947,"endOffset":8889965,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseInsensitive","ranges":[{"startOffset":8890000,"endOffset":8890033,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseSensitive","ranges":[{"startOffset":8890066,"endOffset":8890097,"count":0}],"isBlockCoverage":false},{"functionName":"comparePatternKeys","ranges":[{"startOffset":8890123,"endOffset":8890147,"count":0}],"isBlockCoverage":false},{"functionName":"compareProperties","ranges":[{"startOffset":8890172,"endOffset":8890195,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitive","ranges":[{"startOffset":8890232,"endOffset":8890267,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitiveEslintCompatible","ranges":[{"startOffset":8890320,"endOffset":8890371,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitive","ranges":[{"startOffset":8890406,"endOffset":8890439,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitiveUI","ranges":[{"startOffset":8890476,"endOffset":8890511,"count":0}],"isBlockCoverage":false},{"functionName":"compareTextSpans","ranges":[{"startOffset":8890535,"endOffset":8890557,"count":0}],"isBlockCoverage":false},{"functionName":"compareValues","ranges":[{"startOffset":8890578,"endOffset":8890597,"count":0}],"isBlockCoverage":false},{"functionName":"compileOnSaveCommandLineOption","ranges":[{"startOffset":8890635,"endOffset":8890671,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectDeclarationPath","ranges":[{"startOffset":8890715,"endOffset":8890757,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectEmit","ranges":[{"startOffset":8890790,"endOffset":8890821,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectSemanticDiagnostics","ranges":[{"startOffset":8890869,"endOffset":8890915,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsDidYouMeanDiagnostics","ranges":[{"startOffset":8890959,"endOffset":8891001,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsIndicateEsModules","ranges":[{"startOffset":8891041,"endOffset":8891079,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":8891094,"endOffset":8891107,"count":0}],"isBlockCoverage":false},{"functionName":"computeCommonSourceDirectoryOfFilenames","ranges":[{"startOffset":8891154,"endOffset":8891199,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineAndCharacterOfPosition","ranges":[{"startOffset":8891240,"endOffset":8891279,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineOfPosition","ranges":[{"startOffset":8891308,"endOffset":8891335,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineStarts","ranges":[{"startOffset":8891360,"endOffset":8891383,"count":0}],"isBlockCoverage":false},{"functionName":"computePositionOfLineAndCharacter","ranges":[{"startOffset":8891424,"endOffset":8891463,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignature","ranges":[{"startOffset":8891487,"endOffset":8891509,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignatureWithDiagnostics","ranges":[{"startOffset":8891548,"endOffset":8891585,"count":0}],"isBlockCoverage":false},{"functionName":"computeSuggestionDiagnostics","ranges":[{"startOffset":8891621,"endOffset":8891655,"count":0}],"isBlockCoverage":false},{"functionName":"computedOptions","ranges":[{"startOffset":8891678,"endOffset":8891699,"count":0}],"isBlockCoverage":false},{"functionName":"concatenate","ranges":[{"startOffset":8891718,"endOffset":8891735,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateDiagnosticMessageChains","ranges":[{"startOffset":8891777,"endOffset":8891817,"count":0}],"isBlockCoverage":false},{"functionName":"consumesNodeCoreModules","ranges":[{"startOffset":8891848,"endOffset":8891877,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":8891893,"endOffset":8891907,"count":0}],"isBlockCoverage":false},{"functionName":"containsIgnoredPath","ranges":[{"startOffset":8891934,"endOffset":8891959,"count":0}],"isBlockCoverage":false},{"functionName":"containsObjectRestOrSpread","ranges":[{"startOffset":8891993,"endOffset":8892025,"count":0}],"isBlockCoverage":false},{"functionName":"containsParseError","ranges":[{"startOffset":8892051,"endOffset":8892075,"count":0}],"isBlockCoverage":false},{"functionName":"containsPath","ranges":[{"startOffset":8892095,"endOffset":8892113,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsForTelemetry","ranges":[{"startOffset":8892155,"endOffset":8892195,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsFromJson","ranges":[{"startOffset":8892233,"endOffset":8892269,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOption","ranges":[{"startOffset":8892294,"endOffset":8892317,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBase64","ranges":[{"startOffset":8892340,"endOffset":8892361,"count":0}],"isBlockCoverage":false},{"functionName":"convertToJson","ranges":[{"startOffset":8892382,"endOffset":8892401,"count":0}],"isBlockCoverage":false},{"functionName":"convertToObject","ranges":[{"startOffset":8892424,"endOffset":8892445,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionsWithAbsolutePaths","ranges":[{"startOffset":8892486,"endOffset":8892525,"count":0}],"isBlockCoverage":false},{"functionName":"convertToRelativePath","ranges":[{"startOffset":8892554,"endOffset":8892581,"count":0}],"isBlockCoverage":false},{"functionName":"convertToTSConfig","ranges":[{"startOffset":8892606,"endOffset":8892629,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisitionFromJson","ranges":[{"startOffset":8892667,"endOffset":8892703,"count":0}],"isBlockCoverage":false},{"functionName":"copyComments","ranges":[{"startOffset":8892723,"endOffset":8892741,"count":0}],"isBlockCoverage":false},{"functionName":"copyEntries","ranges":[{"startOffset":8892760,"endOffset":8892777,"count":0}],"isBlockCoverage":false},{"functionName":"copyLeadingComments","ranges":[{"startOffset":8892804,"endOffset":8892829,"count":0}],"isBlockCoverage":false},{"functionName":"copyProperties","ranges":[{"startOffset":8892851,"endOffset":8892871,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingAsLeadingComments","ranges":[{"startOffset":8892908,"endOffset":8892943,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingComments","ranges":[{"startOffset":8892971,"endOffset":8892997,"count":0}],"isBlockCoverage":false},{"functionName":"couldStartTrivia","ranges":[{"startOffset":8893021,"endOffset":8893043,"count":0}],"isBlockCoverage":false},{"functionName":"countWhere","ranges":[{"startOffset":8893061,"endOffset":8893077,"count":0}],"isBlockCoverage":false},{"functionName":"createAbstractBuilder","ranges":[{"startOffset":8893106,"endOffset":8893133,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyBackingField","ranges":[{"startOffset":8893175,"endOffset":8893215,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyGetRedirector","ranges":[{"startOffset":8893258,"endOffset":8893299,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertySetRedirector","ranges":[{"startOffset":8893342,"endOffset":8893383,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNodeFactory","ranges":[{"startOffset":8893412,"endOffset":8893439,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpressionTrampoline","ranges":[{"startOffset":8893479,"endOffset":8893517,"count":0}],"isBlockCoverage":false},{"functionName":"createBindingHelper","ranges":[{"startOffset":8893544,"endOffset":8893569,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildInfo","ranges":[{"startOffset":8893592,"endOffset":8893613,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgram","ranges":[{"startOffset":8893641,"endOffset":8893667,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramUsingProgramBuildInfo","ranges":[{"startOffset":8893716,"endOffset":8893763,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderStatusReporter","ranges":[{"startOffset":8893798,"endOffset":8893831,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheWithRedirects","ranges":[{"startOffset":8893863,"endOffset":8893893,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheableExportInfoMap","ranges":[{"startOffset":8893929,"endOffset":8893963,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDirectoryStructureHost","ranges":[{"startOffset":8894005,"endOffset":8894045,"count":0}],"isBlockCoverage":false},{"functionName":"createClassNamedEvaluationHelperBlock","ranges":[{"startOffset":8894090,"endOffset":8894133,"count":0}],"isBlockCoverage":false},{"functionName":"createClassThisAssignmentBlock","ranges":[{"startOffset":8894171,"endOffset":8894207,"count":0}],"isBlockCoverage":false},{"functionName":"createClassifier","ranges":[{"startOffset":8894231,"endOffset":8894253,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentDirectivesMap","ranges":[{"startOffset":8894287,"endOffset":8894319,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnostic","ranges":[{"startOffset":8894351,"endOffset":8894381,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticForInvalidCustomType","ranges":[{"startOffset":8894433,"endOffset":8894483,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticFromMessageChain","ranges":[{"startOffset":8894531,"endOffset":8894577,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHost","ranges":[{"startOffset":8894603,"endOffset":8894627,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostFromProgramHost","ranges":[{"startOffset":8894668,"endOffset":8894707,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostWorker","ranges":[{"startOffset":8894739,"endOffset":8894769,"count":0}],"isBlockCoverage":false},{"functionName":"createDetachedDiagnostic","ranges":[{"startOffset":8894801,"endOffset":8894831,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticCollection","ranges":[{"startOffset":8894865,"endOffset":8894897,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForFileFromMessageChain","ranges":[{"startOffset":8894944,"endOffset":8894989,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNode","ranges":[{"startOffset":8895020,"endOffset":8895049,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArray","ranges":[{"startOffset":8895085,"endOffset":8895119,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArrayFromMessageChain","ranges":[{"startOffset":8895171,"endOffset":8895221,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeFromMessageChain","ranges":[{"startOffset":8895268,"endOffset":8895313,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeInSourceFile","ranges":[{"startOffset":8895356,"endOffset":8895397,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForRange","ranges":[{"startOffset":8895429,"endOffset":8895459,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticMessageChainFromDiagnostic","ranges":[{"startOffset":8895509,"endOffset":8895557,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticReporter","ranges":[{"startOffset":8895589,"endOffset":8895619,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentPositionMapper","ranges":[{"startOffset":8895655,"endOffset":8895689,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistry","ranges":[{"startOffset":8895719,"endOffset":8895747,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistryInternal","ranges":[{"startOffset":8895785,"endOffset":8895821,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitAndSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":8895875,"endOffset":8895927,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitHelperFactory","ranges":[{"startOffset":8895958,"endOffset":8895987,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyExports","ranges":[{"startOffset":8896013,"endOffset":8896037,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxElement","ranges":[{"startOffset":8896074,"endOffset":8896109,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxFragment","ranges":[{"startOffset":8896147,"endOffset":8896183,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForObjectLiteralElementLike","ranges":[{"startOffset":8896234,"endOffset":8896283,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyName","ranges":[{"startOffset":8896322,"endOffset":8896359,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionFromEntityName","ranges":[{"startOffset":8896397,"endOffset":8896433,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalHelpersImportDeclarationIfNeeded","ranges":[{"startOffset":8896487,"endOffset":8896539,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnostic","ranges":[{"startOffset":8896567,"endOffset":8896593,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnosticFromMessageChain","ranges":[{"startOffset":8896637,"endOffset":8896679,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfBindingStatement","ranges":[{"startOffset":8896714,"endOffset":8896747,"count":0}],"isBlockCoverage":false},{"functionName":"createGetCanonicalFileName","ranges":[{"startOffset":8896781,"endOffset":8896813,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSourceFile","ranges":[{"startOffset":8896840,"endOffset":8896865,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNode","ranges":[{"startOffset":8896918,"endOffset":8896969,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNodeName","ranges":[{"startOffset":8897026,"endOffset":8897081,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolWalker","ranges":[{"startOffset":8897110,"endOffset":8897137,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalCompilerHost","ranges":[{"startOffset":8897174,"endOffset":8897209,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalProgram","ranges":[{"startOffset":8897241,"endOffset":8897271,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFiles","ranges":[{"startOffset":8897295,"endOffset":8897317,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFilesWithFilePaths","ranges":[{"startOffset":8897354,"endOffset":8897389,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFilesWithFileTexts","ranges":[{"startOffset":8897426,"endOffset":8897461,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpression","ranges":[{"startOffset":8897495,"endOffset":8897527,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageService","ranges":[{"startOffset":8897556,"endOffset":8897583,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageServiceSourceFile","ranges":[{"startOffset":8897622,"endOffset":8897659,"count":0}],"isBlockCoverage":false},{"functionName":"createMemberAccessForPropertyName","ranges":[{"startOffset":8897700,"endOffset":8897739,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCache","ranges":[{"startOffset":8897767,"endOffset":8897793,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCacheKey","ranges":[{"startOffset":8897824,"endOffset":8897853,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleNotFoundChain","ranges":[{"startOffset":8897886,"endOffset":8897917,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionCache","ranges":[{"startOffset":8897952,"endOffset":8897985,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoader","ranges":[{"startOffset":8898021,"endOffset":8898055,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoaderUsingGlobalCache","ranges":[{"startOffset":8898107,"endOffset":8898157,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierResolutionHost","ranges":[{"startOffset":8898200,"endOffset":8898241,"count":0}],"isBlockCoverage":false},{"functionName":"createMultiMap","ranges":[{"startOffset":8898263,"endOffset":8898283,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeConverters","ranges":[{"startOffset":8898311,"endOffset":8898337,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeFactory","ranges":[{"startOffset":8898362,"endOffset":8898385,"count":0}],"isBlockCoverage":false},{"functionName":"createOptionNameMap","ranges":[{"startOffset":8898412,"endOffset":8898437,"count":0}],"isBlockCoverage":false},{"functionName":"createOverload","ranges":[{"startOffset":8898459,"endOffset":8898479,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonImportFilter","ranges":[{"startOffset":8898516,"endOffset":8898551,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfo","ranges":[{"startOffset":8898580,"endOffset":8898607,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizerRules","ranges":[{"startOffset":8898639,"endOffset":8898669,"count":0}],"isBlockCoverage":false},{"functionName":"createPatternMatcher","ranges":[{"startOffset":8898697,"endOffset":8898723,"count":0}],"isBlockCoverage":false},{"functionName":"createPrependNodes","ranges":[{"startOffset":8898749,"endOffset":8898773,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinter","ranges":[{"startOffset":8898794,"endOffset":8898813,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithDefaults","ranges":[{"startOffset":8898846,"endOffset":8898877,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveComments","ranges":[{"startOffset":8898916,"endOffset":8898953,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsNeverAsciiEscape","ranges":[{"startOffset":8899008,"endOffset":8899061,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsOmitTrailingSemicolon","ranges":[{"startOffset":8899121,"endOffset":8899179,"count":0}],"isBlockCoverage":false},{"functionName":"createProgram","ranges":[{"startOffset":8899200,"endOffset":8899219,"count":0}],"isBlockCoverage":false},{"functionName":"createProgramHost","ranges":[{"startOffset":8899244,"endOffset":8899267,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameNodeForIdentifierOrLiteral","ranges":[{"startOffset":8899319,"endOffset":8899369,"count":0}],"isBlockCoverage":false},{"functionName":"createQueue","ranges":[{"startOffset":8899388,"endOffset":8899405,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":8899424,"endOffset":8899441,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectedBuilderProgram","ranges":[{"startOffset":8899479,"endOffset":8899515,"count":0}],"isBlockCoverage":false},{"functionName":"createResolutionCache","ranges":[{"startOffset":8899544,"endOffset":8899571,"count":0}],"isBlockCoverage":false},{"functionName":"createRuntimeTypeSerializer","ranges":[{"startOffset":8899606,"endOffset":8899639,"count":0}],"isBlockCoverage":false},{"functionName":"createScanner","ranges":[{"startOffset":8899660,"endOffset":8899679,"count":0}],"isBlockCoverage":false},{"functionName":"createSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":8899726,"endOffset":8899771,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":8899788,"endOffset":8899803,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilder","ranges":[{"startOffset":8899832,"endOffset":8899859,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHost","ranges":[{"startOffset":8899892,"endOffset":8899923,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatch","ranges":[{"startOffset":8899961,"endOffset":8899997,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatchHost","ranges":[{"startOffset":8900039,"endOffset":8900079,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":8900104,"endOffset":8900127,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile","ranges":[{"startOffset":8900151,"endOffset":8900173,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapGenerator","ranges":[{"startOffset":8900205,"endOffset":8900235,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapSource","ranges":[{"startOffset":8900264,"endOffset":8900291,"count":0}],"isBlockCoverage":false},{"functionName":"createSuperAccessVariableStatement","ranges":[{"startOffset":8900333,"endOffset":8900373,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbolTable","ranges":[{"startOffset":8900398,"endOffset":8900421,"count":0}],"isBlockCoverage":false},{"functionName":"createSymlinkCache","ranges":[{"startOffset":8900447,"endOffset":8900471,"count":0}],"isBlockCoverage":false},{"functionName":"createSystemWatchFunctions","ranges":[{"startOffset":8900505,"endOffset":8900537,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChange","ranges":[{"startOffset":8900561,"endOffset":8900583,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeFromStartLength","ranges":[{"startOffset":8900622,"endOffset":8900659,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeRange","ranges":[{"startOffset":8900688,"endOffset":8900715,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromNode","ranges":[{"startOffset":8900746,"endOffset":8900775,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromSpan","ranges":[{"startOffset":8900806,"endOffset":8900835,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpan","ranges":[{"startOffset":8900857,"endOffset":8900877,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromBounds","ranges":[{"startOffset":8900909,"endOffset":8900939,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromNode","ranges":[{"startOffset":8900969,"endOffset":8900997,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromRange","ranges":[{"startOffset":8901028,"endOffset":8901057,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromStringLiteralLikeContent","ranges":[{"startOffset":8901107,"endOffset":8901155,"count":0}],"isBlockCoverage":false},{"functionName":"createTextWriter","ranges":[{"startOffset":8901179,"endOffset":8901201,"count":0}],"isBlockCoverage":false},{"functionName":"createTokenRange","ranges":[{"startOffset":8901225,"endOffset":8901247,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeChecker","ranges":[{"startOffset":8901272,"endOffset":8901295,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceDirectiveResolutionCache","ranges":[{"startOffset":8901346,"endOffset":8901395,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceResolutionLoader","ranges":[{"startOffset":8901438,"endOffset":8901479,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedSourceFile","ranges":[{"startOffset":8901511,"endOffset":8901541,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost","ranges":[{"startOffset":8901572,"endOffset":8901602,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfConfigFile","ranges":[{"startOffset":8901645,"endOffset":8901686,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfFilesAndCompilerOptions","ranges":[{"startOffset":8901742,"endOffset":8901796,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactory","ranges":[{"startOffset":8901822,"endOffset":8901846,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchHost","ranges":[{"startOffset":8901869,"endOffset":8901890,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchProgram","ranges":[{"startOffset":8901916,"endOffset":8901940,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter","ranges":[{"startOffset":8901973,"endOffset":8902004,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteFileMeasuringIO","ranges":[{"startOffset":8902038,"endOffset":8902070,"count":0}],"isBlockCoverage":false},{"functionName":"declarationNameToString","ranges":[{"startOffset":8902101,"endOffset":8902130,"count":0}],"isBlockCoverage":false},{"functionName":"decodeMappings","ranges":[{"startOffset":8902152,"endOffset":8902172,"count":0}],"isBlockCoverage":false},{"functionName":"decodedTextSpanIntersectsWith","ranges":[{"startOffset":8902209,"endOffset":8902244,"count":0}],"isBlockCoverage":false},{"functionName":"decorateHelper","ranges":[{"startOffset":8902266,"endOffset":8902286,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicate","ranges":[{"startOffset":8902305,"endOffset":8902322,"count":0}],"isBlockCoverage":false},{"functionName":"defaultIncludeSpec","ranges":[{"startOffset":8902348,"endOffset":8902372,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInitCompilerOptions","ranges":[{"startOffset":8902406,"endOffset":8902438,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMaximumTruncationLength","ranges":[{"startOffset":8902476,"endOffset":8902512,"count":0}],"isBlockCoverage":false},{"functionName":"detectSortCaseSensitivity","ranges":[{"startOffset":8902545,"endOffset":8902576,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticCategoryName","ranges":[{"startOffset":8902606,"endOffset":8902634,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticToString","ranges":[{"startOffset":8902660,"endOffset":8902684,"count":0}],"isBlockCoverage":false},{"functionName":"directoryProbablyExists","ranges":[{"startOffset":8902715,"endOffset":8902744,"count":0}],"isBlockCoverage":false},{"functionName":"directorySeparator","ranges":[{"startOffset":8902770,"endOffset":8902794,"count":0}],"isBlockCoverage":false},{"functionName":"displayPart","ranges":[{"startOffset":8902813,"endOffset":8902830,"count":0}],"isBlockCoverage":false},{"functionName":"displayPartsToString","ranges":[{"startOffset":8902858,"endOffset":8902884,"count":0}],"isBlockCoverage":false},{"functionName":"disposeEmitNodes","ranges":[{"startOffset":8902908,"endOffset":8902930,"count":0}],"isBlockCoverage":false},{"functionName":"disposeResourcesHelper","ranges":[{"startOffset":8902960,"endOffset":8902988,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpansEqual","ranges":[{"startOffset":8903014,"endOffset":8903038,"count":0}],"isBlockCoverage":false},{"functionName":"dumpTracingLegend","ranges":[{"startOffset":8903063,"endOffset":8903086,"count":0}],"isBlockCoverage":false},{"functionName":"elementAt","ranges":[{"startOffset":8903103,"endOffset":8903118,"count":0}],"isBlockCoverage":false},{"functionName":"elideNodes","ranges":[{"startOffset":8903136,"endOffset":8903152,"count":0}],"isBlockCoverage":false},{"functionName":"emitComments","ranges":[{"startOffset":8903172,"endOffset":8903190,"count":0}],"isBlockCoverage":false},{"functionName":"emitDetachedComments","ranges":[{"startOffset":8903218,"endOffset":8903244,"count":0}],"isBlockCoverage":false},{"functionName":"emitFiles","ranges":[{"startOffset":8903261,"endOffset":8903276,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrors","ranges":[{"startOffset":8903308,"endOffset":8903338,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrorsAndGetExitStatus","ranges":[{"startOffset":8903386,"endOffset":8903432,"count":0}],"isBlockCoverage":false},{"functionName":"emitModuleKindIsNonNodeESM","ranges":[{"startOffset":8903466,"endOffset":8903498,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentOfPosition","ranges":[{"startOffset":8903547,"endOffset":8903594,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingComments","ranges":[{"startOffset":8903634,"endOffset":8903672,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentsOfPosition","ranges":[{"startOffset":8903722,"endOffset":8903770,"count":0}],"isBlockCoverage":false},{"functionName":"emitSkippedWithNoDiagnostics","ranges":[{"startOffset":8903806,"endOffset":8903840,"count":0}],"isBlockCoverage":false},{"functionName":"emitUsingBuildInfo","ranges":[{"startOffset":8903866,"endOffset":8903890,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":8903908,"endOffset":8903924,"count":0}],"isBlockCoverage":false},{"functionName":"emptyFileSystemEntries","ranges":[{"startOffset":8903954,"endOffset":8903982,"count":0}],"isBlockCoverage":false},{"functionName":"emptyMap","ranges":[{"startOffset":8903998,"endOffset":8904012,"count":0}],"isBlockCoverage":false},{"functionName":"emptyOptions","ranges":[{"startOffset":8904032,"endOffset":8904050,"count":0}],"isBlockCoverage":false},{"functionName":"emptySet","ranges":[{"startOffset":8904066,"endOffset":8904080,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":8904096,"endOffset":8904110,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePathIsNonModuleName","ranges":[{"startOffset":8904143,"endOffset":8904174,"count":0}],"isBlockCoverage":false},{"functionName":"ensureScriptKind","ranges":[{"startOffset":8904198,"endOffset":8904220,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":8904260,"endOffset":8904298,"count":0}],"isBlockCoverage":false},{"functionName":"entityNameToString","ranges":[{"startOffset":8904324,"endOffset":8904348,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateInsertsAndDeletes","ranges":[{"startOffset":8904382,"endOffset":8904414,"count":0}],"isBlockCoverage":false},{"functionName":"equalOwnProperties","ranges":[{"startOffset":8904440,"endOffset":8904464,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseInsensitive","ranges":[{"startOffset":8904500,"endOffset":8904534,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseSensitive","ranges":[{"startOffset":8904568,"endOffset":8904600,"count":0}],"isBlockCoverage":false},{"functionName":"equateValues","ranges":[{"startOffset":8904620,"endOffset":8904638,"count":0}],"isBlockCoverage":false},{"functionName":"esDecorateHelper","ranges":[{"startOffset":8904662,"endOffset":8904684,"count":0}],"isBlockCoverage":false},{"functionName":"escapeJsxAttributeString","ranges":[{"startOffset":8904716,"endOffset":8904746,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLeadingUnderscores","ranges":[{"startOffset":8904778,"endOffset":8904808,"count":0}],"isBlockCoverage":false},{"functionName":"escapeNonAsciiString","ranges":[{"startOffset":8904836,"endOffset":8904862,"count":0}],"isBlockCoverage":false},{"functionName":"escapeSnippetText","ranges":[{"startOffset":8904887,"endOffset":8904910,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":8904930,"endOffset":8904948,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTemplateSubstitution","ranges":[{"startOffset":8904982,"endOffset":8905014,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":8905027,"endOffset":8905038,"count":0}],"isBlockCoverage":false},{"functionName":"expandPreOrPostfixIncrementOrDecrementExpression","ranges":[{"startOffset":8905094,"endOffset":8905148,"count":0}],"isBlockCoverage":false},{"functionName":"explainFiles","ranges":[{"startOffset":8905168,"endOffset":8905186,"count":0}],"isBlockCoverage":false},{"functionName":"explainIfFileIsRedirectAndImpliedFormat","ranges":[{"startOffset":8905233,"endOffset":8905278,"count":0}],"isBlockCoverage":false},{"functionName":"exportAssignmentIsAlias","ranges":[{"startOffset":8905309,"endOffset":8905338,"count":0}],"isBlockCoverage":false},{"functionName":"exportStarHelper","ranges":[{"startOffset":8905362,"endOffset":8905384,"count":0}],"isBlockCoverage":false},{"functionName":"expressionResultIsUnused","ranges":[{"startOffset":8905416,"endOffset":8905446,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":8905460,"endOffset":8905472,"count":0}],"isBlockCoverage":false},{"functionName":"extendsHelper","ranges":[{"startOffset":8905493,"endOffset":8905512,"count":0}],"isBlockCoverage":false},{"functionName":"extensionFromPath","ranges":[{"startOffset":8905537,"endOffset":8905560,"count":0}],"isBlockCoverage":false},{"functionName":"extensionIsTS","ranges":[{"startOffset":8905581,"endOffset":8905600,"count":0}],"isBlockCoverage":false},{"functionName":"extensionsNotSupportingExtensionlessResolution","ranges":[{"startOffset":8905654,"endOffset":8905706,"count":0}],"isBlockCoverage":false},{"functionName":"externalHelpersModuleNameText","ranges":[{"startOffset":8905743,"endOffset":8905778,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":8905793,"endOffset":8905806,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIs","ranges":[{"startOffset":8905829,"endOffset":8905850,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIsOneOf","ranges":[{"startOffset":8905878,"endOffset":8905904,"count":0}],"isBlockCoverage":false},{"functionName":"fileIncludeReasonToDiagnostics","ranges":[{"startOffset":8905942,"endOffset":8905978,"count":0}],"isBlockCoverage":false},{"functionName":"fileShouldUseJavaScriptRequire","ranges":[{"startOffset":8906016,"endOffset":8906052,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":8906066,"endOffset":8906078,"count":0}],"isBlockCoverage":false},{"functionName":"filterMutate","ranges":[{"startOffset":8906098,"endOffset":8906116,"count":0}],"isBlockCoverage":false},{"functionName":"filterSemanticDiagnostics","ranges":[{"startOffset":8906149,"endOffset":8906180,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":8906192,"endOffset":8906202,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestor","ranges":[{"startOffset":8906222,"endOffset":8906240,"count":0}],"isBlockCoverage":false},{"functionName":"findBestPatternMatch","ranges":[{"startOffset":8906268,"endOffset":8906294,"count":0}],"isBlockCoverage":false},{"functionName":"findChildOfKind","ranges":[{"startOffset":8906317,"endOffset":8906338,"count":0}],"isBlockCoverage":false},{"functionName":"findComputedPropertyNameCacheAssignment","ranges":[{"startOffset":8906385,"endOffset":8906430,"count":0}],"isBlockCoverage":false},{"functionName":"findConfigFile","ranges":[{"startOffset":8906452,"endOffset":8906472,"count":0}],"isBlockCoverage":false},{"functionName":"findContainingList","ranges":[{"startOffset":8906498,"endOffset":8906522,"count":0}],"isBlockCoverage":false},{"functionName":"findDiagnosticForNode","ranges":[{"startOffset":8906551,"endOffset":8906578,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonJsxWhitespaceToken","ranges":[{"startOffset":8906616,"endOffset":8906652,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":8906669,"endOffset":8906684,"count":0}],"isBlockCoverage":false},{"functionName":"findLast","ranges":[{"startOffset":8906700,"endOffset":8906714,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":8906735,"endOffset":8906754,"count":0}],"isBlockCoverage":false},{"functionName":"findListItemInfo","ranges":[{"startOffset":8906778,"endOffset":8906800,"count":0}],"isBlockCoverage":false},{"functionName":"findMap","ranges":[{"startOffset":8906815,"endOffset":8906828,"count":0}],"isBlockCoverage":false},{"functionName":"findModifier","ranges":[{"startOffset":8906848,"endOffset":8906866,"count":0}],"isBlockCoverage":false},{"functionName":"findNextToken","ranges":[{"startOffset":8906887,"endOffset":8906906,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJson","ranges":[{"startOffset":8906929,"endOffset":8906950,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJsons","ranges":[{"startOffset":8906974,"endOffset":8906996,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingMatchingToken","ranges":[{"startOffset":8907030,"endOffset":8907062,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingToken","ranges":[{"startOffset":8907088,"endOffset":8907112,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPath","ranges":[{"startOffset":8907147,"endOffset":8907180,"count":0}],"isBlockCoverage":false},{"functionName":"findTokenOnLeftOfPosition","ranges":[{"startOffset":8907213,"endOffset":8907244,"count":0}],"isBlockCoverage":false},{"functionName":"findUseStrictPrologue","ranges":[{"startOffset":8907273,"endOffset":8907300,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":8907313,"endOffset":8907324,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":8907344,"endOffset":8907362,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefinedIterator","ranges":[{"startOffset":8907390,"endOffset":8907416,"count":0}],"isBlockCoverage":false},{"functionName":"firstIterator","ranges":[{"startOffset":8907437,"endOffset":8907456,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrOnly","ranges":[{"startOffset":8907475,"endOffset":8907492,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefined","ranges":[{"startOffset":8907516,"endOffset":8907538,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefinedIterator","ranges":[{"startOffset":8907570,"endOffset":8907600,"count":0}],"isBlockCoverage":false},{"functionName":"fixupCompilerOptions","ranges":[{"startOffset":8907628,"endOffset":8907654,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8907669,"endOffset":8907682,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapIterator","ranges":[{"startOffset":8907705,"endOffset":8907726,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapToMutable","ranges":[{"startOffset":8907750,"endOffset":8907772,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":8907787,"endOffset":8907800,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaList","ranges":[{"startOffset":8907824,"endOffset":8907846,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringAssignment","ranges":[{"startOffset":8907884,"endOffset":8907920,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringBinding","ranges":[{"startOffset":8907955,"endOffset":8907988,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDiagnosticMessageText","ranges":[{"startOffset":8908024,"endOffset":8908058,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":8908073,"endOffset":8908086,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestor","ranges":[{"startOffset":8908109,"endOffset":8908130,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectory","ranges":[{"startOffset":8908162,"endOffset":8908192,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":8908212,"endOffset":8908230,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildRecursively","ranges":[{"startOffset":8908261,"endOffset":8908290,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEmittedFile","ranges":[{"startOffset":8908316,"endOffset":8908340,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnclosingBlockScopeContainer","ranges":[{"startOffset":8908383,"endOffset":8908424,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEntry","ranges":[{"startOffset":8908444,"endOffset":8908462,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModuleToImportFrom","ranges":[{"startOffset":8908503,"endOffset":8908542,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportClauseDeclaration","ranges":[{"startOffset":8908580,"endOffset":8908616,"count":0}],"isBlockCoverage":false},{"functionName":"forEachKey","ranges":[{"startOffset":8908634,"endOffset":8908650,"count":0}],"isBlockCoverage":false},{"functionName":"forEachLeadingCommentRange","ranges":[{"startOffset":8908684,"endOffset":8908716,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameInAccessChainWalkingLeft","ranges":[{"startOffset":8908759,"endOffset":8908800,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPropertyAssignment","ranges":[{"startOffset":8908833,"endOffset":8908864,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":8908903,"endOffset":8908940,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReturnStatement","ranges":[{"startOffset":8908970,"endOffset":8908998,"count":0}],"isBlockCoverage":false},{"functionName":"forEachRight","ranges":[{"startOffset":8909018,"endOffset":8909036,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTrailingCommentRange","ranges":[{"startOffset":8909071,"endOffset":8909104,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTsConfigPropArray","ranges":[{"startOffset":8909136,"endOffset":8909166,"count":0}],"isBlockCoverage":false},{"functionName":"forEachUnique","ranges":[{"startOffset":8909187,"endOffset":8909206,"count":0}],"isBlockCoverage":false},{"functionName":"forEachYieldExpression","ranges":[{"startOffset":8909236,"endOffset":8909264,"count":0}],"isBlockCoverage":false},{"functionName":"forSomeAncestorDirectory","ranges":[{"startOffset":8909296,"endOffset":8909326,"count":0}],"isBlockCoverage":false},{"functionName":"formatColorAndReset","ranges":[{"startOffset":8909353,"endOffset":8909378,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostic","ranges":[{"startOffset":8909402,"endOffset":8909424,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostics","ranges":[{"startOffset":8909449,"endOffset":8909472,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticsWithColorAndContext","ranges":[{"startOffset":8909516,"endOffset":8909558,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedName","ranges":[{"startOffset":8909585,"endOffset":8909610,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedNamePart","ranges":[{"startOffset":8909641,"endOffset":8909670,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":8909692,"endOffset":8909712,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":8909733,"endOffset":8909752,"count":0}],"isBlockCoverage":false},{"functionName":"formatStringFromArgs","ranges":[{"startOffset":8909780,"endOffset":8909806,"count":0}],"isBlockCoverage":false},{"functionName":"formatting","ranges":[{"startOffset":8909824,"endOffset":8909851,"count":0}],"isBlockCoverage":false},{"functionName":"fullTripleSlashAMDReferencePathRegEx","ranges":[{"startOffset":8909895,"endOffset":8909937,"count":0}],"isBlockCoverage":false},{"functionName":"fullTripleSlashReferencePathRegEx","ranges":[{"startOffset":8909978,"endOffset":8910017,"count":0}],"isBlockCoverage":false},{"functionName":"generateDjb2Hash","ranges":[{"startOffset":8910041,"endOffset":8910063,"count":0}],"isBlockCoverage":false},{"functionName":"generateTSConfig","ranges":[{"startOffset":8910087,"endOffset":8910109,"count":0}],"isBlockCoverage":false},{"functionName":"generatorHelper","ranges":[{"startOffset":8910132,"endOffset":8910153,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedReferenceLocation","ranges":[{"startOffset":8910189,"endOffset":8910223,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRenameLocation","ranges":[{"startOffset":8910256,"endOffset":8910287,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasDeclarationFromName","ranges":[{"startOffset":8910322,"endOffset":8910355,"count":0}],"isBlockCoverage":false},{"functionName":"getAllAccessorDeclarations","ranges":[{"startOffset":8910389,"endOffset":8910421,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClass","ranges":[{"startOffset":8910452,"endOffset":8910481,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClassElement","ranges":[{"startOffset":8910519,"endOffset":8910555,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTags","ranges":[{"startOffset":8910578,"endOffset":8910599,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTagsOfKind","ranges":[{"startOffset":8910628,"endOffset":8910655,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":8910673,"endOffset":8910689,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectOutputs","ranges":[{"startOffset":8910717,"endOffset":8910743,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSuperTypeNodes","ranges":[{"startOffset":8910771,"endOffset":8910797,"count":0}],"isBlockCoverage":false},{"functionName":"getAllUnscopedEmitHelpers","ranges":[{"startOffset":8910830,"endOffset":8910861,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowJSCompilerOption","ranges":[{"startOffset":8910893,"endOffset":8910923,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowSyntheticDefaultImports","ranges":[{"startOffset":8910962,"endOffset":8910999,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestor","ranges":[{"startOffset":8911018,"endOffset":8911035,"count":0}],"isBlockCoverage":false},{"functionName":"getAnyExtensionFromPath","ranges":[{"startOffset":8911066,"endOffset":8911095,"count":0}],"isBlockCoverage":false},{"functionName":"getAreDeclarationMapsEnabled","ranges":[{"startOffset":8911131,"endOffset":8911165,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedExpandoInitializer","ranges":[{"startOffset":8911202,"endOffset":8911237,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedName","ranges":[{"startOffset":8911260,"endOffset":8911281,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedNameOfIdentifier","ranges":[{"startOffset":8911316,"endOffset":8911349,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKind","ranges":[{"startOffset":8911385,"endOffset":8911419,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationPropertyAccessKind","ranges":[{"startOffset":8911469,"endOffset":8911517,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTargetKind","ranges":[{"startOffset":8911548,"endOffset":8911577,"count":0}],"isBlockCoverage":false},{"functionName":"getAutomaticTypeDirectiveNames","ranges":[{"startOffset":8911615,"endOffset":8911651,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseFileName","ranges":[{"startOffset":8911674,"endOffset":8911695,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryOperatorPrecedence","ranges":[{"startOffset":8911730,"endOffset":8911763,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo","ranges":[{"startOffset":8911783,"endOffset":8911801,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoFileVersionMap","ranges":[{"startOffset":8911835,"endOffset":8911867,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoText","ranges":[{"startOffset":8911891,"endOffset":8911913,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFromAnyBuildOrder","ranges":[{"startOffset":8911951,"endOffset":8911987,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderCreationParameters","ranges":[{"startOffset":8912023,"endOffset":8912057,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmit","ranges":[{"startOffset":8912083,"endOffset":8912107,"count":0}],"isBlockCoverage":false},{"functionName":"getCheckFlags","ranges":[{"startOffset":8912128,"endOffset":8912147,"count":0}],"isBlockCoverage":false},{"functionName":"getClassExtendsHeritageElement","ranges":[{"startOffset":8912185,"endOffset":8912221,"count":0}],"isBlockCoverage":false},{"functionName":"getClassLikeDeclarationOfSymbol","ranges":[{"startOffset":8912260,"endOffset":8912297,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedLocalAndExportSymbolFlags","ranges":[{"startOffset":8912341,"endOffset":8912383,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedModifierFlags","ranges":[{"startOffset":8912415,"endOffset":8912445,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlags","ranges":[{"startOffset":8912473,"endOffset":8912499,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":8912545,"endOffset":8912589,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentRange","ranges":[{"startOffset":8912612,"endOffset":8912633,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectory","ranges":[{"startOffset":8912665,"endOffset":8912695,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectoryOfConfig","ranges":[{"startOffset":8912735,"endOffset":8912773,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionValue","ranges":[{"startOffset":8912803,"endOffset":8912831,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiffValue","ranges":[{"startOffset":8912866,"endOffset":8912899,"count":0}],"isBlockCoverage":false},{"functionName":"getConditions","ranges":[{"startOffset":8912920,"endOffset":8912939,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileParsingDiagnostics","ranges":[{"startOffset":8912978,"endOffset":8913015,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantValue","ranges":[{"startOffset":8913039,"endOffset":8913061,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerFlags","ranges":[{"startOffset":8913086,"endOffset":8913109,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerNode","ranges":[{"startOffset":8913133,"endOffset":8913155,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClass","ranges":[{"startOffset":8913181,"endOffset":8913205,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassExcludingClassDecorators","ranges":[{"startOffset":8913255,"endOffset":8913303,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassStaticBlock","ranges":[{"startOffset":8913340,"endOffset":8913375,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunction","ranges":[{"startOffset":8913404,"endOffset":8913431,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionDeclaration","ranges":[{"startOffset":8913471,"endOffset":8913509,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionOrClassStaticBlock","ranges":[{"startOffset":8913556,"endOffset":8913601,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeArray","ranges":[{"startOffset":8913631,"endOffset":8913659,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElement","ranges":[{"startOffset":8913700,"endOffset":8913739,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParent","ranges":[{"startOffset":8913774,"endOffset":8913807,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParentOrAncestorTypeNode","ranges":[{"startOffset":8913860,"endOffset":8913911,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentTime","ranges":[{"startOffset":8913933,"endOffset":8913953,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationDiagnostics","ranges":[{"startOffset":8913986,"endOffset":8914017,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitExtensionForPath","ranges":[{"startOffset":8914059,"endOffset":8914099,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePath","ranges":[{"startOffset":8914139,"endOffset":8914177,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePathWorker","ranges":[{"startOffset":8914223,"endOffset":8914267,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFileExtension","ranges":[{"startOffset":8914302,"endOffset":8914335,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFromName","ranges":[{"startOffset":8914365,"endOffset":8914393,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationModifierFlagsFromSymbol","ranges":[{"startOffset":8914438,"endOffset":8914481,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationOfKind","ranges":[{"startOffset":8914509,"endOffset":8914535,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationsOfKind","ranges":[{"startOffset":8914564,"endOffset":8914591,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaredExpandoInitializer","ranges":[{"startOffset":8914628,"endOffset":8914663,"count":0}],"isBlockCoverage":false},{"functionName":"getDecorators","ranges":[{"startOffset":8914684,"endOffset":8914703,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions","ranges":[{"startOffset":8914736,"endOffset":8914768,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultExportInfoWorker","ranges":[{"startOffset":8914802,"endOffset":8914834,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultFormatCodeSettings","ranges":[{"startOffset":8914870,"endOffset":8914904,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":8914933,"endOffset":8914960,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFilePath","ranges":[{"startOffset":8914989,"endOffset":8915016,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportInfo","ranges":[{"startOffset":8915048,"endOffset":8915078,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticText","ranges":[{"startOffset":8915103,"endOffset":8915126,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWithinSpan","ranges":[{"startOffset":8915158,"endOffset":8915188,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryPath","ranges":[{"startOffset":8915212,"endOffset":8915234,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocation","ranges":[{"startOffset":8915281,"endOffset":8915326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocationFromTypeRoot","ranges":[{"startOffset":8915385,"endOffset":8915442,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":8915475,"endOffset":8915506,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentSpansEqualityComparer","ranges":[{"startOffset":8915546,"endOffset":8915584,"count":0}],"isBlockCoverage":false},{"functionName":"getESModuleInterop","ranges":[{"startOffset":8915610,"endOffset":8915634,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":8915663,"endOffset":8915690,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveBaseTypeNode","ranges":[{"startOffset":8915722,"endOffset":8915752,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveConstraintOfTypeParameter","ranges":[{"startOffset":8915797,"endOffset":8915840,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveContainerForJSDocTemplateTag","ranges":[{"startOffset":8915888,"endOffset":8915934,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveImplementsTypeNodes","ranges":[{"startOffset":8915973,"endOffset":8916010,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveInitializer","ranges":[{"startOffset":8916041,"endOffset":8916070,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveJSDocHost","ranges":[{"startOffset":8916099,"endOffset":8916126,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlags","ranges":[{"startOffset":8916159,"endOffset":8916190,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":8916241,"endOffset":8916290,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsNoCache","ranges":[{"startOffset":8916330,"endOffset":8916368,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveReturnTypeNode","ranges":[{"startOffset":8916402,"endOffset":8916434,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveSetAccessorTypeAnnotationNode","ranges":[{"startOffset":8916483,"endOffset":8916530,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeAnnotationNode","ranges":[{"startOffset":8916568,"endOffset":8916604,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeParameterDeclarations","ranges":[{"startOffset":8916649,"endOffset":8916692,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":8916721,"endOffset":8916748,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessArgumentExpressionOrName","ranges":[{"startOffset":8916806,"endOffset":8916862,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessName","ranges":[{"startOffset":8916900,"endOffset":8916936,"count":0}],"isBlockCoverage":false},{"functionName":"getElementsOfBindingOrAssignmentPattern","ranges":[{"startOffset":8916983,"endOffset":8917028,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitDeclarations","ranges":[{"startOffset":8917055,"endOffset":8917080,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitFlags","ranges":[{"startOffset":8917100,"endOffset":8917118,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitHelpers","ranges":[{"startOffset":8917140,"endOffset":8917160,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleDetectionKind","ranges":[{"startOffset":8917194,"endOffset":8917226,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleKind","ranges":[{"startOffset":8917251,"endOffset":8917274,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleResolutionKind","ranges":[{"startOffset":8917309,"endOffset":8917342,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitScriptTarget","ranges":[{"startOffset":8917369,"endOffset":8917394,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitStandardClassFields","ranges":[{"startOffset":8917428,"endOffset":8917460,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingBlockScopeContainer","ranges":[{"startOffset":8917499,"endOffset":8917536,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingContainer","ranges":[{"startOffset":8917565,"endOffset":8917592,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":8917633,"endOffset":8917672,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":8917714,"endOffset":8917754,"count":0}],"isBlockCoverage":false},{"functionName":"getEndLinePosition","ranges":[{"startOffset":8917780,"endOffset":8917804,"count":0}],"isBlockCoverage":false},{"functionName":"getEntityNameFromTypeNode","ranges":[{"startOffset":8917837,"endOffset":8917868,"count":0}],"isBlockCoverage":false},{"functionName":"getEntrypointsFromPackageJsonInfo","ranges":[{"startOffset":8917909,"endOffset":8917948,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCountForSummary","ranges":[{"startOffset":8917979,"endOffset":8918008,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForNode","ranges":[{"startOffset":8918035,"endOffset":8918060,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSummaryText","ranges":[{"startOffset":8918087,"endOffset":8918112,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfIdentifierOrLiteral","ranges":[{"startOffset":8918155,"endOffset":8918196,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxAttributeName","ranges":[{"startOffset":8918236,"endOffset":8918274,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxNamespacedName","ranges":[{"startOffset":8918315,"endOffset":8918354,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandoInitializer","ranges":[{"startOffset":8918383,"endOffset":8918410,"count":0}],"isBlockCoverage":false},{"functionName":"getExportAssignmentExpression","ranges":[{"startOffset":8918447,"endOffset":8918482,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfoMap","ranges":[{"startOffset":8918506,"endOffset":8918528,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNeedsImportStarHelper","ranges":[{"startOffset":8918566,"endOffset":8918602,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionAssociativity","ranges":[{"startOffset":8918636,"endOffset":8918668,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionPrecedence","ranges":[{"startOffset":8918699,"endOffset":8918728,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalHelpersModuleName","ranges":[{"startOffset":8918764,"endOffset":8918798,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleImportEqualsDeclarationExpression","ranges":[{"startOffset":8918856,"endOffset":8918912,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName","ranges":[{"startOffset":8918941,"endOffset":8918968,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromDeclaration","ranges":[{"startOffset":8919012,"endOffset":8919054,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromPath","ranges":[{"startOffset":8919091,"endOffset":8919126,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameLiteral","ranges":[{"startOffset":8919162,"endOffset":8919196,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleRequireArgument","ranges":[{"startOffset":8919236,"endOffset":8919274,"count":0}],"isBlockCoverage":false},{"functionName":"getFallbackOptions","ranges":[{"startOffset":8919300,"endOffset":8919324,"count":0}],"isBlockCoverage":false},{"functionName":"getFileEmitOutput","ranges":[{"startOffset":8919349,"endOffset":8919372,"count":0}],"isBlockCoverage":false},{"functionName":"getFileMatcherPatterns","ranges":[{"startOffset":8919402,"endOffset":8919430,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesFromConfigSpecs","ranges":[{"startOffset":8919465,"endOffset":8919498,"count":0}],"isBlockCoverage":false},{"functionName":"getFileWatcherEventKind","ranges":[{"startOffset":8919529,"endOffset":8919558,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesInErrorForSummary","ranges":[{"startOffset":8919591,"endOffset":8919622,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstConstructorWithBody","ranges":[{"startOffset":8919657,"endOffset":8919690,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIdentifier","ranges":[{"startOffset":8919716,"endOffset":8919740,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNonSpaceCharacterPosition","ranges":[{"startOffset":8919781,"endOffset":8919820,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstProjectOutput","ranges":[{"startOffset":8919849,"endOffset":8919876,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanExpression","ranges":[{"startOffset":8919913,"endOffset":8919948,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettingsForWriting","ranges":[{"startOffset":8919987,"endOffset":8920024,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":8920044,"endOffset":8920062,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionFlags","ranges":[{"startOffset":8920086,"endOffset":8920108,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClause","ranges":[{"startOffset":8920133,"endOffset":8920156,"count":0}],"isBlockCoverage":false},{"functionName":"getHostSignatureFromJSDoc","ranges":[{"startOffset":8920189,"endOffset":8920220,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierAutoGenerate","ranges":[{"startOffset":8920253,"endOffset":8920284,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierGeneratedImportReference","ranges":[{"startOffset":8920329,"endOffset":8920372,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierTypeArguments","ranges":[{"startOffset":8920406,"endOffset":8920438,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":8920485,"endOffset":8920530,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFile","ranges":[{"startOffset":8920565,"endOffset":8920598,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFileWorker","ranges":[{"startOffset":8920639,"endOffset":8920678,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportDefaultHelper","ranges":[{"startOffset":8920719,"endOffset":8920758,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportStarHelper","ranges":[{"startOffset":8920796,"endOffset":8920832,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentSize","ranges":[{"startOffset":8920853,"endOffset":8920872,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":8920895,"endOffset":8920916,"count":0}],"isBlockCoverage":false},{"functionName":"getInferredLibraryNameResolveFrom","ranges":[{"startOffset":8920957,"endOffset":8920996,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializedVariables","ranges":[{"startOffset":8921027,"endOffset":8921056,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBinaryExpression","ranges":[{"startOffset":8921096,"endOffset":8921134,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBindingOrAssignmentElement","ranges":[{"startOffset":8921184,"endOffset":8921232,"count":0}],"isBlockCoverage":false},{"functionName":"getInterfaceBaseTypeNodes","ranges":[{"startOffset":8921265,"endOffset":8921296,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalEmitFlags","ranges":[{"startOffset":8921324,"endOffset":8921350,"count":0}],"isBlockCoverage":false},{"functionName":"getInvokedExpression","ranges":[{"startOffset":8921378,"endOffset":8921404,"count":0}],"isBlockCoverage":false},{"functionName":"getIsolatedModules","ranges":[{"startOffset":8921430,"endOffset":8921454,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocAugmentsTag","ranges":[{"startOffset":8921481,"endOffset":8921506,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocClassTag","ranges":[{"startOffset":8921530,"endOffset":8921552,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentRanges","ranges":[{"startOffset":8921581,"endOffset":8921608,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentsAndTags","ranges":[{"startOffset":8921639,"endOffset":8921668,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTag","ranges":[{"startOffset":8921697,"endOffset":8921724,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTagNoCache","ranges":[{"startOffset":8921760,"endOffset":8921794,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocEnumTag","ranges":[{"startOffset":8921817,"endOffset":8921838,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocHost","ranges":[{"startOffset":8921858,"endOffset":8921876,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocImplementsTags","ranges":[{"startOffset":8921906,"endOffset":8921934,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverloadTags","ranges":[{"startOffset":8921962,"endOffset":8921988,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverrideTagNoCache","ranges":[{"startOffset":8922022,"endOffset":8922054,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTags","ranges":[{"startOffset":8922083,"endOffset":8922110,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsNoCache","ranges":[{"startOffset":8922146,"endOffset":8922180,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTag","ranges":[{"startOffset":8922206,"endOffset":8922230,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTagNoCache","ranges":[{"startOffset":8922263,"endOffset":8922294,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTag","ranges":[{"startOffset":8922322,"endOffset":8922348,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTagNoCache","ranges":[{"startOffset":8922383,"endOffset":8922416,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTag","ranges":[{"startOffset":8922441,"endOffset":8922464,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTagNoCache","ranges":[{"startOffset":8922496,"endOffset":8922526,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTag","ranges":[{"startOffset":8922553,"endOffset":8922578,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTagNoCache","ranges":[{"startOffset":8922612,"endOffset":8922644,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnTag","ranges":[{"startOffset":8922669,"endOffset":8922692,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnType","ranges":[{"startOffset":8922718,"endOffset":8922742,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocRoot","ranges":[{"startOffset":8922762,"endOffset":8922780,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesExpressionType","ranges":[{"startOffset":8922819,"endOffset":8922856,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesTag","ranges":[{"startOffset":8922884,"endOffset":8922910,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTags","ranges":[{"startOffset":8922930,"endOffset":8922948,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagsNoCache","ranges":[{"startOffset":8922975,"endOffset":8923000,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTemplateTag","ranges":[{"startOffset":8923027,"endOffset":8923052,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocThisTag","ranges":[{"startOffset":8923075,"endOffset":8923096,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocType","ranges":[{"startOffset":8923116,"endOffset":8923134,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAliasName","ranges":[{"startOffset":8923163,"endOffset":8923190,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAssertionType","ranges":[{"startOffset":8923223,"endOffset":8923254,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterDeclarations","ranges":[{"startOffset":8923295,"endOffset":8923334,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTags","ranges":[{"startOffset":8923367,"endOffset":8923398,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsNoCache","ranges":[{"startOffset":8923438,"endOffset":8923476,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeTag","ranges":[{"startOffset":8923499,"endOffset":8923520,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXImplicitImportBase","ranges":[{"startOffset":8923552,"endOffset":8923582,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXRuntimeImport","ranges":[{"startOffset":8923609,"endOffset":8923634,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXTransformEnabled","ranges":[{"startOffset":8923664,"endOffset":8923692,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilerOptions","ranges":[{"startOffset":8923724,"endOffset":8923754,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageVariant","ranges":[{"startOffset":8923780,"endOffset":8923804,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChild","ranges":[{"startOffset":8923824,"endOffset":8923842,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRanges","ranges":[{"startOffset":8923873,"endOffset":8923902,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRangesOfNode","ranges":[{"startOffset":8923939,"endOffset":8923974,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostAccessExpression","ranges":[{"startOffset":8924009,"endOffset":8924042,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostExpression","ranges":[{"startOffset":8924071,"endOffset":8924098,"count":0}],"isBlockCoverage":false},{"functionName":"getLibraryNameFromLibFileName","ranges":[{"startOffset":8924135,"endOffset":8924170,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":8924207,"endOffset":8924242,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":8924261,"endOffset":8924278,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPosition","ranges":[{"startOffset":8924308,"endOffset":8924336,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPositionFromLineMap","ranges":[{"startOffset":8924377,"endOffset":8924416,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStartPositionForPosition","ranges":[{"startOffset":8924455,"endOffset":8924492,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":8924513,"endOffset":8924532,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndNextNonWhitespaceCharacter","ranges":[{"startOffset":8924592,"endOffset":8924650,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter","ranges":[{"startOffset":8924715,"endOffset":8924778,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositions","ranges":[{"startOffset":8924810,"endOffset":8924840,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndAndRangeStart","ranges":[{"startOffset":8924884,"endOffset":8924926,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndPositions","ranges":[{"startOffset":8924966,"endOffset":8925004,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralText","ranges":[{"startOffset":8925026,"endOffset":8925046,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalNameForExternalImport","ranges":[{"startOffset":8925083,"endOffset":8925118,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportDefault","ranges":[{"startOffset":8925156,"endOffset":8925192,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleSpecificMessage","ranges":[{"startOffset":8925224,"endOffset":8925254,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleTimeString","ranges":[{"startOffset":8925281,"endOffset":8925306,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpan","ranges":[{"startOffset":8925334,"endOffset":8925360,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpan","ranges":[{"startOffset":8925389,"endOffset":8925416,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocation","ranges":[{"startOffset":8925441,"endOffset":8925464,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedFileSpec","ranges":[{"startOffset":8925490,"endOffset":8925514,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedIncludeSpec","ranges":[{"startOffset":8925543,"endOffset":8925570,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromDeclaration","ranges":[{"startOffset":8925603,"endOffset":8925634,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromLocation","ranges":[{"startOffset":8925664,"endOffset":8925692,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOfDeclaration","ranges":[{"startOffset":8925723,"endOffset":8925752,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForFileReference","ranges":[{"startOffset":8925783,"endOffset":8925812,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForResolutionAtIndex","ranges":[{"startOffset":8925847,"endOffset":8925880,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocation","ranges":[{"startOffset":8925911,"endOffset":8925940,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":8925963,"endOffset":8925984,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers","ranges":[{"startOffset":8926004,"endOffset":8926022,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceState","ranges":[{"startOffset":8926052,"endOffset":8926080,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNameStringLiteralAt","ranges":[{"startOffset":8926116,"endOffset":8926150,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierEndingPreference","ranges":[{"startOffset":8926192,"endOffset":8926232,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierResolverHost","ranges":[{"startOffset":8926270,"endOffset":8926306,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportedSymbol","ranges":[{"startOffset":8926338,"endOffset":8926368,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromImportAttribute","ranges":[{"startOffset":8926402,"endOffset":8926434,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromIndexInfo","ranges":[{"startOffset":8926462,"endOffset":8926488,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromPropertyName","ranges":[{"startOffset":8926519,"endOffset":8926548,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfAccessExpression","ranges":[{"startOffset":8926581,"endOffset":8926612,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfCompilerOptionValue","ranges":[{"startOffset":8926648,"endOffset":8926682,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfDeclaration","ranges":[{"startOffset":8926710,"endOffset":8926736,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfExpando","ranges":[{"startOffset":8926760,"endOffset":8926782,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfJSDocTypedef","ranges":[{"startOffset":8926811,"endOffset":8926838,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrArgument","ranges":[{"startOffset":8926863,"endOffset":8926886,"count":0}],"isBlockCoverage":false},{"functionName":"getNameTable","ranges":[{"startOffset":8926906,"endOffset":8926924,"count":0}],"isBlockCoverage":false},{"functionName":"getNamesForExportedSymbol","ranges":[{"startOffset":8926957,"endOffset":8926988,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceDeclarationNode","ranges":[{"startOffset":8927023,"endOffset":8927056,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineCharacter","ranges":[{"startOffset":8927083,"endOffset":8927108,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineKind","ranges":[{"startOffset":8927130,"endOffset":8927150,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineOrDefaultFromHost","ranges":[{"startOffset":8927185,"endOffset":8927218,"count":0}],"isBlockCoverage":false},{"functionName":"getNewTargetContainer","ranges":[{"startOffset":8927247,"endOffset":8927274,"count":0}],"isBlockCoverage":false},{"functionName":"getNextJSDocCommentLocation","ranges":[{"startOffset":8927309,"endOffset":8927342,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForGeneratedName","ranges":[{"startOffset":8927373,"endOffset":8927402,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeId","ranges":[{"startOffset":8927419,"endOffset":8927434,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeKind","ranges":[{"startOffset":8927453,"endOffset":8927470,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModifiers","ranges":[{"startOffset":8927494,"endOffset":8927516,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulePathParts","ranges":[{"startOffset":8927546,"endOffset":8927574,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignedNameOfDeclaration","ranges":[{"startOffset":8927613,"endOffset":8927650,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignmentOperatorForCompoundAssignment","ranges":[{"startOffset":8927703,"endOffset":8927754,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAugmentationDeclaration","ranges":[{"startOffset":8927791,"endOffset":8927826,"count":0}],"isBlockCoverage":false},{"functionName":"getNonDecoratorTokenPosOfNode","ranges":[{"startOffset":8927863,"endOffset":8927898,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":8927931,"endOffset":8927962,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePathWithoutRoot","ranges":[{"startOffset":8928006,"endOffset":8928048,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":8928083,"endOffset":8928116,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectFlags","ranges":[{"startOffset":8928138,"endOffset":8928158,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":8928177,"endOffset":8928194,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorAssociativity","ranges":[{"startOffset":8928226,"endOffset":8928256,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorPrecedence","ranges":[{"startOffset":8928285,"endOffset":8928312,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionFromName","ranges":[{"startOffset":8928337,"endOffset":8928360,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForLibraryResolution","ranges":[{"startOffset":8928398,"endOffset":8928434,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsNameMap","ranges":[{"startOffset":8928459,"endOffset":8928482,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateEmitNode","ranges":[{"startOffset":8928509,"endOffset":8928534,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateExternalHelpersModuleNameIfNeeded","ranges":[{"startOffset":8928586,"endOffset":8928636,"count":0}],"isBlockCoverage":false},{"functionName":"getOrUpdate","ranges":[{"startOffset":8928655,"endOffset":8928672,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNode","ranges":[{"startOffset":8928695,"endOffset":8928716,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNodeId","ranges":[{"startOffset":8928741,"endOffset":8928764,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalSourceFile","ranges":[{"startOffset":8928793,"endOffset":8928820,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileName","ranges":[{"startOffset":8928856,"endOffset":8928890,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileNameWorker","ranges":[{"startOffset":8928932,"endOffset":8928972,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputExtension","ranges":[{"startOffset":8928998,"endOffset":8929022,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputFileNames","ranges":[{"startOffset":8929048,"endOffset":8929072,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileNameWorker","ranges":[{"startOffset":8929105,"endOffset":8929136,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsFor","ranges":[{"startOffset":8929161,"endOffset":8929184,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsForBundle","ranges":[{"startOffset":8929215,"endOffset":8929244,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEmitOutputFilePath","ranges":[{"startOffset":8929276,"endOffset":8929306,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnKeys","ranges":[{"startOffset":8929324,"endOffset":8929340,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnValues","ranges":[{"startOffset":8929360,"endOffset":8929378,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonInfo","ranges":[{"startOffset":8929404,"endOffset":8929428,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonTypesVersionsPaths","ranges":[{"startOffset":8929468,"endOffset":8929506,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":8929542,"endOffset":8929576,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageNameFromTypesPackageName","ranges":[{"startOffset":8929618,"endOffset":8929658,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeForPath","ranges":[{"startOffset":8929688,"endOffset":8929716,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterSymbolFromJSDoc","ranges":[{"startOffset":8929751,"endOffset":8929784,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterTypeNode","ranges":[{"startOffset":8929812,"endOffset":8929838,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNodeInSpan","ranges":[{"startOffset":8929865,"endOffset":8929890,"count":0}],"isBlockCoverage":false},{"functionName":"getParseTreeNode","ranges":[{"startOffset":8929914,"endOffset":8929936,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLineOfConfigFile","ranges":[{"startOffset":8929976,"endOffset":8930014,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":8930039,"endOffset":8930062,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponentsRelativeTo","ranges":[{"startOffset":8930097,"endOffset":8930130,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromPathComponents","ranges":[{"startOffset":8930163,"endOffset":8930194,"count":0}],"isBlockCoverage":false},{"functionName":"getPathUpdater","ranges":[{"startOffset":8930216,"endOffset":8930236,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsBasePath","ranges":[{"startOffset":8930260,"endOffset":8930282,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":8930308,"endOffset":8930332,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKind","ranges":[{"startOffset":8930358,"endOffset":8930382,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":8930419,"endOffset":8930454,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleGenericSignatures","ranges":[{"startOffset":8930490,"endOffset":8930524,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputExtensionForExtension","ranges":[{"startOffset":8930577,"endOffset":8930628,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypeArgumentsInfo","ranges":[{"startOffset":8930664,"endOffset":8930698,"count":0}],"isBlockCoverage":false},{"functionName":"getPreEmitDiagnostics","ranges":[{"startOffset":8930727,"endOffset":8930754,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedingNonSpaceCharacterPosition","ranges":[{"startOffset":8930799,"endOffset":8930842,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifier","ranges":[{"startOffset":8930870,"endOffset":8930896,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":8930917,"endOffset":8930936,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":8930955,"endOffset":8930972,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyArrayElementValue","ranges":[{"startOffset":8931008,"endOffset":8931042,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentAliasLikeExpression","ranges":[{"startOffset":8931090,"endOffset":8931136,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForPropertyNameNode","ranges":[{"startOffset":8931178,"endOffset":8931218,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForUniqueESSymbol","ranges":[{"startOffset":8931258,"endOffset":8931296,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameFromType","ranges":[{"startOffset":8931327,"endOffset":8931356,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":8931407,"endOffset":8931456,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolFromBindingElement","ranges":[{"startOffset":8931499,"endOffset":8931540,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromContextualType","ranges":[{"startOffset":8931584,"endOffset":8931626,"count":0}],"isBlockCoverage":false},{"functionName":"getQuoteFromPreference","ranges":[{"startOffset":8931656,"endOffset":8931684,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotePreference","ranges":[{"startOffset":8931710,"endOffset":8931734,"count":0}],"isBlockCoverage":false},{"functionName":"getRangesWhere","ranges":[{"startOffset":8931756,"endOffset":8931776,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContextSpan","ranges":[{"startOffset":8931806,"endOffset":8931834,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileLocation","ranges":[{"startOffset":8931867,"endOffset":8931898,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexFromPattern","ranges":[{"startOffset":8931925,"endOffset":8931950,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionForWildcard","ranges":[{"startOffset":8931989,"endOffset":8932026,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionsForWildcards","ranges":[{"startOffset":8932067,"endOffset":8932106,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromDirectory","ranges":[{"startOffset":8932142,"endOffset":8932176,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromFile","ranges":[{"startOffset":8932207,"endOffset":8932236,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathToDirectoryOrUrl","ranges":[{"startOffset":8932275,"endOffset":8932312,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocation","ranges":[{"startOffset":8932337,"endOffset":8932360,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementSpanForContextToken","ranges":[{"startOffset":8932401,"endOffset":8932440,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionDiagnostic","ranges":[{"startOffset":8932471,"endOffset":8932500,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionModeOverride","ranges":[{"startOffset":8932533,"endOffset":8932564,"count":0}],"isBlockCoverage":false},{"functionName":"getResolveJsonModule","ranges":[{"startOffset":8932592,"endOffset":8932618,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonExports","ranges":[{"startOffset":8932654,"endOffset":8932688,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonImports","ranges":[{"startOffset":8932724,"endOffset":8932758,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedExternalModuleName","ranges":[{"startOffset":8932795,"endOffset":8932830,"count":0}],"isBlockCoverage":false},{"functionName":"getRestIndicatorOfBindingOrAssignmentElement","ranges":[{"startOffset":8932882,"endOffset":8932932,"count":0}],"isBlockCoverage":false},{"functionName":"getRestParameterElementType","ranges":[{"startOffset":8932967,"endOffset":8933000,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostAssignedExpression","ranges":[{"startOffset":8933038,"endOffset":8933074,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDeclaration","ranges":[{"startOffset":8933100,"endOffset":8933124,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDirectoryOfResolutionCache","ranges":[{"startOffset":8933165,"endOffset":8933204,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":8933225,"endOffset":8933244,"count":0}],"isBlockCoverage":false},{"functionName":"getRootPathSplitLength","ranges":[{"startOffset":8933274,"endOffset":8933302,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":8933323,"endOffset":8933342,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKindFromFileName","ranges":[{"startOffset":8933375,"endOffset":8933406,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptTargetFeatures","ranges":[{"startOffset":8933437,"endOffset":8933466,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedEffectiveModifierFlags","ranges":[{"startOffset":8933507,"endOffset":8933546,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedSyntacticModifierFlags","ranges":[{"startOffset":8933587,"endOffset":8933626,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":8933660,"endOffset":8933692,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticJsxChildren","ranges":[{"startOffset":8933722,"endOffset":8933750,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorTypeAnnotationNode","ranges":[{"startOffset":8933790,"endOffset":8933828,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorValueParameter","ranges":[{"startOffset":8933864,"endOffset":8933898,"count":0}],"isBlockCoverage":false},{"functionName":"getSetExternalModuleIndicator","ranges":[{"startOffset":8933935,"endOffset":8933970,"count":0}],"isBlockCoverage":false},{"functionName":"getShebang","ranges":[{"startOffset":8933988,"endOffset":8934004,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleInitializerOfVariableStatementOrPropertyDeclaration","ranges":[{"startOffset":8934072,"endOffset":8934138,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleVariableOfVariableStatement","ranges":[{"startOffset":8934182,"endOffset":8934224,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotText","ranges":[{"startOffset":8934247,"endOffset":8934268,"count":0}],"isBlockCoverage":false},{"functionName":"getSnippetElement","ranges":[{"startOffset":8934293,"endOffset":8934316,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfModule","ranges":[{"startOffset":8934345,"endOffset":8934372,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfNode","ranges":[{"startOffset":8934399,"endOffset":8934424,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDir","ranges":[{"startOffset":8934457,"endOffset":8934488,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDirWorker","ranges":[{"startOffset":8934527,"endOffset":8934564,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileVersionAsHashFromText","ranges":[{"startOffset":8934606,"endOffset":8934646,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilesToEmit","ranges":[{"startOffset":8934674,"endOffset":8934700,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapRange","ranges":[{"startOffset":8934725,"endOffset":8934748,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":8934771,"endOffset":8934792,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTextOfNodeFromSourceFile","ranges":[{"startOffset":8934833,"endOffset":8934872,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfTokenAtPosition","ranges":[{"startOffset":8934904,"endOffset":8934934,"count":0}],"isBlockCoverage":false},{"functionName":"getSpellingSuggestion","ranges":[{"startOffset":8934963,"endOffset":8934990,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfLine","ranges":[{"startOffset":8935020,"endOffset":8935048,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfRange","ranges":[{"startOffset":8935079,"endOffset":8935108,"count":0}],"isBlockCoverage":false},{"functionName":"getStartsOnNewLine","ranges":[{"startOffset":8935134,"endOffset":8935158,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticPropertiesAndClassStaticBlock","ranges":[{"startOffset":8935204,"endOffset":8935248,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptionValue","ranges":[{"startOffset":8935276,"endOffset":8935302,"count":0}],"isBlockCoverage":false},{"functionName":"getStringComparer","ranges":[{"startOffset":8935327,"endOffset":8935350,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":8935379,"endOffset":8935406,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperCallFromStatement","ranges":[{"startOffset":8935439,"endOffset":8935470,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperContainer","ranges":[{"startOffset":8935495,"endOffset":8935518,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":8935547,"endOffset":8935574,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensions","ranges":[{"startOffset":8935604,"endOffset":8935632,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsWithJsonIfResolveJsonModule","ranges":[{"startOffset":8935689,"endOffset":8935744,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchedType","ranges":[{"startOffset":8935767,"endOffset":8935788,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolId","ranges":[{"startOffset":8935807,"endOffset":8935824,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNameForPrivateIdentifier","ranges":[{"startOffset":8935865,"endOffset":8935904,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolTarget","ranges":[{"startOffset":8935927,"endOffset":8935948,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications","ranges":[{"startOffset":8935983,"endOffset":8936016,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlags","ranges":[{"startOffset":8936049,"endOffset":8936080,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlagsNoCache","ranges":[{"startOffset":8936120,"endOffset":8936158,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClone","ranges":[{"startOffset":8936189,"endOffset":8936218,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWithReplacements","ranges":[{"startOffset":8936265,"endOffset":8936310,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClones","ranges":[{"startOffset":8936342,"endOffset":8936372,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClonesWithReplacements","ranges":[{"startOffset":8936420,"endOffset":8936466,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticLeadingComments","ranges":[{"startOffset":8936501,"endOffset":8936534,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticTrailingComments","ranges":[{"startOffset":8936570,"endOffset":8936604,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetLabel","ranges":[{"startOffset":8936626,"endOffset":8936646,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetOfBindingOrAssignmentElement","ranges":[{"startOffset":8936691,"endOffset":8936734,"count":0}],"isBlockCoverage":false},{"functionName":"getTemporaryModuleResolutionState","ranges":[{"startOffset":8936775,"endOffset":8936814,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfConstantValue","ranges":[{"startOffset":8936844,"endOffset":8936872,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfIdentifierOrLiteral","ranges":[{"startOffset":8936908,"endOffset":8936942,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJSDocComment","ranges":[{"startOffset":8936971,"endOffset":8936998,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxAttributeName","ranges":[{"startOffset":8937031,"endOffset":8937062,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxNamespacedName","ranges":[{"startOffset":8937096,"endOffset":8937128,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNode","ranges":[{"startOffset":8937149,"endOffset":8937168,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNodeFromSourceText","ranges":[{"startOffset":8937203,"endOffset":8937236,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfPropertyName","ranges":[{"startOffset":8937265,"endOffset":8937292,"count":0}],"isBlockCoverage":false},{"functionName":"getThisContainer","ranges":[{"startOffset":8937316,"endOffset":8937338,"count":0}],"isBlockCoverage":false},{"functionName":"getThisParameter","ranges":[{"startOffset":8937362,"endOffset":8937384,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":8937410,"endOffset":8937434,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenPosOfNode","ranges":[{"startOffset":8937459,"endOffset":8937482,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenSourceMapRange","ranges":[{"startOffset":8937512,"endOffset":8937540,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingPropertyName","ranges":[{"startOffset":8937571,"endOffset":8937600,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingToken","ranges":[{"startOffset":8937624,"endOffset":8937646,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingCommentRanges","ranges":[{"startOffset":8937678,"endOffset":8937708,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingSemicolonDeferringWriter","ranges":[{"startOffset":8937751,"endOffset":8937792,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformFlagsSubtreeExclusions","ranges":[{"startOffset":8937834,"endOffset":8937874,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformers","ranges":[{"startOffset":8937897,"endOffset":8937918,"count":0}],"isBlockCoverage":false},{"functionName":"getTsBuildInfoEmitOutputFilePath","ranges":[{"startOffset":8937958,"endOffset":8937996,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigObjectLiteralExpression","ranges":[{"startOffset":8938038,"endOffset":8938078,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigPropArrayElementValue","ranges":[{"startOffset":8938118,"endOffset":8938156,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationNode","ranges":[{"startOffset":8938185,"endOffset":8938212,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeArgumentOrTypeParameterList","ranges":[{"startOffset":8938254,"endOffset":8938294,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeKeywordOfTypeOnlyImport","ranges":[{"startOffset":8938332,"endOffset":8938368,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode","ranges":[{"startOffset":8938387,"endOffset":8938404,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNodeIfAccessible","ranges":[{"startOffset":8938435,"endOffset":8938464,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterFromJsDoc","ranges":[{"startOffset":8938497,"endOffset":8938528,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterOwner","ranges":[{"startOffset":8938557,"endOffset":8938584,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageName","ranges":[{"startOffset":8938611,"endOffset":8938636,"count":0}],"isBlockCoverage":false},{"functionName":"getUILocale","ranges":[{"startOffset":8938655,"endOffset":8938672,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueName","ranges":[{"startOffset":8938693,"endOffset":8938712,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueSymbolId","ranges":[{"startOffset":8938737,"endOffset":8938760,"count":0}],"isBlockCoverage":false},{"functionName":"getUseDefineForClassFields","ranges":[{"startOffset":8938794,"endOffset":8938826,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchErrorSummaryDiagnosticMessage","ranges":[{"startOffset":8938871,"endOffset":8938914,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchFactory","ranges":[{"startOffset":8938937,"endOffset":8938958,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":8938971,"endOffset":8938982,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":8938997,"endOffset":8939010,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentation","ranges":[{"startOffset":8939034,"endOffset":8939056,"count":0}],"isBlockCoverage":false},{"functionName":"handleNoEmitOptions","ranges":[{"startOffset":8939083,"endOffset":8939108,"count":0}],"isBlockCoverage":false},{"functionName":"hasAbstractModifier","ranges":[{"startOffset":8939135,"endOffset":8939160,"count":0}],"isBlockCoverage":false},{"functionName":"hasAccessorModifier","ranges":[{"startOffset":8939187,"endOffset":8939212,"count":0}],"isBlockCoverage":false},{"functionName":"hasAmbientModifier","ranges":[{"startOffset":8939238,"endOffset":8939262,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangesInResolutions","ranges":[{"startOffset":8939293,"endOffset":8939322,"count":0}],"isBlockCoverage":false},{"functionName":"hasChildOfKind","ranges":[{"startOffset":8939344,"endOffset":8939364,"count":0}],"isBlockCoverage":false},{"functionName":"hasContextSensitiveParameters","ranges":[{"startOffset":8939401,"endOffset":8939436,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":8939457,"endOffset":8939476,"count":0}],"isBlockCoverage":false},{"functionName":"hasDocComment","ranges":[{"startOffset":8939497,"endOffset":8939516,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicName","ranges":[{"startOffset":8939538,"endOffset":8939558,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifier","ranges":[{"startOffset":8939586,"endOffset":8939612,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifiers","ranges":[{"startOffset":8939641,"endOffset":8939668,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveReadonlyModifier","ranges":[{"startOffset":8939704,"endOffset":8939738,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":8939758,"endOffset":8939776,"count":0}],"isBlockCoverage":false},{"functionName":"hasIndexSignature","ranges":[{"startOffset":8939801,"endOffset":8939824,"count":0}],"isBlockCoverage":false},{"functionName":"hasInitializer","ranges":[{"startOffset":8939846,"endOffset":8939866,"count":0}],"isBlockCoverage":false},{"functionName":"hasInvalidEscape","ranges":[{"startOffset":8939890,"endOffset":8939912,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocNodes","ranges":[{"startOffset":8939933,"endOffset":8939952,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocParameterTags","ranges":[{"startOffset":8939981,"endOffset":8940008,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSFileExtension","ranges":[{"startOffset":8940034,"endOffset":8940058,"count":0}],"isBlockCoverage":false},{"functionName":"hasJsonModuleEmitEnabled","ranges":[{"startOffset":8940090,"endOffset":8940120,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyExpressionInitializer","ranges":[{"startOffset":8940156,"endOffset":8940190,"count":0}],"isBlockCoverage":false},{"functionName":"hasOverrideModifier","ranges":[{"startOffset":8940217,"endOffset":8940242,"count":0}],"isBlockCoverage":false},{"functionName":"hasPossibleExternalModuleReference","ranges":[{"startOffset":8940284,"endOffset":8940324,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":8940343,"endOffset":8940360,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAccessExpressionWithName","ranges":[{"startOffset":8940403,"endOffset":8940444,"count":0}],"isBlockCoverage":false},{"functionName":"hasQuestionToken","ranges":[{"startOffset":8940468,"endOffset":8940490,"count":0}],"isBlockCoverage":false},{"functionName":"hasRecordedExternalHelpers","ranges":[{"startOffset":8940524,"endOffset":8940556,"count":0}],"isBlockCoverage":false},{"functionName":"hasResolutionModeOverride","ranges":[{"startOffset":8940589,"endOffset":8940620,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestParameter","ranges":[{"startOffset":8940644,"endOffset":8940666,"count":0}],"isBlockCoverage":false},{"functionName":"hasScopeMarker","ranges":[{"startOffset":8940688,"endOffset":8940708,"count":0}],"isBlockCoverage":false},{"functionName":"hasStaticModifier","ranges":[{"startOffset":8940733,"endOffset":8940756,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifier","ranges":[{"startOffset":8940784,"endOffset":8940810,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifiers","ranges":[{"startOffset":8940839,"endOffset":8940866,"count":0}],"isBlockCoverage":false},{"functionName":"hasTSFileExtension","ranges":[{"startOffset":8940892,"endOffset":8940916,"count":0}],"isBlockCoverage":false},{"functionName":"hasTabstop","ranges":[{"startOffset":8940934,"endOffset":8940950,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":8940987,"endOffset":8941022,"count":0}],"isBlockCoverage":false},{"functionName":"hasType","ranges":[{"startOffset":8941037,"endOffset":8941050,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeArguments","ranges":[{"startOffset":8941074,"endOffset":8941096,"count":0}],"isBlockCoverage":false},{"functionName":"hasZeroOrOneAsteriskCharacter","ranges":[{"startOffset":8941133,"endOffset":8941168,"count":0}],"isBlockCoverage":false},{"functionName":"helperString","ranges":[{"startOffset":8941188,"endOffset":8941206,"count":0}],"isBlockCoverage":false},{"functionName":"hostGetCanonicalFileName","ranges":[{"startOffset":8941238,"endOffset":8941268,"count":0}],"isBlockCoverage":false},{"functionName":"hostUsesCaseSensitiveFileNames","ranges":[{"startOffset":8941306,"endOffset":8941342,"count":0}],"isBlockCoverage":false},{"functionName":"idText","ranges":[{"startOffset":8941356,"endOffset":8941368,"count":0}],"isBlockCoverage":false},{"functionName":"identifierIsThisKeyword","ranges":[{"startOffset":8941399,"endOffset":8941428,"count":0}],"isBlockCoverage":false},{"functionName":"identifierToKeywordKind","ranges":[{"startOffset":8941459,"endOffset":8941488,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":8941504,"endOffset":8941518,"count":0}],"isBlockCoverage":false},{"functionName":"identitySourceMapConsumer","ranges":[{"startOffset":8941551,"endOffset":8941582,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreSourceNewlines","ranges":[{"startOffset":8941610,"endOffset":8941636,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPaths","ranges":[{"startOffset":8941656,"endOffset":8941674,"count":0}],"isBlockCoverage":false},{"functionName":"importDefaultHelper","ranges":[{"startOffset":8941701,"endOffset":8941726,"count":0}],"isBlockCoverage":false},{"functionName":"importFromModuleSpecifier","ranges":[{"startOffset":8941759,"endOffset":8941790,"count":0}],"isBlockCoverage":false},{"functionName":"importNameElisionDisabled","ranges":[{"startOffset":8941823,"endOffset":8941854,"count":0}],"isBlockCoverage":false},{"functionName":"importStarHelper","ranges":[{"startOffset":8941878,"endOffset":8941900,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfAnyCharCode","ranges":[{"startOffset":8941926,"endOffset":8941950,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfNode","ranges":[{"startOffset":8941969,"endOffset":8941986,"count":0}],"isBlockCoverage":false},{"functionName":"indicesOf","ranges":[{"startOffset":8942003,"endOffset":8942018,"count":0}],"isBlockCoverage":false},{"functionName":"inferredTypesContainingFile","ranges":[{"startOffset":8942053,"endOffset":8942086,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassNamedEvaluationHelperBlockIfMissing","ranges":[{"startOffset":8942140,"endOffset":8942192,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassThisAssignmentIfMissing","ranges":[{"startOffset":8942234,"endOffset":8942274,"count":0}],"isBlockCoverage":false},{"functionName":"insertImports","ranges":[{"startOffset":8942295,"endOffset":8942314,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeadingStatement","ranges":[{"startOffset":8942344,"endOffset":8942372,"count":0}],"isBlockCoverage":false},{"functionName":"insertSorted","ranges":[{"startOffset":8942392,"endOffset":8942410,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterCustomPrologue","ranges":[{"startOffset":8942452,"endOffset":8942492,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterStandardPrologue","ranges":[{"startOffset":8942536,"endOffset":8942578,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterCustomPrologue","ranges":[{"startOffset":8942621,"endOffset":8942662,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterStandardPrologue","ranges":[{"startOffset":8942707,"endOffset":8942750,"count":0}],"isBlockCoverage":false},{"functionName":"intersperse","ranges":[{"startOffset":8942769,"endOffset":8942786,"count":0}],"isBlockCoverage":false},{"functionName":"intrinsicTagNameToString","ranges":[{"startOffset":8942818,"endOffset":8942848,"count":0}],"isBlockCoverage":false},{"functionName":"introducesArgumentsExoticObject","ranges":[{"startOffset":8942887,"endOffset":8942924,"count":0}],"isBlockCoverage":false},{"functionName":"inverseJsxOptionMap","ranges":[{"startOffset":8942951,"endOffset":8942976,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractConstructorSymbol","ranges":[{"startOffset":8943011,"endOffset":8943044,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractModifier","ranges":[{"startOffset":8943070,"endOffset":8943094,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessExpression","ranges":[{"startOffset":8943120,"endOffset":8943144,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessibilityModifier","ranges":[{"startOffset":8943175,"endOffset":8943204,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":8943222,"endOffset":8943238,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessorModifier","ranges":[{"startOffset":8943264,"endOffset":8943288,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasSymbolDeclaration","ranges":[{"startOffset":8943320,"endOffset":8943350,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasableExpression","ranges":[{"startOffset":8943379,"endOffset":8943406,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModule","ranges":[{"startOffset":8943429,"endOffset":8943450,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientPropertyDeclaration","ranges":[{"startOffset":8943486,"endOffset":8943520,"count":0}],"isBlockCoverage":false},{"functionName":"isAnonymousFunctionDefinition","ranges":[{"startOffset":8943557,"endOffset":8943592,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":8943623,"endOffset":8943652,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrBareOrAccessedRequire","ranges":[{"startOffset":8943694,"endOffset":8943734,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrReExport","ranges":[{"startOffset":8943763,"endOffset":8943790,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportSyntax","ranges":[{"startOffset":8943815,"endOffset":8943838,"count":0}],"isBlockCoverage":false},{"functionName":"isAnySupportedFileExtension","ranges":[{"startOffset":8943873,"endOffset":8943906,"count":0}],"isBlockCoverage":false},{"functionName":"isApplicableVersionedTypesKey","ranges":[{"startOffset":8943943,"endOffset":8943978,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentExpressionOfElementAccess","ranges":[{"startOffset":8944021,"endOffset":8944062,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":8944077,"endOffset":8944090,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingElement","ranges":[{"startOffset":8944119,"endOffset":8944146,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentElement","ranges":[{"startOffset":8944187,"endOffset":8944226,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentPattern","ranges":[{"startOffset":8944267,"endOffset":8944306,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingPattern","ranges":[{"startOffset":8944335,"endOffset":8944362,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralExpression","ranges":[{"startOffset":8944394,"endOffset":8944424,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralOrObjectLiteralDestructuringPattern","ranges":[{"startOffset":8944481,"endOffset":8944536,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeNode","ranges":[{"startOffset":8944559,"endOffset":8944580,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunction","ranges":[{"startOffset":8944603,"endOffset":8944624,"count":0}],"isBlockCoverage":false},{"functionName":"isAsExpression","ranges":[{"startOffset":8944646,"endOffset":8944666,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertClause","ranges":[{"startOffset":8944688,"endOffset":8944708,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertEntry","ranges":[{"startOffset":8944729,"endOffset":8944748,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertionExpression","ranges":[{"startOffset":8944777,"endOffset":8944804,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertsKeyword","ranges":[{"startOffset":8944828,"endOffset":8944850,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentDeclaration","ranges":[{"startOffset":8944881,"endOffset":8944910,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":8944940,"endOffset":8944968,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperator","ranges":[{"startOffset":8944996,"endOffset":8945022,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":8945049,"endOffset":8945074,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":8945100,"endOffset":8945124,"count":0}],"isBlockCoverage":false},{"functionName":"isAsteriskToken","ranges":[{"startOffset":8945147,"endOffset":8945168,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":8945191,"endOffset":8945212,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncModifier","ranges":[{"startOffset":8945235,"endOffset":8945256,"count":0}],"isBlockCoverage":false},{"functionName":"isAutoAccessorPropertyDeclaration","ranges":[{"startOffset":8945297,"endOffset":8945336,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":8945361,"endOffset":8945384,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitKeyword","ranges":[{"startOffset":8945406,"endOffset":8945426,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":8945449,"endOffset":8945470,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":8945496,"endOffset":8945520,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperatorToken","ranges":[{"startOffset":8945549,"endOffset":8945576,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableObjectDefinePropertyCall","ranges":[{"startOffset":8945618,"endOffset":8945658,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticAccessExpression","ranges":[{"startOffset":8945698,"endOffset":8945736,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticElementAccessExpression","ranges":[{"startOffset":8945783,"endOffset":8945828,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticNameExpression","ranges":[{"startOffset":8945866,"endOffset":8945902,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElement","ranges":[{"startOffset":8945926,"endOffset":8945948,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElementOfBareOrAccessedRequire","ranges":[{"startOffset":8945995,"endOffset":8946040,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingName","ranges":[{"startOffset":8946061,"endOffset":8946080,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentElement","ranges":[{"startOffset":8946116,"endOffset":8946150,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentPattern","ranges":[{"startOffset":8946186,"endOffset":8946220,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingPattern","ranges":[{"startOffset":8946244,"endOffset":8946266,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":8946281,"endOffset":8946294,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockOrCatchScoped","ranges":[{"startOffset":8946322,"endOffset":8946348,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":8946368,"endOffset":8946386,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScopedContainerTopLevel","ranges":[{"startOffset":8946424,"endOffset":8946460,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":8946484,"endOffset":8946506,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakOrContinueStatement","ranges":[{"startOffset":8946540,"endOffset":8946572,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":8946596,"endOffset":8946618,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildInfoFile","ranges":[{"startOffset":8946641,"endOffset":8946662,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram","ranges":[{"startOffset":8946686,"endOffset":8946709,"count":0}],"isBlockCoverage":false},{"functionName":"isBundle","ranges":[{"startOffset":8946725,"endOffset":8946739,"count":0}],"isBlockCoverage":false},{"functionName":"isBundleFileTextLike","ranges":[{"startOffset":8946767,"endOffset":8946793,"count":0}],"isBlockCoverage":false},{"functionName":"isCallChain","ranges":[{"startOffset":8946812,"endOffset":8946829,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":8946853,"endOffset":8946875,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionTarget","ranges":[{"startOffset":8946905,"endOffset":8946933,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeExpression","ranges":[{"startOffset":8946961,"endOffset":8946987,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeOrFunctionLikeExpression","ranges":[{"startOffset":8947029,"endOffset":8947069,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpression","ranges":[{"startOffset":8947098,"endOffset":8947125,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpressionTarget","ranges":[{"startOffset":8947160,"endOffset":8947193,"count":0}],"isBlockCoverage":false},{"functionName":"isCallSignatureDeclaration","ranges":[{"startOffset":8947227,"endOffset":8947259,"count":0}],"isBlockCoverage":false},{"functionName":"isCallToHelper","ranges":[{"startOffset":8947281,"endOffset":8947301,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseBlock","ranges":[{"startOffset":8947320,"endOffset":8947337,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseClause","ranges":[{"startOffset":8947357,"endOffset":8947375,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseKeyword","ranges":[{"startOffset":8947396,"endOffset":8947415,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseOrDefaultClause","ranges":[{"startOffset":8947444,"endOffset":8947471,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":8947492,"endOffset":8947511,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclaration","ranges":[{"startOffset":8947551,"endOffset":8947589,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclarationOrBindingElement","ranges":[{"startOffset":8947645,"endOffset":8947699,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckJsEnabledForFile","ranges":[{"startOffset":8947730,"endOffset":8947759,"count":0}],"isBlockCoverage":false},{"functionName":"isChildOfNodeWithKind","ranges":[{"startOffset":8947788,"endOffset":8947815,"count":0}],"isBlockCoverage":false},{"functionName":"isCircularBuildOrder","ranges":[{"startOffset":8947843,"endOffset":8947869,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":8947895,"endOffset":8947919,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElement","ranges":[{"startOffset":8947941,"endOffset":8947961,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":8947986,"endOffset":8948009,"count":0}],"isBlockCoverage":false},{"functionName":"isClassInstanceProperty","ranges":[{"startOffset":8948040,"endOffset":8948069,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLike","ranges":[{"startOffset":8948088,"endOffset":8948105,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberModifier","ranges":[{"startOffset":8948134,"endOffset":8948161,"count":0}],"isBlockCoverage":false},{"functionName":"isClassNamedEvaluationHelperBlock","ranges":[{"startOffset":8948202,"endOffset":8948241,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrTypeElement","ranges":[{"startOffset":8948269,"endOffset":8948295,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticBlockDeclaration","ranges":[{"startOffset":8948332,"endOffset":8948367,"count":0}],"isBlockCoverage":false},{"functionName":"isClassThisAssignmentBlock","ranges":[{"startOffset":8948401,"endOffset":8948433,"count":0}],"isBlockCoverage":false},{"functionName":"isCollapsedRange","ranges":[{"startOffset":8948457,"endOffset":8948479,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":8948499,"endOffset":8948517,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaExpression","ranges":[{"startOffset":8948542,"endOffset":8948565,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaListExpression","ranges":[{"startOffset":8948594,"endOffset":8948621,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaSequence","ranges":[{"startOffset":8948644,"endOffset":8948665,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":8948685,"endOffset":8948703,"count":0}],"isBlockCoverage":false},{"functionName":"isComment","ranges":[{"startOffset":8948720,"endOffset":8948735,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportPropertyAssignment","ranges":[{"startOffset":8948777,"endOffset":8948817,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportedExpression","ranges":[{"startOffset":8948853,"endOffset":8948887,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundAssignment","ranges":[{"startOffset":8948915,"endOffset":8948941,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedNonLiteralName","ranges":[{"startOffset":8948973,"endOffset":8949003,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedPropertyName","ranges":[{"startOffset":8949033,"endOffset":8949061,"count":0}],"isBlockCoverage":false},{"functionName":"isConciseBody","ranges":[{"startOffset":8949082,"endOffset":8949101,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":8949132,"endOffset":8949161,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalTypeNode","ranges":[{"startOffset":8949190,"endOffset":8949217,"count":0}],"isBlockCoverage":false},{"functionName":"isConstTypeReference","ranges":[{"startOffset":8949245,"endOffset":8949271,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructSignatureDeclaration","ranges":[{"startOffset":8949310,"endOffset":8949347,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorDeclaration","ranges":[{"startOffset":8949379,"endOffset":8949409,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorTypeNode","ranges":[{"startOffset":8949438,"endOffset":8949465,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeyword","ranges":[{"startOffset":8949492,"endOffset":8949517,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":8949544,"endOffset":8949569,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomPrologue","ranges":[{"startOffset":8949593,"endOffset":8949615,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":8949642,"endOffset":8949667,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":8949688,"endOffset":8949707,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationBindingElement","ranges":[{"startOffset":8949742,"endOffset":8949775,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileName","ranges":[{"startOffset":8949804,"endOffset":8949831,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationName","ranges":[{"startOffset":8949856,"endOffset":8949879,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOfEnumOrNamespace","ranges":[{"startOffset":8949921,"endOffset":8949961,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationReadonly","ranges":[{"startOffset":8949990,"endOffset":8950017,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatement","ranges":[{"startOffset":8950047,"endOffset":8950075,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameterChildren","ranges":[{"startOffset":8950121,"endOffset":8950165,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameters","ranges":[{"startOffset":8950204,"endOffset":8950241,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":8950260,"endOffset":8950277,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorTarget","ranges":[{"startOffset":8950302,"endOffset":8950325,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultClause","ranges":[{"startOffset":8950348,"endOffset":8950369,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultImport","ranges":[{"startOffset":8950392,"endOffset":8950413,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier","ranges":[{"startOffset":8950438,"endOffset":8950461,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultedExpandoInitializer","ranges":[{"startOffset":8950498,"endOffset":8950533,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteExpression","ranges":[{"startOffset":8950559,"endOffset":8950583,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteTarget","ranges":[{"startOffset":8950605,"endOffset":8950625,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecatedDeclaration","ranges":[{"startOffset":8950656,"endOffset":8950685,"count":0}],"isBlockCoverage":false},{"functionName":"isDestructuringAssignment","ranges":[{"startOffset":8950718,"endOffset":8950749,"count":0}],"isBlockCoverage":false},{"functionName":"isDiagnosticWithLocation","ranges":[{"startOffset":8950781,"endOffset":8950811,"count":0}],"isBlockCoverage":false},{"functionName":"isDiskPathRoot","ranges":[{"startOffset":8950833,"endOffset":8950853,"count":0}],"isBlockCoverage":false},{"functionName":"isDoStatement","ranges":[{"startOffset":8950874,"endOffset":8950893,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentRegistryEntry","ranges":[{"startOffset":8950924,"endOffset":8950953,"count":0}],"isBlockCoverage":false},{"functionName":"isDotDotDotToken","ranges":[{"startOffset":8950977,"endOffset":8950999,"count":0}],"isBlockCoverage":false},{"functionName":"isDottedName","ranges":[{"startOffset":8951019,"endOffset":8951037,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicName","ranges":[{"startOffset":8951058,"endOffset":8951077,"count":0}],"isBlockCoverage":false},{"functionName":"isESSymbolIdentifier","ranges":[{"startOffset":8951105,"endOffset":8951131,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveExternalModule","ranges":[{"startOffset":8951164,"endOffset":8951195,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveModuleDeclaration","ranges":[{"startOffset":8951231,"endOffset":8951265,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveStrictModeSourceFile","ranges":[{"startOffset":8951304,"endOffset":8951341,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessChain","ranges":[{"startOffset":8951369,"endOffset":8951395,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessExpression","ranges":[{"startOffset":8951428,"endOffset":8951459,"count":0}],"isBlockCoverage":false},{"functionName":"isEmittedFileOfProgram","ranges":[{"startOffset":8951489,"endOffset":8951517,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArrayLiteral","ranges":[{"startOffset":8951544,"endOffset":8951569,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingElement","ranges":[{"startOffset":8951598,"endOffset":8951625,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingPattern","ranges":[{"startOffset":8951654,"endOffset":8951681,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObjectLiteral","ranges":[{"startOffset":8951709,"endOffset":8951735,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":8951759,"endOffset":8951781,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringLiteral","ranges":[{"startOffset":8951809,"endOffset":8951835,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityName","ranges":[{"startOffset":8951855,"endOffset":8951873,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityNameExpression","ranges":[{"startOffset":8951903,"endOffset":8951931,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumConst","ranges":[{"startOffset":8951950,"endOffset":8951967,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":8951992,"endOffset":8952015,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":8952035,"endOffset":8952053,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorKind","ranges":[{"startOffset":8952083,"endOffset":8952111,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualsGreaterThanToken","ranges":[{"startOffset":8952143,"endOffset":8952173,"count":0}],"isBlockCoverage":false},{"functionName":"isExclamationToken","ranges":[{"startOffset":8952199,"endOffset":8952223,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedFile","ranges":[{"startOffset":8952245,"endOffset":8952265,"count":0}],"isBlockCoverage":false},{"functionName":"isExclusivelyTypeOnlyImportOrExport","ranges":[{"startOffset":8952308,"endOffset":8952349,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoPropertyDeclaration","ranges":[{"startOffset":8952385,"endOffset":8952419,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":8952445,"endOffset":8952469,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":8952496,"endOffset":8952521,"count":0}],"isBlockCoverage":false},{"functionName":"isExportModifier","ranges":[{"startOffset":8952545,"endOffset":8952567,"count":0}],"isBlockCoverage":false},{"functionName":"isExportName","ranges":[{"startOffset":8952587,"endOffset":8952605,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceAsDefaultDeclaration","ranges":[{"startOffset":8952650,"endOffset":8952693,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultModifier","ranges":[{"startOffset":8952726,"endOffset":8952757,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":8952782,"endOffset":8952805,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsIdentifier","ranges":[{"startOffset":8952832,"endOffset":8952857,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsOrModuleExportsOrAlias","ranges":[{"startOffset":8952896,"endOffset":8952933,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":8952953,"endOffset":8952971,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionNode","ranges":[{"startOffset":8952995,"endOffset":8953017,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":8953076,"endOffset":8953133,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfOptionalChainRoot","ranges":[{"startOffset":8953172,"endOffset":8953209,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":8953238,"endOffset":8953265,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArguments","ranges":[{"startOffset":8953302,"endOffset":8953337,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArgumentsInClassExtendsClause","ranges":[{"startOffset":8953394,"endOffset":8953449,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModule","ranges":[{"startOffset":8953473,"endOffset":8953495,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleAugmentation","ranges":[{"startOffset":8953531,"endOffset":8953565,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":8953612,"endOffset":8953657,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleIndicator","ranges":[{"startOffset":8953690,"endOffset":8953721,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleNameRelative","ranges":[{"startOffset":8953757,"endOffset":8953791,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference","ranges":[{"startOffset":8953824,"endOffset":8953855,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleSymbol","ranges":[{"startOffset":8953885,"endOffset":8953913,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalOrCommonJsModule","ranges":[{"startOffset":8953947,"endOffset":8953979,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelReservedGeneratedIdentifier","ranges":[{"startOffset":8954025,"endOffset":8954069,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelUniqueName","ranges":[{"startOffset":8954098,"endOffset":8954125,"count":0}],"isBlockCoverage":false},{"functionName":"isFileProbablyExternalModule","ranges":[{"startOffset":8954161,"endOffset":8954195,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstDeclarationOfSymbolParameter","ranges":[{"startOffset":8954238,"endOffset":8954279,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseHandler","ranges":[{"startOffset":8954310,"endOffset":8954339,"count":0}],"isBlockCoverage":false},{"functionName":"isForInOrOfStatement","ranges":[{"startOffset":8954367,"endOffset":8954393,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":8954417,"endOffset":8954439,"count":0}],"isBlockCoverage":false},{"functionName":"isForInitializer","ranges":[{"startOffset":8954463,"endOffset":8954485,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":8954509,"endOffset":8954531,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":8954553,"endOffset":8954573,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBlock","ranges":[{"startOffset":8954596,"endOffset":8954617,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBody","ranges":[{"startOffset":8954639,"endOffset":8954659,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":8954688,"endOffset":8954715,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":8954743,"endOffset":8954769,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionOrArrowFunction","ranges":[{"startOffset":8954812,"endOffset":8954853,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":8954875,"endOffset":8954895,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclaration","ranges":[{"startOffset":8954928,"endOffset":8954959,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeKind","ranges":[{"startOffset":8954985,"endOffset":8955009,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeOrClassStaticBlockDeclaration","ranges":[{"startOffset":8955060,"endOffset":8955109,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrConstructorTypeNode","ranges":[{"startOffset":8955148,"endOffset":8955185,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrModuleBlock","ranges":[{"startOffset":8955216,"endOffset":8955245,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionSymbol","ranges":[{"startOffset":8955269,"endOffset":8955291,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeNode","ranges":[{"startOffset":8955317,"endOffset":8955341,"count":0}],"isBlockCoverage":false},{"functionName":"isFutureReservedKeyword","ranges":[{"startOffset":8955372,"endOffset":8955401,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedIdentifier","ranges":[{"startOffset":8955430,"endOffset":8955457,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedPrivateIdentifier","ranges":[{"startOffset":8955493,"endOffset":8955527,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessor","ranges":[{"startOffset":8955548,"endOffset":8955567,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessorDeclaration","ranges":[{"startOffset":8955599,"endOffset":8955629,"count":0}],"isBlockCoverage":false},{"functionName":"isGetOrSetAccessorDeclaration","ranges":[{"startOffset":8955666,"endOffset":8955701,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalDeclaration","ranges":[{"startOffset":8955728,"endOffset":8955753,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalScopeAugmentation","ranges":[{"startOffset":8955786,"endOffset":8955817,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarError","ranges":[{"startOffset":8955839,"endOffset":8955859,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause","ranges":[{"startOffset":8955883,"endOffset":8955905,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedFunction","ranges":[{"startOffset":8955930,"endOffset":8955953,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariableStatement","ranges":[{"startOffset":8955987,"endOffset":8956019,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":8956039,"endOffset":8956057,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierANonContextualKeyword","ranges":[{"startOffset":8956098,"endOffset":8956137,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":8956161,"endOffset":8956183,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierOrThisTypeNode","ranges":[{"startOffset":8956217,"endOffset":8956249,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPart","ranges":[{"startOffset":8956273,"endOffset":8956295,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":8956320,"endOffset":8956343,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierText","ranges":[{"startOffset":8956367,"endOffset":8956389,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypePredicate","ranges":[{"startOffset":8956422,"endOffset":8956453,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypeReference","ranges":[{"startOffset":8956486,"endOffset":8956517,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":8956538,"endOffset":8956557,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredFileFromWildCardWatching","ranges":[{"startOffset":8956598,"endOffset":8956637,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":8956659,"endOffset":8956679,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":8956704,"endOffset":8956727,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributeName","ranges":[{"startOffset":8956756,"endOffset":8956783,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributes","ranges":[{"startOffset":8956809,"endOffset":8956833,"count":0}],"isBlockCoverage":false},{"functionName":"isImportCall","ranges":[{"startOffset":8956853,"endOffset":8956871,"count":0}],"isBlockCoverage":false},{"functionName":"isImportClause","ranges":[{"startOffset":8956893,"endOffset":8956913,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":8956940,"endOffset":8956965,"count":0}],"isBlockCoverage":false},{"functionName":"isImportEqualsDeclaration","ranges":[{"startOffset":8956998,"endOffset":8957029,"count":0}],"isBlockCoverage":false},{"functionName":"isImportKeyword","ranges":[{"startOffset":8957052,"endOffset":8957073,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta","ranges":[{"startOffset":8957093,"endOffset":8957111,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifier","ranges":[{"startOffset":8957144,"endOffset":8957175,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifierName","ranges":[{"startOffset":8957212,"endOffset":8957247,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":8957272,"endOffset":8957295,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeAssertionContainer","ranges":[{"startOffset":8957333,"endOffset":8957369,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeNode","ranges":[{"startOffset":8957393,"endOffset":8957415,"count":0}],"isBlockCoverage":false},{"functionName":"isImportableFile","ranges":[{"startOffset":8957439,"endOffset":8957461,"count":0}],"isBlockCoverage":false},{"functionName":"isInComment","ranges":[{"startOffset":8957480,"endOffset":8957497,"count":0}],"isBlockCoverage":false},{"functionName":"isInCompoundLikeAssignment","ranges":[{"startOffset":8957531,"endOffset":8957563,"count":0}],"isBlockCoverage":false},{"functionName":"isInExpressionContext","ranges":[{"startOffset":8957592,"endOffset":8957619,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSDoc","ranges":[{"startOffset":8957636,"endOffset":8957651,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSFile","ranges":[{"startOffset":8957669,"endOffset":8957685,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXText","ranges":[{"startOffset":8957704,"endOffset":8957721,"count":0}],"isBlockCoverage":false},{"functionName":"isInJsonFile","ranges":[{"startOffset":8957741,"endOffset":8957759,"count":0}],"isBlockCoverage":false},{"functionName":"isInNonReferenceComment","ranges":[{"startOffset":8957790,"endOffset":8957819,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceComment","ranges":[{"startOffset":8957847,"endOffset":8957873,"count":0}],"isBlockCoverage":false},{"functionName":"isInRightSideOfInternalImportEqualsDeclaration","ranges":[{"startOffset":8957927,"endOffset":8957979,"count":0}],"isBlockCoverage":false},{"functionName":"isInString","ranges":[{"startOffset":8957997,"endOffset":8958013,"count":0}],"isBlockCoverage":false},{"functionName":"isInTemplateString","ranges":[{"startOffset":8958039,"endOffset":8958063,"count":0}],"isBlockCoverage":false},{"functionName":"isInTopLevelContext","ranges":[{"startOffset":8958090,"endOffset":8958115,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeQuery","ranges":[{"startOffset":8958136,"endOffset":8958155,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalCompilation","ranges":[{"startOffset":8958187,"endOffset":8958217,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignatureDeclaration","ranges":[{"startOffset":8958252,"endOffset":8958285,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessTypeNode","ranges":[{"startOffset":8958316,"endOffset":8958345,"count":0}],"isBlockCoverage":false},{"functionName":"isInferTypeNode","ranges":[{"startOffset":8958368,"endOffset":8958389,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinityOrNaNString","ranges":[{"startOffset":8958418,"endOffset":8958445,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedProperty","ranges":[{"startOffset":8958474,"endOffset":8958501,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedVariable","ranges":[{"startOffset":8958530,"endOffset":8958557,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElement","ranges":[{"startOffset":8958583,"endOffset":8958607,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElementOrAttribute","ranges":[{"startOffset":8958644,"endOffset":8958679,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":8958706,"endOffset":8958731,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideTemplateLiteral","ranges":[{"startOffset":8958762,"endOffset":8958791,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceOfExpression","ranges":[{"startOffset":8958821,"endOffset":8958849,"count":0}],"isBlockCoverage":false},{"functionName":"isInstantiatedModule","ranges":[{"startOffset":8958877,"endOffset":8958903,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":8958933,"endOffset":8958961,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalDeclaration","ranges":[{"startOffset":8958990,"endOffset":8959017,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalModuleImportEqualsDeclaration","ranges":[{"startOffset":8959064,"endOffset":8959109,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalName","ranges":[{"startOffset":8959131,"endOffset":8959151,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeNode","ranges":[{"startOffset":8959181,"endOffset":8959209,"count":0}],"isBlockCoverage":false},{"functionName":"isIntrinsicJsxName","ranges":[{"startOffset":8959235,"endOffset":8959259,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":8959287,"endOffset":8959313,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDoc","ranges":[{"startOffset":8959328,"endOffset":8959341,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAllType","ranges":[{"startOffset":8959363,"endOffset":8959383,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAugmentsTag","ranges":[{"startOffset":8959409,"endOffset":8959433,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAuthorTag","ranges":[{"startOffset":8959457,"endOffset":8959479,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCallbackTag","ranges":[{"startOffset":8959505,"endOffset":8959529,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocClassTag","ranges":[{"startOffset":8959552,"endOffset":8959573,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCommentContainingNode","ranges":[{"startOffset":8959609,"endOffset":8959643,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocConstructSignature","ranges":[{"startOffset":8959676,"endOffset":8959707,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocDeprecatedTag","ranges":[{"startOffset":8959735,"endOffset":8959761,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocEnumTag","ranges":[{"startOffset":8959783,"endOffset":8959803,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocFunctionType","ranges":[{"startOffset":8959830,"endOffset":8959855,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImplementsTag","ranges":[{"startOffset":8959883,"endOffset":8959909,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocIndexSignature","ranges":[{"startOffset":8959938,"endOffset":8959965,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLikeText","ranges":[{"startOffset":8959988,"endOffset":8960009,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLink","ranges":[{"startOffset":8960028,"endOffset":8960045,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkCode","ranges":[{"startOffset":8960068,"endOffset":8960089,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkLike","ranges":[{"startOffset":8960112,"endOffset":8960133,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkPlain","ranges":[{"startOffset":8960157,"endOffset":8960179,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocMemberName","ranges":[{"startOffset":8960204,"endOffset":8960227,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNameReference","ranges":[{"startOffset":8960255,"endOffset":8960281,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamepathType","ranges":[{"startOffset":8960308,"endOffset":8960333,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamespaceBody","ranges":[{"startOffset":8960361,"endOffset":8960387,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNode","ranges":[{"startOffset":8960406,"endOffset":8960423,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNonNullableType","ranges":[{"startOffset":8960453,"endOffset":8960481,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNullableType","ranges":[{"startOffset":8960508,"endOffset":8960533,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalParameter","ranges":[{"startOffset":8960565,"endOffset":8960595,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalType","ranges":[{"startOffset":8960622,"endOffset":8960647,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverloadTag","ranges":[{"startOffset":8960673,"endOffset":8960697,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverrideTag","ranges":[{"startOffset":8960723,"endOffset":8960747,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocParameterTag","ranges":[{"startOffset":8960774,"endOffset":8960799,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPrivateTag","ranges":[{"startOffset":8960824,"endOffset":8960847,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyLikeTag","ranges":[{"startOffset":8960877,"endOffset":8960905,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyTag","ranges":[{"startOffset":8960931,"endOffset":8960955,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocProtectedTag","ranges":[{"startOffset":8960982,"endOffset":8961007,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPublicTag","ranges":[{"startOffset":8961031,"endOffset":8961053,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReadonlyTag","ranges":[{"startOffset":8961079,"endOffset":8961103,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReturnTag","ranges":[{"startOffset":8961127,"endOffset":8961149,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesExpression","ranges":[{"startOffset":8961183,"endOffset":8961215,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesTag","ranges":[{"startOffset":8961242,"endOffset":8961267,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSeeTag","ranges":[{"startOffset":8961288,"endOffset":8961307,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSignature","ranges":[{"startOffset":8961331,"endOffset":8961353,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTag","ranges":[{"startOffset":8961371,"endOffset":8961387,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTemplateTag","ranges":[{"startOffset":8961413,"endOffset":8961437,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThisTag","ranges":[{"startOffset":8961459,"endOffset":8961479,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThrowsTag","ranges":[{"startOffset":8961503,"endOffset":8961525,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAlias","ranges":[{"startOffset":8961549,"endOffset":8961571,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAssertion","ranges":[{"startOffset":8961599,"endOffset":8961625,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeExpression","ranges":[{"startOffset":8961654,"endOffset":8961681,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeLiteral","ranges":[{"startOffset":8961707,"endOffset":8961731,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeTag","ranges":[{"startOffset":8961753,"endOffset":8961773,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypedefTag","ranges":[{"startOffset":8961798,"endOffset":8961821,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownTag","ranges":[{"startOffset":8961846,"endOffset":8961869,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownType","ranges":[{"startOffset":8961895,"endOffset":8961919,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocVariadicType","ranges":[{"startOffset":8961946,"endOffset":8961971,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXTagName","ranges":[{"startOffset":8961991,"endOffset":8962009,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonEqual","ranges":[{"startOffset":8962028,"endOffset":8962045,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonSourceFile","ranges":[{"startOffset":8962069,"endOffset":8962091,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttribute","ranges":[{"startOffset":8962113,"endOffset":8962133,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeLike","ranges":[{"startOffset":8962159,"endOffset":8962183,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeName","ranges":[{"startOffset":8962209,"endOffset":8962233,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributes","ranges":[{"startOffset":8962256,"endOffset":8962277,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxChild","ranges":[{"startOffset":8962295,"endOffset":8962311,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingElement","ranges":[{"startOffset":8962338,"endOffset":8962363,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingFragment","ranges":[{"startOffset":8962391,"endOffset":8962417,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxElement","ranges":[{"startOffset":8962437,"endOffset":8962455,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpression","ranges":[{"startOffset":8962478,"endOffset":8962499,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxFragment","ranges":[{"startOffset":8962520,"endOffset":8962539,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxNamespacedName","ranges":[{"startOffset":8962566,"endOffset":8962591,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningElement","ranges":[{"startOffset":8962618,"endOffset":8962643,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningFragment","ranges":[{"startOffset":8962671,"endOffset":8962697,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElement","ranges":[{"startOffset":8962728,"endOffset":8962757,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElementTagName","ranges":[{"startOffset":8962795,"endOffset":8962831,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElement","ranges":[{"startOffset":8962862,"endOffset":8962891,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSpreadAttribute","ranges":[{"startOffset":8962919,"endOffset":8962945,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxTagNameExpression","ranges":[{"startOffset":8962975,"endOffset":8963003,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxText","ranges":[{"startOffset":8963020,"endOffset":8963035,"count":0}],"isBlockCoverage":false},{"functionName":"isJumpStatementTarget","ranges":[{"startOffset":8963064,"endOffset":8963091,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":8963108,"endOffset":8963123,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordOrPunctuation","ranges":[{"startOffset":8963153,"endOffset":8963181,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownSymbol","ranges":[{"startOffset":8963202,"endOffset":8963221,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelName","ranges":[{"startOffset":8963240,"endOffset":8963257,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelOfLabeledStatement","ranges":[{"startOffset":8963290,"endOffset":8963321,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":8963347,"endOffset":8963371,"count":0}],"isBlockCoverage":false},{"functionName":"isLateVisibilityPaintedStatement","ranges":[{"startOffset":8963411,"endOffset":8963449,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideExpression","ranges":[{"startOffset":8963481,"endOffset":8963511,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideOfAssignment","ranges":[{"startOffset":8963545,"endOffset":8963577,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":8963590,"endOffset":8963601,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":8963620,"endOffset":8963637,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralComputedPropertyDeclarationName","ranges":[{"startOffset":8963685,"endOffset":8963731,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpression","ranges":[{"startOffset":8963758,"endOffset":8963783,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpressionOfObject","ranges":[{"startOffset":8963818,"endOffset":8963851,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralImportTypeNode","ranges":[{"startOffset":8963882,"endOffset":8963911,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralKind","ranges":[{"startOffset":8963932,"endOffset":8963951,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeAccess","ranges":[{"startOffset":8963978,"endOffset":8964003,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeElementAccess","ranges":[{"startOffset":8964037,"endOffset":8964069,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralNameOfPropertyDeclarationOrIndexAccess","ranges":[{"startOffset":8964124,"endOffset":8964177,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLikeExpression","ranges":[{"startOffset":8964212,"endOffset":8964245,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLiteral","ranges":[{"startOffset":8964273,"endOffset":8964299,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeNode","ranges":[{"startOffset":8964324,"endOffset":8964347,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalName","ranges":[{"startOffset":8964366,"endOffset":8964383,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator","ranges":[{"startOffset":8964408,"endOffset":8964431,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentExpression","ranges":[{"startOffset":8964480,"endOffset":8964527,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentOperator","ranges":[{"startOffset":8964574,"endOffset":8964619,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryExpression","ranges":[{"startOffset":8964664,"endOffset":8964707,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryOperator","ranges":[{"startOffset":8964750,"endOffset":8964791,"count":0}],"isBlockCoverage":false},{"functionName":"isMappedTypeNode","ranges":[{"startOffset":8964815,"endOffset":8964837,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberName","ranges":[{"startOffset":8964857,"endOffset":8964875,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":8964897,"endOffset":8964917,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodDeclaration","ranges":[{"startOffset":8964944,"endOffset":8964969,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodOrAccessor","ranges":[{"startOffset":8964995,"endOffset":8965019,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodSignature","ranges":[{"startOffset":8965044,"endOffset":8965067,"count":0}],"isBlockCoverage":false},{"functionName":"isMinusToken","ranges":[{"startOffset":8965087,"endOffset":8965105,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingDeclaration","ranges":[{"startOffset":8965133,"endOffset":8965159,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingPackageJsonInfo","ranges":[{"startOffset":8965191,"endOffset":8965221,"count":0}],"isBlockCoverage":false},{"functionName":"isModifier","ranges":[{"startOffset":8965239,"endOffset":8965255,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierKind","ranges":[{"startOffset":8965277,"endOffset":8965297,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike","ranges":[{"startOffset":8965319,"endOffset":8965339,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleAugmentationExternal","ranges":[{"startOffset":8965375,"endOffset":8965409,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBlock","ranges":[{"startOffset":8965430,"endOffset":8965449,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBody","ranges":[{"startOffset":8965469,"endOffset":8965487,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":8965514,"endOffset":8965539,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsAccessExpression","ranges":[{"startOffset":8965578,"endOffset":8965615,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleIdentifier","ranges":[{"startOffset":8965641,"endOffset":8965665,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleName","ranges":[{"startOffset":8965685,"endOffset":8965703,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleOrEnumDeclaration","ranges":[{"startOffset":8965736,"endOffset":8965767,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleReference","ranges":[{"startOffset":8965792,"endOffset":8965815,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierLike","ranges":[{"startOffset":8965844,"endOffset":8965871,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleWithStringLiteralName","ranges":[{"startOffset":8965908,"endOffset":8965943,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfFunctionDeclaration","ranges":[{"startOffset":8965978,"endOffset":8966011,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfModuleDeclaration","ranges":[{"startOffset":8966044,"endOffset":8966075,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedClassElement","ranges":[{"startOffset":8966102,"endOffset":8966127,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDeclaration","ranges":[{"startOffset":8966153,"endOffset":8966177,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluation","ranges":[{"startOffset":8966202,"endOffset":8966225,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluationSource","ranges":[{"startOffset":8966256,"endOffset":8966285,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExportBindings","ranges":[{"startOffset":8966314,"endOffset":8966341,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExports","ranges":[{"startOffset":8966363,"endOffset":8966383,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportBindings","ranges":[{"startOffset":8966412,"endOffset":8966439,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImports","ranges":[{"startOffset":8966461,"endOffset":8966481,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportsOrExports","ranges":[{"startOffset":8966512,"endOffset":8966541,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedTupleMember","ranges":[{"startOffset":8966567,"endOffset":8966591,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceBody","ranges":[{"startOffset":8966614,"endOffset":8966635,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExport","ranges":[{"startOffset":8966660,"endOffset":8966683,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExportDeclaration","ranges":[{"startOffset":8966719,"endOffset":8966753,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceImport","ranges":[{"startOffset":8966778,"endOffset":8966801,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReexportDeclaration","ranges":[{"startOffset":8966839,"endOffset":8966875,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":8966898,"endOffset":8966919,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionTarget","ranges":[{"startOffset":8966948,"endOffset":8966975,"count":0}],"isBlockCoverage":false},{"functionName":"isNoSubstitutionTemplateLiteral","ranges":[{"startOffset":8967014,"endOffset":8967051,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":8967065,"endOffset":8967077,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArray","ranges":[{"startOffset":8967096,"endOffset":8967113,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArrayMultiLine","ranges":[{"startOffset":8967141,"endOffset":8967167,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeDescendantOf","ranges":[{"startOffset":8967193,"endOffset":8967217,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeKind","ranges":[{"startOffset":8967235,"endOffset":8967251,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLikeSystem","ranges":[{"startOffset":8967275,"endOffset":8967297,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesDirectory","ranges":[{"startOffset":8967327,"endOffset":8967355,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithPossibleHoistedDeclaration","ranges":[{"startOffset":8967399,"endOffset":8967441,"count":0}],"isBlockCoverage":false},{"functionName":"isNonContextualKeyword","ranges":[{"startOffset":8967471,"endOffset":8967499,"count":0}],"isBlockCoverage":false},{"functionName":"isNonExportDefaultModifier","ranges":[{"startOffset":8967533,"endOffset":8967565,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalAmbientModule","ranges":[{"startOffset":8967597,"endOffset":8967627,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalDeclaration","ranges":[{"startOffset":8967657,"endOffset":8967685,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAccess","ranges":[{"startOffset":8967708,"endOffset":8967729,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullChain","ranges":[{"startOffset":8967751,"endOffset":8967771,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullExpression","ranges":[{"startOffset":8967798,"endOffset":8967823,"count":0}],"isBlockCoverage":false},{"functionName":"isNonStaticMethodOrAccessorWithPrivateName","ranges":[{"startOffset":8967873,"endOffset":8967921,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedOrPartiallyEmittedNode","ranges":[{"startOffset":8967963,"endOffset":8968003,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedStatement","ranges":[{"startOffset":8968032,"endOffset":8968059,"count":0}],"isBlockCoverage":false},{"functionName":"isNullishCoalesce","ranges":[{"startOffset":8968084,"endOffset":8968107,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":8968123,"endOffset":8968137,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":8968161,"endOffset":8968183,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteralName","ranges":[{"startOffset":8968211,"endOffset":8968237,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingElementWithoutPropertyName","ranges":[{"startOffset":8968286,"endOffset":8968333,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentElement","ranges":[{"startOffset":8968375,"endOffset":8968415,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentPattern","ranges":[{"startOffset":8968457,"endOffset":8968497,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingPattern","ranges":[{"startOffset":8968527,"endOffset":8968555,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElement","ranges":[{"startOffset":8968585,"endOffset":8968613,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElementLike","ranges":[{"startOffset":8968647,"endOffset":8968679,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralExpression","ranges":[{"startOffset":8968712,"endOffset":8968743,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralMethod","ranges":[{"startOffset":8968772,"endOffset":8968799,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralOrClassExpressionMethodOrAccessor","ranges":[{"startOffset":8968855,"endOffset":8968909,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeDeclaration","ranges":[{"startOffset":8968940,"endOffset":8968969,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":8968989,"endOffset":8969007,"count":0}],"isBlockCoverage":false},{"functionName":"isOmittedExpression","ranges":[{"startOffset":8969034,"endOffset":8969059,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":8969082,"endOffset":8969103,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChainRoot","ranges":[{"startOffset":8969130,"endOffset":8969155,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalDeclaration","ranges":[{"startOffset":8969184,"endOffset":8969211,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalJSDocPropertyLikeTag","ranges":[{"startOffset":8969249,"endOffset":8969285,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalTypeNode","ranges":[{"startOffset":8969311,"endOffset":8969335,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterExpression","ranges":[{"startOffset":8969360,"endOffset":8969383,"count":0}],"isBlockCoverage":false},{"functionName":"isOutermostOptionalChain","ranges":[{"startOffset":8969415,"endOffset":8969445,"count":0}],"isBlockCoverage":false},{"functionName":"isOverrideModifier","ranges":[{"startOffset":8969471,"endOffset":8969495,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageJsonInfo","ranges":[{"startOffset":8969520,"endOffset":8969543,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedArrayLiteral","ranges":[{"startOffset":8969571,"endOffset":8969597,"count":0}],"isBlockCoverage":false},{"functionName":"isParameter","ranges":[{"startOffset":8969616,"endOffset":8969633,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterDeclaration","ranges":[{"startOffset":8969663,"endOffset":8969691,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyDeclaration","ranges":[{"startOffset":8969729,"endOffset":8969765,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyModifier","ranges":[{"startOffset":8969800,"endOffset":8969833,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":8969866,"endOffset":8969897,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedTypeNode","ranges":[{"startOffset":8969928,"endOffset":8969957,"count":0}],"isBlockCoverage":false},{"functionName":"isParseTreeNode","ranges":[{"startOffset":8969980,"endOffset":8970001,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeNode","ranges":[{"startOffset":8970025,"endOffset":8970047,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeQuery","ranges":[{"startOffset":8970072,"endOffset":8970095,"count":0}],"isBlockCoverage":false},{"functionName":"isPartiallyEmittedExpression","ranges":[{"startOffset":8970131,"endOffset":8970165,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternMatch","ranges":[{"startOffset":8970187,"endOffset":8970207,"count":0}],"isBlockCoverage":false},{"functionName":"isPinnedComment","ranges":[{"startOffset":8970230,"endOffset":8970251,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainJsFile","ranges":[{"startOffset":8970272,"endOffset":8970291,"count":0}],"isBlockCoverage":false},{"functionName":"isPlusToken","ranges":[{"startOffset":8970310,"endOffset":8970327,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyTypeArgumentPosition","ranges":[{"startOffset":8970365,"endOffset":8970401,"count":0}],"isBlockCoverage":false},{"functionName":"isPostfixUnaryExpression","ranges":[{"startOffset":8970433,"endOffset":8970463,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpression","ranges":[{"startOffset":8970494,"endOffset":8970523,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifier","ranges":[{"startOffset":8970550,"endOffset":8970575,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierClassElementDeclaration","ranges":[{"startOffset":8970625,"endOffset":8970673,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierPropertyAccessExpression","ranges":[{"startOffset":8970724,"endOffset":8970773,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierSymbol","ranges":[{"startOffset":8970806,"endOffset":8970837,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramBundleEmitBuildInfo","ranges":[{"startOffset":8970873,"endOffset":8970907,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramUptoDate","ranges":[{"startOffset":8970932,"endOffset":8970955,"count":0}],"isBlockCoverage":false},{"functionName":"isPrologueDirective","ranges":[{"startOffset":8970982,"endOffset":8971007,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessChain","ranges":[{"startOffset":8971036,"endOffset":8971063,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessEntityNameExpression","ranges":[{"startOffset":8971107,"endOffset":8971149,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessExpression","ranges":[{"startOffset":8971183,"endOffset":8971215,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedName","ranges":[{"startOffset":8971254,"endOffset":8971291,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedNameOrImportTypeNode","ranges":[{"startOffset":8971346,"endOffset":8971399,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAssignment","ranges":[{"startOffset":8971427,"endOffset":8971453,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDeclaration","ranges":[{"startOffset":8971482,"endOffset":8971509,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyName","ranges":[{"startOffset":8971531,"endOffset":8971551,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyNameLiteral","ranges":[{"startOffset":8971580,"endOffset":8971607,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertySignature","ranges":[{"startOffset":8971634,"endOffset":8971659,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoSetter","ranges":[{"startOffset":8971680,"endOffset":8971699,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypeAccess","ranges":[{"startOffset":8971724,"endOffset":8971747,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAssignment","ranges":[{"startOffset":8971784,"endOffset":8971819,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuation","ranges":[{"startOffset":8971840,"endOffset":8971859,"count":0}],"isBlockCoverage":false},{"functionName":"isPushOrUnshiftIdentifier","ranges":[{"startOffset":8971892,"endOffset":8971923,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedName","ranges":[{"startOffset":8971946,"endOffset":8971967,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":8971993,"endOffset":8972017,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrExclamationToken","ranges":[{"startOffset":8972053,"endOffset":8972087,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrPlusOrMinusToken","ranges":[{"startOffset":8972123,"endOffset":8972157,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionToken","ranges":[{"startOffset":8972180,"endOffset":8972201,"count":0}],"isBlockCoverage":false},{"functionName":"isRawSourceMap","ranges":[{"startOffset":8972223,"endOffset":8972243,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeyword","ranges":[{"startOffset":8972268,"endOffset":8972291,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeywordOrPlusOrMinusToken","ranges":[{"startOffset":8972334,"endOffset":8972375,"count":0}],"isBlockCoverage":false},{"functionName":"isRecognizedTripleSlashComment","ranges":[{"startOffset":8972413,"endOffset":8972449,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceFileLocation","ranges":[{"startOffset":8972480,"endOffset":8972509,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedFile","ranges":[{"startOffset":8972533,"endOffset":8972555,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionLiteral","ranges":[{"startOffset":8972589,"endOffset":8972621,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCall","ranges":[{"startOffset":8972642,"endOffset":8972661,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireVariableStatement","ranges":[{"startOffset":8972695,"endOffset":8972727,"count":0}],"isBlockCoverage":false},{"functionName":"isRestParameter","ranges":[{"startOffset":8972750,"endOffset":8972771,"count":0}],"isBlockCoverage":false},{"functionName":"isRestTypeNode","ranges":[{"startOffset":8972793,"endOffset":8972813,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":8972838,"endOffset":8972861,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":8972911,"endOffset":8972959,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfAccessExpression","ranges":[{"startOffset":8972996,"endOffset":8973031,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfInstanceofExpression","ranges":[{"startOffset":8973072,"endOffset":8973111,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfPropertyAccess","ranges":[{"startOffset":8973146,"endOffset":8973179,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedName","ranges":[{"startOffset":8973213,"endOffset":8973245,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess","ranges":[{"startOffset":8973295,"endOffset":8973343,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName","ranges":[{"startOffset":8973410,"endOffset":8973475,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":8973499,"endOffset":8973521,"count":0}],"isBlockCoverage":false},{"functionName":"isSameEntityName","ranges":[{"startOffset":8973545,"endOffset":8973567,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiesExpression","ranges":[{"startOffset":8973596,"endOffset":8973623,"count":0}],"isBlockCoverage":false},{"functionName":"isScopeMarker","ranges":[{"startOffset":8973644,"endOffset":8973663,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonClassElement","ranges":[{"startOffset":8973694,"endOffset":8973723,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessor","ranges":[{"startOffset":8973744,"endOffset":8973763,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessorDeclaration","ranges":[{"startOffset":8973795,"endOffset":8973825,"count":0}],"isBlockCoverage":false},{"functionName":"isShebangTrivia","ranges":[{"startOffset":8973848,"endOffset":8973869,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperatorOrHigher","ranges":[{"startOffset":8973900,"endOffset":8973929,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModuleSymbol","ranges":[{"startOffset":8973967,"endOffset":8974003,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyAssignment","ranges":[{"startOffset":8974040,"endOffset":8974075,"count":0}],"isBlockCoverage":false},{"functionName":"isSignedNumericLiteral","ranges":[{"startOffset":8974105,"endOffset":8974133,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleCopiableExpression","ranges":[{"startOffset":8974167,"endOffset":8974199,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleInlineableExpression","ranges":[{"startOffset":8974235,"endOffset":8974269,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameter","ranges":[{"startOffset":8974294,"endOffset":8974317,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameterList","ranges":[{"startOffset":8974346,"endOffset":8974373,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleOrDoubleQuote","ranges":[{"startOffset":8974402,"endOffset":8974429,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFile","ranges":[{"startOffset":8974449,"endOffset":8974467,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileFromLibrary","ranges":[{"startOffset":8974498,"endOffset":8974527,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileJS","ranges":[{"startOffset":8974549,"endOffset":8974569,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJS","ranges":[{"startOffset":8974594,"endOffset":8974617,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJson","ranges":[{"startOffset":8974644,"endOffset":8974669,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMapping","ranges":[{"startOffset":8974692,"endOffset":8974713,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialPropertyDeclaration","ranges":[{"startOffset":8974749,"endOffset":8974783,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadAssignment","ranges":[{"startOffset":8974809,"endOffset":8974833,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":8974856,"endOffset":8974877,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":8974896,"endOffset":8974913,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementButNotDeclaration","ranges":[{"startOffset":8974949,"endOffset":8974983,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":8975009,"endOffset":8975033,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementWithLocals","ranges":[{"startOffset":8975062,"endOffset":8975089,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":8975105,"endOffset":8975119,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticModifier","ranges":[{"startOffset":8975143,"endOffset":8975165,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":8975181,"endOffset":8975195,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAKeyword","ranges":[{"startOffset":8975219,"endOffset":8975241,"count":0}],"isBlockCoverage":false},{"functionName":"isStringANonContextualKeyword","ranges":[{"startOffset":8975278,"endOffset":8975313,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAndEmptyAnonymousObjectIntersection","ranges":[{"startOffset":8975364,"endOffset":8975413,"count":0}],"isBlockCoverage":false},{"functionName":"isStringDoubleQuoted","ranges":[{"startOffset":8975441,"endOffset":8975467,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":8975490,"endOffset":8975511,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralLike","ranges":[{"startOffset":8975538,"endOffset":8975563,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrJsxExpression","ranges":[{"startOffset":8975601,"endOffset":8975637,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrTemplate","ranges":[{"startOffset":8975670,"endOffset":8975701,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteralLike","ranges":[{"startOffset":8975737,"endOffset":8975771,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrRegularExpressionOrTemplateLiteral","ranges":[{"startOffset":8975823,"endOffset":8975873,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTextContainingNode","ranges":[{"startOffset":8975907,"endOffset":8975939,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperCall","ranges":[{"startOffset":8975958,"endOffset":8975975,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperKeyword","ranges":[{"startOffset":8975997,"endOffset":8976017,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperOrSuperProperty","ranges":[{"startOffset":8976047,"endOffset":8976075,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperProperty","ranges":[{"startOffset":8976098,"endOffset":8976119,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedSourceFileName","ranges":[{"startOffset":8976152,"endOffset":8976183,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":8976208,"endOffset":8976231,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxList","ranges":[{"startOffset":8976251,"endOffset":8976269,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticExpression","ranges":[{"startOffset":8976298,"endOffset":8976325,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticReference","ranges":[{"startOffset":8976353,"endOffset":8976379,"count":0}],"isBlockCoverage":false},{"functionName":"isTagName","ranges":[{"startOffset":8976396,"endOffset":8976411,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":8976445,"endOffset":8976477,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateTag","ranges":[{"startOffset":8976504,"endOffset":8976529,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateExpression","ranges":[{"startOffset":8976557,"endOffset":8976583,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateHead","ranges":[{"startOffset":8976605,"endOffset":8976625,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":8976650,"endOffset":8976673,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralKind","ranges":[{"startOffset":8976702,"endOffset":8976729,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralToken","ranges":[{"startOffset":8976759,"endOffset":8976787,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeNode","ranges":[{"startOffset":8976820,"endOffset":8976851,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeSpan","ranges":[{"startOffset":8976884,"endOffset":8976915,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddle","ranges":[{"startOffset":8976939,"endOffset":8976961,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddleOrTemplateTail","ranges":[{"startOffset":8976999,"endOffset":8977035,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateSpan","ranges":[{"startOffset":8977057,"endOffset":8977077,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateTail","ranges":[{"startOffset":8977099,"endOffset":8977119,"count":0}],"isBlockCoverage":false},{"functionName":"isTextWhiteSpaceLike","ranges":[{"startOffset":8977147,"endOffset":8977173,"count":0}],"isBlockCoverage":false},{"functionName":"isThis","ranges":[{"startOffset":8977187,"endOffset":8977199,"count":0}],"isBlockCoverage":false},{"functionName":"isThisContainerOrFunctionBlock","ranges":[{"startOffset":8977237,"endOffset":8977273,"count":0}],"isBlockCoverage":false},{"functionName":"isThisIdentifier","ranges":[{"startOffset":8977297,"endOffset":8977319,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInTypeQuery","ranges":[{"startOffset":8977344,"endOffset":8977367,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedDeclaration","ranges":[{"startOffset":8977403,"endOffset":8977437,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedObjectBindingExpression","ranges":[{"startOffset":8977485,"endOffset":8977531,"count":0}],"isBlockCoverage":false},{"functionName":"isThisProperty","ranges":[{"startOffset":8977553,"endOffset":8977573,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeNode","ranges":[{"startOffset":8977595,"endOffset":8977615,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeParameter","ranges":[{"startOffset":8977642,"endOffset":8977667,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypePredicate","ranges":[{"startOffset":8977694,"endOffset":8977719,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":8977743,"endOffset":8977765,"count":0}],"isBlockCoverage":false},{"functionName":"isToken","ranges":[{"startOffset":8977780,"endOffset":8977793,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenKind","ranges":[{"startOffset":8977812,"endOffset":8977829,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceEnabled","ranges":[{"startOffset":8977851,"endOffset":8977871,"count":0}],"isBlockCoverage":false},{"functionName":"isTransientSymbol","ranges":[{"startOffset":8977896,"endOffset":8977919,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia","ranges":[{"startOffset":8977935,"endOffset":8977949,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":8977971,"endOffset":8977991,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeNode","ranges":[{"startOffset":8978014,"endOffset":8978035,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":8978054,"endOffset":8978071,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAliasDeclaration","ranges":[{"startOffset":8978101,"endOffset":8978129,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionExpression","ranges":[{"startOffset":8978162,"endOffset":8978193,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDeclaration","ranges":[{"startOffset":8978218,"endOffset":8978241,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeElement","ranges":[{"startOffset":8978262,"endOffset":8978281,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeyword","ranges":[{"startOffset":8978302,"endOffset":8978321,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordToken","ranges":[{"startOffset":8978347,"endOffset":8978371,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordTokenOrIdentifier","ranges":[{"startOffset":8978409,"endOffset":8978445,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeLiteralNode","ranges":[{"startOffset":8978470,"endOffset":8978493,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNode","ranges":[{"startOffset":8978511,"endOffset":8978527,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNodeKind","ranges":[{"startOffset":8978549,"endOffset":8978569,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfExpression","ranges":[{"startOffset":8978595,"endOffset":8978619,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyExportDeclaration","ranges":[{"startOffset":8978654,"endOffset":8978687,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportDeclaration","ranges":[{"startOffset":8978722,"endOffset":8978755,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":8978798,"endOffset":8978839,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOperatorNode","ranges":[{"startOffset":8978865,"endOffset":8978889,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":8978923,"endOffset":8978955,"count":0}],"isBlockCoverage":false},{"functionName":"isTypePredicateNode","ranges":[{"startOffset":8978982,"endOffset":8979007,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeQueryNode","ranges":[{"startOffset":8979030,"endOffset":8979051,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceNode","ranges":[{"startOffset":8979078,"endOffset":8979103,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceType","ranges":[{"startOffset":8979130,"endOffset":8979155,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeUsableAsPropertyName","ranges":[{"startOffset":8979189,"endOffset":8979221,"count":0}],"isBlockCoverage":false},{"functionName":"isUMDExportSymbol","ranges":[{"startOffset":8979246,"endOffset":8979269,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":8979294,"endOffset":8979317,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionWithWrite","ranges":[{"startOffset":8979351,"endOffset":8979383,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierStart","ranges":[{"startOffset":8979415,"endOffset":8979445,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeNode","ranges":[{"startOffset":8979468,"endOffset":8979489,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedNode","ranges":[{"startOffset":8979511,"endOffset":8979531,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedPrepend","ranges":[{"startOffset":8979556,"endOffset":8979579,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedSource","ranges":[{"startOffset":8979603,"endOffset":8979625,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedTextLike","ranges":[{"startOffset":8979651,"endOffset":8979675,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":8979688,"endOffset":8979699,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBigIntString","ranges":[{"startOffset":8979726,"endOffset":8979751,"count":0}],"isBlockCoverage":false},{"functionName":"isValidESSymbolDeclaration","ranges":[{"startOffset":8979785,"endOffset":8979817,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTypeOnlyAliasUseSite","ranges":[{"startOffset":8979852,"endOffset":8979885,"count":0}],"isBlockCoverage":false},{"functionName":"isValueSignatureDeclaration","ranges":[{"startOffset":8979920,"endOffset":8979953,"count":0}],"isBlockCoverage":false},{"functionName":"isVarAwaitUsing","ranges":[{"startOffset":8979976,"endOffset":8979997,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConst","ranges":[{"startOffset":8980015,"endOffset":8980031,"count":0}],"isBlockCoverage":false},{"functionName":"isVarUsing","ranges":[{"startOffset":8980049,"endOffset":8980065,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":8980094,"endOffset":8980121,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInVariableStatement","ranges":[{"startOffset":8980169,"endOffset":8980215,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToBareOrAccessedRequire","ranges":[{"startOffset":8980278,"endOffset":8980339,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToRequire","ranges":[{"startOffset":8980388,"endOffset":8980435,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationList","ranges":[{"startOffset":8980468,"endOffset":8980499,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike","ranges":[{"startOffset":8980521,"endOffset":8980541,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLikeOrAccessor","ranges":[{"startOffset":8980573,"endOffset":8980603,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableStatement","ranges":[{"startOffset":8980630,"endOffset":8980655,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidExpression","ranges":[{"startOffset":8980679,"endOffset":8980701,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchSet","ranges":[{"startOffset":8980719,"endOffset":8980735,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":8980759,"endOffset":8980781,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLike","ranges":[{"startOffset":8980805,"endOffset":8980827,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceSingleLine","ranges":[{"startOffset":8980857,"endOffset":8980885,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":8980908,"endOffset":8980929,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccess","ranges":[{"startOffset":8980950,"endOffset":8980969,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnlyAccess","ranges":[{"startOffset":8980994,"endOffset":8981017,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":8981042,"endOffset":8981065,"count":0}],"isBlockCoverage":false},{"functionName":"jsxModeNeedsExplicitImport","ranges":[{"startOffset":8981099,"endOffset":8981131,"count":0}],"isBlockCoverage":false},{"functionName":"keywordPart","ranges":[{"startOffset":8981150,"endOffset":8981167,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":8981179,"endOffset":8981189,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":8981212,"endOffset":8981233,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":8981247,"endOffset":8981259,"count":0}],"isBlockCoverage":false},{"functionName":"libMap","ranges":[{"startOffset":8981273,"endOffset":8981285,"count":0}],"isBlockCoverage":false},{"functionName":"libs","ranges":[{"startOffset":8981297,"endOffset":8981307,"count":0}],"isBlockCoverage":false},{"functionName":"lineBreakPart","ranges":[{"startOffset":8981328,"endOffset":8981347,"count":0}],"isBlockCoverage":false},{"functionName":"linkNamePart","ranges":[{"startOffset":8981367,"endOffset":8981385,"count":0}],"isBlockCoverage":false},{"functionName":"linkPart","ranges":[{"startOffset":8981401,"endOffset":8981415,"count":0}],"isBlockCoverage":false},{"functionName":"linkTextPart","ranges":[{"startOffset":8981435,"endOffset":8981453,"count":0}],"isBlockCoverage":false},{"functionName":"listFiles","ranges":[{"startOffset":8981470,"endOffset":8981485,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromGlobalCache","ranges":[{"startOffset":8981518,"endOffset":8981549,"count":0}],"isBlockCoverage":false},{"functionName":"loadWithModeAwareCache","ranges":[{"startOffset":8981579,"endOffset":8981607,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdentifierFromModuleName","ranges":[{"startOffset":8981643,"endOffset":8981677,"count":0}],"isBlockCoverage":false},{"functionName":"makeImport","ranges":[{"startOffset":8981695,"endOffset":8981711,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportIfNecessary","ranges":[{"startOffset":8981740,"endOffset":8981767,"count":0}],"isBlockCoverage":false},{"functionName":"makeStringLiteral","ranges":[{"startOffset":8981792,"endOffset":8981815,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageName","ranges":[{"startOffset":8981846,"endOffset":8981875,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":8981886,"endOffset":8981895,"count":0}],"isBlockCoverage":false},{"functionName":"mapAllOrFail","ranges":[{"startOffset":8981915,"endOffset":8981933,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefined","ranges":[{"startOffset":8981951,"endOffset":8981967,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedEntries","ranges":[{"startOffset":8981992,"endOffset":8982015,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedIterator","ranges":[{"startOffset":8982041,"endOffset":8982065,"count":0}],"isBlockCoverage":false},{"functionName":"mapEntries","ranges":[{"startOffset":8982083,"endOffset":8982099,"count":0}],"isBlockCoverage":false},{"functionName":"mapIterator","ranges":[{"startOffset":8982118,"endOffset":8982135,"count":0}],"isBlockCoverage":false},{"functionName":"mapOneOrMany","ranges":[{"startOffset":8982155,"endOffset":8982173,"count":0}],"isBlockCoverage":false},{"functionName":"mapToDisplayParts","ranges":[{"startOffset":8982198,"endOffset":8982221,"count":0}],"isBlockCoverage":false},{"functionName":"matchFiles","ranges":[{"startOffset":8982239,"endOffset":8982255,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatternOrExact","ranges":[{"startOffset":8982282,"endOffset":8982307,"count":0}],"isBlockCoverage":false},{"functionName":"matchedText","ranges":[{"startOffset":8982326,"endOffset":8982343,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExclude","ranges":[{"startOffset":8982365,"endOffset":8982385,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind","ranges":[{"startOffset":8982402,"endOffset":8982417,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetLocalizedDiagnosticMessages","ranges":[{"startOffset":8982460,"endOffset":8982501,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":8982516,"endOffset":8982529,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCached","ranges":[{"startOffset":8982550,"endOffset":8982569,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeOne","ranges":[{"startOffset":8982587,"endOffset":8982603,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeWeak","ranges":[{"startOffset":8982622,"endOffset":8982639,"count":0}],"isBlockCoverage":false},{"functionName":"metadataHelper","ranges":[{"startOffset":8982661,"endOffset":8982681,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":8982692,"endOffset":8982701,"count":0}],"isBlockCoverage":false},{"functionName":"minAndMax","ranges":[{"startOffset":8982718,"endOffset":8982733,"count":0}],"isBlockCoverage":false},{"functionName":"missingFileModifiedTime","ranges":[{"startOffset":8982764,"endOffset":8982793,"count":0}],"isBlockCoverage":false},{"functionName":"modifierToFlag","ranges":[{"startOffset":8982815,"endOffset":8982835,"count":0}],"isBlockCoverage":false},{"functionName":"modifiersToFlags","ranges":[{"startOffset":8982859,"endOffset":8982881,"count":0}],"isBlockCoverage":false},{"functionName":"moduleOptionDeclaration","ranges":[{"startOffset":8982912,"endOffset":8982941,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionIsEqualTo","ranges":[{"startOffset":8982974,"endOffset":8983005,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionNameAndModeGetter","ranges":[{"startOffset":8983046,"endOffset":8983085,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionOptionDeclarations","ranges":[{"startOffset":8983127,"endOffset":8983167,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionSupportsPackageJsonExportsAndImports","ranges":[{"startOffset":8983227,"endOffset":8983285,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionUsesNodeModules","ranges":[{"startOffset":8983324,"endOffset":8983361,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifiers","ranges":[{"startOffset":8983385,"endOffset":8983418,"count":0}],"isBlockCoverage":false},{"functionName":"moveEmitHelpers","ranges":[{"startOffset":8983441,"endOffset":8983462,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangeEnd","ranges":[{"startOffset":8983482,"endOffset":8983500,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastDecorators","ranges":[{"startOffset":8983531,"endOffset":8983560,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastModifiers","ranges":[{"startOffset":8983590,"endOffset":8983618,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePos","ranges":[{"startOffset":8983638,"endOffset":8983656,"count":0}],"isBlockCoverage":false},{"functionName":"moveSyntheticComments","ranges":[{"startOffset":8983685,"endOffset":8983712,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMap","ranges":[{"startOffset":8983729,"endOffset":8983744,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMapSkippingNewValues","ranges":[{"startOffset":8983778,"endOffset":8983810,"count":0}],"isBlockCoverage":false},{"functionName":"needsParentheses","ranges":[{"startOffset":8983834,"endOffset":8983856,"count":0}],"isBlockCoverage":false},{"functionName":"needsScopeMarker","ranges":[{"startOffset":8983880,"endOffset":8983902,"count":0}],"isBlockCoverage":false},{"functionName":"newCaseClauseTracker","ranges":[{"startOffset":8983930,"endOffset":8983956,"count":0}],"isBlockCoverage":false},{"functionName":"newPrivateEnvironment","ranges":[{"startOffset":8983985,"endOffset":8984012,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitNotification","ranges":[{"startOffset":8984038,"endOffset":8984062,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitSubstitution","ranges":[{"startOffset":8984088,"endOffset":8984112,"count":0}],"isBlockCoverage":false},{"functionName":"noTransformers","ranges":[{"startOffset":8984134,"endOffset":8984154,"count":0}],"isBlockCoverage":false},{"functionName":"noTruncationMaximumTruncationLength","ranges":[{"startOffset":8984197,"endOffset":8984238,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCanBeDecorated","ranges":[{"startOffset":8984264,"endOffset":8984288,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasName","ranges":[{"startOffset":8984307,"endOffset":8984324,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsDecorated","ranges":[{"startOffset":8984347,"endOffset":8984368,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsMissing","ranges":[{"startOffset":8984389,"endOffset":8984408,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsPresent","ranges":[{"startOffset":8984429,"endOffset":8984448,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsSynthesized","ranges":[{"startOffset":8984473,"endOffset":8984496,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolver","ranges":[{"startOffset":8984526,"endOffset":8984554,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModulesPathPart","ranges":[{"startOffset":8984581,"endOffset":8984606,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextJsonConfigResolver","ranges":[{"startOffset":8984640,"endOffset":8984672,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOrChildIsDecorated","ranges":[{"startOffset":8984702,"endOffset":8984730,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithStartEnd","ranges":[{"startOffset":8984762,"endOffset":8984792,"count":0}],"isBlockCoverage":false},{"functionName":"nodePosToString","ranges":[{"startOffset":8984815,"endOffset":8984836,"count":0}],"isBlockCoverage":false},{"functionName":"nodeSeenTracker","ranges":[{"startOffset":8984859,"endOffset":8984880,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStartsNewLexicalEnvironment","ranges":[{"startOffset":8984919,"endOffset":8984956,"count":0}],"isBlockCoverage":false},{"functionName":"nodeToDisplayParts","ranges":[{"startOffset":8984982,"endOffset":8985006,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":8985018,"endOffset":8985028,"count":0}],"isBlockCoverage":false},{"functionName":"noopFileWatcher","ranges":[{"startOffset":8985051,"endOffset":8985072,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":8985093,"endOffset":8985112,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSlashes","ranges":[{"startOffset":8985136,"endOffset":8985158,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":8985169,"endOffset":8985178,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":8985200,"endOffset":8985220,"count":0}],"isBlockCoverage":false},{"functionName":"notImplementedResolver","ranges":[{"startOffset":8985250,"endOffset":8985278,"count":0}],"isBlockCoverage":false},{"functionName":"nullNodeConverters","ranges":[{"startOffset":8985304,"endOffset":8985328,"count":0}],"isBlockCoverage":false},{"functionName":"nullParenthesizerRules","ranges":[{"startOffset":8985358,"endOffset":8985386,"count":0}],"isBlockCoverage":false},{"functionName":"nullTransformationContext","ranges":[{"startOffset":8985419,"endOffset":8985450,"count":0}],"isBlockCoverage":false},{"functionName":"objectAllocator","ranges":[{"startOffset":8985473,"endOffset":8985494,"count":0}],"isBlockCoverage":false},{"functionName":"operatorPart","ranges":[{"startOffset":8985514,"endOffset":8985532,"count":0}],"isBlockCoverage":false},{"functionName":"optionDeclarations","ranges":[{"startOffset":8985558,"endOffset":8985582,"count":0}],"isBlockCoverage":false},{"functionName":"optionMapToObject","ranges":[{"startOffset":8985607,"endOffset":8985630,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAffectingProgramStructure","ranges":[{"startOffset":8985670,"endOffset":8985708,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForBuild","ranges":[{"startOffset":8985731,"endOffset":8985752,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForWatch","ranges":[{"startOffset":8985775,"endOffset":8985796,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveChanges","ranges":[{"startOffset":8985822,"endOffset":8985846,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveModuleResolutionChanges","ranges":[{"startOffset":8985888,"endOffset":8985928,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":8985938,"endOffset":8985946,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItem","ranges":[{"startOffset":8985971,"endOffset":8985994,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItemAt","ranges":[{"startOffset":8986021,"endOffset":8986046,"count":0}],"isBlockCoverage":false},{"functionName":"outFile","ranges":[{"startOffset":8986061,"endOffset":8986074,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToPackageName","ranges":[{"startOffset":8986104,"endOffset":8986132,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToString","ranges":[{"startOffset":8986157,"endOffset":8986180,"count":0}],"isBlockCoverage":false},{"functionName":"paramHelper","ranges":[{"startOffset":8986199,"endOffset":8986216,"count":0}],"isBlockCoverage":false},{"functionName":"parameterIsThisKeyword","ranges":[{"startOffset":8986246,"endOffset":8986274,"count":0}],"isBlockCoverage":false},{"functionName":"parameterNamePart","ranges":[{"startOffset":8986299,"endOffset":8986322,"count":0}],"isBlockCoverage":false},{"functionName":"parseBaseNodeFactory","ranges":[{"startOffset":8986350,"endOffset":8986376,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInt","ranges":[{"startOffset":8986395,"endOffset":8986412,"count":0}],"isBlockCoverage":false},{"functionName":"parseBuildCommand","ranges":[{"startOffset":8986437,"endOffset":8986460,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLine","ranges":[{"startOffset":8986484,"endOffset":8986506,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLineWorker","ranges":[{"startOffset":8986536,"endOffset":8986564,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileTextToJson","ranges":[{"startOffset":8986597,"endOffset":8986628,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileWithSystem","ranges":[{"startOffset":8986661,"endOffset":8986692,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigHostFromCompilerHostLike","ranges":[{"startOffset":8986735,"endOffset":8986776,"count":0}],"isBlockCoverage":false},{"functionName":"parseCustomTypeOption","ranges":[{"startOffset":8986805,"endOffset":8986832,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName","ranges":[{"startOffset":8986863,"endOffset":8986892,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment","ranges":[{"startOffset":8986925,"endOffset":8986956,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests","ranges":[{"startOffset":8986996,"endOffset":8987034,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfigFileContent","ranges":[{"startOffset":8987068,"endOffset":8987100,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonSourceFileConfigFileContent","ranges":[{"startOffset":8987144,"endOffset":8987186,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText","ranges":[{"startOffset":8987207,"endOffset":8987226,"count":0}],"isBlockCoverage":false},{"functionName":"parseListTypeOption","ranges":[{"startOffset":8987253,"endOffset":8987278,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeFactory","ranges":[{"startOffset":8987302,"endOffset":8987324,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModuleFromPath","ranges":[{"startOffset":8987355,"endOffset":8987384,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":8987408,"endOffset":8987430,"count":0}],"isBlockCoverage":false},{"functionName":"parsePseudoBigInt","ranges":[{"startOffset":8987455,"endOffset":8987478,"count":0}],"isBlockCoverage":false},{"functionName":"parseValidBigInt","ranges":[{"startOffset":8987502,"endOffset":8987524,"count":0}],"isBlockCoverage":false},{"functionName":"patchWriteFileEnsuringDirectory","ranges":[{"startOffset":8987563,"endOffset":8987600,"count":0}],"isBlockCoverage":false},{"functionName":"pathContainsNodeModules","ranges":[{"startOffset":8987631,"endOffset":8987660,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsAbsolute","ranges":[{"startOffset":8987682,"endOffset":8987702,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsBareSpecifier","ranges":[{"startOffset":8987729,"endOffset":8987754,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsRelative","ranges":[{"startOffset":8987776,"endOffset":8987796,"count":0}],"isBlockCoverage":false},{"functionName":"patternText","ranges":[{"startOffset":8987815,"endOffset":8987832,"count":0}],"isBlockCoverage":false},{"functionName":"perfLogger","ranges":[{"startOffset":8987850,"endOffset":8987866,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation","ranges":[{"startOffset":8987903,"endOffset":8987938,"count":0}],"isBlockCoverage":false},{"functionName":"performance","ranges":[{"startOffset":8987957,"endOffset":8987985,"count":0}],"isBlockCoverage":false},{"functionName":"plainJSErrors","ranges":[{"startOffset":8988006,"endOffset":8988025,"count":0}],"isBlockCoverage":false},{"functionName":"positionBelongsToNode","ranges":[{"startOffset":8988054,"endOffset":8988081,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsASICandidate","ranges":[{"startOffset":8988111,"endOffset":8988139,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsSynthesized","ranges":[{"startOffset":8988168,"endOffset":8988195,"count":0}],"isBlockCoverage":false},{"functionName":"positionsAreOnSameLine","ranges":[{"startOffset":8988225,"endOffset":8988253,"count":0}],"isBlockCoverage":false},{"functionName":"preProcessFile","ranges":[{"startOffset":8988275,"endOffset":8988295,"count":0}],"isBlockCoverage":false},{"functionName":"probablyUsesSemicolons","ranges":[{"startOffset":8988325,"endOffset":8988353,"count":0}],"isBlockCoverage":false},{"functionName":"processCommentPragmas","ranges":[{"startOffset":8988382,"endOffset":8988409,"count":0}],"isBlockCoverage":false},{"functionName":"processPragmasIntoFields","ranges":[{"startOffset":8988441,"endOffset":8988471,"count":0}],"isBlockCoverage":false},{"functionName":"processTaggedTemplateExpression","ranges":[{"startOffset":8988510,"endOffset":8988547,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsEsModules","ranges":[{"startOffset":8988579,"endOffset":8988609,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsModules","ranges":[{"startOffset":8988639,"endOffset":8988667,"count":0}],"isBlockCoverage":false},{"functionName":"projectReferenceIsEqualTo","ranges":[{"startOffset":8988700,"endOffset":8988731,"count":0}],"isBlockCoverage":false},{"functionName":"propKeyHelper","ranges":[{"startOffset":8988752,"endOffset":8988771,"count":0}],"isBlockCoverage":false},{"functionName":"propertyNamePart","ranges":[{"startOffset":8988795,"endOffset":8988817,"count":0}],"isBlockCoverage":false},{"functionName":"pseudoBigIntToString","ranges":[{"startOffset":8988845,"endOffset":8988871,"count":0}],"isBlockCoverage":false},{"functionName":"punctuationPart","ranges":[{"startOffset":8988894,"endOffset":8988915,"count":0}],"isBlockCoverage":false},{"functionName":"pushIfUnique","ranges":[{"startOffset":8988935,"endOffset":8988953,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":8988966,"endOffset":8988977,"count":0}],"isBlockCoverage":false},{"functionName":"quotePreferenceFromString","ranges":[{"startOffset":8989010,"endOffset":8989041,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPosition","ranges":[{"startOffset":8989070,"endOffset":8989097,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPositionExclusive","ranges":[{"startOffset":8989135,"endOffset":8989171,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRange","ranges":[{"startOffset":8989197,"endOffset":8989221,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRangeExclusive","ranges":[{"startOffset":8989256,"endOffset":8989289,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsStartEnd","ranges":[{"startOffset":8989318,"endOffset":8989345,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndIsOnSameLineAsRangeStart","ranges":[{"startOffset":8989385,"endOffset":8989423,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndPositionsAreOnSameLine","ranges":[{"startOffset":8989461,"endOffset":8989497,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEquals","ranges":[{"startOffset":8989516,"endOffset":8989533,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnSingleLine","ranges":[{"startOffset":8989560,"endOffset":8989585,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfNode","ranges":[{"startOffset":8989604,"endOffset":8989621,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfTypeParameters","ranges":[{"startOffset":8989650,"endOffset":8989677,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOverlapsWithStartEnd","ranges":[{"startOffset":8989710,"endOffset":8989741,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartIsOnSameLineAsRangeEnd","ranges":[{"startOffset":8989781,"endOffset":8989819,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartPositionsAreOnSameLine","ranges":[{"startOffset":8989859,"endOffset":8989897,"count":0}],"isBlockCoverage":false},{"functionName":"readBuilderProgram","ranges":[{"startOffset":8989923,"endOffset":8989947,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigFile","ranges":[{"startOffset":8989969,"endOffset":8989989,"count":0}],"isBlockCoverage":false},{"functionName":"readHelper","ranges":[{"startOffset":8990007,"endOffset":8990023,"count":0}],"isBlockCoverage":false},{"functionName":"readJson","ranges":[{"startOffset":8990039,"endOffset":8990053,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonConfigFile","ranges":[{"startOffset":8990079,"endOffset":8990103,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonOrUndefined","ranges":[{"startOffset":8990130,"endOffset":8990155,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachLeadingCommentRange","ranges":[{"startOffset":8990192,"endOffset":8990227,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachTrailingCommentRange","ranges":[{"startOffset":8990265,"endOffset":8990301,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeft","ranges":[{"startOffset":8990319,"endOffset":8990335,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeftIterator","ranges":[{"startOffset":8990361,"endOffset":8990385,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":8990413,"endOffset":8990439,"count":0}],"isBlockCoverage":false},{"functionName":"refactor","ranges":[{"startOffset":8990455,"endOffset":8990480,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":8990500,"endOffset":8990518,"count":0}],"isBlockCoverage":false},{"functionName":"relativeComplement","ranges":[{"startOffset":8990544,"endOffset":8990568,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllComments","ranges":[{"startOffset":8990593,"endOffset":8990616,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmitHelper","ranges":[{"startOffset":8990640,"endOffset":8990662,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtension","ranges":[{"startOffset":8990685,"endOffset":8990706,"count":0}],"isBlockCoverage":false},{"functionName":"removeFileExtension","ranges":[{"startOffset":8990733,"endOffset":8990758,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPath","ranges":[{"startOffset":8990783,"endOffset":8990806,"count":0}],"isBlockCoverage":false},{"functionName":"removeMinAndVersionNumbers","ranges":[{"startOffset":8990840,"endOffset":8990872,"count":0}],"isBlockCoverage":false},{"functionName":"removeOptionality","ranges":[{"startOffset":8990897,"endOffset":8990920,"count":0}],"isBlockCoverage":false},{"functionName":"removePrefix","ranges":[{"startOffset":8990940,"endOffset":8990958,"count":0}],"isBlockCoverage":false},{"functionName":"removeSuffix","ranges":[{"startOffset":8990978,"endOffset":8990996,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":8991036,"endOffset":8991074,"count":0}],"isBlockCoverage":false},{"functionName":"repeatString","ranges":[{"startOffset":8991094,"endOffset":8991112,"count":0}],"isBlockCoverage":false},{"functionName":"replaceElement","ranges":[{"startOffset":8991134,"endOffset":8991154,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstStar","ranges":[{"startOffset":8991178,"endOffset":8991200,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionExtensionIsTSOrJson","ranges":[{"startOffset":8991237,"endOffset":8991272,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConfigFileProjectName","ranges":[{"startOffset":8991308,"endOffset":8991342,"count":0}],"isBlockCoverage":false},{"functionName":"resolveJSModule","ranges":[{"startOffset":8991365,"endOffset":8991386,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":8991408,"endOffset":8991428,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleName","ranges":[{"startOffset":8991453,"endOffset":8991476,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameFromCache","ranges":[{"startOffset":8991510,"endOffset":8991542,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageNameToPackageJson","ranges":[{"startOffset":8991581,"endOffset":8991618,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":8991637,"endOffset":8991654,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectReferencePath","ranges":[{"startOffset":8991689,"endOffset":8991722,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTripleslashReference","ranges":[{"startOffset":8991757,"endOffset":8991790,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirective","ranges":[{"startOffset":8991827,"endOffset":8991862,"count":0}],"isBlockCoverage":false},{"functionName":"resolvingEmptyArray","ranges":[{"startOffset":8991889,"endOffset":8991914,"count":0}],"isBlockCoverage":false},{"functionName":"restHelper","ranges":[{"startOffset":8991932,"endOffset":8991948,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":8991967,"endOffset":8991984,"count":0}],"isBlockCoverage":false},{"functionName":"returnNoopFileWatcher","ranges":[{"startOffset":8992013,"endOffset":8992040,"count":0}],"isBlockCoverage":false},{"functionName":"returnTrue","ranges":[{"startOffset":8992058,"endOffset":8992074,"count":0}],"isBlockCoverage":false},{"functionName":"returnUndefined","ranges":[{"startOffset":8992097,"endOffset":8992118,"count":0}],"isBlockCoverage":false},{"functionName":"returnsPromise","ranges":[{"startOffset":8992140,"endOffset":8992160,"count":0}],"isBlockCoverage":false},{"functionName":"runInitializersHelper","ranges":[{"startOffset":8992189,"endOffset":8992216,"count":0}],"isBlockCoverage":false},{"functionName":"sameFlatMap","ranges":[{"startOffset":8992235,"endOffset":8992252,"count":0}],"isBlockCoverage":false},{"functionName":"sameMap","ranges":[{"startOffset":8992267,"endOffset":8992280,"count":0}],"isBlockCoverage":false},{"functionName":"sameMapping","ranges":[{"startOffset":8992299,"endOffset":8992316,"count":0}],"isBlockCoverage":false},{"functionName":"scanShebangTrivia","ranges":[{"startOffset":8992341,"endOffset":8992364,"count":0}],"isBlockCoverage":false},{"functionName":"scanTokenAtPosition","ranges":[{"startOffset":8992391,"endOffset":8992416,"count":0}],"isBlockCoverage":false},{"functionName":"scanner","ranges":[{"startOffset":8992431,"endOffset":8992444,"count":0}],"isBlockCoverage":false},{"functionName":"screenStartingMessageCodes","ranges":[{"startOffset":8992478,"endOffset":8992510,"count":0}],"isBlockCoverage":false},{"functionName":"semanticDiagnosticsOptionDeclarations","ranges":[{"startOffset":8992555,"endOffset":8992598,"count":0}],"isBlockCoverage":false},{"functionName":"serializeCompilerOptions","ranges":[{"startOffset":8992630,"endOffset":8992660,"count":0}],"isBlockCoverage":false},{"functionName":"server","ranges":[{"startOffset":8992674,"endOffset":8992698,"count":0}],"isBlockCoverage":false},{"functionName":"servicesVersion","ranges":[{"startOffset":8992721,"endOffset":8992742,"count":0}],"isBlockCoverage":false},{"functionName":"setCommentRange","ranges":[{"startOffset":8992765,"endOffset":8992786,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileInOptions","ranges":[{"startOffset":8992816,"endOffset":8992844,"count":0}],"isBlockCoverage":false},{"functionName":"setConstantValue","ranges":[{"startOffset":8992868,"endOffset":8992890,"count":0}],"isBlockCoverage":false},{"functionName":"setEachParent","ranges":[{"startOffset":8992911,"endOffset":8992930,"count":0}],"isBlockCoverage":false},{"functionName":"setEmitFlags","ranges":[{"startOffset":8992950,"endOffset":8992968,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionNameHelper","ranges":[{"startOffset":8992997,"endOffset":8993024,"count":0}],"isBlockCoverage":false},{"functionName":"setGetSourceFileAsHashVersioned","ranges":[{"startOffset":8993063,"endOffset":8993100,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierAutoGenerate","ranges":[{"startOffset":8993133,"endOffset":8993164,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierGeneratedImportReference","ranges":[{"startOffset":8993209,"endOffset":8993252,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierTypeArguments","ranges":[{"startOffset":8993286,"endOffset":8993318,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalEmitFlags","ranges":[{"startOffset":8993346,"endOffset":8993372,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalizedDiagnosticMessages","ranges":[{"startOffset":8993410,"endOffset":8993446,"count":0}],"isBlockCoverage":false},{"functionName":"setModuleDefaultHelper","ranges":[{"startOffset":8993476,"endOffset":8993504,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeFlags","ranges":[{"startOffset":8993524,"endOffset":8993542,"count":0}],"isBlockCoverage":false},{"functionName":"setObjectAllocator","ranges":[{"startOffset":8993568,"endOffset":8993592,"count":0}],"isBlockCoverage":false},{"functionName":"setOriginalNode","ranges":[{"startOffset":8993615,"endOffset":8993636,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":8993653,"endOffset":8993668,"count":0}],"isBlockCoverage":false},{"functionName":"setParentRecursive","ranges":[{"startOffset":8993694,"endOffset":8993718,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateIdentifier","ranges":[{"startOffset":8993746,"endOffset":8993772,"count":0}],"isBlockCoverage":false},{"functionName":"setSnippetElement","ranges":[{"startOffset":8993797,"endOffset":8993820,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapRange","ranges":[{"startOffset":8993845,"endOffset":8993868,"count":0}],"isBlockCoverage":false},{"functionName":"setStackTraceLimit","ranges":[{"startOffset":8993894,"endOffset":8993918,"count":0}],"isBlockCoverage":false},{"functionName":"setStartsOnNewLine","ranges":[{"startOffset":8993944,"endOffset":8993968,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticLeadingComments","ranges":[{"startOffset":8994003,"endOffset":8994036,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticTrailingComments","ranges":[{"startOffset":8994072,"endOffset":8994106,"count":0}],"isBlockCoverage":false},{"functionName":"setSys","ranges":[{"startOffset":8994120,"endOffset":8994132,"count":0}],"isBlockCoverage":false},{"functionName":"setSysLog","ranges":[{"startOffset":8994149,"endOffset":8994164,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRange","ranges":[{"startOffset":8994184,"endOffset":8994202,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangeEnd","ranges":[{"startOffset":8994225,"endOffset":8994246,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePos","ranges":[{"startOffset":8994269,"endOffset":8994290,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosEnd","ranges":[{"startOffset":8994316,"endOffset":8994340,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosWidth","ranges":[{"startOffset":8994368,"endOffset":8994394,"count":0}],"isBlockCoverage":false},{"functionName":"setTokenSourceMapRange","ranges":[{"startOffset":8994424,"endOffset":8994452,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeNode","ranges":[{"startOffset":8994471,"endOffset":8994488,"count":0}],"isBlockCoverage":false},{"functionName":"setUILocale","ranges":[{"startOffset":8994507,"endOffset":8994524,"count":0}],"isBlockCoverage":false},{"functionName":"setValueDeclaration","ranges":[{"startOffset":8994551,"endOffset":8994576,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAllowImportingTsExtension","ranges":[{"startOffset":8994615,"endOffset":8994652,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPreserveConstEnums","ranges":[{"startOffset":8994684,"endOffset":8994714,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseUriStyleNodeCoreModules","ranges":[{"startOffset":8994754,"endOffset":8994792,"count":0}],"isBlockCoverage":false},{"functionName":"showModuleSpecifier","ranges":[{"startOffset":8994819,"endOffset":8994844,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasLiteralTypes","ranges":[{"startOffset":8994876,"endOffset":8994906,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasRestParameter","ranges":[{"startOffset":8994939,"endOffset":8994970,"count":0}],"isBlockCoverage":false},{"functionName":"signatureToDisplayParts","ranges":[{"startOffset":8995001,"endOffset":8995030,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":8995044,"endOffset":8995056,"count":0}],"isBlockCoverage":false},{"functionName":"singleElementArray","ranges":[{"startOffset":8995082,"endOffset":8995106,"count":0}],"isBlockCoverage":false},{"functionName":"singleIterator","ranges":[{"startOffset":8995128,"endOffset":8995148,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrMany","ranges":[{"startOffset":8995168,"endOffset":8995186,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrUndefined","ranges":[{"startOffset":8995211,"endOffset":8995234,"count":0}],"isBlockCoverage":false},{"functionName":"skipAlias","ranges":[{"startOffset":8995251,"endOffset":8995266,"count":0}],"isBlockCoverage":false},{"functionName":"skipAssertions","ranges":[{"startOffset":8995288,"endOffset":8995308,"count":0}],"isBlockCoverage":false},{"functionName":"skipConstraint","ranges":[{"startOffset":8995330,"endOffset":8995350,"count":0}],"isBlockCoverage":false},{"functionName":"skipOuterExpressions","ranges":[{"startOffset":8995378,"endOffset":8995404,"count":0}],"isBlockCoverage":false},{"functionName":"skipParentheses","ranges":[{"startOffset":8995427,"endOffset":8995448,"count":0}],"isBlockCoverage":false},{"functionName":"skipPartiallyEmittedExpressions","ranges":[{"startOffset":8995487,"endOffset":8995524,"count":0}],"isBlockCoverage":false},{"functionName":"skipTrivia","ranges":[{"startOffset":8995542,"endOffset":8995558,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeChecking","ranges":[{"startOffset":8995582,"endOffset":8995604,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeParentheses","ranges":[{"startOffset":8995631,"endOffset":8995656,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhile","ranges":[{"startOffset":8995673,"endOffset":8995688,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAfter","ranges":[{"startOffset":8995706,"endOffset":8995722,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":8995734,"endOffset":8995744,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":8995756,"endOffset":8995766,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicate","ranges":[{"startOffset":8995792,"endOffset":8995816,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicateDiagnostics","ranges":[{"startOffset":8995853,"endOffset":8995888,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileAffectingCompilerOptions","ranges":[{"startOffset":8995930,"endOffset":8995970,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileMayBeEmitted","ranges":[{"startOffset":8996000,"endOffset":8996028,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExp","ranges":[{"startOffset":8996058,"endOffset":8996086,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExpDontCareLineStart","ranges":[{"startOffset":8996133,"endOffset":8996178,"count":0}],"isBlockCoverage":false},{"functionName":"spacePart","ranges":[{"startOffset":8996195,"endOffset":8996210,"count":0}],"isBlockCoverage":false},{"functionName":"spanMap","ranges":[{"startOffset":8996225,"endOffset":8996238,"count":0}],"isBlockCoverage":false},{"functionName":"spreadArrayHelper","ranges":[{"startOffset":8996263,"endOffset":8996286,"count":0}],"isBlockCoverage":false},{"functionName":"stableSort","ranges":[{"startOffset":8996304,"endOffset":8996320,"count":0}],"isBlockCoverage":false},{"functionName":"startEndContainsRange","ranges":[{"startOffset":8996349,"endOffset":8996376,"count":0}],"isBlockCoverage":false},{"functionName":"startEndOverlapsWithStartEnd","ranges":[{"startOffset":8996412,"endOffset":8996446,"count":0}],"isBlockCoverage":false},{"functionName":"startOnNewLine","ranges":[{"startOffset":8996468,"endOffset":8996488,"count":0}],"isBlockCoverage":false},{"functionName":"startTracing","ranges":[{"startOffset":8996508,"endOffset":8996526,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":8996544,"endOffset":8996560,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithDirectory","ranges":[{"startOffset":8996587,"endOffset":8996612,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUnderscore","ranges":[{"startOffset":8996640,"endOffset":8996666,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUseStrict","ranges":[{"startOffset":8996693,"endOffset":8996718,"count":0}],"isBlockCoverage":false},{"functionName":"stringContainsAt","ranges":[{"startOffset":8996742,"endOffset":8996764,"count":0}],"isBlockCoverage":false},{"functionName":"stringToToken","ranges":[{"startOffset":8996785,"endOffset":8996804,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":8996823,"endOffset":8996840,"count":0}],"isBlockCoverage":false},{"functionName":"supportedDeclarationExtensions","ranges":[{"startOffset":8996878,"endOffset":8996914,"count":0}],"isBlockCoverage":false},{"functionName":"supportedJSExtensions","ranges":[{"startOffset":8996943,"endOffset":8996970,"count":0}],"isBlockCoverage":false},{"functionName":"supportedJSExtensionsFlat","ranges":[{"startOffset":8997003,"endOffset":8997034,"count":0}],"isBlockCoverage":false},{"functionName":"supportedLocaleDirectories","ranges":[{"startOffset":8997068,"endOffset":8997100,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSExtensions","ranges":[{"startOffset":8997129,"endOffset":8997156,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSExtensionsFlat","ranges":[{"startOffset":8997189,"endOffset":8997220,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSImplementationExtensions","ranges":[{"startOffset":8997263,"endOffset":8997304,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingAndTrailingTrivia","ranges":[{"startOffset":8997344,"endOffset":8997382,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingTrivia","ranges":[{"startOffset":8997411,"endOffset":8997438,"count":0}],"isBlockCoverage":false},{"functionName":"suppressTrailingTrivia","ranges":[{"startOffset":8997468,"endOffset":8997496,"count":0}],"isBlockCoverage":false},{"functionName":"symbolEscapedNameNoDefault","ranges":[{"startOffset":8997530,"endOffset":8997562,"count":0}],"isBlockCoverage":false},{"functionName":"symbolName","ranges":[{"startOffset":8997580,"endOffset":8997596,"count":0}],"isBlockCoverage":false},{"functionName":"symbolNameNoDefault","ranges":[{"startOffset":8997623,"endOffset":8997648,"count":0}],"isBlockCoverage":false},{"functionName":"symbolPart","ranges":[{"startOffset":8997666,"endOffset":8997682,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToDisplayParts","ranges":[{"startOffset":8997710,"endOffset":8997736,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxMayBeASICandidate","ranges":[{"startOffset":8997767,"endOffset":8997796,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingSemicolonOrASI","ranges":[{"startOffset":8997840,"endOffset":8997882,"count":0}],"isBlockCoverage":false},{"functionName":"sys","ranges":[{"startOffset":8997893,"endOffset":8997902,"count":0}],"isBlockCoverage":false},{"functionName":"sysLog","ranges":[{"startOffset":8997916,"endOffset":8997928,"count":0}],"isBlockCoverage":false},{"functionName":"tagNamesAreEquivalent","ranges":[{"startOffset":8997957,"endOffset":8997984,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":8998001,"endOffset":8998016,"count":0}],"isBlockCoverage":false},{"functionName":"targetOptionDeclaration","ranges":[{"startOffset":8998047,"endOffset":8998076,"count":0}],"isBlockCoverage":false},{"functionName":"templateObjectHelper","ranges":[{"startOffset":8998104,"endOffset":8998130,"count":0}],"isBlockCoverage":false},{"functionName":"testFormatSettings","ranges":[{"startOffset":8998156,"endOffset":8998180,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeIsUnchanged","ranges":[{"startOffset":8998214,"endOffset":8998246,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeNewSpan","ranges":[{"startOffset":8998276,"endOffset":8998304,"count":0}],"isBlockCoverage":false},{"functionName":"textChanges","ranges":[{"startOffset":8998323,"endOffset":8998351,"count":0}],"isBlockCoverage":false},{"functionName":"textOrKeywordPart","ranges":[{"startOffset":8998376,"endOffset":8998399,"count":0}],"isBlockCoverage":false},{"functionName":"textPart","ranges":[{"startOffset":8998415,"endOffset":8998429,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsPositionInclusive","ranges":[{"startOffset":8998471,"endOffset":8998511,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsPosition","ranges":[{"startOffset":8998543,"endOffset":8998573,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextSpan","ranges":[{"startOffset":8998605,"endOffset":8998635,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanEnd","ranges":[{"startOffset":8998654,"endOffset":8998671,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersection","ranges":[{"startOffset":8998699,"endOffset":8998725,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWith","ranges":[{"startOffset":8998755,"endOffset":8998783,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithPosition","ranges":[{"startOffset":8998821,"endOffset":8998857,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithTextSpan","ranges":[{"startOffset":8998895,"endOffset":8998931,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIsEmpty","ranges":[{"startOffset":8998954,"endOffset":8998975,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlap","ranges":[{"startOffset":8998998,"endOffset":8999019,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlapsWith","ranges":[{"startOffset":8999047,"endOffset":8999073,"count":0}],"isBlockCoverage":false},{"functionName":"textSpansEqual","ranges":[{"startOffset":8999095,"endOffset":8999115,"count":0}],"isBlockCoverage":false},{"functionName":"textToKeywordObj","ranges":[{"startOffset":8999139,"endOffset":8999161,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":8999178,"endOffset":8999193,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8999208,"endOffset":8999221,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderFileEmit","ranges":[{"startOffset":8999246,"endOffset":8999269,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderStateFileInfoForMultiEmit","ranges":[{"startOffset":8999311,"endOffset":8999351,"count":0}],"isBlockCoverage":false},{"functionName":"toEditorSettings","ranges":[{"startOffset":8999375,"endOffset":8999397,"count":0}],"isBlockCoverage":false},{"functionName":"toFileNameLowerCase","ranges":[{"startOffset":8999424,"endOffset":8999449,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":8999468,"endOffset":8999485,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":8999499,"endOffset":8999511,"count":0}],"isBlockCoverage":false},{"functionName":"toProgramEmitPending","ranges":[{"startOffset":8999539,"endOffset":8999565,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeyword","ranges":[{"startOffset":8999599,"endOffset":8999631,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":8999678,"endOffset":8999723,"count":0}],"isBlockCoverage":false},{"functionName":"tokenToString","ranges":[{"startOffset":8999744,"endOffset":8999763,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":8999776,"endOffset":8999787,"count":0}],"isBlockCoverage":false},{"functionName":"tracing","ranges":[{"startOffset":8999802,"endOffset":8999815,"count":0}],"isBlockCoverage":false},{"functionName":"tracingEnabled","ranges":[{"startOffset":8999837,"endOffset":8999857,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":8999874,"endOffset":8999889,"count":0}],"isBlockCoverage":false},{"functionName":"transformClassFields","ranges":[{"startOffset":8999917,"endOffset":8999943,"count":0}],"isBlockCoverage":false},{"functionName":"transformDeclarations","ranges":[{"startOffset":8999972,"endOffset":8999999,"count":0}],"isBlockCoverage":false},{"functionName":"transformECMAScriptModule","ranges":[{"startOffset":9000032,"endOffset":9000063,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2015","ranges":[{"startOffset":9000086,"endOffset":9000107,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2016","ranges":[{"startOffset":9000130,"endOffset":9000151,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2017","ranges":[{"startOffset":9000174,"endOffset":9000195,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2018","ranges":[{"startOffset":9000218,"endOffset":9000239,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2019","ranges":[{"startOffset":9000262,"endOffset":9000283,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2020","ranges":[{"startOffset":9000306,"endOffset":9000327,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2021","ranges":[{"startOffset":9000350,"endOffset":9000371,"count":0}],"isBlockCoverage":false},{"functionName":"transformES5","ranges":[{"startOffset":9000391,"endOffset":9000409,"count":0}],"isBlockCoverage":false},{"functionName":"transformESDecorators","ranges":[{"startOffset":9000438,"endOffset":9000465,"count":0}],"isBlockCoverage":false},{"functionName":"transformESNext","ranges":[{"startOffset":9000488,"endOffset":9000509,"count":0}],"isBlockCoverage":false},{"functionName":"transformGenerators","ranges":[{"startOffset":9000536,"endOffset":9000561,"count":0}],"isBlockCoverage":false},{"functionName":"transformJsx","ranges":[{"startOffset":9000581,"endOffset":9000599,"count":0}],"isBlockCoverage":false},{"functionName":"transformLegacyDecorators","ranges":[{"startOffset":9000632,"endOffset":9000663,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":9000686,"endOffset":9000707,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluation","ranges":[{"startOffset":9000739,"endOffset":9000769,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodeModule","ranges":[{"startOffset":9000796,"endOffset":9000821,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodes","ranges":[{"startOffset":9000843,"endOffset":9000863,"count":0}],"isBlockCoverage":false},{"functionName":"transformSystemModule","ranges":[{"startOffset":9000892,"endOffset":9000919,"count":0}],"isBlockCoverage":false},{"functionName":"transformTypeScript","ranges":[{"startOffset":9000946,"endOffset":9000971,"count":0}],"isBlockCoverage":false},{"functionName":"transpile","ranges":[{"startOffset":9000988,"endOffset":9001003,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":9001026,"endOffset":9001047,"count":0}],"isBlockCoverage":false},{"functionName":"transpileOptionValueCompilerOptions","ranges":[{"startOffset":9001090,"endOffset":9001131,"count":0}],"isBlockCoverage":false},{"functionName":"tryAddToSet","ranges":[{"startOffset":9001150,"endOffset":9001167,"count":0}],"isBlockCoverage":false},{"functionName":"tryAndIgnoreErrors","ranges":[{"startOffset":9001193,"endOffset":9001217,"count":0}],"isBlockCoverage":false},{"functionName":"tryCast","ranges":[{"startOffset":9001232,"endOffset":9001245,"count":0}],"isBlockCoverage":false},{"functionName":"tryDirectoryExists","ranges":[{"startOffset":9001271,"endOffset":9001295,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtractTSExtension","ranges":[{"startOffset":9001324,"endOffset":9001351,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileExists","ranges":[{"startOffset":9001372,"endOffset":9001391,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassExtendingExpressionWithTypeArguments","ranges":[{"startOffset":9001446,"endOffset":9001499,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassImplementingOrExtendingExpressionWithTypeArguments","ranges":[{"startOffset":9001568,"endOffset":9001635,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDirectories","ranges":[{"startOffset":9001660,"endOffset":9001683,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExtensionFromPath","ranges":[{"startOffset":9001714,"endOffset":9001744,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportFromModuleSpecifier","ranges":[{"startOffset":9001783,"endOffset":9001820,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocSatisfiesTypeNode","ranges":[{"startOffset":9001856,"endOffset":9001890,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromFile","ranges":[{"startOffset":9001922,"endOffset":9001952,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifierFromDeclaration","ranges":[{"startOffset":9001996,"endOffset":9002038,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNativePerformanceHooks","ranges":[{"startOffset":9002074,"endOffset":9002108,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyAccessOrIdentifierToString","ranges":[{"startOffset":9002156,"endOffset":9002202,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":9002256,"endOffset":9002308,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourceMappingURL","ranges":[{"startOffset":9002338,"endOffset":9002366,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetTextOfPropertyName","ranges":[{"startOffset":9002398,"endOffset":9002428,"count":0}],"isBlockCoverage":false},{"functionName":"tryIOAndConsumeErrors","ranges":[{"startOffset":9002457,"endOffset":9002484,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseJson","ranges":[{"startOffset":9002504,"endOffset":9002522,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePattern","ranges":[{"startOffset":9002545,"endOffset":9002566,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePatterns","ranges":[{"startOffset":9002590,"endOffset":9002612,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseRawSourceMap","ranges":[{"startOffset":9002640,"endOffset":9002666,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadDirectory","ranges":[{"startOffset":9002690,"endOffset":9002712,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadFile","ranges":[{"startOffset":9002731,"endOffset":9002748,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveDirectoryPrefix","ranges":[{"startOffset":9002780,"endOffset":9002810,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveExtension","ranges":[{"startOffset":9002836,"endOffset":9002860,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemovePrefix","ranges":[{"startOffset":9002883,"endOffset":9002904,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveSuffix","ranges":[{"startOffset":9002927,"endOffset":9002948,"count":0}],"isBlockCoverage":false},{"functionName":"typeAcquisitionDeclarations","ranges":[{"startOffset":9002983,"endOffset":9003016,"count":0}],"isBlockCoverage":false},{"functionName":"typeAliasNamePart","ranges":[{"startOffset":9003041,"endOffset":9003064,"count":0}],"isBlockCoverage":false},{"functionName":"typeDirectiveIsEqualTo","ranges":[{"startOffset":9003094,"endOffset":9003122,"count":0}],"isBlockCoverage":false},{"functionName":"typeKeywords","ranges":[{"startOffset":9003142,"endOffset":9003160,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterNamePart","ranges":[{"startOffset":9003189,"endOffset":9003216,"count":0}],"isBlockCoverage":false},{"functionName":"typeToDisplayParts","ranges":[{"startOffset":9003242,"endOffset":9003266,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedPollThresholds","ranges":[{"startOffset":9003297,"endOffset":9003326,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedTextChangeRange","ranges":[{"startOffset":9003358,"endOffset":9003388,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeLeadingUnderscores","ranges":[{"startOffset":9003422,"endOffset":9003454,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleScopedPackageName","ranges":[{"startOffset":9003487,"endOffset":9003518,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItem","ranges":[{"startOffset":9003545,"endOffset":9003570,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItemAt","ranges":[{"startOffset":9003599,"endOffset":9003626,"count":0}],"isBlockCoverage":false},{"functionName":"unreachableCodeIsError","ranges":[{"startOffset":9003656,"endOffset":9003684,"count":0}],"isBlockCoverage":false},{"functionName":"unusedLabelIsError","ranges":[{"startOffset":9003710,"endOffset":9003734,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapInnermostStatementOfLabel","ranges":[{"startOffset":9003773,"endOffset":9003810,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorForNoInputFiles","ranges":[{"startOffset":9003844,"endOffset":9003876,"count":0}],"isBlockCoverage":false},{"functionName":"updateLanguageServiceSourceFile","ranges":[{"startOffset":9003915,"endOffset":9003952,"count":0}],"isBlockCoverage":false},{"functionName":"updateMissingFilePathsWatch","ranges":[{"startOffset":9003987,"endOffset":9004020,"count":0}],"isBlockCoverage":false},{"functionName":"updateResolutionField","ranges":[{"startOffset":9004049,"endOffset":9004076,"count":0}],"isBlockCoverage":false},{"functionName":"updateSharedExtendedConfigFileWatcher","ranges":[{"startOffset":9004121,"endOffset":9004164,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceFile","ranges":[{"startOffset":9004188,"endOffset":9004210,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchingWildcardDirectories","ranges":[{"startOffset":9004251,"endOffset":9004290,"count":0}],"isBlockCoverage":false},{"functionName":"usesExtensionsOnImports","ranges":[{"startOffset":9004321,"endOffset":9004350,"count":0}],"isBlockCoverage":false},{"functionName":"usingSingleLineStringWriter","ranges":[{"startOffset":9004385,"endOffset":9004418,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsString","ranges":[{"startOffset":9004445,"endOffset":9004470,"count":0}],"isBlockCoverage":false},{"functionName":"validateLocaleAndSetLanguage","ranges":[{"startOffset":9004506,"endOffset":9004540,"count":0}],"isBlockCoverage":false},{"functionName":"valuesHelper","ranges":[{"startOffset":9004560,"endOffset":9004578,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":9004593,"endOffset":9004606,"count":0}],"isBlockCoverage":false},{"functionName":"versionMajorMinor","ranges":[{"startOffset":9004631,"endOffset":9004654,"count":0}],"isBlockCoverage":false},{"functionName":"visitArray","ranges":[{"startOffset":9004672,"endOffset":9004688,"count":0}],"isBlockCoverage":false},{"functionName":"visitCommaListElements","ranges":[{"startOffset":9004718,"endOffset":9004746,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChild","ranges":[{"startOffset":9004768,"endOffset":9004788,"count":0}],"isBlockCoverage":false},{"functionName":"visitFunctionBody","ranges":[{"startOffset":9004813,"endOffset":9004836,"count":0}],"isBlockCoverage":false},{"functionName":"visitIterationBody","ranges":[{"startOffset":9004862,"endOffset":9004886,"count":0}],"isBlockCoverage":false},{"functionName":"visitLexicalEnvironment","ranges":[{"startOffset":9004917,"endOffset":9004946,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode","ranges":[{"startOffset":9004963,"endOffset":9004978,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes","ranges":[{"startOffset":9004996,"endOffset":9005013,"count":0}],"isBlockCoverage":false},{"functionName":"visitParameterList","ranges":[{"startOffset":9005039,"endOffset":9005063,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpBindingElementsAndPatterns","ranges":[{"startOffset":9005103,"endOffset":9005141,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpLexicalEnvironments","ranges":[{"startOffset":9005174,"endOffset":9005205,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpOuterExpressions","ranges":[{"startOffset":9005235,"endOffset":9005263,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedExpressions","ranges":[{"startOffset":9005301,"endOffset":9005337,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypes","ranges":[{"startOffset":9005369,"endOffset":9005399,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypesAndGetParentAndChild","ranges":[{"startOffset":9005451,"endOffset":9005501,"count":0}],"isBlockCoverage":false},{"functionName":"whitespaceOrMapCommentRegExp","ranges":[{"startOffset":9005537,"endOffset":9005571,"count":0}],"isBlockCoverage":false},{"functionName":"writeCommentRange","ranges":[{"startOffset":9005596,"endOffset":9005619,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":9005636,"endOffset":9005651,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileEnsuringDirectories","ranges":[{"startOffset":9005687,"endOffset":9005721,"count":0}],"isBlockCoverage":false},{"functionName":"zipWith","ranges":[{"startOffset":9005736,"endOffset":9005749,"count":0}],"isBlockCoverage":false},{"functionName":"src/server/_namespaces/ts.ts","ranges":[{"startOffset":9005785,"endOffset":9005942,"count":1}],"isBlockCoverage":true},{"functionName":"ActionInvalidate","ranges":[{"startOffset":9006081,"endOffset":9006103,"count":0}],"isBlockCoverage":false},{"functionName":"ActionPackageInstalled","ranges":[{"startOffset":9006133,"endOffset":9006161,"count":0}],"isBlockCoverage":false},{"functionName":"ActionSet","ranges":[{"startOffset":9006178,"endOffset":9006193,"count":0}],"isBlockCoverage":false},{"functionName":"ActionWatchTypingLocations","ranges":[{"startOffset":9006227,"endOffset":9006259,"count":0}],"isBlockCoverage":false},{"functionName":"Arguments","ranges":[{"startOffset":9006276,"endOffset":9006291,"count":0}],"isBlockCoverage":false},{"functionName":"AutoImportProviderProject","ranges":[{"startOffset":9006324,"endOffset":9006355,"count":0}],"isBlockCoverage":false},{"functionName":"AuxiliaryProject","ranges":[{"startOffset":9006379,"endOffset":9006401,"count":0}],"isBlockCoverage":false},{"functionName":"CharRangeSection","ranges":[{"startOffset":9006425,"endOffset":9006447,"count":0}],"isBlockCoverage":false},{"functionName":"CloseFileWatcherEvent","ranges":[{"startOffset":9006476,"endOffset":9006503,"count":0}],"isBlockCoverage":false},{"functionName":"CommandNames","ranges":[{"startOffset":9006523,"endOffset":9006541,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigFileDiagEvent","ranges":[{"startOffset":9006568,"endOffset":9006593,"count":0}],"isBlockCoverage":false},{"functionName":"ConfiguredProject","ranges":[{"startOffset":9006618,"endOffset":9006642,"count":0}],"isBlockCoverage":false},{"functionName":"CreateDirectoryWatcherEvent","ranges":[{"startOffset":9006677,"endOffset":9006710,"count":0}],"isBlockCoverage":false},{"functionName":"CreateFileWatcherEvent","ranges":[{"startOffset":9006740,"endOffset":9006768,"count":0}],"isBlockCoverage":false},{"functionName":"Errors","ranges":[{"startOffset":9006782,"endOffset":9006794,"count":0}],"isBlockCoverage":false},{"functionName":"EventBeginInstallTypes","ranges":[{"startOffset":9006824,"endOffset":9006852,"count":0}],"isBlockCoverage":false},{"functionName":"EventEndInstallTypes","ranges":[{"startOffset":9006880,"endOffset":9006906,"count":0}],"isBlockCoverage":false},{"functionName":"EventInitializationFailed","ranges":[{"startOffset":9006939,"endOffset":9006970,"count":0}],"isBlockCoverage":false},{"functionName":"EventTypesRegistry","ranges":[{"startOffset":9006996,"endOffset":9007020,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalProject","ranges":[{"startOffset":9007043,"endOffset":9007065,"count":0}],"isBlockCoverage":false},{"functionName":"GcTimer","ranges":[{"startOffset":9007080,"endOffset":9007093,"count":0}],"isBlockCoverage":false},{"functionName":"InferredProject","ranges":[{"startOffset":9007116,"endOffset":9007138,"count":0}],"isBlockCoverage":false},{"functionName":"LargeFileReferencedEvent","ranges":[{"startOffset":9007170,"endOffset":9007200,"count":0}],"isBlockCoverage":false},{"functionName":"LineIndex","ranges":[{"startOffset":9007217,"endOffset":9007232,"count":0}],"isBlockCoverage":false},{"functionName":"LineLeaf","ranges":[{"startOffset":9007248,"endOffset":9007262,"count":0}],"isBlockCoverage":false},{"functionName":"LineNode","ranges":[{"startOffset":9007278,"endOffset":9007292,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":9007308,"endOffset":9007323,"count":0}],"isBlockCoverage":false},{"functionName":"Msg","ranges":[{"startOffset":9007334,"endOffset":9007343,"count":0}],"isBlockCoverage":false},{"functionName":"OpenFileInfoTelemetryEvent","ranges":[{"startOffset":9007377,"endOffset":9007409,"count":0}],"isBlockCoverage":false},{"functionName":"Project","ranges":[{"startOffset":9007424,"endOffset":9007438,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectInfoTelemetryEvent","ranges":[{"startOffset":9007471,"endOffset":9007502,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectKind","ranges":[{"startOffset":9007521,"endOffset":9007538,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLanguageServiceStateEvent","ranges":[{"startOffset":9007578,"endOffset":9007616,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingFinishEvent","ranges":[{"startOffset":9007649,"endOffset":9007680,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectLoadingStartEvent","ranges":[{"startOffset":9007712,"endOffset":9007742,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectReferenceProjectLoadKind","ranges":[{"startOffset":9007781,"endOffset":9007818,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectService","ranges":[{"startOffset":9007840,"endOffset":9007861,"count":0}],"isBlockCoverage":false},{"functionName":"ProjectsUpdatedInBackgroundEvent","ranges":[{"startOffset":9007901,"endOffset":9007939,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptInfo","ranges":[{"startOffset":9007957,"endOffset":9007973,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptVersionCache","ranges":[{"startOffset":9007999,"endOffset":9008023,"count":0}],"isBlockCoverage":false},{"functionName":"Session","ranges":[{"startOffset":9008038,"endOffset":9008052,"count":0}],"isBlockCoverage":false},{"functionName":"TextStorage","ranges":[{"startOffset":9008071,"endOffset":9008088,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledOperations","ranges":[{"startOffset":9008115,"endOffset":9008140,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsCache","ranges":[{"startOffset":9008160,"endOffset":9008178,"count":0}],"isBlockCoverage":false},{"functionName":"TypingsInstallerAdapter","ranges":[{"startOffset":9008209,"endOffset":9008238,"count":0}],"isBlockCoverage":false},{"functionName":"allFilesAreJsOrDts","ranges":[{"startOffset":9008264,"endOffset":9008288,"count":0}],"isBlockCoverage":false},{"functionName":"allRootFilesAreJsOrDts","ranges":[{"startOffset":9008318,"endOffset":9008346,"count":0}],"isBlockCoverage":false},{"functionName":"asNormalizedPath","ranges":[{"startOffset":9008370,"endOffset":9008392,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptions","ranges":[{"startOffset":9008422,"endOffset":9008450,"count":0}],"isBlockCoverage":false},{"functionName":"convertFormatOptions","ranges":[{"startOffset":9008478,"endOffset":9008504,"count":0}],"isBlockCoverage":false},{"functionName":"convertScriptKindName","ranges":[{"startOffset":9008533,"endOffset":9008560,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisition","ranges":[{"startOffset":9008590,"endOffset":9008618,"count":0}],"isBlockCoverage":false},{"functionName":"convertUserPreferences","ranges":[{"startOffset":9008648,"endOffset":9008676,"count":0}],"isBlockCoverage":false},{"functionName":"convertWatchOptions","ranges":[{"startOffset":9008703,"endOffset":9008728,"count":0}],"isBlockCoverage":false},{"functionName":"countEachFileTypes","ranges":[{"startOffset":9008754,"endOffset":9008778,"count":0}],"isBlockCoverage":false},{"functionName":"createInstallTypingsRequest","ranges":[{"startOffset":9008813,"endOffset":9008846,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierCache","ranges":[{"startOffset":9008880,"endOffset":9008912,"count":0}],"isBlockCoverage":false},{"functionName":"createNormalizedPathMap","ranges":[{"startOffset":9008943,"endOffset":9008972,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonCache","ranges":[{"startOffset":9009002,"endOffset":9009030,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":9009055,"endOffset":9009079,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":9009097,"endOffset":9009114,"count":0}],"isBlockCoverage":false},{"functionName":"findArgument","ranges":[{"startOffset":9009134,"endOffset":9009152,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReferenceProject","ranges":[{"startOffset":9009198,"endOffset":9009242,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnosticToProtocol","ranges":[{"startOffset":9009276,"endOffset":9009308,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":9009329,"endOffset":9009349,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseConfigFileName","ranges":[{"startOffset":9009378,"endOffset":9009405,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationInNewDocument","ranges":[{"startOffset":9009437,"endOffset":9009467,"count":0}],"isBlockCoverage":false},{"functionName":"hasArgument","ranges":[{"startOffset":9009486,"endOffset":9009503,"count":0}],"isBlockCoverage":false},{"functionName":"hasNoTypeScriptSource","ranges":[{"startOffset":9009532,"endOffset":9009559,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":9009573,"endOffset":9009586,"count":0}],"isBlockCoverage":false},{"functionName":"isBackgroundProject","ranges":[{"startOffset":9009613,"endOffset":9009638,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigFile","ranges":[{"startOffset":9009658,"endOffset":9009676,"count":0}],"isBlockCoverage":false},{"functionName":"isConfiguredProject","ranges":[{"startOffset":9009703,"endOffset":9009728,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicFileName","ranges":[{"startOffset":9009753,"endOffset":9009776,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalProject","ranges":[{"startOffset":9009801,"endOffset":9009824,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProject","ranges":[{"startOffset":9009849,"endOffset":9009872,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredProjectName","ranges":[{"startOffset":9009901,"endOffset":9009928,"count":0}],"isBlockCoverage":false},{"functionName":"makeAutoImportProviderProjectName","ranges":[{"startOffset":9009969,"endOffset":9010008,"count":0}],"isBlockCoverage":false},{"functionName":"makeAuxiliaryProjectName","ranges":[{"startOffset":9010040,"endOffset":9010070,"count":0}],"isBlockCoverage":false},{"functionName":"makeInferredProjectName","ranges":[{"startOffset":9010101,"endOffset":9010130,"count":0}],"isBlockCoverage":false},{"functionName":"maxFileSize","ranges":[{"startOffset":9010149,"endOffset":9010166,"count":0}],"isBlockCoverage":false},{"functionName":"maxProgramSizeForNonTsFiles","ranges":[{"startOffset":9010201,"endOffset":9010234,"count":0}],"isBlockCoverage":false},{"functionName":"normalizedPathToPath","ranges":[{"startOffset":9010262,"endOffset":9010288,"count":0}],"isBlockCoverage":false},{"functionName":"nowString","ranges":[{"startOffset":9010305,"endOffset":9010320,"count":0}],"isBlockCoverage":false},{"functionName":"nullCancellationToken","ranges":[{"startOffset":9010349,"endOffset":9010376,"count":0}],"isBlockCoverage":false},{"functionName":"nullTypingsInstaller","ranges":[{"startOffset":9010404,"endOffset":9010430,"count":0}],"isBlockCoverage":false},{"functionName":"projectContainsInfoDirectly","ranges":[{"startOffset":9010465,"endOffset":9010498,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":9010514,"endOffset":9010546,"count":0}],"isBlockCoverage":false},{"functionName":"removeSorted","ranges":[{"startOffset":9010566,"endOffset":9010584,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndented","ranges":[{"startOffset":9010609,"endOffset":9010632,"count":0}],"isBlockCoverage":false},{"functionName":"toEvent","ranges":[{"startOffset":9010647,"endOffset":9010660,"count":0}],"isBlockCoverage":false},{"functionName":"toNormalizedPath","ranges":[{"startOffset":9010684,"endOffset":9010706,"count":0}],"isBlockCoverage":false},{"functionName":"tryConvertScriptKindName","ranges":[{"startOffset":9010738,"endOffset":9010768,"count":0}],"isBlockCoverage":false},{"functionName":"typingsInstaller","ranges":[{"startOffset":9010792,"endOffset":9010832,"count":0}],"isBlockCoverage":false},{"functionName":"updateProjectIfDirty","ranges":[{"startOffset":9010860,"endOffset":9010886,"count":0}],"isBlockCoverage":false},{"functionName":"src/typescript/_namespaces/ts.server.ts","ranges":[{"startOffset":9010929,"endOffset":9011049,"count":1}],"isBlockCoverage":true},{"functionName":"ANONYMOUS","ranges":[{"startOffset":9011160,"endOffset":9011175,"count":0}],"isBlockCoverage":false},{"functionName":"AccessFlags","ranges":[{"startOffset":9011194,"endOffset":9011211,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionLevel","ranges":[{"startOffset":9011233,"endOffset":9011253,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentDeclarationKind","ranges":[{"startOffset":9011286,"endOffset":9011317,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentKind","ranges":[{"startOffset":9011339,"endOffset":9011359,"count":0}],"isBlockCoverage":false},{"functionName":"Associativity","ranges":[{"startOffset":9011380,"endOffset":9011399,"count":0}],"isBlockCoverage":false},{"functionName":"BreakpointResolver","ranges":[{"startOffset":9011425,"endOffset":9011460,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderFileEmit","ranges":[{"startOffset":9011483,"endOffset":9011504,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderProgramKind","ranges":[{"startOffset":9011530,"endOffset":9011554,"count":0}],"isBlockCoverage":false},{"functionName":"BuilderState","ranges":[{"startOffset":9011574,"endOffset":9011592,"count":0}],"isBlockCoverage":false},{"functionName":"BundleFileSectionKind","ranges":[{"startOffset":9011621,"endOffset":9011648,"count":0}],"isBlockCoverage":false},{"functionName":"CallHierarchy","ranges":[{"startOffset":9011669,"endOffset":9011699,"count":0}],"isBlockCoverage":false},{"functionName":"CharacterCodes","ranges":[{"startOffset":9011721,"endOffset":9011741,"count":0}],"isBlockCoverage":false},{"functionName":"CheckFlags","ranges":[{"startOffset":9011759,"endOffset":9011775,"count":0}],"isBlockCoverage":false},{"functionName":"CheckMode","ranges":[{"startOffset":9011792,"endOffset":9011807,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationType","ranges":[{"startOffset":9011833,"endOffset":9011857,"count":0}],"isBlockCoverage":false},{"functionName":"ClassificationTypeNames","ranges":[{"startOffset":9011888,"endOffset":9011917,"count":0}],"isBlockCoverage":false},{"functionName":"CommentDirectiveType","ranges":[{"startOffset":9011945,"endOffset":9011971,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":9011989,"endOffset":9012005,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionInfoFlags","ranges":[{"startOffset":9012032,"endOffset":9012057,"count":0}],"isBlockCoverage":false},{"functionName":"CompletionTriggerKind","ranges":[{"startOffset":9012086,"endOffset":9012113,"count":0}],"isBlockCoverage":false},{"functionName":"Completions","ranges":[{"startOffset":9012132,"endOffset":9012160,"count":0}],"isBlockCoverage":false},{"functionName":"ContainerFlags","ranges":[{"startOffset":9012182,"endOffset":9012202,"count":0}],"isBlockCoverage":false},{"functionName":"ContextFlags","ranges":[{"startOffset":9012222,"endOffset":9012240,"count":0}],"isBlockCoverage":false},{"functionName":"Debug","ranges":[{"startOffset":9012253,"endOffset":9012264,"count":10}],"isBlockCoverage":true},{"functionName":"DiagnosticCategory","ranges":[{"startOffset":9012290,"endOffset":9012314,"count":0}],"isBlockCoverage":false},{"functionName":"Diagnostics","ranges":[{"startOffset":9012333,"endOffset":9012350,"count":0}],"isBlockCoverage":false},{"functionName":"DocumentHighlights","ranges":[{"startOffset":9012376,"endOffset":9012400,"count":0}],"isBlockCoverage":false},{"functionName":"ElementFlags","ranges":[{"startOffset":9012420,"endOffset":9012438,"count":0}],"isBlockCoverage":false},{"functionName":"EmitFlags","ranges":[{"startOffset":9012455,"endOffset":9012470,"count":0}],"isBlockCoverage":false},{"functionName":"EmitHint","ranges":[{"startOffset":9012486,"endOffset":9012500,"count":0}],"isBlockCoverage":false},{"functionName":"EmitOnly","ranges":[{"startOffset":9012516,"endOffset":9012530,"count":0}],"isBlockCoverage":false},{"functionName":"EndOfLineState","ranges":[{"startOffset":9012552,"endOffset":9012572,"count":0}],"isBlockCoverage":false},{"functionName":"EnumKind","ranges":[{"startOffset":9012588,"endOffset":9012602,"count":0}],"isBlockCoverage":false},{"functionName":"ExitStatus","ranges":[{"startOffset":9012620,"endOffset":9012636,"count":0}],"isBlockCoverage":false},{"functionName":"ExportKind","ranges":[{"startOffset":9012654,"endOffset":9012670,"count":0}],"isBlockCoverage":false},{"functionName":"Extension","ranges":[{"startOffset":9012687,"endOffset":9012702,"count":0}],"isBlockCoverage":false},{"functionName":"ExternalEmitHelpers","ranges":[{"startOffset":9012729,"endOffset":9012754,"count":0}],"isBlockCoverage":false},{"functionName":"FileIncludeKind","ranges":[{"startOffset":9012777,"endOffset":9012798,"count":0}],"isBlockCoverage":false},{"functionName":"FilePreprocessingDiagnosticsKind","ranges":[{"startOffset":9012838,"endOffset":9012876,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemEntryKind","ranges":[{"startOffset":9012903,"endOffset":9012928,"count":0}],"isBlockCoverage":false},{"functionName":"FileWatcherEventKind","ranges":[{"startOffset":9012956,"endOffset":9012982,"count":0}],"isBlockCoverage":false},{"functionName":"FindAllReferences","ranges":[{"startOffset":9013007,"endOffset":9013041,"count":0}],"isBlockCoverage":false},{"functionName":"FlattenLevel","ranges":[{"startOffset":9013061,"endOffset":9013079,"count":0}],"isBlockCoverage":false},{"functionName":"FlowFlags","ranges":[{"startOffset":9013096,"endOffset":9013111,"count":0}],"isBlockCoverage":false},{"functionName":"ForegroundColorEscapeSequences","ranges":[{"startOffset":9013149,"endOffset":9013185,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionFlags","ranges":[{"startOffset":9013206,"endOffset":9013225,"count":0}],"isBlockCoverage":false},{"functionName":"GeneratedIdentifierFlags","ranges":[{"startOffset":9013257,"endOffset":9013287,"count":0}],"isBlockCoverage":false},{"functionName":"GetLiteralTextFlags","ranges":[{"startOffset":9013314,"endOffset":9013339,"count":0}],"isBlockCoverage":false},{"functionName":"GoToDefinition","ranges":[{"startOffset":9013361,"endOffset":9013392,"count":0}],"isBlockCoverage":false},{"functionName":"HighlightSpanKind","ranges":[{"startOffset":9013417,"endOffset":9013440,"count":0}],"isBlockCoverage":false},{"functionName":"IdentifierNameMap","ranges":[{"startOffset":9013465,"endOffset":9013488,"count":0}],"isBlockCoverage":false},{"functionName":"IdentifierNameMultiMap","ranges":[{"startOffset":9013518,"endOffset":9013546,"count":0}],"isBlockCoverage":false},{"functionName":"ImportKind","ranges":[{"startOffset":9013564,"endOffset":9013580,"count":0}],"isBlockCoverage":false},{"functionName":"ImportsNotUsedAsValues","ranges":[{"startOffset":9013610,"endOffset":9013638,"count":0}],"isBlockCoverage":false},{"functionName":"IndentStyle","ranges":[{"startOffset":9013657,"endOffset":9013674,"count":0}],"isBlockCoverage":false},{"functionName":"IndexFlags","ranges":[{"startOffset":9013692,"endOffset":9013708,"count":0}],"isBlockCoverage":false},{"functionName":"IndexKind","ranges":[{"startOffset":9013725,"endOffset":9013740,"count":0}],"isBlockCoverage":false},{"functionName":"InferenceFlags","ranges":[{"startOffset":9013762,"endOffset":9013782,"count":0}],"isBlockCoverage":false},{"functionName":"InferencePriority","ranges":[{"startOffset":9013807,"endOffset":9013830,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHintKind","ranges":[{"startOffset":9013851,"endOffset":9013870,"count":0}],"isBlockCoverage":false},{"functionName":"InlayHints","ranges":[{"startOffset":9013888,"endOffset":9013915,"count":0}],"isBlockCoverage":false},{"functionName":"InternalEmitFlags","ranges":[{"startOffset":9013940,"endOffset":9013963,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSymbolName","ranges":[{"startOffset":9013989,"endOffset":9014013,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidatedProjectKind","ranges":[{"startOffset":9014043,"endOffset":9014071,"count":0}],"isBlockCoverage":false},{"functionName":"JSDocParsingMode","ranges":[{"startOffset":9014095,"endOffset":9014117,"count":0}],"isBlockCoverage":false},{"functionName":"JsDoc","ranges":[{"startOffset":9014130,"endOffset":9014152,"count":0}],"isBlockCoverage":false},{"functionName":"JsTyping","ranges":[{"startOffset":9014168,"endOffset":9014193,"count":0}],"isBlockCoverage":false},{"functionName":"JsxEmit","ranges":[{"startOffset":9014208,"endOffset":9014221,"count":2}],"isBlockCoverage":true},{"functionName":"JsxFlags","ranges":[{"startOffset":9014237,"endOffset":9014251,"count":0}],"isBlockCoverage":false},{"functionName":"JsxReferenceKind","ranges":[{"startOffset":9014275,"endOffset":9014297,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageServiceMode","ranges":[{"startOffset":9014324,"endOffset":9014349,"count":0}],"isBlockCoverage":false},{"functionName":"LanguageVariant","ranges":[{"startOffset":9014372,"endOffset":9014393,"count":0}],"isBlockCoverage":false},{"functionName":"LexicalEnvironmentFlags","ranges":[{"startOffset":9014424,"endOffset":9014453,"count":0}],"isBlockCoverage":false},{"functionName":"ListFormat","ranges":[{"startOffset":9014471,"endOffset":9014487,"count":0}],"isBlockCoverage":false},{"functionName":"LogLevel","ranges":[{"startOffset":9014503,"endOffset":9014517,"count":0}],"isBlockCoverage":false},{"functionName":"MemberOverrideStatus","ranges":[{"startOffset":9014545,"endOffset":9014571,"count":0}],"isBlockCoverage":false},{"functionName":"ModifierFlags","ranges":[{"startOffset":9014592,"endOffset":9014611,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleDetectionKind","ranges":[{"startOffset":9014638,"endOffset":9014663,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleInstanceState","ranges":[{"startOffset":9014690,"endOffset":9014715,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleKind","ranges":[{"startOffset":9014733,"endOffset":9014749,"count":30}],"isBlockCoverage":true},{"functionName":"ModuleResolutionKind","ranges":[{"startOffset":9014777,"endOffset":9014803,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleSpecifierEnding","ranges":[{"startOffset":9014832,"endOffset":9014859,"count":0}],"isBlockCoverage":false},{"functionName":"NavigateTo","ranges":[{"startOffset":9014877,"endOffset":9014904,"count":0}],"isBlockCoverage":false},{"functionName":"NavigationBar","ranges":[{"startOffset":9014925,"endOffset":9014955,"count":0}],"isBlockCoverage":false},{"functionName":"NewLineKind","ranges":[{"startOffset":9014974,"endOffset":9014991,"count":0}],"isBlockCoverage":false},{"functionName":"NodeBuilderFlags","ranges":[{"startOffset":9015015,"endOffset":9015037,"count":0}],"isBlockCoverage":false},{"functionName":"NodeCheckFlags","ranges":[{"startOffset":9015059,"endOffset":9015079,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFactoryFlags","ranges":[{"startOffset":9015103,"endOffset":9015125,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFlags","ranges":[{"startOffset":9015142,"endOffset":9015157,"count":0}],"isBlockCoverage":false},{"functionName":"NodeResolutionFeatures","ranges":[{"startOffset":9015187,"endOffset":9015215,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFlags","ranges":[{"startOffset":9015234,"endOffset":9015251,"count":0}],"isBlockCoverage":false},{"functionName":"OperationCanceledException","ranges":[{"startOffset":9015285,"endOffset":9015317,"count":0}],"isBlockCoverage":false},{"functionName":"OperatorPrecedence","ranges":[{"startOffset":9015343,"endOffset":9015367,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImports","ranges":[{"startOffset":9015390,"endOffset":9015422,"count":0}],"isBlockCoverage":false},{"functionName":"OrganizeImportsMode","ranges":[{"startOffset":9015449,"endOffset":9015474,"count":0}],"isBlockCoverage":false},{"functionName":"OuterExpressionKinds","ranges":[{"startOffset":9015502,"endOffset":9015528,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningElementsCollector","ranges":[{"startOffset":9015562,"endOffset":9015605,"count":0}],"isBlockCoverage":false},{"functionName":"OutliningSpanKind","ranges":[{"startOffset":9015630,"endOffset":9015653,"count":0}],"isBlockCoverage":false},{"functionName":"OutputFileType","ranges":[{"startOffset":9015675,"endOffset":9015695,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonAutoImportPreference","ranges":[{"startOffset":9015734,"endOffset":9015771,"count":0}],"isBlockCoverage":false},{"functionName":"PackageJsonDependencyGroup","ranges":[{"startOffset":9015805,"endOffset":9015837,"count":0}],"isBlockCoverage":false},{"functionName":"PatternMatchKind","ranges":[{"startOffset":9015861,"endOffset":9015883,"count":0}],"isBlockCoverage":false},{"functionName":"PollingInterval","ranges":[{"startOffset":9015906,"endOffset":9015927,"count":0}],"isBlockCoverage":false},{"functionName":"PollingWatchKind","ranges":[{"startOffset":9015951,"endOffset":9015973,"count":0}],"isBlockCoverage":false},{"functionName":"PragmaKindFlags","ranges":[{"startOffset":9015996,"endOffset":9016017,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateIdentifierKind","ranges":[{"startOffset":9016046,"endOffset":9016073,"count":0}],"isBlockCoverage":false},{"functionName":"ProcessLevel","ranges":[{"startOffset":9016093,"endOffset":9016111,"count":0}],"isBlockCoverage":false},{"functionName":"ProgramUpdateLevel","ranges":[{"startOffset":9016137,"endOffset":9016161,"count":0}],"isBlockCoverage":false},{"functionName":"QuotePreference","ranges":[{"startOffset":9016184,"endOffset":9016205,"count":0}],"isBlockCoverage":false},{"functionName":"RelationComparisonResult","ranges":[{"startOffset":9016237,"endOffset":9016267,"count":0}],"isBlockCoverage":false},{"functionName":"Rename","ranges":[{"startOffset":9016281,"endOffset":9016304,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKind","ranges":[{"startOffset":9016329,"endOffset":9016352,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptElementKindModifier","ranges":[{"startOffset":9016385,"endOffset":9016416,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptKind","ranges":[{"startOffset":9016434,"endOffset":9016450,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptSnapshot","ranges":[{"startOffset":9016472,"endOffset":9016492,"count":0}],"isBlockCoverage":false},{"functionName":"ScriptTarget","ranges":[{"startOffset":9016512,"endOffset":9016530,"count":2}],"isBlockCoverage":true},{"functionName":"SemanticClassificationFormat","ranges":[{"startOffset":9016566,"endOffset":9016600,"count":0}],"isBlockCoverage":false},{"functionName":"SemanticMeaning","ranges":[{"startOffset":9016623,"endOffset":9016644,"count":0}],"isBlockCoverage":false},{"functionName":"SemicolonPreference","ranges":[{"startOffset":9016671,"endOffset":9016696,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureCheckMode","ranges":[{"startOffset":9016722,"endOffset":9016746,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureFlags","ranges":[{"startOffset":9016768,"endOffset":9016788,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureHelp","ranges":[{"startOffset":9016809,"endOffset":9016839,"count":0}],"isBlockCoverage":false},{"functionName":"SignatureKind","ranges":[{"startOffset":9016860,"endOffset":9016879,"count":0}],"isBlockCoverage":false},{"functionName":"SmartSelectionRange","ranges":[{"startOffset":9016906,"endOffset":9016942,"count":0}],"isBlockCoverage":false},{"functionName":"SnippetKind","ranges":[{"startOffset":9016961,"endOffset":9016978,"count":0}],"isBlockCoverage":false},{"functionName":"SortKind","ranges":[{"startOffset":9016994,"endOffset":9017008,"count":0}],"isBlockCoverage":false},{"functionName":"StructureIsReused","ranges":[{"startOffset":9017033,"endOffset":9017056,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolAccessibility","ranges":[{"startOffset":9017083,"endOffset":9017108,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplay","ranges":[{"startOffset":9017129,"endOffset":9017159,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolDisplayPartKind","ranges":[{"startOffset":9017188,"endOffset":9017215,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFlags","ranges":[{"startOffset":9017234,"endOffset":9017251,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolFormatFlags","ranges":[{"startOffset":9017276,"endOffset":9017299,"count":0}],"isBlockCoverage":false},{"functionName":"SyntaxKind","ranges":[{"startOffset":9017317,"endOffset":9017333,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticSymbolKind","ranges":[{"startOffset":9017360,"endOffset":9017385,"count":0}],"isBlockCoverage":false},{"functionName":"Ternary","ranges":[{"startOffset":9017400,"endOffset":9017413,"count":0}],"isBlockCoverage":false},{"functionName":"ThrottledCancellationToken","ranges":[{"startOffset":9017447,"endOffset":9017479,"count":0}],"isBlockCoverage":false},{"functionName":"TokenClass","ranges":[{"startOffset":9017497,"endOffset":9017513,"count":0}],"isBlockCoverage":false},{"functionName":"TokenFlags","ranges":[{"startOffset":9017531,"endOffset":9017547,"count":0}],"isBlockCoverage":false},{"functionName":"TransformFlags","ranges":[{"startOffset":9017569,"endOffset":9017589,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFacts","ranges":[{"startOffset":9017606,"endOffset":9017621,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFlags","ranges":[{"startOffset":9017638,"endOffset":9017653,"count":0}],"isBlockCoverage":false},{"functionName":"TypeFormatFlags","ranges":[{"startOffset":9017676,"endOffset":9017697,"count":0}],"isBlockCoverage":false},{"functionName":"TypeMapKind","ranges":[{"startOffset":9017716,"endOffset":9017733,"count":0}],"isBlockCoverage":false},{"functionName":"TypePredicateKind","ranges":[{"startOffset":9017758,"endOffset":9017781,"count":0}],"isBlockCoverage":false},{"functionName":"TypeReferenceSerializationKind","ranges":[{"startOffset":9017819,"endOffset":9017855,"count":0}],"isBlockCoverage":false},{"functionName":"UnionReduction","ranges":[{"startOffset":9017877,"endOffset":9017897,"count":0}],"isBlockCoverage":false},{"functionName":"UpToDateStatusType","ranges":[{"startOffset":9017923,"endOffset":9017947,"count":0}],"isBlockCoverage":false},{"functionName":"VarianceFlags","ranges":[{"startOffset":9017968,"endOffset":9017987,"count":0}],"isBlockCoverage":false},{"functionName":"Version","ranges":[{"startOffset":9018002,"endOffset":9018015,"count":0}],"isBlockCoverage":false},{"functionName":"VersionRange","ranges":[{"startOffset":9018035,"endOffset":9018053,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryFlags","ranges":[{"startOffset":9018080,"endOffset":9018105,"count":0}],"isBlockCoverage":false},{"functionName":"WatchDirectoryKind","ranges":[{"startOffset":9018131,"endOffset":9018155,"count":0}],"isBlockCoverage":false},{"functionName":"WatchFileKind","ranges":[{"startOffset":9018176,"endOffset":9018195,"count":0}],"isBlockCoverage":false},{"functionName":"WatchLogLevel","ranges":[{"startOffset":9018216,"endOffset":9018235,"count":0}],"isBlockCoverage":false},{"functionName":"WatchType","ranges":[{"startOffset":9018252,"endOffset":9018267,"count":0}],"isBlockCoverage":false},{"functionName":"accessPrivateIdentifier","ranges":[{"startOffset":9018298,"endOffset":9018327,"count":0}],"isBlockCoverage":false},{"functionName":"addDisposableResourceHelper","ranges":[{"startOffset":9018362,"endOffset":9018395,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitFlags","ranges":[{"startOffset":9018415,"endOffset":9018433,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelper","ranges":[{"startOffset":9018454,"endOffset":9018473,"count":0}],"isBlockCoverage":false},{"functionName":"addEmitHelpers","ranges":[{"startOffset":9018495,"endOffset":9018515,"count":0}],"isBlockCoverage":false},{"functionName":"addInternalEmitFlags","ranges":[{"startOffset":9018543,"endOffset":9018569,"count":0}],"isBlockCoverage":false},{"functionName":"addNodeFactoryPatcher","ranges":[{"startOffset":9018598,"endOffset":9018625,"count":0}],"isBlockCoverage":false},{"functionName":"addObjectAllocatorPatcher","ranges":[{"startOffset":9018658,"endOffset":9018689,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":9018705,"endOffset":9018719,"count":10}],"isBlockCoverage":true},{"functionName":"addRelatedInfo","ranges":[{"startOffset":9018741,"endOffset":9018761,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticLeadingComment","ranges":[{"startOffset":9018795,"endOffset":9018827,"count":0}],"isBlockCoverage":false},{"functionName":"addSyntheticTrailingComment","ranges":[{"startOffset":9018862,"endOffset":9018895,"count":0}],"isBlockCoverage":false},{"functionName":"addToSeen","ranges":[{"startOffset":9018912,"endOffset":9018927,"count":0}],"isBlockCoverage":false},{"functionName":"advancedAsyncSuperHelper","ranges":[{"startOffset":9018959,"endOffset":9018989,"count":0}],"isBlockCoverage":false},{"functionName":"affectsDeclarationPathOptionDeclarations","ranges":[{"startOffset":9019037,"endOffset":9019083,"count":0}],"isBlockCoverage":false},{"functionName":"affectsEmitOptionDeclarations","ranges":[{"startOffset":9019120,"endOffset":9019155,"count":0}],"isBlockCoverage":false},{"functionName":"allKeysStartWithDot","ranges":[{"startOffset":9019182,"endOffset":9019207,"count":0}],"isBlockCoverage":false},{"functionName":"altDirectorySeparator","ranges":[{"startOffset":9019236,"endOffset":9019263,"count":0}],"isBlockCoverage":false},{"functionName":"and","ranges":[{"startOffset":9019274,"endOffset":9019283,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":9019297,"endOffset":9019309,"count":0}],"isBlockCoverage":false},{"functionName":"appendIfUnique","ranges":[{"startOffset":9019331,"endOffset":9019351,"count":0}],"isBlockCoverage":false},{"functionName":"arrayFrom","ranges":[{"startOffset":9019368,"endOffset":9019383,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEqualTo","ranges":[{"startOffset":9019405,"endOffset":9019425,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsHomogeneous","ranges":[{"startOffset":9019451,"endOffset":9019475,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsSorted","ranges":[{"startOffset":9019496,"endOffset":9019515,"count":0}],"isBlockCoverage":false},{"functionName":"arrayOf","ranges":[{"startOffset":9019530,"endOffset":9019543,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReverseIterator","ranges":[{"startOffset":9019571,"endOffset":9019597,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMap","ranges":[{"startOffset":9019615,"endOffset":9019631,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToMultiMap","ranges":[{"startOffset":9019654,"endOffset":9019675,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToNumericMap","ranges":[{"startOffset":9019700,"endOffset":9019723,"count":0}],"isBlockCoverage":false},{"functionName":"arraysEqual","ranges":[{"startOffset":9019742,"endOffset":9019759,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":9019777,"endOffset":9019793,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":9019807,"endOffset":9019819,"count":0}],"isBlockCoverage":false},{"functionName":"assignHelper","ranges":[{"startOffset":9019839,"endOffset":9019857,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDelegator","ranges":[{"startOffset":9019879,"endOffset":9019899,"count":0}],"isBlockCoverage":false},{"functionName":"asyncGeneratorHelper","ranges":[{"startOffset":9019927,"endOffset":9019953,"count":0}],"isBlockCoverage":false},{"functionName":"asyncSuperHelper","ranges":[{"startOffset":9019977,"endOffset":9019999,"count":0}],"isBlockCoverage":false},{"functionName":"asyncValues","ranges":[{"startOffset":9020018,"endOffset":9020035,"count":0}],"isBlockCoverage":false},{"functionName":"attachFileToDiagnostics","ranges":[{"startOffset":9020066,"endOffset":9020095,"count":0}],"isBlockCoverage":false},{"functionName":"awaitHelper","ranges":[{"startOffset":9020114,"endOffset":9020131,"count":0}],"isBlockCoverage":false},{"functionName":"awaiterHelper","ranges":[{"startOffset":9020152,"endOffset":9020171,"count":0}],"isBlockCoverage":false},{"functionName":"base64decode","ranges":[{"startOffset":9020191,"endOffset":9020209,"count":0}],"isBlockCoverage":false},{"functionName":"base64encode","ranges":[{"startOffset":9020229,"endOffset":9020247,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":9020267,"endOffset":9020285,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearchKey","ranges":[{"startOffset":9020308,"endOffset":9020329,"count":0}],"isBlockCoverage":false},{"functionName":"bindSourceFile","ranges":[{"startOffset":9020351,"endOffset":9020371,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoCharacterSpans","ranges":[{"startOffset":9020402,"endOffset":9020431,"count":0}],"isBlockCoverage":false},{"functionName":"breakIntoWordSpans","ranges":[{"startOffset":9020457,"endOffset":9020481,"count":0}],"isBlockCoverage":false},{"functionName":"buildLinkParts","ranges":[{"startOffset":9020503,"endOffset":9020523,"count":0}],"isBlockCoverage":false},{"functionName":"buildOpts","ranges":[{"startOffset":9020540,"endOffset":9020555,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverload","ranges":[{"startOffset":9020576,"endOffset":9020595,"count":0}],"isBlockCoverage":false},{"functionName":"bundlerModuleNameResolver","ranges":[{"startOffset":9020628,"endOffset":9020659,"count":0}],"isBlockCoverage":false},{"functionName":"canBeConvertedToAsync","ranges":[{"startOffset":9020688,"endOffset":9020715,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveDecorators","ranges":[{"startOffset":9020740,"endOffset":9020763,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveExportModifier","ranges":[{"startOffset":9020792,"endOffset":9020819,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveFlowNode","ranges":[{"startOffset":9020842,"endOffset":9020863,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalDecorators","ranges":[{"startOffset":9020895,"endOffset":9020925,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalModifiers","ranges":[{"startOffset":9020956,"endOffset":9020985,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalType","ranges":[{"startOffset":9021011,"endOffset":9021035,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveIllegalTypeParameters","ranges":[{"startOffset":9021071,"endOffset":9021105,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveJSDoc","ranges":[{"startOffset":9021125,"endOffset":9021143,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLocals","ranges":[{"startOffset":9021164,"endOffset":9021183,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveModifiers","ranges":[{"startOffset":9021207,"endOffset":9021229,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveSymbol","ranges":[{"startOffset":9021250,"endOffset":9021269,"count":0}],"isBlockCoverage":false},{"functionName":"canJsonReportNoInputFiles","ranges":[{"startOffset":9021302,"endOffset":9021333,"count":0}],"isBlockCoverage":false},{"functionName":"canProduceDiagnostics","ranges":[{"startOffset":9021362,"endOffset":9021389,"count":0}],"isBlockCoverage":false},{"functionName":"canUsePropertyAccess","ranges":[{"startOffset":9021417,"endOffset":9021443,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAffectingLocation","ranges":[{"startOffset":9021476,"endOffset":9021507,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchAtTypes","ranges":[{"startOffset":9021530,"endOffset":9021551,"count":0}],"isBlockCoverage":false},{"functionName":"canWatchDirectoryOrFile","ranges":[{"startOffset":9021582,"endOffset":9021611,"count":0}],"isBlockCoverage":false},{"functionName":"cartesianProduct","ranges":[{"startOffset":9021635,"endOffset":9021657,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":9021669,"endOffset":9021679,"count":0}],"isBlockCoverage":false},{"functionName":"chainBundle","ranges":[{"startOffset":9021698,"endOffset":9021715,"count":0}],"isBlockCoverage":false},{"functionName":"chainDiagnosticMessages","ranges":[{"startOffset":9021746,"endOffset":9021775,"count":0}],"isBlockCoverage":false},{"functionName":"changeAnyExtension","ranges":[{"startOffset":9021801,"endOffset":9021825,"count":0}],"isBlockCoverage":false},{"functionName":"changeCompilerHostLikeToUseCache","ranges":[{"startOffset":9021865,"endOffset":9021903,"count":0}],"isBlockCoverage":false},{"functionName":"changeExtension","ranges":[{"startOffset":9021926,"endOffset":9021947,"count":0}],"isBlockCoverage":false},{"functionName":"changeFullExtension","ranges":[{"startOffset":9021974,"endOffset":9021999,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectModuleResolution","ranges":[{"startOffset":9022036,"endOffset":9022071,"count":0}],"isBlockCoverage":false},{"functionName":"changesAffectingProgramStructure","ranges":[{"startOffset":9022111,"endOffset":9022149,"count":0}],"isBlockCoverage":false},{"functionName":"childIsDecorated","ranges":[{"startOffset":9022173,"endOffset":9022195,"count":0}],"isBlockCoverage":false},{"functionName":"classElementOrClassElementParameterIsDecorated","ranges":[{"startOffset":9022249,"endOffset":9022301,"count":0}],"isBlockCoverage":false},{"functionName":"classHasClassThisAssignment","ranges":[{"startOffset":9022336,"endOffset":9022369,"count":0}],"isBlockCoverage":false},{"functionName":"classHasDeclaredOrExplicitlyAssignedName","ranges":[{"startOffset":9022417,"endOffset":9022463,"count":0}],"isBlockCoverage":false},{"functionName":"classHasExplicitlyAssignedName","ranges":[{"startOffset":9022501,"endOffset":9022537,"count":0}],"isBlockCoverage":false},{"functionName":"classOrConstructorParameterIsDecorated","ranges":[{"startOffset":9022583,"endOffset":9022627,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateFieldGetHelper","ranges":[{"startOffset":9022661,"endOffset":9022693,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateFieldInHelper","ranges":[{"startOffset":9022726,"endOffset":9022757,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateFieldSetHelper","ranges":[{"startOffset":9022791,"endOffset":9022823,"count":0}],"isBlockCoverage":false},{"functionName":"classicNameResolver","ranges":[{"startOffset":9022850,"endOffset":9022875,"count":0}],"isBlockCoverage":false},{"functionName":"classifier","ranges":[{"startOffset":9022893,"endOffset":9022920,"count":0}],"isBlockCoverage":false},{"functionName":"cleanExtendedConfigCache","ranges":[{"startOffset":9022952,"endOffset":9022982,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":9022995,"endOffset":9023006,"count":0}],"isBlockCoverage":false},{"functionName":"clearMap","ranges":[{"startOffset":9023022,"endOffset":9023036,"count":0}],"isBlockCoverage":false},{"functionName":"clearSharedExtendedConfigFileWatcher","ranges":[{"startOffset":9023080,"endOffset":9023122,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyAccess","ranges":[{"startOffset":9023153,"endOffset":9023182,"count":0}],"isBlockCoverage":false},{"functionName":"climbPastPropertyOrElementAccess","ranges":[{"startOffset":9023222,"endOffset":9023260,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":9023273,"endOffset":9023284,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCompilerOptions","ranges":[{"startOffset":9023312,"endOffset":9023338,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcher","ranges":[{"startOffset":9023362,"endOffset":9023384,"count":0}],"isBlockCoverage":false},{"functionName":"closeFileWatcherOf","ranges":[{"startOffset":9023410,"endOffset":9023434,"count":0}],"isBlockCoverage":false},{"functionName":"codefix","ranges":[{"startOffset":9023449,"endOffset":9023473,"count":0}],"isBlockCoverage":false},{"functionName":"collapseTextChangeRangesAcrossMultipleVersions","ranges":[{"startOffset":9023527,"endOffset":9023579,"count":0}],"isBlockCoverage":false},{"functionName":"collectExternalModuleInfo","ranges":[{"startOffset":9023612,"endOffset":9023643,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":9023658,"endOffset":9023671,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":9023691,"endOffset":9023709,"count":0}],"isBlockCoverage":false},{"functionName":"commentPragmas","ranges":[{"startOffset":9023731,"endOffset":9023751,"count":0}],"isBlockCoverage":false},{"functionName":"commonOptionsWithBuild","ranges":[{"startOffset":9023781,"endOffset":9023809,"count":0}],"isBlockCoverage":false},{"functionName":"commonPackageFolders","ranges":[{"startOffset":9023837,"endOffset":9023863,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":9023878,"endOffset":9023891,"count":0}],"isBlockCoverage":false},{"functionName":"compareBooleans","ranges":[{"startOffset":9023914,"endOffset":9023935,"count":0}],"isBlockCoverage":false},{"functionName":"compareDataObjects","ranges":[{"startOffset":9023961,"endOffset":9023985,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnostics","ranges":[{"startOffset":9024011,"endOffset":9024035,"count":0}],"isBlockCoverage":false},{"functionName":"compareDiagnosticsSkipRelatedInformation","ranges":[{"startOffset":9024083,"endOffset":9024129,"count":0}],"isBlockCoverage":false},{"functionName":"compareEmitHelpers","ranges":[{"startOffset":9024155,"endOffset":9024179,"count":0}],"isBlockCoverage":false},{"functionName":"compareNumberOfDirectorySeparators","ranges":[{"startOffset":9024221,"endOffset":9024261,"count":0}],"isBlockCoverage":false},{"functionName":"comparePaths","ranges":[{"startOffset":9024281,"endOffset":9024299,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseInsensitive","ranges":[{"startOffset":9024334,"endOffset":9024367,"count":0}],"isBlockCoverage":false},{"functionName":"comparePathsCaseSensitive","ranges":[{"startOffset":9024400,"endOffset":9024431,"count":0}],"isBlockCoverage":false},{"functionName":"comparePatternKeys","ranges":[{"startOffset":9024457,"endOffset":9024481,"count":0}],"isBlockCoverage":false},{"functionName":"compareProperties","ranges":[{"startOffset":9024506,"endOffset":9024529,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitive","ranges":[{"startOffset":9024566,"endOffset":9024601,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseInsensitiveEslintCompatible","ranges":[{"startOffset":9024654,"endOffset":9024705,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitive","ranges":[{"startOffset":9024740,"endOffset":9024773,"count":0}],"isBlockCoverage":false},{"functionName":"compareStringsCaseSensitiveUI","ranges":[{"startOffset":9024810,"endOffset":9024845,"count":0}],"isBlockCoverage":false},{"functionName":"compareTextSpans","ranges":[{"startOffset":9024869,"endOffset":9024891,"count":0}],"isBlockCoverage":false},{"functionName":"compareValues","ranges":[{"startOffset":9024912,"endOffset":9024931,"count":0}],"isBlockCoverage":false},{"functionName":"compileOnSaveCommandLineOption","ranges":[{"startOffset":9024969,"endOffset":9025005,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectDeclarationPath","ranges":[{"startOffset":9025049,"endOffset":9025091,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectEmit","ranges":[{"startOffset":9025124,"endOffset":9025155,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsAffectSemanticDiagnostics","ranges":[{"startOffset":9025203,"endOffset":9025249,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsDidYouMeanDiagnostics","ranges":[{"startOffset":9025293,"endOffset":9025335,"count":0}],"isBlockCoverage":false},{"functionName":"compilerOptionsIndicateEsModules","ranges":[{"startOffset":9025375,"endOffset":9025413,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":9025428,"endOffset":9025441,"count":0}],"isBlockCoverage":false},{"functionName":"computeCommonSourceDirectoryOfFilenames","ranges":[{"startOffset":9025488,"endOffset":9025533,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineAndCharacterOfPosition","ranges":[{"startOffset":9025574,"endOffset":9025613,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineOfPosition","ranges":[{"startOffset":9025642,"endOffset":9025669,"count":0}],"isBlockCoverage":false},{"functionName":"computeLineStarts","ranges":[{"startOffset":9025694,"endOffset":9025717,"count":0}],"isBlockCoverage":false},{"functionName":"computePositionOfLineAndCharacter","ranges":[{"startOffset":9025758,"endOffset":9025797,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignature","ranges":[{"startOffset":9025821,"endOffset":9025843,"count":0}],"isBlockCoverage":false},{"functionName":"computeSignatureWithDiagnostics","ranges":[{"startOffset":9025882,"endOffset":9025919,"count":0}],"isBlockCoverage":false},{"functionName":"computeSuggestionDiagnostics","ranges":[{"startOffset":9025955,"endOffset":9025989,"count":0}],"isBlockCoverage":false},{"functionName":"computedOptions","ranges":[{"startOffset":9026012,"endOffset":9026033,"count":0}],"isBlockCoverage":false},{"functionName":"concatenate","ranges":[{"startOffset":9026052,"endOffset":9026069,"count":0}],"isBlockCoverage":false},{"functionName":"concatenateDiagnosticMessageChains","ranges":[{"startOffset":9026111,"endOffset":9026151,"count":0}],"isBlockCoverage":false},{"functionName":"consumesNodeCoreModules","ranges":[{"startOffset":9026182,"endOffset":9026211,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":9026227,"endOffset":9026241,"count":0}],"isBlockCoverage":false},{"functionName":"containsIgnoredPath","ranges":[{"startOffset":9026268,"endOffset":9026293,"count":0}],"isBlockCoverage":false},{"functionName":"containsObjectRestOrSpread","ranges":[{"startOffset":9026327,"endOffset":9026359,"count":0}],"isBlockCoverage":false},{"functionName":"containsParseError","ranges":[{"startOffset":9026385,"endOffset":9026409,"count":0}],"isBlockCoverage":false},{"functionName":"containsPath","ranges":[{"startOffset":9026429,"endOffset":9026447,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsForTelemetry","ranges":[{"startOffset":9026489,"endOffset":9026529,"count":0}],"isBlockCoverage":false},{"functionName":"convertCompilerOptionsFromJson","ranges":[{"startOffset":9026567,"endOffset":9026603,"count":0}],"isBlockCoverage":false},{"functionName":"convertJsonOption","ranges":[{"startOffset":9026628,"endOffset":9026651,"count":0}],"isBlockCoverage":false},{"functionName":"convertToBase64","ranges":[{"startOffset":9026674,"endOffset":9026695,"count":0}],"isBlockCoverage":false},{"functionName":"convertToJson","ranges":[{"startOffset":9026716,"endOffset":9026735,"count":0}],"isBlockCoverage":false},{"functionName":"convertToObject","ranges":[{"startOffset":9026758,"endOffset":9026779,"count":0}],"isBlockCoverage":false},{"functionName":"convertToOptionsWithAbsolutePaths","ranges":[{"startOffset":9026820,"endOffset":9026859,"count":0}],"isBlockCoverage":false},{"functionName":"convertToRelativePath","ranges":[{"startOffset":9026888,"endOffset":9026915,"count":0}],"isBlockCoverage":false},{"functionName":"convertToTSConfig","ranges":[{"startOffset":9026940,"endOffset":9026963,"count":0}],"isBlockCoverage":false},{"functionName":"convertTypeAcquisitionFromJson","ranges":[{"startOffset":9027001,"endOffset":9027037,"count":0}],"isBlockCoverage":false},{"functionName":"copyComments","ranges":[{"startOffset":9027057,"endOffset":9027075,"count":0}],"isBlockCoverage":false},{"functionName":"copyEntries","ranges":[{"startOffset":9027094,"endOffset":9027111,"count":0}],"isBlockCoverage":false},{"functionName":"copyLeadingComments","ranges":[{"startOffset":9027138,"endOffset":9027163,"count":0}],"isBlockCoverage":false},{"functionName":"copyProperties","ranges":[{"startOffset":9027185,"endOffset":9027205,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingAsLeadingComments","ranges":[{"startOffset":9027242,"endOffset":9027277,"count":0}],"isBlockCoverage":false},{"functionName":"copyTrailingComments","ranges":[{"startOffset":9027305,"endOffset":9027331,"count":0}],"isBlockCoverage":false},{"functionName":"couldStartTrivia","ranges":[{"startOffset":9027355,"endOffset":9027377,"count":0}],"isBlockCoverage":false},{"functionName":"countWhere","ranges":[{"startOffset":9027395,"endOffset":9027411,"count":0}],"isBlockCoverage":false},{"functionName":"createAbstractBuilder","ranges":[{"startOffset":9027440,"endOffset":9027467,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyBackingField","ranges":[{"startOffset":9027509,"endOffset":9027549,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertyGetRedirector","ranges":[{"startOffset":9027592,"endOffset":9027633,"count":0}],"isBlockCoverage":false},{"functionName":"createAccessorPropertySetRedirector","ranges":[{"startOffset":9027676,"endOffset":9027717,"count":0}],"isBlockCoverage":false},{"functionName":"createBaseNodeFactory","ranges":[{"startOffset":9027746,"endOffset":9027773,"count":0}],"isBlockCoverage":false},{"functionName":"createBinaryExpressionTrampoline","ranges":[{"startOffset":9027813,"endOffset":9027851,"count":0}],"isBlockCoverage":false},{"functionName":"createBindingHelper","ranges":[{"startOffset":9027878,"endOffset":9027903,"count":0}],"isBlockCoverage":false},{"functionName":"createBuildInfo","ranges":[{"startOffset":9027926,"endOffset":9027947,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgram","ranges":[{"startOffset":9027975,"endOffset":9028001,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderProgramUsingProgramBuildInfo","ranges":[{"startOffset":9028050,"endOffset":9028097,"count":0}],"isBlockCoverage":false},{"functionName":"createBuilderStatusReporter","ranges":[{"startOffset":9028132,"endOffset":9028165,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheWithRedirects","ranges":[{"startOffset":9028197,"endOffset":9028227,"count":0}],"isBlockCoverage":false},{"functionName":"createCacheableExportInfoMap","ranges":[{"startOffset":9028263,"endOffset":9028297,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDirectoryStructureHost","ranges":[{"startOffset":9028339,"endOffset":9028379,"count":0}],"isBlockCoverage":false},{"functionName":"createClassNamedEvaluationHelperBlock","ranges":[{"startOffset":9028424,"endOffset":9028467,"count":0}],"isBlockCoverage":false},{"functionName":"createClassThisAssignmentBlock","ranges":[{"startOffset":9028505,"endOffset":9028541,"count":0}],"isBlockCoverage":false},{"functionName":"createClassifier","ranges":[{"startOffset":9028565,"endOffset":9028587,"count":0}],"isBlockCoverage":false},{"functionName":"createCommentDirectivesMap","ranges":[{"startOffset":9028621,"endOffset":9028653,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnostic","ranges":[{"startOffset":9028685,"endOffset":9028715,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticForInvalidCustomType","ranges":[{"startOffset":9028767,"endOffset":9028817,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerDiagnosticFromMessageChain","ranges":[{"startOffset":9028865,"endOffset":9028911,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHost","ranges":[{"startOffset":9028937,"endOffset":9028961,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostFromProgramHost","ranges":[{"startOffset":9029002,"endOffset":9029041,"count":0}],"isBlockCoverage":false},{"functionName":"createCompilerHostWorker","ranges":[{"startOffset":9029073,"endOffset":9029103,"count":0}],"isBlockCoverage":false},{"functionName":"createDetachedDiagnostic","ranges":[{"startOffset":9029135,"endOffset":9029165,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticCollection","ranges":[{"startOffset":9029199,"endOffset":9029231,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForFileFromMessageChain","ranges":[{"startOffset":9029278,"endOffset":9029323,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNode","ranges":[{"startOffset":9029354,"endOffset":9029383,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArray","ranges":[{"startOffset":9029419,"endOffset":9029453,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeArrayFromMessageChain","ranges":[{"startOffset":9029505,"endOffset":9029555,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeFromMessageChain","ranges":[{"startOffset":9029602,"endOffset":9029647,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForNodeInSourceFile","ranges":[{"startOffset":9029690,"endOffset":9029731,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticForRange","ranges":[{"startOffset":9029763,"endOffset":9029793,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticMessageChainFromDiagnostic","ranges":[{"startOffset":9029843,"endOffset":9029891,"count":0}],"isBlockCoverage":false},{"functionName":"createDiagnosticReporter","ranges":[{"startOffset":9029923,"endOffset":9029953,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentPositionMapper","ranges":[{"startOffset":9029989,"endOffset":9030023,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistry","ranges":[{"startOffset":9030053,"endOffset":9030081,"count":0}],"isBlockCoverage":false},{"functionName":"createDocumentRegistryInternal","ranges":[{"startOffset":9030119,"endOffset":9030155,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitAndSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":9030209,"endOffset":9030261,"count":0}],"isBlockCoverage":false},{"functionName":"createEmitHelperFactory","ranges":[{"startOffset":9030292,"endOffset":9030321,"count":0}],"isBlockCoverage":false},{"functionName":"createEmptyExports","ranges":[{"startOffset":9030347,"endOffset":9030371,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxElement","ranges":[{"startOffset":9030408,"endOffset":9030443,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForJsxFragment","ranges":[{"startOffset":9030481,"endOffset":9030517,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForObjectLiteralElementLike","ranges":[{"startOffset":9030568,"endOffset":9030617,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionForPropertyName","ranges":[{"startOffset":9030656,"endOffset":9030693,"count":0}],"isBlockCoverage":false},{"functionName":"createExpressionFromEntityName","ranges":[{"startOffset":9030731,"endOffset":9030767,"count":0}],"isBlockCoverage":false},{"functionName":"createExternalHelpersImportDeclarationIfNeeded","ranges":[{"startOffset":9030821,"endOffset":9030873,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnostic","ranges":[{"startOffset":9030901,"endOffset":9030927,"count":0}],"isBlockCoverage":false},{"functionName":"createFileDiagnosticFromMessageChain","ranges":[{"startOffset":9030971,"endOffset":9031013,"count":0}],"isBlockCoverage":false},{"functionName":"createForOfBindingStatement","ranges":[{"startOffset":9031048,"endOffset":9031081,"count":0}],"isBlockCoverage":false},{"functionName":"createGetCanonicalFileName","ranges":[{"startOffset":9031115,"endOffset":9031147,"count":2}],"isBlockCoverage":true},{"functionName":"createGetSourceFile","ranges":[{"startOffset":9031174,"endOffset":9031199,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNode","ranges":[{"startOffset":9031252,"endOffset":9031303,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolAccessibilityDiagnosticForNodeName","ranges":[{"startOffset":9031360,"endOffset":9031415,"count":0}],"isBlockCoverage":false},{"functionName":"createGetSymbolWalker","ranges":[{"startOffset":9031444,"endOffset":9031471,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalCompilerHost","ranges":[{"startOffset":9031508,"endOffset":9031543,"count":0}],"isBlockCoverage":false},{"functionName":"createIncrementalProgram","ranges":[{"startOffset":9031575,"endOffset":9031605,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFiles","ranges":[{"startOffset":9031629,"endOffset":9031651,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFilesWithFilePaths","ranges":[{"startOffset":9031688,"endOffset":9031723,"count":0}],"isBlockCoverage":false},{"functionName":"createInputFilesWithFileTexts","ranges":[{"startOffset":9031760,"endOffset":9031795,"count":0}],"isBlockCoverage":false},{"functionName":"createJsxFactoryExpression","ranges":[{"startOffset":9031829,"endOffset":9031861,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageService","ranges":[{"startOffset":9031890,"endOffset":9031917,"count":0}],"isBlockCoverage":false},{"functionName":"createLanguageServiceSourceFile","ranges":[{"startOffset":9031956,"endOffset":9031993,"count":0}],"isBlockCoverage":false},{"functionName":"createMemberAccessForPropertyName","ranges":[{"startOffset":9032034,"endOffset":9032073,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCache","ranges":[{"startOffset":9032101,"endOffset":9032127,"count":0}],"isBlockCoverage":false},{"functionName":"createModeAwareCacheKey","ranges":[{"startOffset":9032158,"endOffset":9032187,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleNotFoundChain","ranges":[{"startOffset":9032220,"endOffset":9032251,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionCache","ranges":[{"startOffset":9032286,"endOffset":9032319,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoader","ranges":[{"startOffset":9032355,"endOffset":9032389,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleResolutionLoaderUsingGlobalCache","ranges":[{"startOffset":9032441,"endOffset":9032491,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleSpecifierResolutionHost","ranges":[{"startOffset":9032534,"endOffset":9032575,"count":0}],"isBlockCoverage":false},{"functionName":"createMultiMap","ranges":[{"startOffset":9032597,"endOffset":9032617,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeConverters","ranges":[{"startOffset":9032645,"endOffset":9032671,"count":0}],"isBlockCoverage":false},{"functionName":"createNodeFactory","ranges":[{"startOffset":9032696,"endOffset":9032719,"count":0}],"isBlockCoverage":false},{"functionName":"createOptionNameMap","ranges":[{"startOffset":9032746,"endOffset":9032771,"count":0}],"isBlockCoverage":false},{"functionName":"createOverload","ranges":[{"startOffset":9032793,"endOffset":9032813,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonImportFilter","ranges":[{"startOffset":9032850,"endOffset":9032885,"count":0}],"isBlockCoverage":false},{"functionName":"createPackageJsonInfo","ranges":[{"startOffset":9032914,"endOffset":9032941,"count":0}],"isBlockCoverage":false},{"functionName":"createParenthesizerRules","ranges":[{"startOffset":9032973,"endOffset":9033003,"count":0}],"isBlockCoverage":false},{"functionName":"createPatternMatcher","ranges":[{"startOffset":9033031,"endOffset":9033057,"count":0}],"isBlockCoverage":false},{"functionName":"createPrependNodes","ranges":[{"startOffset":9033083,"endOffset":9033107,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinter","ranges":[{"startOffset":9033128,"endOffset":9033147,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithDefaults","ranges":[{"startOffset":9033180,"endOffset":9033211,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveComments","ranges":[{"startOffset":9033250,"endOffset":9033287,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsNeverAsciiEscape","ranges":[{"startOffset":9033342,"endOffset":9033395,"count":0}],"isBlockCoverage":false},{"functionName":"createPrinterWithRemoveCommentsOmitTrailingSemicolon","ranges":[{"startOffset":9033455,"endOffset":9033513,"count":0}],"isBlockCoverage":false},{"functionName":"createProgram","ranges":[{"startOffset":9033534,"endOffset":9033553,"count":10}],"isBlockCoverage":true},{"functionName":"createProgramHost","ranges":[{"startOffset":9033578,"endOffset":9033601,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyNameNodeForIdentifierOrLiteral","ranges":[{"startOffset":9033653,"endOffset":9033703,"count":0}],"isBlockCoverage":false},{"functionName":"createQueue","ranges":[{"startOffset":9033722,"endOffset":9033739,"count":0}],"isBlockCoverage":false},{"functionName":"createRange","ranges":[{"startOffset":9033758,"endOffset":9033775,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectedBuilderProgram","ranges":[{"startOffset":9033813,"endOffset":9033849,"count":0}],"isBlockCoverage":false},{"functionName":"createResolutionCache","ranges":[{"startOffset":9033878,"endOffset":9033905,"count":0}],"isBlockCoverage":false},{"functionName":"createRuntimeTypeSerializer","ranges":[{"startOffset":9033940,"endOffset":9033973,"count":0}],"isBlockCoverage":false},{"functionName":"createScanner","ranges":[{"startOffset":9033994,"endOffset":9034013,"count":0}],"isBlockCoverage":false},{"functionName":"createSemanticDiagnosticsBuilderProgram","ranges":[{"startOffset":9034060,"endOffset":9034105,"count":0}],"isBlockCoverage":false},{"functionName":"createSet","ranges":[{"startOffset":9034122,"endOffset":9034137,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilder","ranges":[{"startOffset":9034166,"endOffset":9034193,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderHost","ranges":[{"startOffset":9034226,"endOffset":9034257,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatch","ranges":[{"startOffset":9034295,"endOffset":9034331,"count":0}],"isBlockCoverage":false},{"functionName":"createSolutionBuilderWithWatchHost","ranges":[{"startOffset":9034373,"endOffset":9034413,"count":0}],"isBlockCoverage":false},{"functionName":"createSortedArray","ranges":[{"startOffset":9034438,"endOffset":9034461,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceFile","ranges":[{"startOffset":9034485,"endOffset":9034507,"count":10}],"isBlockCoverage":true},{"functionName":"createSourceMapGenerator","ranges":[{"startOffset":9034539,"endOffset":9034569,"count":0}],"isBlockCoverage":false},{"functionName":"createSourceMapSource","ranges":[{"startOffset":9034598,"endOffset":9034625,"count":0}],"isBlockCoverage":false},{"functionName":"createSuperAccessVariableStatement","ranges":[{"startOffset":9034667,"endOffset":9034707,"count":0}],"isBlockCoverage":false},{"functionName":"createSymbolTable","ranges":[{"startOffset":9034732,"endOffset":9034755,"count":0}],"isBlockCoverage":false},{"functionName":"createSymlinkCache","ranges":[{"startOffset":9034781,"endOffset":9034805,"count":0}],"isBlockCoverage":false},{"functionName":"createSystemWatchFunctions","ranges":[{"startOffset":9034839,"endOffset":9034871,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChange","ranges":[{"startOffset":9034895,"endOffset":9034917,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeFromStartLength","ranges":[{"startOffset":9034956,"endOffset":9034993,"count":0}],"isBlockCoverage":false},{"functionName":"createTextChangeRange","ranges":[{"startOffset":9035022,"endOffset":9035049,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromNode","ranges":[{"startOffset":9035080,"endOffset":9035109,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRangeFromSpan","ranges":[{"startOffset":9035140,"endOffset":9035169,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpan","ranges":[{"startOffset":9035191,"endOffset":9035211,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromBounds","ranges":[{"startOffset":9035243,"endOffset":9035273,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromNode","ranges":[{"startOffset":9035303,"endOffset":9035331,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromRange","ranges":[{"startOffset":9035362,"endOffset":9035391,"count":0}],"isBlockCoverage":false},{"functionName":"createTextSpanFromStringLiteralLikeContent","ranges":[{"startOffset":9035441,"endOffset":9035489,"count":0}],"isBlockCoverage":false},{"functionName":"createTextWriter","ranges":[{"startOffset":9035513,"endOffset":9035535,"count":0}],"isBlockCoverage":false},{"functionName":"createTokenRange","ranges":[{"startOffset":9035559,"endOffset":9035581,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeChecker","ranges":[{"startOffset":9035606,"endOffset":9035629,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceDirectiveResolutionCache","ranges":[{"startOffset":9035680,"endOffset":9035729,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeReferenceResolutionLoader","ranges":[{"startOffset":9035772,"endOffset":9035813,"count":0}],"isBlockCoverage":false},{"functionName":"createUnparsedSourceFile","ranges":[{"startOffset":9035845,"endOffset":9035875,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHost","ranges":[{"startOffset":9035906,"endOffset":9035936,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfConfigFile","ranges":[{"startOffset":9035979,"endOffset":9036020,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchCompilerHostOfFilesAndCompilerOptions","ranges":[{"startOffset":9036076,"endOffset":9036130,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchFactory","ranges":[{"startOffset":9036156,"endOffset":9036180,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchHost","ranges":[{"startOffset":9036203,"endOffset":9036224,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchProgram","ranges":[{"startOffset":9036250,"endOffset":9036274,"count":0}],"isBlockCoverage":false},{"functionName":"createWatchStatusReporter","ranges":[{"startOffset":9036307,"endOffset":9036338,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteFileMeasuringIO","ranges":[{"startOffset":9036372,"endOffset":9036404,"count":0}],"isBlockCoverage":false},{"functionName":"declarationNameToString","ranges":[{"startOffset":9036435,"endOffset":9036464,"count":0}],"isBlockCoverage":false},{"functionName":"decodeMappings","ranges":[{"startOffset":9036486,"endOffset":9036506,"count":0}],"isBlockCoverage":false},{"functionName":"decodedTextSpanIntersectsWith","ranges":[{"startOffset":9036543,"endOffset":9036578,"count":0}],"isBlockCoverage":false},{"functionName":"decorateHelper","ranges":[{"startOffset":9036600,"endOffset":9036620,"count":0}],"isBlockCoverage":false},{"functionName":"deduplicate","ranges":[{"startOffset":9036639,"endOffset":9036656,"count":0}],"isBlockCoverage":false},{"functionName":"defaultIncludeSpec","ranges":[{"startOffset":9036682,"endOffset":9036706,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInitCompilerOptions","ranges":[{"startOffset":9036740,"endOffset":9036772,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMaximumTruncationLength","ranges":[{"startOffset":9036810,"endOffset":9036846,"count":0}],"isBlockCoverage":false},{"functionName":"detectSortCaseSensitivity","ranges":[{"startOffset":9036879,"endOffset":9036910,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticCategoryName","ranges":[{"startOffset":9036940,"endOffset":9036968,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticToString","ranges":[{"startOffset":9036994,"endOffset":9037018,"count":0}],"isBlockCoverage":false},{"functionName":"directoryProbablyExists","ranges":[{"startOffset":9037049,"endOffset":9037078,"count":0}],"isBlockCoverage":false},{"functionName":"directorySeparator","ranges":[{"startOffset":9037104,"endOffset":9037128,"count":0}],"isBlockCoverage":false},{"functionName":"displayPart","ranges":[{"startOffset":9037147,"endOffset":9037164,"count":0}],"isBlockCoverage":false},{"functionName":"displayPartsToString","ranges":[{"startOffset":9037192,"endOffset":9037218,"count":0}],"isBlockCoverage":false},{"functionName":"disposeEmitNodes","ranges":[{"startOffset":9037242,"endOffset":9037264,"count":0}],"isBlockCoverage":false},{"functionName":"disposeResourcesHelper","ranges":[{"startOffset":9037294,"endOffset":9037322,"count":0}],"isBlockCoverage":false},{"functionName":"documentSpansEqual","ranges":[{"startOffset":9037348,"endOffset":9037372,"count":0}],"isBlockCoverage":false},{"functionName":"dumpTracingLegend","ranges":[{"startOffset":9037397,"endOffset":9037420,"count":0}],"isBlockCoverage":false},{"functionName":"elementAt","ranges":[{"startOffset":9037437,"endOffset":9037452,"count":0}],"isBlockCoverage":false},{"functionName":"elideNodes","ranges":[{"startOffset":9037470,"endOffset":9037486,"count":0}],"isBlockCoverage":false},{"functionName":"emitComments","ranges":[{"startOffset":9037506,"endOffset":9037524,"count":0}],"isBlockCoverage":false},{"functionName":"emitDetachedComments","ranges":[{"startOffset":9037552,"endOffset":9037578,"count":0}],"isBlockCoverage":false},{"functionName":"emitFiles","ranges":[{"startOffset":9037595,"endOffset":9037610,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrors","ranges":[{"startOffset":9037642,"endOffset":9037672,"count":0}],"isBlockCoverage":false},{"functionName":"emitFilesAndReportErrorsAndGetExitStatus","ranges":[{"startOffset":9037720,"endOffset":9037766,"count":0}],"isBlockCoverage":false},{"functionName":"emitModuleKindIsNonNodeESM","ranges":[{"startOffset":9037800,"endOffset":9037832,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentOfPosition","ranges":[{"startOffset":9037881,"endOffset":9037928,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingComments","ranges":[{"startOffset":9037968,"endOffset":9038006,"count":0}],"isBlockCoverage":false},{"functionName":"emitNewLineBeforeLeadingCommentsOfPosition","ranges":[{"startOffset":9038056,"endOffset":9038104,"count":0}],"isBlockCoverage":false},{"functionName":"emitSkippedWithNoDiagnostics","ranges":[{"startOffset":9038140,"endOffset":9038174,"count":0}],"isBlockCoverage":false},{"functionName":"emitUsingBuildInfo","ranges":[{"startOffset":9038200,"endOffset":9038224,"count":0}],"isBlockCoverage":false},{"functionName":"emptyArray","ranges":[{"startOffset":9038242,"endOffset":9038258,"count":0}],"isBlockCoverage":false},{"functionName":"emptyFileSystemEntries","ranges":[{"startOffset":9038288,"endOffset":9038316,"count":0}],"isBlockCoverage":false},{"functionName":"emptyMap","ranges":[{"startOffset":9038332,"endOffset":9038346,"count":0}],"isBlockCoverage":false},{"functionName":"emptyOptions","ranges":[{"startOffset":9038366,"endOffset":9038384,"count":0}],"isBlockCoverage":false},{"functionName":"emptySet","ranges":[{"startOffset":9038400,"endOffset":9038414,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":9038430,"endOffset":9038444,"count":0}],"isBlockCoverage":false},{"functionName":"ensurePathIsNonModuleName","ranges":[{"startOffset":9038477,"endOffset":9038508,"count":0}],"isBlockCoverage":false},{"functionName":"ensureScriptKind","ranges":[{"startOffset":9038532,"endOffset":9038554,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":9038594,"endOffset":9038632,"count":0}],"isBlockCoverage":false},{"functionName":"entityNameToString","ranges":[{"startOffset":9038658,"endOffset":9038682,"count":0}],"isBlockCoverage":false},{"functionName":"enumerateInsertsAndDeletes","ranges":[{"startOffset":9038716,"endOffset":9038748,"count":0}],"isBlockCoverage":false},{"functionName":"equalOwnProperties","ranges":[{"startOffset":9038774,"endOffset":9038798,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseInsensitive","ranges":[{"startOffset":9038834,"endOffset":9038868,"count":0}],"isBlockCoverage":false},{"functionName":"equateStringsCaseSensitive","ranges":[{"startOffset":9038902,"endOffset":9038934,"count":0}],"isBlockCoverage":false},{"functionName":"equateValues","ranges":[{"startOffset":9038954,"endOffset":9038972,"count":0}],"isBlockCoverage":false},{"functionName":"esDecorateHelper","ranges":[{"startOffset":9038996,"endOffset":9039018,"count":0}],"isBlockCoverage":false},{"functionName":"escapeJsxAttributeString","ranges":[{"startOffset":9039050,"endOffset":9039080,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLeadingUnderscores","ranges":[{"startOffset":9039112,"endOffset":9039142,"count":0}],"isBlockCoverage":false},{"functionName":"escapeNonAsciiString","ranges":[{"startOffset":9039170,"endOffset":9039196,"count":0}],"isBlockCoverage":false},{"functionName":"escapeSnippetText","ranges":[{"startOffset":9039221,"endOffset":9039244,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":9039264,"endOffset":9039282,"count":0}],"isBlockCoverage":false},{"functionName":"escapeTemplateSubstitution","ranges":[{"startOffset":9039316,"endOffset":9039348,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":9039361,"endOffset":9039372,"count":0}],"isBlockCoverage":false},{"functionName":"expandPreOrPostfixIncrementOrDecrementExpression","ranges":[{"startOffset":9039428,"endOffset":9039482,"count":0}],"isBlockCoverage":false},{"functionName":"explainFiles","ranges":[{"startOffset":9039502,"endOffset":9039520,"count":0}],"isBlockCoverage":false},{"functionName":"explainIfFileIsRedirectAndImpliedFormat","ranges":[{"startOffset":9039567,"endOffset":9039612,"count":0}],"isBlockCoverage":false},{"functionName":"exportAssignmentIsAlias","ranges":[{"startOffset":9039643,"endOffset":9039672,"count":0}],"isBlockCoverage":false},{"functionName":"exportStarHelper","ranges":[{"startOffset":9039696,"endOffset":9039718,"count":0}],"isBlockCoverage":false},{"functionName":"expressionResultIsUnused","ranges":[{"startOffset":9039750,"endOffset":9039780,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":9039794,"endOffset":9039806,"count":0}],"isBlockCoverage":false},{"functionName":"extendsHelper","ranges":[{"startOffset":9039827,"endOffset":9039846,"count":0}],"isBlockCoverage":false},{"functionName":"extensionFromPath","ranges":[{"startOffset":9039871,"endOffset":9039894,"count":0}],"isBlockCoverage":false},{"functionName":"extensionIsTS","ranges":[{"startOffset":9039915,"endOffset":9039934,"count":0}],"isBlockCoverage":false},{"functionName":"extensionsNotSupportingExtensionlessResolution","ranges":[{"startOffset":9039988,"endOffset":9040040,"count":0}],"isBlockCoverage":false},{"functionName":"externalHelpersModuleNameText","ranges":[{"startOffset":9040077,"endOffset":9040112,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":9040127,"endOffset":9040140,"count":0}],"isBlockCoverage":false},{"functionName":"fileExtensionIs","ranges":[{"startOffset":9040163,"endOffset":9040184,"count":10}],"isBlockCoverage":true},{"functionName":"fileExtensionIsOneOf","ranges":[{"startOffset":9040212,"endOffset":9040238,"count":0}],"isBlockCoverage":false},{"functionName":"fileIncludeReasonToDiagnostics","ranges":[{"startOffset":9040276,"endOffset":9040312,"count":0}],"isBlockCoverage":false},{"functionName":"fileShouldUseJavaScriptRequire","ranges":[{"startOffset":9040350,"endOffset":9040386,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":9040400,"endOffset":9040412,"count":0}],"isBlockCoverage":false},{"functionName":"filterMutate","ranges":[{"startOffset":9040432,"endOffset":9040450,"count":0}],"isBlockCoverage":false},{"functionName":"filterSemanticDiagnostics","ranges":[{"startOffset":9040483,"endOffset":9040514,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":9040526,"endOffset":9040536,"count":0}],"isBlockCoverage":false},{"functionName":"findAncestor","ranges":[{"startOffset":9040556,"endOffset":9040574,"count":0}],"isBlockCoverage":false},{"functionName":"findBestPatternMatch","ranges":[{"startOffset":9040602,"endOffset":9040628,"count":0}],"isBlockCoverage":false},{"functionName":"findChildOfKind","ranges":[{"startOffset":9040651,"endOffset":9040672,"count":0}],"isBlockCoverage":false},{"functionName":"findComputedPropertyNameCacheAssignment","ranges":[{"startOffset":9040719,"endOffset":9040764,"count":0}],"isBlockCoverage":false},{"functionName":"findConfigFile","ranges":[{"startOffset":9040786,"endOffset":9040806,"count":0}],"isBlockCoverage":false},{"functionName":"findContainingList","ranges":[{"startOffset":9040832,"endOffset":9040856,"count":0}],"isBlockCoverage":false},{"functionName":"findDiagnosticForNode","ranges":[{"startOffset":9040885,"endOffset":9040912,"count":0}],"isBlockCoverage":false},{"functionName":"findFirstNonJsxWhitespaceToken","ranges":[{"startOffset":9040950,"endOffset":9040986,"count":0}],"isBlockCoverage":false},{"functionName":"findIndex","ranges":[{"startOffset":9041003,"endOffset":9041018,"count":0}],"isBlockCoverage":false},{"functionName":"findLast","ranges":[{"startOffset":9041034,"endOffset":9041048,"count":0}],"isBlockCoverage":false},{"functionName":"findLastIndex","ranges":[{"startOffset":9041069,"endOffset":9041088,"count":0}],"isBlockCoverage":false},{"functionName":"findListItemInfo","ranges":[{"startOffset":9041112,"endOffset":9041134,"count":0}],"isBlockCoverage":false},{"functionName":"findMap","ranges":[{"startOffset":9041149,"endOffset":9041162,"count":0}],"isBlockCoverage":false},{"functionName":"findModifier","ranges":[{"startOffset":9041182,"endOffset":9041200,"count":0}],"isBlockCoverage":false},{"functionName":"findNextToken","ranges":[{"startOffset":9041221,"endOffset":9041240,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJson","ranges":[{"startOffset":9041263,"endOffset":9041284,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageJsons","ranges":[{"startOffset":9041308,"endOffset":9041330,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingMatchingToken","ranges":[{"startOffset":9041364,"endOffset":9041396,"count":0}],"isBlockCoverage":false},{"functionName":"findPrecedingToken","ranges":[{"startOffset":9041422,"endOffset":9041446,"count":0}],"isBlockCoverage":false},{"functionName":"findSuperStatementIndexPath","ranges":[{"startOffset":9041481,"endOffset":9041514,"count":0}],"isBlockCoverage":false},{"functionName":"findTokenOnLeftOfPosition","ranges":[{"startOffset":9041547,"endOffset":9041578,"count":0}],"isBlockCoverage":false},{"functionName":"findUseStrictPrologue","ranges":[{"startOffset":9041607,"endOffset":9041634,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":9041647,"endOffset":9041658,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefined","ranges":[{"startOffset":9041678,"endOffset":9041696,"count":0}],"isBlockCoverage":false},{"functionName":"firstDefinedIterator","ranges":[{"startOffset":9041724,"endOffset":9041750,"count":0}],"isBlockCoverage":false},{"functionName":"firstIterator","ranges":[{"startOffset":9041771,"endOffset":9041790,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrOnly","ranges":[{"startOffset":9041809,"endOffset":9041826,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefined","ranges":[{"startOffset":9041850,"endOffset":9041872,"count":0}],"isBlockCoverage":false},{"functionName":"firstOrUndefinedIterator","ranges":[{"startOffset":9041904,"endOffset":9041934,"count":0}],"isBlockCoverage":false},{"functionName":"fixupCompilerOptions","ranges":[{"startOffset":9041962,"endOffset":9041988,"count":10}],"isBlockCoverage":true},{"functionName":"flatMap","ranges":[{"startOffset":9042003,"endOffset":9042016,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapIterator","ranges":[{"startOffset":9042039,"endOffset":9042060,"count":0}],"isBlockCoverage":false},{"functionName":"flatMapToMutable","ranges":[{"startOffset":9042084,"endOffset":9042106,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":9042121,"endOffset":9042134,"count":0}],"isBlockCoverage":false},{"functionName":"flattenCommaList","ranges":[{"startOffset":9042158,"endOffset":9042180,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringAssignment","ranges":[{"startOffset":9042218,"endOffset":9042254,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDestructuringBinding","ranges":[{"startOffset":9042289,"endOffset":9042322,"count":0}],"isBlockCoverage":false},{"functionName":"flattenDiagnosticMessageText","ranges":[{"startOffset":9042358,"endOffset":9042392,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":9042407,"endOffset":9042420,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestor","ranges":[{"startOffset":9042443,"endOffset":9042464,"count":0}],"isBlockCoverage":false},{"functionName":"forEachAncestorDirectory","ranges":[{"startOffset":9042496,"endOffset":9042526,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChild","ranges":[{"startOffset":9042546,"endOffset":9042564,"count":0}],"isBlockCoverage":false},{"functionName":"forEachChildRecursively","ranges":[{"startOffset":9042595,"endOffset":9042624,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEmittedFile","ranges":[{"startOffset":9042650,"endOffset":9042674,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEnclosingBlockScopeContainer","ranges":[{"startOffset":9042717,"endOffset":9042758,"count":0}],"isBlockCoverage":false},{"functionName":"forEachEntry","ranges":[{"startOffset":9042778,"endOffset":9042796,"count":0}],"isBlockCoverage":false},{"functionName":"forEachExternalModuleToImportFrom","ranges":[{"startOffset":9042837,"endOffset":9042876,"count":0}],"isBlockCoverage":false},{"functionName":"forEachImportClauseDeclaration","ranges":[{"startOffset":9042914,"endOffset":9042950,"count":0}],"isBlockCoverage":false},{"functionName":"forEachKey","ranges":[{"startOffset":9042968,"endOffset":9042984,"count":0}],"isBlockCoverage":false},{"functionName":"forEachLeadingCommentRange","ranges":[{"startOffset":9043018,"endOffset":9043050,"count":0}],"isBlockCoverage":false},{"functionName":"forEachNameInAccessChainWalkingLeft","ranges":[{"startOffset":9043093,"endOffset":9043134,"count":0}],"isBlockCoverage":false},{"functionName":"forEachPropertyAssignment","ranges":[{"startOffset":9043167,"endOffset":9043198,"count":0}],"isBlockCoverage":false},{"functionName":"forEachResolvedProjectReference","ranges":[{"startOffset":9043237,"endOffset":9043274,"count":0}],"isBlockCoverage":false},{"functionName":"forEachReturnStatement","ranges":[{"startOffset":9043304,"endOffset":9043332,"count":0}],"isBlockCoverage":false},{"functionName":"forEachRight","ranges":[{"startOffset":9043352,"endOffset":9043370,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTrailingCommentRange","ranges":[{"startOffset":9043405,"endOffset":9043438,"count":0}],"isBlockCoverage":false},{"functionName":"forEachTsConfigPropArray","ranges":[{"startOffset":9043470,"endOffset":9043500,"count":0}],"isBlockCoverage":false},{"functionName":"forEachUnique","ranges":[{"startOffset":9043521,"endOffset":9043540,"count":0}],"isBlockCoverage":false},{"functionName":"forEachYieldExpression","ranges":[{"startOffset":9043570,"endOffset":9043598,"count":0}],"isBlockCoverage":false},{"functionName":"forSomeAncestorDirectory","ranges":[{"startOffset":9043630,"endOffset":9043660,"count":0}],"isBlockCoverage":false},{"functionName":"formatColorAndReset","ranges":[{"startOffset":9043687,"endOffset":9043712,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostic","ranges":[{"startOffset":9043736,"endOffset":9043758,"count":0}],"isBlockCoverage":false},{"functionName":"formatDiagnostics","ranges":[{"startOffset":9043783,"endOffset":9043806,"count":2}],"isBlockCoverage":true},{"functionName":"formatDiagnosticsWithColorAndContext","ranges":[{"startOffset":9043850,"endOffset":9043892,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedName","ranges":[{"startOffset":9043919,"endOffset":9043944,"count":0}],"isBlockCoverage":false},{"functionName":"formatGeneratedNamePart","ranges":[{"startOffset":9043975,"endOffset":9044004,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":9044026,"endOffset":9044046,"count":0}],"isBlockCoverage":false},{"functionName":"formatMessage","ranges":[{"startOffset":9044067,"endOffset":9044086,"count":0}],"isBlockCoverage":false},{"functionName":"formatStringFromArgs","ranges":[{"startOffset":9044114,"endOffset":9044140,"count":0}],"isBlockCoverage":false},{"functionName":"formatting","ranges":[{"startOffset":9044158,"endOffset":9044185,"count":0}],"isBlockCoverage":false},{"functionName":"fullTripleSlashAMDReferencePathRegEx","ranges":[{"startOffset":9044229,"endOffset":9044271,"count":0}],"isBlockCoverage":false},{"functionName":"fullTripleSlashReferencePathRegEx","ranges":[{"startOffset":9044312,"endOffset":9044351,"count":0}],"isBlockCoverage":false},{"functionName":"generateDjb2Hash","ranges":[{"startOffset":9044375,"endOffset":9044397,"count":0}],"isBlockCoverage":false},{"functionName":"generateTSConfig","ranges":[{"startOffset":9044421,"endOffset":9044443,"count":0}],"isBlockCoverage":false},{"functionName":"generatorHelper","ranges":[{"startOffset":9044466,"endOffset":9044487,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedReferenceLocation","ranges":[{"startOffset":9044523,"endOffset":9044557,"count":0}],"isBlockCoverage":false},{"functionName":"getAdjustedRenameLocation","ranges":[{"startOffset":9044590,"endOffset":9044621,"count":0}],"isBlockCoverage":false},{"functionName":"getAliasDeclarationFromName","ranges":[{"startOffset":9044656,"endOffset":9044689,"count":0}],"isBlockCoverage":false},{"functionName":"getAllAccessorDeclarations","ranges":[{"startOffset":9044723,"endOffset":9044755,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClass","ranges":[{"startOffset":9044786,"endOffset":9044815,"count":0}],"isBlockCoverage":false},{"functionName":"getAllDecoratorsOfClassElement","ranges":[{"startOffset":9044853,"endOffset":9044889,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTags","ranges":[{"startOffset":9044912,"endOffset":9044933,"count":0}],"isBlockCoverage":false},{"functionName":"getAllJSDocTagsOfKind","ranges":[{"startOffset":9044962,"endOffset":9044989,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":9045007,"endOffset":9045023,"count":0}],"isBlockCoverage":false},{"functionName":"getAllProjectOutputs","ranges":[{"startOffset":9045051,"endOffset":9045077,"count":0}],"isBlockCoverage":false},{"functionName":"getAllSuperTypeNodes","ranges":[{"startOffset":9045105,"endOffset":9045131,"count":0}],"isBlockCoverage":false},{"functionName":"getAllUnscopedEmitHelpers","ranges":[{"startOffset":9045164,"endOffset":9045195,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowJSCompilerOption","ranges":[{"startOffset":9045227,"endOffset":9045257,"count":0}],"isBlockCoverage":false},{"functionName":"getAllowSyntheticDefaultImports","ranges":[{"startOffset":9045296,"endOffset":9045333,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestor","ranges":[{"startOffset":9045352,"endOffset":9045369,"count":0}],"isBlockCoverage":false},{"functionName":"getAnyExtensionFromPath","ranges":[{"startOffset":9045400,"endOffset":9045429,"count":0}],"isBlockCoverage":false},{"functionName":"getAreDeclarationMapsEnabled","ranges":[{"startOffset":9045465,"endOffset":9045499,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedExpandoInitializer","ranges":[{"startOffset":9045536,"endOffset":9045571,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedName","ranges":[{"startOffset":9045594,"endOffset":9045615,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignedNameOfIdentifier","ranges":[{"startOffset":9045650,"endOffset":9045683,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationKind","ranges":[{"startOffset":9045719,"endOffset":9045753,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentDeclarationPropertyAccessKind","ranges":[{"startOffset":9045803,"endOffset":9045851,"count":0}],"isBlockCoverage":false},{"functionName":"getAssignmentTargetKind","ranges":[{"startOffset":9045882,"endOffset":9045911,"count":0}],"isBlockCoverage":false},{"functionName":"getAutomaticTypeDirectiveNames","ranges":[{"startOffset":9045949,"endOffset":9045985,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseFileName","ranges":[{"startOffset":9046008,"endOffset":9046029,"count":0}],"isBlockCoverage":false},{"functionName":"getBinaryOperatorPrecedence","ranges":[{"startOffset":9046064,"endOffset":9046097,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfo","ranges":[{"startOffset":9046117,"endOffset":9046135,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoFileVersionMap","ranges":[{"startOffset":9046169,"endOffset":9046201,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildInfoText","ranges":[{"startOffset":9046225,"endOffset":9046247,"count":0}],"isBlockCoverage":false},{"functionName":"getBuildOrderFromAnyBuildOrder","ranges":[{"startOffset":9046285,"endOffset":9046321,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderCreationParameters","ranges":[{"startOffset":9046357,"endOffset":9046391,"count":0}],"isBlockCoverage":false},{"functionName":"getBuilderFileEmit","ranges":[{"startOffset":9046417,"endOffset":9046441,"count":0}],"isBlockCoverage":false},{"functionName":"getCheckFlags","ranges":[{"startOffset":9046462,"endOffset":9046481,"count":0}],"isBlockCoverage":false},{"functionName":"getClassExtendsHeritageElement","ranges":[{"startOffset":9046519,"endOffset":9046555,"count":0}],"isBlockCoverage":false},{"functionName":"getClassLikeDeclarationOfSymbol","ranges":[{"startOffset":9046594,"endOffset":9046631,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedLocalAndExportSymbolFlags","ranges":[{"startOffset":9046675,"endOffset":9046717,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedModifierFlags","ranges":[{"startOffset":9046749,"endOffset":9046779,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlags","ranges":[{"startOffset":9046807,"endOffset":9046833,"count":0}],"isBlockCoverage":false},{"functionName":"getCombinedNodeFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":9046879,"endOffset":9046923,"count":0}],"isBlockCoverage":false},{"functionName":"getCommentRange","ranges":[{"startOffset":9046946,"endOffset":9046967,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectory","ranges":[{"startOffset":9046999,"endOffset":9047029,"count":0}],"isBlockCoverage":false},{"functionName":"getCommonSourceDirectoryOfConfig","ranges":[{"startOffset":9047069,"endOffset":9047107,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionValue","ranges":[{"startOffset":9047137,"endOffset":9047165,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilerOptionsDiffValue","ranges":[{"startOffset":9047200,"endOffset":9047233,"count":0}],"isBlockCoverage":false},{"functionName":"getConditions","ranges":[{"startOffset":9047254,"endOffset":9047273,"count":0}],"isBlockCoverage":false},{"functionName":"getConfigFileParsingDiagnostics","ranges":[{"startOffset":9047312,"endOffset":9047349,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantValue","ranges":[{"startOffset":9047373,"endOffset":9047395,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerFlags","ranges":[{"startOffset":9047420,"endOffset":9047443,"count":0}],"isBlockCoverage":false},{"functionName":"getContainerNode","ranges":[{"startOffset":9047467,"endOffset":9047489,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClass","ranges":[{"startOffset":9047515,"endOffset":9047539,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassExcludingClassDecorators","ranges":[{"startOffset":9047589,"endOffset":9047637,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingClassStaticBlock","ranges":[{"startOffset":9047674,"endOffset":9047709,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunction","ranges":[{"startOffset":9047738,"endOffset":9047765,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionDeclaration","ranges":[{"startOffset":9047805,"endOffset":9047843,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingFunctionOrClassStaticBlock","ranges":[{"startOffset":9047890,"endOffset":9047935,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingNodeArray","ranges":[{"startOffset":9047965,"endOffset":9047993,"count":0}],"isBlockCoverage":false},{"functionName":"getContainingObjectLiteralElement","ranges":[{"startOffset":9048034,"endOffset":9048073,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParent","ranges":[{"startOffset":9048108,"endOffset":9048141,"count":0}],"isBlockCoverage":false},{"functionName":"getContextualTypeFromParentOrAncestorTypeNode","ranges":[{"startOffset":9048194,"endOffset":9048245,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentTime","ranges":[{"startOffset":9048267,"endOffset":9048287,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationDiagnostics","ranges":[{"startOffset":9048320,"endOffset":9048351,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitExtensionForPath","ranges":[{"startOffset":9048393,"endOffset":9048433,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePath","ranges":[{"startOffset":9048473,"endOffset":9048511,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationEmitOutputFilePathWorker","ranges":[{"startOffset":9048557,"endOffset":9048601,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFileExtension","ranges":[{"startOffset":9048636,"endOffset":9048669,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationFromName","ranges":[{"startOffset":9048699,"endOffset":9048727,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationModifierFlagsFromSymbol","ranges":[{"startOffset":9048772,"endOffset":9048815,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationOfKind","ranges":[{"startOffset":9048843,"endOffset":9048869,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclarationsOfKind","ranges":[{"startOffset":9048898,"endOffset":9048925,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclaredExpandoInitializer","ranges":[{"startOffset":9048962,"endOffset":9048997,"count":0}],"isBlockCoverage":false},{"functionName":"getDecorators","ranges":[{"startOffset":9049018,"endOffset":9049037,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCompilerOptions","ranges":[{"startOffset":9049070,"endOffset":9049102,"count":10}],"isBlockCoverage":true},{"functionName":"getDefaultExportInfoWorker","ranges":[{"startOffset":9049136,"endOffset":9049168,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultFormatCodeSettings","ranges":[{"startOffset":9049204,"endOffset":9049238,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":9049267,"endOffset":9049294,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFilePath","ranges":[{"startOffset":9049323,"endOffset":9049350,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLikeExportInfo","ranges":[{"startOffset":9049382,"endOffset":9049412,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticText","ranges":[{"startOffset":9049437,"endOffset":9049460,"count":0}],"isBlockCoverage":false},{"functionName":"getDiagnosticsWithinSpan","ranges":[{"startOffset":9049492,"endOffset":9049522,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryPath","ranges":[{"startOffset":9049546,"endOffset":9049568,"count":10}],"isBlockCoverage":true},{"functionName":"getDirectoryToWatchFailedLookupLocation","ranges":[{"startOffset":9049615,"endOffset":9049660,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectoryToWatchFailedLookupLocationFromTypeRoot","ranges":[{"startOffset":9049719,"endOffset":9049776,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentPositionMapper","ranges":[{"startOffset":9049809,"endOffset":9049840,"count":0}],"isBlockCoverage":false},{"functionName":"getDocumentSpansEqualityComparer","ranges":[{"startOffset":9049880,"endOffset":9049918,"count":0}],"isBlockCoverage":false},{"functionName":"getESModuleInterop","ranges":[{"startOffset":9049944,"endOffset":9049968,"count":0}],"isBlockCoverage":false},{"functionName":"getEditsForFileRename","ranges":[{"startOffset":9049997,"endOffset":9050024,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveBaseTypeNode","ranges":[{"startOffset":9050056,"endOffset":9050086,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveConstraintOfTypeParameter","ranges":[{"startOffset":9050131,"endOffset":9050174,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveContainerForJSDocTemplateTag","ranges":[{"startOffset":9050222,"endOffset":9050268,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveImplementsTypeNodes","ranges":[{"startOffset":9050307,"endOffset":9050344,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveInitializer","ranges":[{"startOffset":9050375,"endOffset":9050404,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveJSDocHost","ranges":[{"startOffset":9050433,"endOffset":9050460,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlags","ranges":[{"startOffset":9050493,"endOffset":9050524,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsAlwaysIncludeJSDoc","ranges":[{"startOffset":9050575,"endOffset":9050624,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveModifierFlagsNoCache","ranges":[{"startOffset":9050664,"endOffset":9050702,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveReturnTypeNode","ranges":[{"startOffset":9050736,"endOffset":9050768,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveSetAccessorTypeAnnotationNode","ranges":[{"startOffset":9050817,"endOffset":9050864,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeAnnotationNode","ranges":[{"startOffset":9050902,"endOffset":9050938,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeParameterDeclarations","ranges":[{"startOffset":9050983,"endOffset":9051026,"count":0}],"isBlockCoverage":false},{"functionName":"getEffectiveTypeRoots","ranges":[{"startOffset":9051055,"endOffset":9051082,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessArgumentExpressionOrName","ranges":[{"startOffset":9051140,"endOffset":9051196,"count":0}],"isBlockCoverage":false},{"functionName":"getElementOrPropertyAccessName","ranges":[{"startOffset":9051234,"endOffset":9051270,"count":0}],"isBlockCoverage":false},{"functionName":"getElementsOfBindingOrAssignmentPattern","ranges":[{"startOffset":9051317,"endOffset":9051362,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitDeclarations","ranges":[{"startOffset":9051389,"endOffset":9051414,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitFlags","ranges":[{"startOffset":9051434,"endOffset":9051452,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitHelpers","ranges":[{"startOffset":9051474,"endOffset":9051494,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleDetectionKind","ranges":[{"startOffset":9051528,"endOffset":9051560,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleKind","ranges":[{"startOffset":9051585,"endOffset":9051608,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitModuleResolutionKind","ranges":[{"startOffset":9051643,"endOffset":9051676,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitScriptTarget","ranges":[{"startOffset":9051703,"endOffset":9051728,"count":10}],"isBlockCoverage":true},{"functionName":"getEmitStandardClassFields","ranges":[{"startOffset":9051762,"endOffset":9051794,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingBlockScopeContainer","ranges":[{"startOffset":9051833,"endOffset":9051870,"count":0}],"isBlockCoverage":false},{"functionName":"getEnclosingContainer","ranges":[{"startOffset":9051899,"endOffset":9051926,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSemanticClassifications","ranges":[{"startOffset":9051967,"endOffset":9052006,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedSyntacticClassifications","ranges":[{"startOffset":9052048,"endOffset":9052088,"count":0}],"isBlockCoverage":false},{"functionName":"getEndLinePosition","ranges":[{"startOffset":9052114,"endOffset":9052138,"count":0}],"isBlockCoverage":false},{"functionName":"getEntityNameFromTypeNode","ranges":[{"startOffset":9052171,"endOffset":9052202,"count":0}],"isBlockCoverage":false},{"functionName":"getEntrypointsFromPackageJsonInfo","ranges":[{"startOffset":9052243,"endOffset":9052282,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorCountForSummary","ranges":[{"startOffset":9052313,"endOffset":9052342,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSpanForNode","ranges":[{"startOffset":9052369,"endOffset":9052394,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSummaryText","ranges":[{"startOffset":9052421,"endOffset":9052446,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfIdentifierOrLiteral","ranges":[{"startOffset":9052489,"endOffset":9052530,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxAttributeName","ranges":[{"startOffset":9052570,"endOffset":9052608,"count":0}],"isBlockCoverage":false},{"functionName":"getEscapedTextOfJsxNamespacedName","ranges":[{"startOffset":9052649,"endOffset":9052688,"count":0}],"isBlockCoverage":false},{"functionName":"getExpandoInitializer","ranges":[{"startOffset":9052717,"endOffset":9052744,"count":0}],"isBlockCoverage":false},{"functionName":"getExportAssignmentExpression","ranges":[{"startOffset":9052781,"endOffset":9052816,"count":0}],"isBlockCoverage":false},{"functionName":"getExportInfoMap","ranges":[{"startOffset":9052840,"endOffset":9052862,"count":0}],"isBlockCoverage":false},{"functionName":"getExportNeedsImportStarHelper","ranges":[{"startOffset":9052900,"endOffset":9052936,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionAssociativity","ranges":[{"startOffset":9052970,"endOffset":9053002,"count":0}],"isBlockCoverage":false},{"functionName":"getExpressionPrecedence","ranges":[{"startOffset":9053033,"endOffset":9053062,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalHelpersModuleName","ranges":[{"startOffset":9053098,"endOffset":9053132,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleImportEqualsDeclarationExpression","ranges":[{"startOffset":9053190,"endOffset":9053246,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleName","ranges":[{"startOffset":9053275,"endOffset":9053302,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromDeclaration","ranges":[{"startOffset":9053346,"endOffset":9053388,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameFromPath","ranges":[{"startOffset":9053425,"endOffset":9053460,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleNameLiteral","ranges":[{"startOffset":9053496,"endOffset":9053530,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalModuleRequireArgument","ranges":[{"startOffset":9053570,"endOffset":9053608,"count":0}],"isBlockCoverage":false},{"functionName":"getFallbackOptions","ranges":[{"startOffset":9053634,"endOffset":9053658,"count":0}],"isBlockCoverage":false},{"functionName":"getFileEmitOutput","ranges":[{"startOffset":9053683,"endOffset":9053706,"count":0}],"isBlockCoverage":false},{"functionName":"getFileMatcherPatterns","ranges":[{"startOffset":9053736,"endOffset":9053764,"count":0}],"isBlockCoverage":false},{"functionName":"getFileNamesFromConfigSpecs","ranges":[{"startOffset":9053799,"endOffset":9053832,"count":0}],"isBlockCoverage":false},{"functionName":"getFileWatcherEventKind","ranges":[{"startOffset":9053863,"endOffset":9053892,"count":0}],"isBlockCoverage":false},{"functionName":"getFilesInErrorForSummary","ranges":[{"startOffset":9053925,"endOffset":9053956,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstConstructorWithBody","ranges":[{"startOffset":9053991,"endOffset":9054024,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIdentifier","ranges":[{"startOffset":9054050,"endOffset":9054074,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstNonSpaceCharacterPosition","ranges":[{"startOffset":9054115,"endOffset":9054154,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstProjectOutput","ranges":[{"startOffset":9054183,"endOffset":9054210,"count":0}],"isBlockCoverage":false},{"functionName":"getFixableErrorSpanExpression","ranges":[{"startOffset":9054247,"endOffset":9054282,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatCodeSettingsForWriting","ranges":[{"startOffset":9054321,"endOffset":9054358,"count":0}],"isBlockCoverage":false},{"functionName":"getFullWidth","ranges":[{"startOffset":9054378,"endOffset":9054396,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionFlags","ranges":[{"startOffset":9054420,"endOffset":9054442,"count":0}],"isBlockCoverage":false},{"functionName":"getHeritageClause","ranges":[{"startOffset":9054467,"endOffset":9054490,"count":0}],"isBlockCoverage":false},{"functionName":"getHostSignatureFromJSDoc","ranges":[{"startOffset":9054523,"endOffset":9054554,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierAutoGenerate","ranges":[{"startOffset":9054587,"endOffset":9054618,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierGeneratedImportReference","ranges":[{"startOffset":9054663,"endOffset":9054706,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifierTypeArguments","ranges":[{"startOffset":9054740,"endOffset":9054772,"count":0}],"isBlockCoverage":false},{"functionName":"getImmediatelyInvokedFunctionExpression","ranges":[{"startOffset":9054819,"endOffset":9054864,"count":0}],"isBlockCoverage":false},{"functionName":"getImpliedNodeFormatForFile","ranges":[{"startOffset":9054899,"endOffset":9054932,"count":10}],"isBlockCoverage":true},{"functionName":"getImpliedNodeFormatForFileWorker","ranges":[{"startOffset":9054973,"endOffset":9055012,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportDefaultHelper","ranges":[{"startOffset":9055053,"endOffset":9055092,"count":0}],"isBlockCoverage":false},{"functionName":"getImportNeedsImportStarHelper","ranges":[{"startOffset":9055130,"endOffset":9055166,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentSize","ranges":[{"startOffset":9055187,"endOffset":9055206,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentString","ranges":[{"startOffset":9055229,"endOffset":9055250,"count":0}],"isBlockCoverage":false},{"functionName":"getInferredLibraryNameResolveFrom","ranges":[{"startOffset":9055291,"endOffset":9055330,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializedVariables","ranges":[{"startOffset":9055361,"endOffset":9055390,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBinaryExpression","ranges":[{"startOffset":9055430,"endOffset":9055468,"count":0}],"isBlockCoverage":false},{"functionName":"getInitializerOfBindingOrAssignmentElement","ranges":[{"startOffset":9055518,"endOffset":9055566,"count":0}],"isBlockCoverage":false},{"functionName":"getInterfaceBaseTypeNodes","ranges":[{"startOffset":9055599,"endOffset":9055630,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalEmitFlags","ranges":[{"startOffset":9055658,"endOffset":9055684,"count":0}],"isBlockCoverage":false},{"functionName":"getInvokedExpression","ranges":[{"startOffset":9055712,"endOffset":9055738,"count":0}],"isBlockCoverage":false},{"functionName":"getIsolatedModules","ranges":[{"startOffset":9055764,"endOffset":9055788,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocAugmentsTag","ranges":[{"startOffset":9055815,"endOffset":9055840,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocClassTag","ranges":[{"startOffset":9055864,"endOffset":9055886,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentRanges","ranges":[{"startOffset":9055915,"endOffset":9055942,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocCommentsAndTags","ranges":[{"startOffset":9055973,"endOffset":9056002,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTag","ranges":[{"startOffset":9056031,"endOffset":9056058,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocDeprecatedTagNoCache","ranges":[{"startOffset":9056094,"endOffset":9056128,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocEnumTag","ranges":[{"startOffset":9056151,"endOffset":9056172,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocHost","ranges":[{"startOffset":9056192,"endOffset":9056210,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocImplementsTags","ranges":[{"startOffset":9056240,"endOffset":9056268,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverloadTags","ranges":[{"startOffset":9056296,"endOffset":9056322,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocOverrideTagNoCache","ranges":[{"startOffset":9056356,"endOffset":9056388,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTags","ranges":[{"startOffset":9056417,"endOffset":9056444,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocParameterTagsNoCache","ranges":[{"startOffset":9056480,"endOffset":9056514,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTag","ranges":[{"startOffset":9056540,"endOffset":9056564,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPrivateTagNoCache","ranges":[{"startOffset":9056597,"endOffset":9056628,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTag","ranges":[{"startOffset":9056656,"endOffset":9056682,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocProtectedTagNoCache","ranges":[{"startOffset":9056717,"endOffset":9056750,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTag","ranges":[{"startOffset":9056775,"endOffset":9056798,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocPublicTagNoCache","ranges":[{"startOffset":9056830,"endOffset":9056860,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTag","ranges":[{"startOffset":9056887,"endOffset":9056912,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReadonlyTagNoCache","ranges":[{"startOffset":9056946,"endOffset":9056978,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnTag","ranges":[{"startOffset":9057003,"endOffset":9057026,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocReturnType","ranges":[{"startOffset":9057052,"endOffset":9057076,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocRoot","ranges":[{"startOffset":9057096,"endOffset":9057114,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesExpressionType","ranges":[{"startOffset":9057153,"endOffset":9057190,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocSatisfiesTag","ranges":[{"startOffset":9057218,"endOffset":9057244,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTags","ranges":[{"startOffset":9057264,"endOffset":9057282,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTagsNoCache","ranges":[{"startOffset":9057309,"endOffset":9057334,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTemplateTag","ranges":[{"startOffset":9057361,"endOffset":9057386,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocThisTag","ranges":[{"startOffset":9057409,"endOffset":9057430,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocType","ranges":[{"startOffset":9057450,"endOffset":9057468,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAliasName","ranges":[{"startOffset":9057497,"endOffset":9057524,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeAssertionType","ranges":[{"startOffset":9057557,"endOffset":9057588,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterDeclarations","ranges":[{"startOffset":9057629,"endOffset":9057668,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTags","ranges":[{"startOffset":9057701,"endOffset":9057732,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeParameterTagsNoCache","ranges":[{"startOffset":9057772,"endOffset":9057810,"count":0}],"isBlockCoverage":false},{"functionName":"getJSDocTypeTag","ranges":[{"startOffset":9057833,"endOffset":9057854,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXImplicitImportBase","ranges":[{"startOffset":9057886,"endOffset":9057916,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXRuntimeImport","ranges":[{"startOffset":9057943,"endOffset":9057968,"count":0}],"isBlockCoverage":false},{"functionName":"getJSXTransformEnabled","ranges":[{"startOffset":9057998,"endOffset":9058026,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyForCompilerOptions","ranges":[{"startOffset":9058058,"endOffset":9058088,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguageVariant","ranges":[{"startOffset":9058114,"endOffset":9058138,"count":0}],"isBlockCoverage":false},{"functionName":"getLastChild","ranges":[{"startOffset":9058158,"endOffset":9058176,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRanges","ranges":[{"startOffset":9058207,"endOffset":9058236,"count":0}],"isBlockCoverage":false},{"functionName":"getLeadingCommentRangesOfNode","ranges":[{"startOffset":9058273,"endOffset":9058308,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostAccessExpression","ranges":[{"startOffset":9058343,"endOffset":9058376,"count":0}],"isBlockCoverage":false},{"functionName":"getLeftmostExpression","ranges":[{"startOffset":9058405,"endOffset":9058432,"count":0}],"isBlockCoverage":false},{"functionName":"getLibraryNameFromLibFileName","ranges":[{"startOffset":9058469,"endOffset":9058504,"count":0}],"isBlockCoverage":false},{"functionName":"getLineAndCharacterOfPosition","ranges":[{"startOffset":9058541,"endOffset":9058576,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":9058595,"endOffset":9058612,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPosition","ranges":[{"startOffset":9058642,"endOffset":9058670,"count":0}],"isBlockCoverage":false},{"functionName":"getLineOfLocalPositionFromLineMap","ranges":[{"startOffset":9058711,"endOffset":9058750,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStartPositionForPosition","ranges":[{"startOffset":9058789,"endOffset":9058826,"count":0}],"isBlockCoverage":false},{"functionName":"getLineStarts","ranges":[{"startOffset":9058847,"endOffset":9058866,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndNextNonWhitespaceCharacter","ranges":[{"startOffset":9058926,"endOffset":9058984,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter","ranges":[{"startOffset":9059049,"endOffset":9059112,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenPositions","ranges":[{"startOffset":9059144,"endOffset":9059174,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndAndRangeStart","ranges":[{"startOffset":9059218,"endOffset":9059260,"count":0}],"isBlockCoverage":false},{"functionName":"getLinesBetweenRangeEndPositions","ranges":[{"startOffset":9059300,"endOffset":9059338,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteralText","ranges":[{"startOffset":9059360,"endOffset":9059380,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalNameForExternalImport","ranges":[{"startOffset":9059417,"endOffset":9059452,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalSymbolForExportDefault","ranges":[{"startOffset":9059490,"endOffset":9059526,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleSpecificMessage","ranges":[{"startOffset":9059558,"endOffset":9059588,"count":0}],"isBlockCoverage":false},{"functionName":"getLocaleTimeString","ranges":[{"startOffset":9059615,"endOffset":9059640,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedContextSpan","ranges":[{"startOffset":9059668,"endOffset":9059694,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedDocumentSpan","ranges":[{"startOffset":9059723,"endOffset":9059750,"count":0}],"isBlockCoverage":false},{"functionName":"getMappedLocation","ranges":[{"startOffset":9059775,"endOffset":9059798,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedFileSpec","ranges":[{"startOffset":9059824,"endOffset":9059848,"count":0}],"isBlockCoverage":false},{"functionName":"getMatchedIncludeSpec","ranges":[{"startOffset":9059877,"endOffset":9059904,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromDeclaration","ranges":[{"startOffset":9059937,"endOffset":9059968,"count":0}],"isBlockCoverage":false},{"functionName":"getMeaningFromLocation","ranges":[{"startOffset":9059998,"endOffset":9060026,"count":0}],"isBlockCoverage":false},{"functionName":"getMembersOfDeclaration","ranges":[{"startOffset":9060057,"endOffset":9060086,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForFileReference","ranges":[{"startOffset":9060117,"endOffset":9060146,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForResolutionAtIndex","ranges":[{"startOffset":9060181,"endOffset":9060214,"count":0}],"isBlockCoverage":false},{"functionName":"getModeForUsageLocation","ranges":[{"startOffset":9060245,"endOffset":9060274,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiedTime","ranges":[{"startOffset":9060297,"endOffset":9060318,"count":0}],"isBlockCoverage":false},{"functionName":"getModifiers","ranges":[{"startOffset":9060338,"endOffset":9060356,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleInstanceState","ranges":[{"startOffset":9060386,"endOffset":9060414,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleNameStringLiteralAt","ranges":[{"startOffset":9060450,"endOffset":9060484,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierEndingPreference","ranges":[{"startOffset":9060526,"endOffset":9060566,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleSpecifierResolverHost","ranges":[{"startOffset":9060604,"endOffset":9060640,"count":0}],"isBlockCoverage":false},{"functionName":"getNameForExportedSymbol","ranges":[{"startOffset":9060672,"endOffset":9060702,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromImportAttribute","ranges":[{"startOffset":9060736,"endOffset":9060768,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromIndexInfo","ranges":[{"startOffset":9060796,"endOffset":9060822,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromPropertyName","ranges":[{"startOffset":9060853,"endOffset":9060882,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfAccessExpression","ranges":[{"startOffset":9060915,"endOffset":9060946,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfCompilerOptionValue","ranges":[{"startOffset":9060982,"endOffset":9061016,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfDeclaration","ranges":[{"startOffset":9061044,"endOffset":9061070,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfExpando","ranges":[{"startOffset":9061094,"endOffset":9061116,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOfJSDocTypedef","ranges":[{"startOffset":9061145,"endOffset":9061172,"count":0}],"isBlockCoverage":false},{"functionName":"getNameOrArgument","ranges":[{"startOffset":9061197,"endOffset":9061220,"count":0}],"isBlockCoverage":false},{"functionName":"getNameTable","ranges":[{"startOffset":9061240,"endOffset":9061258,"count":0}],"isBlockCoverage":false},{"functionName":"getNamesForExportedSymbol","ranges":[{"startOffset":9061291,"endOffset":9061322,"count":0}],"isBlockCoverage":false},{"functionName":"getNamespaceDeclarationNode","ranges":[{"startOffset":9061357,"endOffset":9061390,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineCharacter","ranges":[{"startOffset":9061417,"endOffset":9061442,"count":10}],"isBlockCoverage":true},{"functionName":"getNewLineKind","ranges":[{"startOffset":9061464,"endOffset":9061484,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLineOrDefaultFromHost","ranges":[{"startOffset":9061519,"endOffset":9061552,"count":0}],"isBlockCoverage":false},{"functionName":"getNewTargetContainer","ranges":[{"startOffset":9061581,"endOffset":9061608,"count":0}],"isBlockCoverage":false},{"functionName":"getNextJSDocCommentLocation","ranges":[{"startOffset":9061643,"endOffset":9061676,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeForGeneratedName","ranges":[{"startOffset":9061707,"endOffset":9061736,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeId","ranges":[{"startOffset":9061753,"endOffset":9061768,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeKind","ranges":[{"startOffset":9061787,"endOffset":9061804,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModifiers","ranges":[{"startOffset":9061828,"endOffset":9061850,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeModulePathParts","ranges":[{"startOffset":9061880,"endOffset":9061908,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignedNameOfDeclaration","ranges":[{"startOffset":9061947,"endOffset":9061984,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAssignmentOperatorForCompoundAssignment","ranges":[{"startOffset":9062037,"endOffset":9062088,"count":0}],"isBlockCoverage":false},{"functionName":"getNonAugmentationDeclaration","ranges":[{"startOffset":9062125,"endOffset":9062160,"count":0}],"isBlockCoverage":false},{"functionName":"getNonDecoratorTokenPosOfNode","ranges":[{"startOffset":9062197,"endOffset":9062232,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":9062265,"endOffset":9062296,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePathWithoutRoot","ranges":[{"startOffset":9062340,"endOffset":9062382,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":9062417,"endOffset":9062450,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectFlags","ranges":[{"startOffset":9062472,"endOffset":9062492,"count":0}],"isBlockCoverage":false},{"functionName":"getOperator","ranges":[{"startOffset":9062511,"endOffset":9062528,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorAssociativity","ranges":[{"startOffset":9062560,"endOffset":9062590,"count":0}],"isBlockCoverage":false},{"functionName":"getOperatorPrecedence","ranges":[{"startOffset":9062619,"endOffset":9062646,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionFromName","ranges":[{"startOffset":9062671,"endOffset":9062694,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsForLibraryResolution","ranges":[{"startOffset":9062732,"endOffset":9062768,"count":0}],"isBlockCoverage":false},{"functionName":"getOptionsNameMap","ranges":[{"startOffset":9062793,"endOffset":9062816,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateEmitNode","ranges":[{"startOffset":9062843,"endOffset":9062868,"count":0}],"isBlockCoverage":false},{"functionName":"getOrCreateExternalHelpersModuleNameIfNeeded","ranges":[{"startOffset":9062920,"endOffset":9062970,"count":0}],"isBlockCoverage":false},{"functionName":"getOrUpdate","ranges":[{"startOffset":9062989,"endOffset":9063006,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNode","ranges":[{"startOffset":9063029,"endOffset":9063050,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalNodeId","ranges":[{"startOffset":9063075,"endOffset":9063098,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalSourceFile","ranges":[{"startOffset":9063127,"endOffset":9063154,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileName","ranges":[{"startOffset":9063190,"endOffset":9063224,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputDeclarationFileNameWorker","ranges":[{"startOffset":9063266,"endOffset":9063306,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputExtension","ranges":[{"startOffset":9063332,"endOffset":9063356,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputFileNames","ranges":[{"startOffset":9063382,"endOffset":9063406,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputJSFileNameWorker","ranges":[{"startOffset":9063439,"endOffset":9063470,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsFor","ranges":[{"startOffset":9063495,"endOffset":9063518,"count":0}],"isBlockCoverage":false},{"functionName":"getOutputPathsForBundle","ranges":[{"startOffset":9063549,"endOffset":9063578,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnEmitOutputFilePath","ranges":[{"startOffset":9063610,"endOffset":9063640,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnKeys","ranges":[{"startOffset":9063658,"endOffset":9063674,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnValues","ranges":[{"startOffset":9063694,"endOffset":9063712,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonInfo","ranges":[{"startOffset":9063738,"endOffset":9063762,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonTypesVersionsPaths","ranges":[{"startOffset":9063802,"endOffset":9063840,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageJsonsVisibleToFile","ranges":[{"startOffset":9063876,"endOffset":9063910,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageNameFromTypesPackageName","ranges":[{"startOffset":9063952,"endOffset":9063992,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeForPath","ranges":[{"startOffset":9064022,"endOffset":9064050,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterSymbolFromJSDoc","ranges":[{"startOffset":9064085,"endOffset":9064118,"count":0}],"isBlockCoverage":false},{"functionName":"getParameterTypeNode","ranges":[{"startOffset":9064146,"endOffset":9064172,"count":0}],"isBlockCoverage":false},{"functionName":"getParentNodeInSpan","ranges":[{"startOffset":9064199,"endOffset":9064224,"count":0}],"isBlockCoverage":false},{"functionName":"getParseTreeNode","ranges":[{"startOffset":9064248,"endOffset":9064270,"count":0}],"isBlockCoverage":false},{"functionName":"getParsedCommandLineOfConfigFile","ranges":[{"startOffset":9064310,"endOffset":9064348,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":9064373,"endOffset":9064396,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponentsRelativeTo","ranges":[{"startOffset":9064431,"endOffset":9064464,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromPathComponents","ranges":[{"startOffset":9064497,"endOffset":9064528,"count":0}],"isBlockCoverage":false},{"functionName":"getPathUpdater","ranges":[{"startOffset":9064550,"endOffset":9064570,"count":0}],"isBlockCoverage":false},{"functionName":"getPathsBasePath","ranges":[{"startOffset":9064594,"endOffset":9064616,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":9064642,"endOffset":9064666,"count":0}],"isBlockCoverage":false},{"functionName":"getPendingEmitKind","ranges":[{"startOffset":9064692,"endOffset":9064716,"count":0}],"isBlockCoverage":false},{"functionName":"getPositionOfLineAndCharacter","ranges":[{"startOffset":9064753,"endOffset":9064788,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleGenericSignatures","ranges":[{"startOffset":9064824,"endOffset":9064858,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleOriginalInputExtensionForExtension","ranges":[{"startOffset":9064911,"endOffset":9064962,"count":0}],"isBlockCoverage":false},{"functionName":"getPossibleTypeArgumentsInfo","ranges":[{"startOffset":9064998,"endOffset":9065032,"count":0}],"isBlockCoverage":false},{"functionName":"getPreEmitDiagnostics","ranges":[{"startOffset":9065061,"endOffset":9065088,"count":0}],"isBlockCoverage":false},{"functionName":"getPrecedingNonSpaceCharacterPosition","ranges":[{"startOffset":9065133,"endOffset":9065176,"count":0}],"isBlockCoverage":false},{"functionName":"getPrivateIdentifier","ranges":[{"startOffset":9065204,"endOffset":9065230,"count":0}],"isBlockCoverage":false},{"functionName":"getProperties","ranges":[{"startOffset":9065251,"endOffset":9065270,"count":0}],"isBlockCoverage":false},{"functionName":"getProperty","ranges":[{"startOffset":9065289,"endOffset":9065306,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyArrayElementValue","ranges":[{"startOffset":9065342,"endOffset":9065376,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyAssignmentAliasLikeExpression","ranges":[{"startOffset":9065424,"endOffset":9065470,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForPropertyNameNode","ranges":[{"startOffset":9065512,"endOffset":9065552,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameForUniqueESSymbol","ranges":[{"startOffset":9065592,"endOffset":9065630,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameFromType","ranges":[{"startOffset":9065661,"endOffset":9065690,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":9065741,"endOffset":9065790,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolFromBindingElement","ranges":[{"startOffset":9065833,"endOffset":9065874,"count":0}],"isBlockCoverage":false},{"functionName":"getPropertySymbolsFromContextualType","ranges":[{"startOffset":9065918,"endOffset":9065960,"count":0}],"isBlockCoverage":false},{"functionName":"getQuoteFromPreference","ranges":[{"startOffset":9065990,"endOffset":9066018,"count":0}],"isBlockCoverage":false},{"functionName":"getQuotePreference","ranges":[{"startOffset":9066044,"endOffset":9066068,"count":0}],"isBlockCoverage":false},{"functionName":"getRangesWhere","ranges":[{"startOffset":9066090,"endOffset":9066110,"count":0}],"isBlockCoverage":false},{"functionName":"getRefactorContextSpan","ranges":[{"startOffset":9066140,"endOffset":9066168,"count":0}],"isBlockCoverage":false},{"functionName":"getReferencedFileLocation","ranges":[{"startOffset":9066201,"endOffset":9066232,"count":0}],"isBlockCoverage":false},{"functionName":"getRegexFromPattern","ranges":[{"startOffset":9066259,"endOffset":9066284,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionForWildcard","ranges":[{"startOffset":9066323,"endOffset":9066360,"count":0}],"isBlockCoverage":false},{"functionName":"getRegularExpressionsForWildcards","ranges":[{"startOffset":9066401,"endOffset":9066440,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromDirectory","ranges":[{"startOffset":9066476,"endOffset":9066510,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathFromFile","ranges":[{"startOffset":9066541,"endOffset":9066570,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativePathToDirectoryOrUrl","ranges":[{"startOffset":9066609,"endOffset":9066646,"count":0}],"isBlockCoverage":false},{"functionName":"getRenameLocation","ranges":[{"startOffset":9066671,"endOffset":9066694,"count":0}],"isBlockCoverage":false},{"functionName":"getReplacementSpanForContextToken","ranges":[{"startOffset":9066735,"endOffset":9066774,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionDiagnostic","ranges":[{"startOffset":9066805,"endOffset":9066834,"count":0}],"isBlockCoverage":false},{"functionName":"getResolutionModeOverride","ranges":[{"startOffset":9066867,"endOffset":9066898,"count":0}],"isBlockCoverage":false},{"functionName":"getResolveJsonModule","ranges":[{"startOffset":9066926,"endOffset":9066952,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonExports","ranges":[{"startOffset":9066988,"endOffset":9067022,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvePackageJsonImports","ranges":[{"startOffset":9067058,"endOffset":9067092,"count":0}],"isBlockCoverage":false},{"functionName":"getResolvedExternalModuleName","ranges":[{"startOffset":9067129,"endOffset":9067164,"count":0}],"isBlockCoverage":false},{"functionName":"getRestIndicatorOfBindingOrAssignmentElement","ranges":[{"startOffset":9067216,"endOffset":9067266,"count":0}],"isBlockCoverage":false},{"functionName":"getRestParameterElementType","ranges":[{"startOffset":9067301,"endOffset":9067334,"count":0}],"isBlockCoverage":false},{"functionName":"getRightMostAssignedExpression","ranges":[{"startOffset":9067372,"endOffset":9067408,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDeclaration","ranges":[{"startOffset":9067434,"endOffset":9067458,"count":0}],"isBlockCoverage":false},{"functionName":"getRootDirectoryOfResolutionCache","ranges":[{"startOffset":9067499,"endOffset":9067538,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":9067559,"endOffset":9067578,"count":0}],"isBlockCoverage":false},{"functionName":"getRootPathSplitLength","ranges":[{"startOffset":9067608,"endOffset":9067636,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKind","ranges":[{"startOffset":9067657,"endOffset":9067676,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptKindFromFileName","ranges":[{"startOffset":9067709,"endOffset":9067740,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptTargetFeatures","ranges":[{"startOffset":9067771,"endOffset":9067800,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedEffectiveModifierFlags","ranges":[{"startOffset":9067841,"endOffset":9067880,"count":0}],"isBlockCoverage":false},{"functionName":"getSelectedSyntacticModifierFlags","ranges":[{"startOffset":9067921,"endOffset":9067960,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticClassifications","ranges":[{"startOffset":9067994,"endOffset":9068026,"count":0}],"isBlockCoverage":false},{"functionName":"getSemanticJsxChildren","ranges":[{"startOffset":9068056,"endOffset":9068084,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorTypeAnnotationNode","ranges":[{"startOffset":9068124,"endOffset":9068162,"count":0}],"isBlockCoverage":false},{"functionName":"getSetAccessorValueParameter","ranges":[{"startOffset":9068198,"endOffset":9068232,"count":0}],"isBlockCoverage":false},{"functionName":"getSetExternalModuleIndicator","ranges":[{"startOffset":9068269,"endOffset":9068304,"count":10}],"isBlockCoverage":true},{"functionName":"getShebang","ranges":[{"startOffset":9068322,"endOffset":9068338,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleInitializerOfVariableStatementOrPropertyDeclaration","ranges":[{"startOffset":9068406,"endOffset":9068472,"count":0}],"isBlockCoverage":false},{"functionName":"getSingleVariableOfVariableStatement","ranges":[{"startOffset":9068516,"endOffset":9068558,"count":0}],"isBlockCoverage":false},{"functionName":"getSnapshotText","ranges":[{"startOffset":9068581,"endOffset":9068602,"count":0}],"isBlockCoverage":false},{"functionName":"getSnippetElement","ranges":[{"startOffset":9068627,"endOffset":9068650,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfModule","ranges":[{"startOffset":9068679,"endOffset":9068706,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileOfNode","ranges":[{"startOffset":9068733,"endOffset":9068758,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDir","ranges":[{"startOffset":9068791,"endOffset":9068822,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilePathInNewDirWorker","ranges":[{"startOffset":9068861,"endOffset":9068898,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFileVersionAsHashFromText","ranges":[{"startOffset":9068940,"endOffset":9068980,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceFilesToEmit","ranges":[{"startOffset":9069008,"endOffset":9069034,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapRange","ranges":[{"startOffset":9069059,"endOffset":9069082,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapper","ranges":[{"startOffset":9069105,"endOffset":9069126,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceTextOfNodeFromSourceFile","ranges":[{"startOffset":9069167,"endOffset":9069206,"count":0}],"isBlockCoverage":false},{"functionName":"getSpanOfTokenAtPosition","ranges":[{"startOffset":9069238,"endOffset":9069268,"count":0}],"isBlockCoverage":false},{"functionName":"getSpellingSuggestion","ranges":[{"startOffset":9069297,"endOffset":9069324,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfLine","ranges":[{"startOffset":9069354,"endOffset":9069382,"count":0}],"isBlockCoverage":false},{"functionName":"getStartPositionOfRange","ranges":[{"startOffset":9069413,"endOffset":9069442,"count":0}],"isBlockCoverage":false},{"functionName":"getStartsOnNewLine","ranges":[{"startOffset":9069468,"endOffset":9069492,"count":0}],"isBlockCoverage":false},{"functionName":"getStaticPropertiesAndClassStaticBlock","ranges":[{"startOffset":9069538,"endOffset":9069582,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptionValue","ranges":[{"startOffset":9069610,"endOffset":9069636,"count":0}],"isBlockCoverage":false},{"functionName":"getStringComparer","ranges":[{"startOffset":9069661,"endOffset":9069684,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":9069713,"endOffset":9069740,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperCallFromStatement","ranges":[{"startOffset":9069773,"endOffset":9069804,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperContainer","ranges":[{"startOffset":9069829,"endOffset":9069852,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedCodeFixes","ranges":[{"startOffset":9069881,"endOffset":9069908,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensions","ranges":[{"startOffset":9069938,"endOffset":9069966,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportedExtensionsWithJsonIfResolveJsonModule","ranges":[{"startOffset":9070023,"endOffset":9070078,"count":0}],"isBlockCoverage":false},{"functionName":"getSwitchedType","ranges":[{"startOffset":9070101,"endOffset":9070122,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolId","ranges":[{"startOffset":9070141,"endOffset":9070158,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolNameForPrivateIdentifier","ranges":[{"startOffset":9070199,"endOffset":9070238,"count":0}],"isBlockCoverage":false},{"functionName":"getSymbolTarget","ranges":[{"startOffset":9070261,"endOffset":9070282,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticClassifications","ranges":[{"startOffset":9070317,"endOffset":9070350,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlags","ranges":[{"startOffset":9070383,"endOffset":9070414,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntacticModifierFlagsNoCache","ranges":[{"startOffset":9070454,"endOffset":9070492,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClone","ranges":[{"startOffset":9070523,"endOffset":9070552,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepCloneWithReplacements","ranges":[{"startOffset":9070599,"endOffset":9070644,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClones","ranges":[{"startOffset":9070676,"endOffset":9070706,"count":0}],"isBlockCoverage":false},{"functionName":"getSynthesizedDeepClonesWithReplacements","ranges":[{"startOffset":9070754,"endOffset":9070800,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticLeadingComments","ranges":[{"startOffset":9070835,"endOffset":9070868,"count":0}],"isBlockCoverage":false},{"functionName":"getSyntheticTrailingComments","ranges":[{"startOffset":9070904,"endOffset":9070938,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetLabel","ranges":[{"startOffset":9070960,"endOffset":9070980,"count":0}],"isBlockCoverage":false},{"functionName":"getTargetOfBindingOrAssignmentElement","ranges":[{"startOffset":9071025,"endOffset":9071068,"count":0}],"isBlockCoverage":false},{"functionName":"getTemporaryModuleResolutionState","ranges":[{"startOffset":9071109,"endOffset":9071148,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfConstantValue","ranges":[{"startOffset":9071178,"endOffset":9071206,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfIdentifierOrLiteral","ranges":[{"startOffset":9071242,"endOffset":9071276,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJSDocComment","ranges":[{"startOffset":9071305,"endOffset":9071332,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxAttributeName","ranges":[{"startOffset":9071365,"endOffset":9071396,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfJsxNamespacedName","ranges":[{"startOffset":9071430,"endOffset":9071462,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNode","ranges":[{"startOffset":9071483,"endOffset":9071502,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfNodeFromSourceText","ranges":[{"startOffset":9071537,"endOffset":9071570,"count":0}],"isBlockCoverage":false},{"functionName":"getTextOfPropertyName","ranges":[{"startOffset":9071599,"endOffset":9071626,"count":0}],"isBlockCoverage":false},{"functionName":"getThisContainer","ranges":[{"startOffset":9071650,"endOffset":9071672,"count":0}],"isBlockCoverage":false},{"functionName":"getThisParameter","ranges":[{"startOffset":9071696,"endOffset":9071718,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":9071744,"endOffset":9071768,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenPosOfNode","ranges":[{"startOffset":9071793,"endOffset":9071816,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenSourceMapRange","ranges":[{"startOffset":9071846,"endOffset":9071874,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingPropertyName","ranges":[{"startOffset":9071905,"endOffset":9071934,"count":0}],"isBlockCoverage":false},{"functionName":"getTouchingToken","ranges":[{"startOffset":9071958,"endOffset":9071980,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingCommentRanges","ranges":[{"startOffset":9072012,"endOffset":9072042,"count":0}],"isBlockCoverage":false},{"functionName":"getTrailingSemicolonDeferringWriter","ranges":[{"startOffset":9072085,"endOffset":9072126,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformFlagsSubtreeExclusions","ranges":[{"startOffset":9072168,"endOffset":9072208,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformers","ranges":[{"startOffset":9072231,"endOffset":9072252,"count":0}],"isBlockCoverage":false},{"functionName":"getTsBuildInfoEmitOutputFilePath","ranges":[{"startOffset":9072292,"endOffset":9072330,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigObjectLiteralExpression","ranges":[{"startOffset":9072372,"endOffset":9072412,"count":0}],"isBlockCoverage":false},{"functionName":"getTsConfigPropArrayElementValue","ranges":[{"startOffset":9072452,"endOffset":9072490,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationNode","ranges":[{"startOffset":9072519,"endOffset":9072546,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeArgumentOrTypeParameterList","ranges":[{"startOffset":9072588,"endOffset":9072628,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeKeywordOfTypeOnlyImport","ranges":[{"startOffset":9072666,"endOffset":9072702,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNode","ranges":[{"startOffset":9072721,"endOffset":9072738,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeNodeIfAccessible","ranges":[{"startOffset":9072769,"endOffset":9072798,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterFromJsDoc","ranges":[{"startOffset":9072831,"endOffset":9072862,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeParameterOwner","ranges":[{"startOffset":9072891,"endOffset":9072918,"count":0}],"isBlockCoverage":false},{"functionName":"getTypesPackageName","ranges":[{"startOffset":9072945,"endOffset":9072970,"count":0}],"isBlockCoverage":false},{"functionName":"getUILocale","ranges":[{"startOffset":9072989,"endOffset":9073006,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueName","ranges":[{"startOffset":9073027,"endOffset":9073046,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueSymbolId","ranges":[{"startOffset":9073071,"endOffset":9073094,"count":0}],"isBlockCoverage":false},{"functionName":"getUseDefineForClassFields","ranges":[{"startOffset":9073128,"endOffset":9073160,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchErrorSummaryDiagnosticMessage","ranges":[{"startOffset":9073205,"endOffset":9073248,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchFactory","ranges":[{"startOffset":9073271,"endOffset":9073292,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":9073305,"endOffset":9073316,"count":0}],"isBlockCoverage":false},{"functionName":"groupBy","ranges":[{"startOffset":9073331,"endOffset":9073344,"count":0}],"isBlockCoverage":false},{"functionName":"guessIndentation","ranges":[{"startOffset":9073368,"endOffset":9073390,"count":0}],"isBlockCoverage":false},{"functionName":"handleNoEmitOptions","ranges":[{"startOffset":9073417,"endOffset":9073442,"count":0}],"isBlockCoverage":false},{"functionName":"hasAbstractModifier","ranges":[{"startOffset":9073469,"endOffset":9073494,"count":0}],"isBlockCoverage":false},{"functionName":"hasAccessorModifier","ranges":[{"startOffset":9073521,"endOffset":9073546,"count":0}],"isBlockCoverage":false},{"functionName":"hasAmbientModifier","ranges":[{"startOffset":9073572,"endOffset":9073596,"count":0}],"isBlockCoverage":false},{"functionName":"hasChangesInResolutions","ranges":[{"startOffset":9073627,"endOffset":9073656,"count":0}],"isBlockCoverage":false},{"functionName":"hasChildOfKind","ranges":[{"startOffset":9073678,"endOffset":9073698,"count":0}],"isBlockCoverage":false},{"functionName":"hasContextSensitiveParameters","ranges":[{"startOffset":9073735,"endOffset":9073770,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":9073791,"endOffset":9073810,"count":0}],"isBlockCoverage":false},{"functionName":"hasDocComment","ranges":[{"startOffset":9073831,"endOffset":9073850,"count":0}],"isBlockCoverage":false},{"functionName":"hasDynamicName","ranges":[{"startOffset":9073872,"endOffset":9073892,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifier","ranges":[{"startOffset":9073920,"endOffset":9073946,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveModifiers","ranges":[{"startOffset":9073975,"endOffset":9074002,"count":0}],"isBlockCoverage":false},{"functionName":"hasEffectiveReadonlyModifier","ranges":[{"startOffset":9074038,"endOffset":9074072,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":9074092,"endOffset":9074110,"count":0}],"isBlockCoverage":false},{"functionName":"hasIndexSignature","ranges":[{"startOffset":9074135,"endOffset":9074158,"count":0}],"isBlockCoverage":false},{"functionName":"hasInitializer","ranges":[{"startOffset":9074180,"endOffset":9074200,"count":0}],"isBlockCoverage":false},{"functionName":"hasInvalidEscape","ranges":[{"startOffset":9074224,"endOffset":9074246,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocNodes","ranges":[{"startOffset":9074267,"endOffset":9074286,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSDocParameterTags","ranges":[{"startOffset":9074315,"endOffset":9074342,"count":0}],"isBlockCoverage":false},{"functionName":"hasJSFileExtension","ranges":[{"startOffset":9074368,"endOffset":9074392,"count":0}],"isBlockCoverage":false},{"functionName":"hasJsonModuleEmitEnabled","ranges":[{"startOffset":9074424,"endOffset":9074454,"count":0}],"isBlockCoverage":false},{"functionName":"hasOnlyExpressionInitializer","ranges":[{"startOffset":9074490,"endOffset":9074524,"count":0}],"isBlockCoverage":false},{"functionName":"hasOverrideModifier","ranges":[{"startOffset":9074551,"endOffset":9074576,"count":0}],"isBlockCoverage":false},{"functionName":"hasPossibleExternalModuleReference","ranges":[{"startOffset":9074618,"endOffset":9074658,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":9074677,"endOffset":9074694,"count":10}],"isBlockCoverage":true},{"functionName":"hasPropertyAccessExpressionWithName","ranges":[{"startOffset":9074737,"endOffset":9074778,"count":0}],"isBlockCoverage":false},{"functionName":"hasQuestionToken","ranges":[{"startOffset":9074802,"endOffset":9074824,"count":0}],"isBlockCoverage":false},{"functionName":"hasRecordedExternalHelpers","ranges":[{"startOffset":9074858,"endOffset":9074890,"count":0}],"isBlockCoverage":false},{"functionName":"hasResolutionModeOverride","ranges":[{"startOffset":9074923,"endOffset":9074954,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestParameter","ranges":[{"startOffset":9074978,"endOffset":9075000,"count":0}],"isBlockCoverage":false},{"functionName":"hasScopeMarker","ranges":[{"startOffset":9075022,"endOffset":9075042,"count":0}],"isBlockCoverage":false},{"functionName":"hasStaticModifier","ranges":[{"startOffset":9075067,"endOffset":9075090,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifier","ranges":[{"startOffset":9075118,"endOffset":9075144,"count":0}],"isBlockCoverage":false},{"functionName":"hasSyntacticModifiers","ranges":[{"startOffset":9075173,"endOffset":9075200,"count":0}],"isBlockCoverage":false},{"functionName":"hasTSFileExtension","ranges":[{"startOffset":9075226,"endOffset":9075250,"count":0}],"isBlockCoverage":false},{"functionName":"hasTabstop","ranges":[{"startOffset":9075268,"endOffset":9075284,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":9075321,"endOffset":9075356,"count":0}],"isBlockCoverage":false},{"functionName":"hasType","ranges":[{"startOffset":9075371,"endOffset":9075384,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeArguments","ranges":[{"startOffset":9075408,"endOffset":9075430,"count":0}],"isBlockCoverage":false},{"functionName":"hasZeroOrOneAsteriskCharacter","ranges":[{"startOffset":9075467,"endOffset":9075502,"count":0}],"isBlockCoverage":false},{"functionName":"helperString","ranges":[{"startOffset":9075522,"endOffset":9075540,"count":0}],"isBlockCoverage":false},{"functionName":"hostGetCanonicalFileName","ranges":[{"startOffset":9075572,"endOffset":9075602,"count":0}],"isBlockCoverage":false},{"functionName":"hostUsesCaseSensitiveFileNames","ranges":[{"startOffset":9075640,"endOffset":9075676,"count":0}],"isBlockCoverage":false},{"functionName":"idText","ranges":[{"startOffset":9075690,"endOffset":9075702,"count":0}],"isBlockCoverage":false},{"functionName":"identifierIsThisKeyword","ranges":[{"startOffset":9075733,"endOffset":9075762,"count":0}],"isBlockCoverage":false},{"functionName":"identifierToKeywordKind","ranges":[{"startOffset":9075793,"endOffset":9075822,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":9075838,"endOffset":9075852,"count":0}],"isBlockCoverage":false},{"functionName":"identitySourceMapConsumer","ranges":[{"startOffset":9075885,"endOffset":9075916,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreSourceNewlines","ranges":[{"startOffset":9075944,"endOffset":9075970,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPaths","ranges":[{"startOffset":9075990,"endOffset":9076008,"count":0}],"isBlockCoverage":false},{"functionName":"importDefaultHelper","ranges":[{"startOffset":9076035,"endOffset":9076060,"count":0}],"isBlockCoverage":false},{"functionName":"importFromModuleSpecifier","ranges":[{"startOffset":9076093,"endOffset":9076124,"count":0}],"isBlockCoverage":false},{"functionName":"importNameElisionDisabled","ranges":[{"startOffset":9076157,"endOffset":9076188,"count":0}],"isBlockCoverage":false},{"functionName":"importStarHelper","ranges":[{"startOffset":9076212,"endOffset":9076234,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfAnyCharCode","ranges":[{"startOffset":9076260,"endOffset":9076284,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfNode","ranges":[{"startOffset":9076303,"endOffset":9076320,"count":0}],"isBlockCoverage":false},{"functionName":"indicesOf","ranges":[{"startOffset":9076337,"endOffset":9076352,"count":0}],"isBlockCoverage":false},{"functionName":"inferredTypesContainingFile","ranges":[{"startOffset":9076387,"endOffset":9076420,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassNamedEvaluationHelperBlockIfMissing","ranges":[{"startOffset":9076474,"endOffset":9076526,"count":0}],"isBlockCoverage":false},{"functionName":"injectClassThisAssignmentIfMissing","ranges":[{"startOffset":9076568,"endOffset":9076608,"count":0}],"isBlockCoverage":false},{"functionName":"insertImports","ranges":[{"startOffset":9076629,"endOffset":9076648,"count":0}],"isBlockCoverage":false},{"functionName":"insertLeadingStatement","ranges":[{"startOffset":9076678,"endOffset":9076706,"count":0}],"isBlockCoverage":false},{"functionName":"insertSorted","ranges":[{"startOffset":9076726,"endOffset":9076744,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterCustomPrologue","ranges":[{"startOffset":9076786,"endOffset":9076826,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementAfterStandardPrologue","ranges":[{"startOffset":9076870,"endOffset":9076912,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterCustomPrologue","ranges":[{"startOffset":9076955,"endOffset":9076996,"count":0}],"isBlockCoverage":false},{"functionName":"insertStatementsAfterStandardPrologue","ranges":[{"startOffset":9077041,"endOffset":9077084,"count":0}],"isBlockCoverage":false},{"functionName":"intersperse","ranges":[{"startOffset":9077103,"endOffset":9077120,"count":0}],"isBlockCoverage":false},{"functionName":"intrinsicTagNameToString","ranges":[{"startOffset":9077152,"endOffset":9077182,"count":0}],"isBlockCoverage":false},{"functionName":"introducesArgumentsExoticObject","ranges":[{"startOffset":9077221,"endOffset":9077258,"count":0}],"isBlockCoverage":false},{"functionName":"inverseJsxOptionMap","ranges":[{"startOffset":9077285,"endOffset":9077310,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractConstructorSymbol","ranges":[{"startOffset":9077345,"endOffset":9077378,"count":0}],"isBlockCoverage":false},{"functionName":"isAbstractModifier","ranges":[{"startOffset":9077404,"endOffset":9077428,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessExpression","ranges":[{"startOffset":9077454,"endOffset":9077478,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessibilityModifier","ranges":[{"startOffset":9077509,"endOffset":9077538,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessor","ranges":[{"startOffset":9077556,"endOffset":9077572,"count":0}],"isBlockCoverage":false},{"functionName":"isAccessorModifier","ranges":[{"startOffset":9077598,"endOffset":9077622,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasSymbolDeclaration","ranges":[{"startOffset":9077654,"endOffset":9077684,"count":0}],"isBlockCoverage":false},{"functionName":"isAliasableExpression","ranges":[{"startOffset":9077713,"endOffset":9077740,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientModule","ranges":[{"startOffset":9077763,"endOffset":9077784,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbientPropertyDeclaration","ranges":[{"startOffset":9077820,"endOffset":9077854,"count":0}],"isBlockCoverage":false},{"functionName":"isAnonymousFunctionDefinition","ranges":[{"startOffset":9077891,"endOffset":9077926,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":9077957,"endOffset":9077986,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrBareOrAccessedRequire","ranges":[{"startOffset":9078028,"endOffset":9078068,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportOrReExport","ranges":[{"startOffset":9078097,"endOffset":9078124,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyImportSyntax","ranges":[{"startOffset":9078149,"endOffset":9078172,"count":0}],"isBlockCoverage":false},{"functionName":"isAnySupportedFileExtension","ranges":[{"startOffset":9078207,"endOffset":9078240,"count":0}],"isBlockCoverage":false},{"functionName":"isApplicableVersionedTypesKey","ranges":[{"startOffset":9078277,"endOffset":9078312,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentExpressionOfElementAccess","ranges":[{"startOffset":9078355,"endOffset":9078396,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":9078411,"endOffset":9078424,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingElement","ranges":[{"startOffset":9078453,"endOffset":9078480,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentElement","ranges":[{"startOffset":9078521,"endOffset":9078560,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingOrAssignmentPattern","ranges":[{"startOffset":9078601,"endOffset":9078640,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBindingPattern","ranges":[{"startOffset":9078669,"endOffset":9078696,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralExpression","ranges":[{"startOffset":9078728,"endOffset":9078758,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLiteralOrObjectLiteralDestructuringPattern","ranges":[{"startOffset":9078815,"endOffset":9078870,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeNode","ranges":[{"startOffset":9078893,"endOffset":9078914,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunction","ranges":[{"startOffset":9078937,"endOffset":9078958,"count":0}],"isBlockCoverage":false},{"functionName":"isAsExpression","ranges":[{"startOffset":9078980,"endOffset":9079000,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertClause","ranges":[{"startOffset":9079022,"endOffset":9079042,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertEntry","ranges":[{"startOffset":9079063,"endOffset":9079082,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertionExpression","ranges":[{"startOffset":9079111,"endOffset":9079138,"count":0}],"isBlockCoverage":false},{"functionName":"isAssertsKeyword","ranges":[{"startOffset":9079162,"endOffset":9079184,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentDeclaration","ranges":[{"startOffset":9079215,"endOffset":9079244,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":9079274,"endOffset":9079302,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentOperator","ranges":[{"startOffset":9079330,"endOffset":9079356,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":9079383,"endOffset":9079408,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentTarget","ranges":[{"startOffset":9079434,"endOffset":9079458,"count":0}],"isBlockCoverage":false},{"functionName":"isAsteriskToken","ranges":[{"startOffset":9079481,"endOffset":9079502,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":9079525,"endOffset":9079546,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncModifier","ranges":[{"startOffset":9079569,"endOffset":9079590,"count":0}],"isBlockCoverage":false},{"functionName":"isAutoAccessorPropertyDeclaration","ranges":[{"startOffset":9079631,"endOffset":9079670,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":9079695,"endOffset":9079718,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitKeyword","ranges":[{"startOffset":9079740,"endOffset":9079760,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":9079783,"endOffset":9079804,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryExpression","ranges":[{"startOffset":9079830,"endOffset":9079854,"count":0}],"isBlockCoverage":false},{"functionName":"isBinaryOperatorToken","ranges":[{"startOffset":9079883,"endOffset":9079910,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableObjectDefinePropertyCall","ranges":[{"startOffset":9079952,"endOffset":9079992,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticAccessExpression","ranges":[{"startOffset":9080032,"endOffset":9080070,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticElementAccessExpression","ranges":[{"startOffset":9080117,"endOffset":9080162,"count":0}],"isBlockCoverage":false},{"functionName":"isBindableStaticNameExpression","ranges":[{"startOffset":9080200,"endOffset":9080236,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElement","ranges":[{"startOffset":9080260,"endOffset":9080282,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingElementOfBareOrAccessedRequire","ranges":[{"startOffset":9080329,"endOffset":9080374,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingName","ranges":[{"startOffset":9080395,"endOffset":9080414,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentElement","ranges":[{"startOffset":9080450,"endOffset":9080484,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingOrAssignmentPattern","ranges":[{"startOffset":9080520,"endOffset":9080554,"count":0}],"isBlockCoverage":false},{"functionName":"isBindingPattern","ranges":[{"startOffset":9080578,"endOffset":9080600,"count":0}],"isBlockCoverage":false},{"functionName":"isBlock","ranges":[{"startOffset":9080615,"endOffset":9080628,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockOrCatchScoped","ranges":[{"startOffset":9080656,"endOffset":9080682,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":9080702,"endOffset":9080720,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScopedContainerTopLevel","ranges":[{"startOffset":9080758,"endOffset":9080794,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":9080818,"endOffset":9080840,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakOrContinueStatement","ranges":[{"startOffset":9080874,"endOffset":9080906,"count":0}],"isBlockCoverage":false},{"functionName":"isBreakStatement","ranges":[{"startOffset":9080930,"endOffset":9080952,"count":0}],"isBlockCoverage":false},{"functionName":"isBuildInfoFile","ranges":[{"startOffset":9080975,"endOffset":9080996,"count":0}],"isBlockCoverage":false},{"functionName":"isBuilderProgram","ranges":[{"startOffset":9081020,"endOffset":9081043,"count":0}],"isBlockCoverage":false},{"functionName":"isBundle","ranges":[{"startOffset":9081059,"endOffset":9081073,"count":0}],"isBlockCoverage":false},{"functionName":"isBundleFileTextLike","ranges":[{"startOffset":9081101,"endOffset":9081127,"count":0}],"isBlockCoverage":false},{"functionName":"isCallChain","ranges":[{"startOffset":9081146,"endOffset":9081163,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":9081187,"endOffset":9081209,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpressionTarget","ranges":[{"startOffset":9081239,"endOffset":9081267,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeExpression","ranges":[{"startOffset":9081295,"endOffset":9081321,"count":0}],"isBlockCoverage":false},{"functionName":"isCallLikeOrFunctionLikeExpression","ranges":[{"startOffset":9081363,"endOffset":9081403,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpression","ranges":[{"startOffset":9081432,"endOffset":9081459,"count":0}],"isBlockCoverage":false},{"functionName":"isCallOrNewExpressionTarget","ranges":[{"startOffset":9081494,"endOffset":9081527,"count":0}],"isBlockCoverage":false},{"functionName":"isCallSignatureDeclaration","ranges":[{"startOffset":9081561,"endOffset":9081593,"count":0}],"isBlockCoverage":false},{"functionName":"isCallToHelper","ranges":[{"startOffset":9081615,"endOffset":9081635,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseBlock","ranges":[{"startOffset":9081654,"endOffset":9081671,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseClause","ranges":[{"startOffset":9081691,"endOffset":9081709,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseKeyword","ranges":[{"startOffset":9081730,"endOffset":9081749,"count":0}],"isBlockCoverage":false},{"functionName":"isCaseOrDefaultClause","ranges":[{"startOffset":9081778,"endOffset":9081805,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClause","ranges":[{"startOffset":9081826,"endOffset":9081845,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclaration","ranges":[{"startOffset":9081885,"endOffset":9081923,"count":0}],"isBlockCoverage":false},{"functionName":"isCatchClauseVariableDeclarationOrBindingElement","ranges":[{"startOffset":9081979,"endOffset":9082033,"count":0}],"isBlockCoverage":false},{"functionName":"isCheckJsEnabledForFile","ranges":[{"startOffset":9082064,"endOffset":9082093,"count":0}],"isBlockCoverage":false},{"functionName":"isChildOfNodeWithKind","ranges":[{"startOffset":9082122,"endOffset":9082149,"count":0}],"isBlockCoverage":false},{"functionName":"isCircularBuildOrder","ranges":[{"startOffset":9082177,"endOffset":9082203,"count":0}],"isBlockCoverage":false},{"functionName":"isClassDeclaration","ranges":[{"startOffset":9082229,"endOffset":9082253,"count":0}],"isBlockCoverage":false},{"functionName":"isClassElement","ranges":[{"startOffset":9082275,"endOffset":9082295,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":9082320,"endOffset":9082343,"count":0}],"isBlockCoverage":false},{"functionName":"isClassInstanceProperty","ranges":[{"startOffset":9082374,"endOffset":9082403,"count":0}],"isBlockCoverage":false},{"functionName":"isClassLike","ranges":[{"startOffset":9082422,"endOffset":9082439,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMemberModifier","ranges":[{"startOffset":9082468,"endOffset":9082495,"count":0}],"isBlockCoverage":false},{"functionName":"isClassNamedEvaluationHelperBlock","ranges":[{"startOffset":9082536,"endOffset":9082575,"count":0}],"isBlockCoverage":false},{"functionName":"isClassOrTypeElement","ranges":[{"startOffset":9082603,"endOffset":9082629,"count":0}],"isBlockCoverage":false},{"functionName":"isClassStaticBlockDeclaration","ranges":[{"startOffset":9082666,"endOffset":9082701,"count":0}],"isBlockCoverage":false},{"functionName":"isClassThisAssignmentBlock","ranges":[{"startOffset":9082735,"endOffset":9082767,"count":0}],"isBlockCoverage":false},{"functionName":"isCollapsedRange","ranges":[{"startOffset":9082791,"endOffset":9082813,"count":0}],"isBlockCoverage":false},{"functionName":"isColonToken","ranges":[{"startOffset":9082833,"endOffset":9082851,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaExpression","ranges":[{"startOffset":9082876,"endOffset":9082899,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaListExpression","ranges":[{"startOffset":9082928,"endOffset":9082955,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaSequence","ranges":[{"startOffset":9082978,"endOffset":9082999,"count":0}],"isBlockCoverage":false},{"functionName":"isCommaToken","ranges":[{"startOffset":9083019,"endOffset":9083037,"count":0}],"isBlockCoverage":false},{"functionName":"isComment","ranges":[{"startOffset":9083054,"endOffset":9083069,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportPropertyAssignment","ranges":[{"startOffset":9083111,"endOffset":9083151,"count":0}],"isBlockCoverage":false},{"functionName":"isCommonJsExportedExpression","ranges":[{"startOffset":9083187,"endOffset":9083221,"count":0}],"isBlockCoverage":false},{"functionName":"isCompoundAssignment","ranges":[{"startOffset":9083249,"endOffset":9083275,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedNonLiteralName","ranges":[{"startOffset":9083307,"endOffset":9083337,"count":0}],"isBlockCoverage":false},{"functionName":"isComputedPropertyName","ranges":[{"startOffset":9083367,"endOffset":9083395,"count":0}],"isBlockCoverage":false},{"functionName":"isConciseBody","ranges":[{"startOffset":9083416,"endOffset":9083435,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":9083466,"endOffset":9083495,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalTypeNode","ranges":[{"startOffset":9083524,"endOffset":9083551,"count":0}],"isBlockCoverage":false},{"functionName":"isConstTypeReference","ranges":[{"startOffset":9083579,"endOffset":9083605,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructSignatureDeclaration","ranges":[{"startOffset":9083644,"endOffset":9083681,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorDeclaration","ranges":[{"startOffset":9083713,"endOffset":9083743,"count":0}],"isBlockCoverage":false},{"functionName":"isConstructorTypeNode","ranges":[{"startOffset":9083772,"endOffset":9083799,"count":0}],"isBlockCoverage":false},{"functionName":"isContextualKeyword","ranges":[{"startOffset":9083826,"endOffset":9083851,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":9083878,"endOffset":9083903,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomPrologue","ranges":[{"startOffset":9083927,"endOffset":9083949,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":9083976,"endOffset":9084001,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":9084022,"endOffset":9084041,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationBindingElement","ranges":[{"startOffset":9084076,"endOffset":9084109,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationFileName","ranges":[{"startOffset":9084138,"endOffset":9084165,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationName","ranges":[{"startOffset":9084190,"endOffset":9084213,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationNameOfEnumOrNamespace","ranges":[{"startOffset":9084255,"endOffset":9084295,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationReadonly","ranges":[{"startOffset":9084324,"endOffset":9084351,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationStatement","ranges":[{"startOffset":9084381,"endOffset":9084409,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameterChildren","ranges":[{"startOffset":9084455,"endOffset":9084499,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclarationWithTypeParameters","ranges":[{"startOffset":9084538,"endOffset":9084575,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":9084594,"endOffset":9084611,"count":0}],"isBlockCoverage":false},{"functionName":"isDecoratorTarget","ranges":[{"startOffset":9084636,"endOffset":9084659,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultClause","ranges":[{"startOffset":9084682,"endOffset":9084703,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultImport","ranges":[{"startOffset":9084726,"endOffset":9084747,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultModifier","ranges":[{"startOffset":9084772,"endOffset":9084795,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaultedExpandoInitializer","ranges":[{"startOffset":9084832,"endOffset":9084867,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteExpression","ranges":[{"startOffset":9084893,"endOffset":9084917,"count":0}],"isBlockCoverage":false},{"functionName":"isDeleteTarget","ranges":[{"startOffset":9084939,"endOffset":9084959,"count":0}],"isBlockCoverage":false},{"functionName":"isDeprecatedDeclaration","ranges":[{"startOffset":9084990,"endOffset":9085019,"count":0}],"isBlockCoverage":false},{"functionName":"isDestructuringAssignment","ranges":[{"startOffset":9085052,"endOffset":9085083,"count":0}],"isBlockCoverage":false},{"functionName":"isDiagnosticWithLocation","ranges":[{"startOffset":9085115,"endOffset":9085145,"count":0}],"isBlockCoverage":false},{"functionName":"isDiskPathRoot","ranges":[{"startOffset":9085167,"endOffset":9085187,"count":0}],"isBlockCoverage":false},{"functionName":"isDoStatement","ranges":[{"startOffset":9085208,"endOffset":9085227,"count":0}],"isBlockCoverage":false},{"functionName":"isDocumentRegistryEntry","ranges":[{"startOffset":9085258,"endOffset":9085287,"count":0}],"isBlockCoverage":false},{"functionName":"isDotDotDotToken","ranges":[{"startOffset":9085311,"endOffset":9085333,"count":0}],"isBlockCoverage":false},{"functionName":"isDottedName","ranges":[{"startOffset":9085353,"endOffset":9085371,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicName","ranges":[{"startOffset":9085392,"endOffset":9085411,"count":0}],"isBlockCoverage":false},{"functionName":"isESSymbolIdentifier","ranges":[{"startOffset":9085439,"endOffset":9085465,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveExternalModule","ranges":[{"startOffset":9085498,"endOffset":9085529,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveModuleDeclaration","ranges":[{"startOffset":9085565,"endOffset":9085599,"count":0}],"isBlockCoverage":false},{"functionName":"isEffectiveStrictModeSourceFile","ranges":[{"startOffset":9085638,"endOffset":9085675,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessChain","ranges":[{"startOffset":9085703,"endOffset":9085729,"count":0}],"isBlockCoverage":false},{"functionName":"isElementAccessExpression","ranges":[{"startOffset":9085762,"endOffset":9085793,"count":0}],"isBlockCoverage":false},{"functionName":"isEmittedFileOfProgram","ranges":[{"startOffset":9085823,"endOffset":9085851,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyArrayLiteral","ranges":[{"startOffset":9085878,"endOffset":9085903,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingElement","ranges":[{"startOffset":9085932,"endOffset":9085959,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyBindingPattern","ranges":[{"startOffset":9085988,"endOffset":9086015,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObjectLiteral","ranges":[{"startOffset":9086043,"endOffset":9086069,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":9086093,"endOffset":9086115,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStringLiteral","ranges":[{"startOffset":9086143,"endOffset":9086169,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityName","ranges":[{"startOffset":9086189,"endOffset":9086207,"count":0}],"isBlockCoverage":false},{"functionName":"isEntityNameExpression","ranges":[{"startOffset":9086237,"endOffset":9086265,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumConst","ranges":[{"startOffset":9086284,"endOffset":9086301,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":9086326,"endOffset":9086349,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":9086369,"endOffset":9086387,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualityOperatorKind","ranges":[{"startOffset":9086417,"endOffset":9086445,"count":0}],"isBlockCoverage":false},{"functionName":"isEqualsGreaterThanToken","ranges":[{"startOffset":9086477,"endOffset":9086507,"count":0}],"isBlockCoverage":false},{"functionName":"isExclamationToken","ranges":[{"startOffset":9086533,"endOffset":9086557,"count":0}],"isBlockCoverage":false},{"functionName":"isExcludedFile","ranges":[{"startOffset":9086579,"endOffset":9086599,"count":0}],"isBlockCoverage":false},{"functionName":"isExclusivelyTypeOnlyImportOrExport","ranges":[{"startOffset":9086642,"endOffset":9086683,"count":0}],"isBlockCoverage":false},{"functionName":"isExpandoPropertyDeclaration","ranges":[{"startOffset":9086719,"endOffset":9086753,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":9086779,"endOffset":9086803,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":9086830,"endOffset":9086855,"count":0}],"isBlockCoverage":false},{"functionName":"isExportModifier","ranges":[{"startOffset":9086879,"endOffset":9086901,"count":0}],"isBlockCoverage":false},{"functionName":"isExportName","ranges":[{"startOffset":9086921,"endOffset":9086939,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceAsDefaultDeclaration","ranges":[{"startOffset":9086984,"endOffset":9087027,"count":0}],"isBlockCoverage":false},{"functionName":"isExportOrDefaultModifier","ranges":[{"startOffset":9087060,"endOffset":9087091,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":9087116,"endOffset":9087139,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsIdentifier","ranges":[{"startOffset":9087166,"endOffset":9087191,"count":0}],"isBlockCoverage":false},{"functionName":"isExportsOrModuleExportsOrAlias","ranges":[{"startOffset":9087230,"endOffset":9087267,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":9087287,"endOffset":9087305,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionNode","ranges":[{"startOffset":9087329,"endOffset":9087351,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":9087410,"endOffset":9087467,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionOfOptionalChainRoot","ranges":[{"startOffset":9087506,"endOffset":9087543,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":9087572,"endOffset":9087599,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArguments","ranges":[{"startOffset":9087636,"endOffset":9087671,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWithTypeArgumentsInClassExtendsClause","ranges":[{"startOffset":9087728,"endOffset":9087783,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModule","ranges":[{"startOffset":9087807,"endOffset":9087829,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleAugmentation","ranges":[{"startOffset":9087865,"endOffset":9087899,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleImportEqualsDeclaration","ranges":[{"startOffset":9087946,"endOffset":9087991,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleIndicator","ranges":[{"startOffset":9088024,"endOffset":9088055,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleNameRelative","ranges":[{"startOffset":9088091,"endOffset":9088125,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleReference","ranges":[{"startOffset":9088158,"endOffset":9088189,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalModuleSymbol","ranges":[{"startOffset":9088219,"endOffset":9088247,"count":0}],"isBlockCoverage":false},{"functionName":"isExternalOrCommonJsModule","ranges":[{"startOffset":9088281,"endOffset":9088313,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelReservedGeneratedIdentifier","ranges":[{"startOffset":9088359,"endOffset":9088403,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLevelUniqueName","ranges":[{"startOffset":9088432,"endOffset":9088459,"count":0}],"isBlockCoverage":false},{"functionName":"isFileProbablyExternalModule","ranges":[{"startOffset":9088495,"endOffset":9088529,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstDeclarationOfSymbolParameter","ranges":[{"startOffset":9088572,"endOffset":9088613,"count":0}],"isBlockCoverage":false},{"functionName":"isFixablePromiseHandler","ranges":[{"startOffset":9088644,"endOffset":9088673,"count":0}],"isBlockCoverage":false},{"functionName":"isForInOrOfStatement","ranges":[{"startOffset":9088701,"endOffset":9088727,"count":0}],"isBlockCoverage":false},{"functionName":"isForInStatement","ranges":[{"startOffset":9088751,"endOffset":9088773,"count":0}],"isBlockCoverage":false},{"functionName":"isForInitializer","ranges":[{"startOffset":9088797,"endOffset":9088819,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":9088843,"endOffset":9088865,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":9088887,"endOffset":9088907,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBlock","ranges":[{"startOffset":9088930,"endOffset":9088951,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionBody","ranges":[{"startOffset":9088973,"endOffset":9088993,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":9089022,"endOffset":9089049,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpression","ranges":[{"startOffset":9089077,"endOffset":9089103,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionExpressionOrArrowFunction","ranges":[{"startOffset":9089146,"endOffset":9089187,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLike","ranges":[{"startOffset":9089209,"endOffset":9089229,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeDeclaration","ranges":[{"startOffset":9089262,"endOffset":9089293,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeKind","ranges":[{"startOffset":9089319,"endOffset":9089343,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionLikeOrClassStaticBlockDeclaration","ranges":[{"startOffset":9089394,"endOffset":9089443,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrConstructorTypeNode","ranges":[{"startOffset":9089482,"endOffset":9089519,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionOrModuleBlock","ranges":[{"startOffset":9089550,"endOffset":9089579,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionSymbol","ranges":[{"startOffset":9089603,"endOffset":9089625,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeNode","ranges":[{"startOffset":9089651,"endOffset":9089675,"count":0}],"isBlockCoverage":false},{"functionName":"isFutureReservedKeyword","ranges":[{"startOffset":9089706,"endOffset":9089735,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedIdentifier","ranges":[{"startOffset":9089764,"endOffset":9089791,"count":0}],"isBlockCoverage":false},{"functionName":"isGeneratedPrivateIdentifier","ranges":[{"startOffset":9089827,"endOffset":9089861,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessor","ranges":[{"startOffset":9089882,"endOffset":9089901,"count":0}],"isBlockCoverage":false},{"functionName":"isGetAccessorDeclaration","ranges":[{"startOffset":9089933,"endOffset":9089963,"count":0}],"isBlockCoverage":false},{"functionName":"isGetOrSetAccessorDeclaration","ranges":[{"startOffset":9090000,"endOffset":9090035,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalDeclaration","ranges":[{"startOffset":9090062,"endOffset":9090087,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobalScopeAugmentation","ranges":[{"startOffset":9090120,"endOffset":9090151,"count":0}],"isBlockCoverage":false},{"functionName":"isGrammarError","ranges":[{"startOffset":9090173,"endOffset":9090193,"count":0}],"isBlockCoverage":false},{"functionName":"isHeritageClause","ranges":[{"startOffset":9090217,"endOffset":9090239,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedFunction","ranges":[{"startOffset":9090264,"endOffset":9090287,"count":0}],"isBlockCoverage":false},{"functionName":"isHoistedVariableStatement","ranges":[{"startOffset":9090321,"endOffset":9090353,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifier","ranges":[{"startOffset":9090373,"endOffset":9090391,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierANonContextualKeyword","ranges":[{"startOffset":9090432,"endOffset":9090471,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":9090495,"endOffset":9090517,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierOrThisTypeNode","ranges":[{"startOffset":9090551,"endOffset":9090583,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPart","ranges":[{"startOffset":9090607,"endOffset":9090629,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":9090654,"endOffset":9090677,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierText","ranges":[{"startOffset":9090701,"endOffset":9090723,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypePredicate","ranges":[{"startOffset":9090756,"endOffset":9090787,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierTypeReference","ranges":[{"startOffset":9090820,"endOffset":9090851,"count":0}],"isBlockCoverage":false},{"functionName":"isIfStatement","ranges":[{"startOffset":9090872,"endOffset":9090891,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnoredFileFromWildCardWatching","ranges":[{"startOffset":9090932,"endOffset":9090971,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":9090993,"endOffset":9091013,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":9091038,"endOffset":9091061,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributeName","ranges":[{"startOffset":9091090,"endOffset":9091117,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttributes","ranges":[{"startOffset":9091143,"endOffset":9091167,"count":0}],"isBlockCoverage":false},{"functionName":"isImportCall","ranges":[{"startOffset":9091187,"endOffset":9091205,"count":0}],"isBlockCoverage":false},{"functionName":"isImportClause","ranges":[{"startOffset":9091227,"endOffset":9091247,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":9091274,"endOffset":9091299,"count":0}],"isBlockCoverage":false},{"functionName":"isImportEqualsDeclaration","ranges":[{"startOffset":9091332,"endOffset":9091363,"count":0}],"isBlockCoverage":false},{"functionName":"isImportKeyword","ranges":[{"startOffset":9091386,"endOffset":9091407,"count":0}],"isBlockCoverage":false},{"functionName":"isImportMeta","ranges":[{"startOffset":9091427,"endOffset":9091445,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifier","ranges":[{"startOffset":9091478,"endOffset":9091509,"count":0}],"isBlockCoverage":false},{"functionName":"isImportOrExportSpecifierName","ranges":[{"startOffset":9091546,"endOffset":9091581,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":9091606,"endOffset":9091629,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeAssertionContainer","ranges":[{"startOffset":9091667,"endOffset":9091703,"count":0}],"isBlockCoverage":false},{"functionName":"isImportTypeNode","ranges":[{"startOffset":9091727,"endOffset":9091749,"count":0}],"isBlockCoverage":false},{"functionName":"isImportableFile","ranges":[{"startOffset":9091773,"endOffset":9091795,"count":0}],"isBlockCoverage":false},{"functionName":"isInComment","ranges":[{"startOffset":9091814,"endOffset":9091831,"count":0}],"isBlockCoverage":false},{"functionName":"isInCompoundLikeAssignment","ranges":[{"startOffset":9091865,"endOffset":9091897,"count":0}],"isBlockCoverage":false},{"functionName":"isInExpressionContext","ranges":[{"startOffset":9091926,"endOffset":9091953,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSDoc","ranges":[{"startOffset":9091970,"endOffset":9091985,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSFile","ranges":[{"startOffset":9092003,"endOffset":9092019,"count":0}],"isBlockCoverage":false},{"functionName":"isInJSXText","ranges":[{"startOffset":9092038,"endOffset":9092055,"count":0}],"isBlockCoverage":false},{"functionName":"isInJsonFile","ranges":[{"startOffset":9092075,"endOffset":9092093,"count":0}],"isBlockCoverage":false},{"functionName":"isInNonReferenceComment","ranges":[{"startOffset":9092124,"endOffset":9092153,"count":0}],"isBlockCoverage":false},{"functionName":"isInReferenceComment","ranges":[{"startOffset":9092181,"endOffset":9092207,"count":0}],"isBlockCoverage":false},{"functionName":"isInRightSideOfInternalImportEqualsDeclaration","ranges":[{"startOffset":9092261,"endOffset":9092313,"count":0}],"isBlockCoverage":false},{"functionName":"isInString","ranges":[{"startOffset":9092331,"endOffset":9092347,"count":0}],"isBlockCoverage":false},{"functionName":"isInTemplateString","ranges":[{"startOffset":9092373,"endOffset":9092397,"count":0}],"isBlockCoverage":false},{"functionName":"isInTopLevelContext","ranges":[{"startOffset":9092424,"endOffset":9092449,"count":0}],"isBlockCoverage":false},{"functionName":"isInTypeQuery","ranges":[{"startOffset":9092470,"endOffset":9092489,"count":0}],"isBlockCoverage":false},{"functionName":"isIncrementalCompilation","ranges":[{"startOffset":9092521,"endOffset":9092551,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexSignatureDeclaration","ranges":[{"startOffset":9092586,"endOffset":9092619,"count":0}],"isBlockCoverage":false},{"functionName":"isIndexedAccessTypeNode","ranges":[{"startOffset":9092650,"endOffset":9092679,"count":0}],"isBlockCoverage":false},{"functionName":"isInferTypeNode","ranges":[{"startOffset":9092702,"endOffset":9092723,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinityOrNaNString","ranges":[{"startOffset":9092752,"endOffset":9092779,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedProperty","ranges":[{"startOffset":9092808,"endOffset":9092835,"count":0}],"isBlockCoverage":false},{"functionName":"isInitializedVariable","ranges":[{"startOffset":9092864,"endOffset":9092891,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElement","ranges":[{"startOffset":9092917,"endOffset":9092941,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideJsxElementOrAttribute","ranges":[{"startOffset":9092978,"endOffset":9093013,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":9093040,"endOffset":9093065,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideTemplateLiteral","ranges":[{"startOffset":9093096,"endOffset":9093125,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceOfExpression","ranges":[{"startOffset":9093155,"endOffset":9093183,"count":0}],"isBlockCoverage":false},{"functionName":"isInstantiatedModule","ranges":[{"startOffset":9093211,"endOffset":9093237,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":9093267,"endOffset":9093295,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalDeclaration","ranges":[{"startOffset":9093324,"endOffset":9093351,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalModuleImportEqualsDeclaration","ranges":[{"startOffset":9093398,"endOffset":9093443,"count":0}],"isBlockCoverage":false},{"functionName":"isInternalName","ranges":[{"startOffset":9093465,"endOffset":9093485,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeNode","ranges":[{"startOffset":9093515,"endOffset":9093543,"count":0}],"isBlockCoverage":false},{"functionName":"isIntrinsicJsxName","ranges":[{"startOffset":9093569,"endOffset":9093593,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":9093621,"endOffset":9093647,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDoc","ranges":[{"startOffset":9093662,"endOffset":9093675,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAllType","ranges":[{"startOffset":9093697,"endOffset":9093717,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAugmentsTag","ranges":[{"startOffset":9093743,"endOffset":9093767,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocAuthorTag","ranges":[{"startOffset":9093791,"endOffset":9093813,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCallbackTag","ranges":[{"startOffset":9093839,"endOffset":9093863,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocClassTag","ranges":[{"startOffset":9093886,"endOffset":9093907,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocCommentContainingNode","ranges":[{"startOffset":9093943,"endOffset":9093977,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocConstructSignature","ranges":[{"startOffset":9094010,"endOffset":9094041,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocDeprecatedTag","ranges":[{"startOffset":9094069,"endOffset":9094095,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocEnumTag","ranges":[{"startOffset":9094117,"endOffset":9094137,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocFunctionType","ranges":[{"startOffset":9094164,"endOffset":9094189,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocImplementsTag","ranges":[{"startOffset":9094217,"endOffset":9094243,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocIndexSignature","ranges":[{"startOffset":9094272,"endOffset":9094299,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLikeText","ranges":[{"startOffset":9094322,"endOffset":9094343,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLink","ranges":[{"startOffset":9094362,"endOffset":9094379,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkCode","ranges":[{"startOffset":9094402,"endOffset":9094423,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkLike","ranges":[{"startOffset":9094446,"endOffset":9094467,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocLinkPlain","ranges":[{"startOffset":9094491,"endOffset":9094513,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocMemberName","ranges":[{"startOffset":9094538,"endOffset":9094561,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNameReference","ranges":[{"startOffset":9094589,"endOffset":9094615,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamepathType","ranges":[{"startOffset":9094642,"endOffset":9094667,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNamespaceBody","ranges":[{"startOffset":9094695,"endOffset":9094721,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNode","ranges":[{"startOffset":9094740,"endOffset":9094757,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNonNullableType","ranges":[{"startOffset":9094787,"endOffset":9094815,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocNullableType","ranges":[{"startOffset":9094842,"endOffset":9094867,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalParameter","ranges":[{"startOffset":9094899,"endOffset":9094929,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOptionalType","ranges":[{"startOffset":9094956,"endOffset":9094981,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverloadTag","ranges":[{"startOffset":9095007,"endOffset":9095031,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocOverrideTag","ranges":[{"startOffset":9095057,"endOffset":9095081,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocParameterTag","ranges":[{"startOffset":9095108,"endOffset":9095133,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPrivateTag","ranges":[{"startOffset":9095158,"endOffset":9095181,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyLikeTag","ranges":[{"startOffset":9095211,"endOffset":9095239,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPropertyTag","ranges":[{"startOffset":9095265,"endOffset":9095289,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocProtectedTag","ranges":[{"startOffset":9095316,"endOffset":9095341,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocPublicTag","ranges":[{"startOffset":9095365,"endOffset":9095387,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReadonlyTag","ranges":[{"startOffset":9095413,"endOffset":9095437,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocReturnTag","ranges":[{"startOffset":9095461,"endOffset":9095483,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesExpression","ranges":[{"startOffset":9095517,"endOffset":9095549,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSatisfiesTag","ranges":[{"startOffset":9095576,"endOffset":9095601,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSeeTag","ranges":[{"startOffset":9095622,"endOffset":9095641,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocSignature","ranges":[{"startOffset":9095665,"endOffset":9095687,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTag","ranges":[{"startOffset":9095705,"endOffset":9095721,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTemplateTag","ranges":[{"startOffset":9095747,"endOffset":9095771,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThisTag","ranges":[{"startOffset":9095793,"endOffset":9095813,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocThrowsTag","ranges":[{"startOffset":9095837,"endOffset":9095859,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAlias","ranges":[{"startOffset":9095883,"endOffset":9095905,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeAssertion","ranges":[{"startOffset":9095933,"endOffset":9095959,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeExpression","ranges":[{"startOffset":9095988,"endOffset":9096015,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeLiteral","ranges":[{"startOffset":9096041,"endOffset":9096065,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypeTag","ranges":[{"startOffset":9096087,"endOffset":9096107,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocTypedefTag","ranges":[{"startOffset":9096132,"endOffset":9096155,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownTag","ranges":[{"startOffset":9096180,"endOffset":9096203,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocUnknownType","ranges":[{"startOffset":9096229,"endOffset":9096253,"count":0}],"isBlockCoverage":false},{"functionName":"isJSDocVariadicType","ranges":[{"startOffset":9096280,"endOffset":9096305,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXTagName","ranges":[{"startOffset":9096325,"endOffset":9096343,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonEqual","ranges":[{"startOffset":9096362,"endOffset":9096379,"count":0}],"isBlockCoverage":false},{"functionName":"isJsonSourceFile","ranges":[{"startOffset":9096403,"endOffset":9096425,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttribute","ranges":[{"startOffset":9096447,"endOffset":9096467,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeLike","ranges":[{"startOffset":9096493,"endOffset":9096517,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributeName","ranges":[{"startOffset":9096543,"endOffset":9096567,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxAttributes","ranges":[{"startOffset":9096590,"endOffset":9096611,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxChild","ranges":[{"startOffset":9096629,"endOffset":9096645,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingElement","ranges":[{"startOffset":9096672,"endOffset":9096697,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxClosingFragment","ranges":[{"startOffset":9096725,"endOffset":9096751,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxElement","ranges":[{"startOffset":9096771,"endOffset":9096789,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxExpression","ranges":[{"startOffset":9096812,"endOffset":9096833,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxFragment","ranges":[{"startOffset":9096854,"endOffset":9096873,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxNamespacedName","ranges":[{"startOffset":9096900,"endOffset":9096925,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningElement","ranges":[{"startOffset":9096952,"endOffset":9096977,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningFragment","ranges":[{"startOffset":9097005,"endOffset":9097031,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElement","ranges":[{"startOffset":9097062,"endOffset":9097091,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxOpeningLikeElementTagName","ranges":[{"startOffset":9097129,"endOffset":9097165,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSelfClosingElement","ranges":[{"startOffset":9097196,"endOffset":9097225,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxSpreadAttribute","ranges":[{"startOffset":9097253,"endOffset":9097279,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxTagNameExpression","ranges":[{"startOffset":9097309,"endOffset":9097337,"count":0}],"isBlockCoverage":false},{"functionName":"isJsxText","ranges":[{"startOffset":9097354,"endOffset":9097369,"count":0}],"isBlockCoverage":false},{"functionName":"isJumpStatementTarget","ranges":[{"startOffset":9097398,"endOffset":9097425,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":9097442,"endOffset":9097457,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordOrPunctuation","ranges":[{"startOffset":9097487,"endOffset":9097515,"count":0}],"isBlockCoverage":false},{"functionName":"isKnownSymbol","ranges":[{"startOffset":9097536,"endOffset":9097555,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelName","ranges":[{"startOffset":9097574,"endOffset":9097591,"count":0}],"isBlockCoverage":false},{"functionName":"isLabelOfLabeledStatement","ranges":[{"startOffset":9097624,"endOffset":9097655,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":9097681,"endOffset":9097705,"count":0}],"isBlockCoverage":false},{"functionName":"isLateVisibilityPaintedStatement","ranges":[{"startOffset":9097745,"endOffset":9097783,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideExpression","ranges":[{"startOffset":9097815,"endOffset":9097845,"count":0}],"isBlockCoverage":false},{"functionName":"isLeftHandSideOfAssignment","ranges":[{"startOffset":9097879,"endOffset":9097911,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":9097924,"endOffset":9097935,"count":0}],"isBlockCoverage":false},{"functionName":"isLineBreak","ranges":[{"startOffset":9097954,"endOffset":9097971,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralComputedPropertyDeclarationName","ranges":[{"startOffset":9098019,"endOffset":9098065,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpression","ranges":[{"startOffset":9098092,"endOffset":9098117,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralExpressionOfObject","ranges":[{"startOffset":9098152,"endOffset":9098185,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralImportTypeNode","ranges":[{"startOffset":9098216,"endOffset":9098245,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralKind","ranges":[{"startOffset":9098266,"endOffset":9098285,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeAccess","ranges":[{"startOffset":9098312,"endOffset":9098337,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralLikeElementAccess","ranges":[{"startOffset":9098371,"endOffset":9098403,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralNameOfPropertyDeclarationOrIndexAccess","ranges":[{"startOffset":9098458,"endOffset":9098511,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLikeExpression","ranges":[{"startOffset":9098546,"endOffset":9098579,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeLiteral","ranges":[{"startOffset":9098607,"endOffset":9098633,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralTypeNode","ranges":[{"startOffset":9098658,"endOffset":9098681,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalName","ranges":[{"startOffset":9098700,"endOffset":9098717,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOperator","ranges":[{"startOffset":9098742,"endOffset":9098765,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentExpression","ranges":[{"startOffset":9098814,"endOffset":9098861,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingAssignmentOperator","ranges":[{"startOffset":9098908,"endOffset":9098953,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryExpression","ranges":[{"startOffset":9098998,"endOffset":9099041,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalOrCoalescingBinaryOperator","ranges":[{"startOffset":9099084,"endOffset":9099125,"count":0}],"isBlockCoverage":false},{"functionName":"isMappedTypeNode","ranges":[{"startOffset":9099149,"endOffset":9099171,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberName","ranges":[{"startOffset":9099191,"endOffset":9099209,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":9099231,"endOffset":9099251,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodDeclaration","ranges":[{"startOffset":9099278,"endOffset":9099303,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodOrAccessor","ranges":[{"startOffset":9099329,"endOffset":9099353,"count":0}],"isBlockCoverage":false},{"functionName":"isMethodSignature","ranges":[{"startOffset":9099378,"endOffset":9099401,"count":0}],"isBlockCoverage":false},{"functionName":"isMinusToken","ranges":[{"startOffset":9099421,"endOffset":9099439,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingDeclaration","ranges":[{"startOffset":9099467,"endOffset":9099493,"count":0}],"isBlockCoverage":false},{"functionName":"isMissingPackageJsonInfo","ranges":[{"startOffset":9099525,"endOffset":9099555,"count":0}],"isBlockCoverage":false},{"functionName":"isModifier","ranges":[{"startOffset":9099573,"endOffset":9099589,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierKind","ranges":[{"startOffset":9099611,"endOffset":9099631,"count":0}],"isBlockCoverage":false},{"functionName":"isModifierLike","ranges":[{"startOffset":9099653,"endOffset":9099673,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleAugmentationExternal","ranges":[{"startOffset":9099709,"endOffset":9099743,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBlock","ranges":[{"startOffset":9099764,"endOffset":9099783,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleBody","ranges":[{"startOffset":9099803,"endOffset":9099821,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":9099848,"endOffset":9099873,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExportsAccessExpression","ranges":[{"startOffset":9099912,"endOffset":9099949,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleIdentifier","ranges":[{"startOffset":9099975,"endOffset":9099999,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleName","ranges":[{"startOffset":9100019,"endOffset":9100037,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleOrEnumDeclaration","ranges":[{"startOffset":9100070,"endOffset":9100101,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleReference","ranges":[{"startOffset":9100126,"endOffset":9100149,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleSpecifierLike","ranges":[{"startOffset":9100178,"endOffset":9100205,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleWithStringLiteralName","ranges":[{"startOffset":9100242,"endOffset":9100277,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfFunctionDeclaration","ranges":[{"startOffset":9100312,"endOffset":9100345,"count":0}],"isBlockCoverage":false},{"functionName":"isNameOfModuleDeclaration","ranges":[{"startOffset":9100378,"endOffset":9100409,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedClassElement","ranges":[{"startOffset":9100436,"endOffset":9100461,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedDeclaration","ranges":[{"startOffset":9100487,"endOffset":9100511,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluation","ranges":[{"startOffset":9100536,"endOffset":9100559,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedEvaluationSource","ranges":[{"startOffset":9100590,"endOffset":9100619,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExportBindings","ranges":[{"startOffset":9100648,"endOffset":9100675,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedExports","ranges":[{"startOffset":9100697,"endOffset":9100717,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportBindings","ranges":[{"startOffset":9100746,"endOffset":9100773,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImports","ranges":[{"startOffset":9100795,"endOffset":9100815,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedImportsOrExports","ranges":[{"startOffset":9100846,"endOffset":9100875,"count":0}],"isBlockCoverage":false},{"functionName":"isNamedTupleMember","ranges":[{"startOffset":9100901,"endOffset":9100925,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceBody","ranges":[{"startOffset":9100948,"endOffset":9100969,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExport","ranges":[{"startOffset":9100994,"endOffset":9101017,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceExportDeclaration","ranges":[{"startOffset":9101053,"endOffset":9101087,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceImport","ranges":[{"startOffset":9101112,"endOffset":9101135,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaceReexportDeclaration","ranges":[{"startOffset":9101173,"endOffset":9101209,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpression","ranges":[{"startOffset":9101232,"endOffset":9101253,"count":0}],"isBlockCoverage":false},{"functionName":"isNewExpressionTarget","ranges":[{"startOffset":9101282,"endOffset":9101309,"count":0}],"isBlockCoverage":false},{"functionName":"isNoSubstitutionTemplateLiteral","ranges":[{"startOffset":9101348,"endOffset":9101385,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":9101399,"endOffset":9101411,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArray","ranges":[{"startOffset":9101430,"endOffset":9101447,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeArrayMultiLine","ranges":[{"startOffset":9101475,"endOffset":9101501,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeDescendantOf","ranges":[{"startOffset":9101527,"endOffset":9101551,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeKind","ranges":[{"startOffset":9101569,"endOffset":9101585,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeLikeSystem","ranges":[{"startOffset":9101609,"endOffset":9101631,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeModulesDirectory","ranges":[{"startOffset":9101661,"endOffset":9101689,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeWithPossibleHoistedDeclaration","ranges":[{"startOffset":9101733,"endOffset":9101775,"count":0}],"isBlockCoverage":false},{"functionName":"isNonContextualKeyword","ranges":[{"startOffset":9101805,"endOffset":9101833,"count":0}],"isBlockCoverage":false},{"functionName":"isNonExportDefaultModifier","ranges":[{"startOffset":9101867,"endOffset":9101899,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalAmbientModule","ranges":[{"startOffset":9101931,"endOffset":9101961,"count":0}],"isBlockCoverage":false},{"functionName":"isNonGlobalDeclaration","ranges":[{"startOffset":9101991,"endOffset":9102019,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullAccess","ranges":[{"startOffset":9102042,"endOffset":9102063,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullChain","ranges":[{"startOffset":9102085,"endOffset":9102105,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullExpression","ranges":[{"startOffset":9102132,"endOffset":9102157,"count":0}],"isBlockCoverage":false},{"functionName":"isNonStaticMethodOrAccessorWithPrivateName","ranges":[{"startOffset":9102207,"endOffset":9102255,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedOrPartiallyEmittedNode","ranges":[{"startOffset":9102297,"endOffset":9102337,"count":0}],"isBlockCoverage":false},{"functionName":"isNotEmittedStatement","ranges":[{"startOffset":9102366,"endOffset":9102393,"count":0}],"isBlockCoverage":false},{"functionName":"isNullishCoalesce","ranges":[{"startOffset":9102418,"endOffset":9102441,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":9102457,"endOffset":9102471,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":9102495,"endOffset":9102517,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteralName","ranges":[{"startOffset":9102545,"endOffset":9102571,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingElementWithoutPropertyName","ranges":[{"startOffset":9102620,"endOffset":9102667,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentElement","ranges":[{"startOffset":9102709,"endOffset":9102749,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingOrAssignmentPattern","ranges":[{"startOffset":9102791,"endOffset":9102831,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectBindingPattern","ranges":[{"startOffset":9102861,"endOffset":9102889,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElement","ranges":[{"startOffset":9102919,"endOffset":9102947,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralElementLike","ranges":[{"startOffset":9102981,"endOffset":9103013,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralExpression","ranges":[{"startOffset":9103046,"endOffset":9103077,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralMethod","ranges":[{"startOffset":9103106,"endOffset":9103133,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectLiteralOrClassExpressionMethodOrAccessor","ranges":[{"startOffset":9103189,"endOffset":9103243,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeDeclaration","ranges":[{"startOffset":9103274,"endOffset":9103303,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":9103323,"endOffset":9103341,"count":0}],"isBlockCoverage":false},{"functionName":"isOmittedExpression","ranges":[{"startOffset":9103368,"endOffset":9103393,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":9103416,"endOffset":9103437,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChainRoot","ranges":[{"startOffset":9103464,"endOffset":9103489,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalDeclaration","ranges":[{"startOffset":9103518,"endOffset":9103545,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalJSDocPropertyLikeTag","ranges":[{"startOffset":9103583,"endOffset":9103619,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalTypeNode","ranges":[{"startOffset":9103645,"endOffset":9103669,"count":0}],"isBlockCoverage":false},{"functionName":"isOuterExpression","ranges":[{"startOffset":9103694,"endOffset":9103717,"count":0}],"isBlockCoverage":false},{"functionName":"isOutermostOptionalChain","ranges":[{"startOffset":9103749,"endOffset":9103779,"count":0}],"isBlockCoverage":false},{"functionName":"isOverrideModifier","ranges":[{"startOffset":9103805,"endOffset":9103829,"count":0}],"isBlockCoverage":false},{"functionName":"isPackageJsonInfo","ranges":[{"startOffset":9103854,"endOffset":9103877,"count":0}],"isBlockCoverage":false},{"functionName":"isPackedArrayLiteral","ranges":[{"startOffset":9103905,"endOffset":9103931,"count":0}],"isBlockCoverage":false},{"functionName":"isParameter","ranges":[{"startOffset":9103950,"endOffset":9103967,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterDeclaration","ranges":[{"startOffset":9103997,"endOffset":9104025,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyDeclaration","ranges":[{"startOffset":9104063,"endOffset":9104099,"count":0}],"isBlockCoverage":false},{"functionName":"isParameterPropertyModifier","ranges":[{"startOffset":9104134,"endOffset":9104167,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":9104200,"endOffset":9104231,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedTypeNode","ranges":[{"startOffset":9104262,"endOffset":9104291,"count":0}],"isBlockCoverage":false},{"functionName":"isParseTreeNode","ranges":[{"startOffset":9104314,"endOffset":9104335,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeNode","ranges":[{"startOffset":9104359,"endOffset":9104381,"count":0}],"isBlockCoverage":false},{"functionName":"isPartOfTypeQuery","ranges":[{"startOffset":9104406,"endOffset":9104429,"count":0}],"isBlockCoverage":false},{"functionName":"isPartiallyEmittedExpression","ranges":[{"startOffset":9104465,"endOffset":9104499,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternMatch","ranges":[{"startOffset":9104521,"endOffset":9104541,"count":0}],"isBlockCoverage":false},{"functionName":"isPinnedComment","ranges":[{"startOffset":9104564,"endOffset":9104585,"count":0}],"isBlockCoverage":false},{"functionName":"isPlainJsFile","ranges":[{"startOffset":9104606,"endOffset":9104625,"count":0}],"isBlockCoverage":false},{"functionName":"isPlusToken","ranges":[{"startOffset":9104644,"endOffset":9104661,"count":0}],"isBlockCoverage":false},{"functionName":"isPossiblyTypeArgumentPosition","ranges":[{"startOffset":9104699,"endOffset":9104735,"count":0}],"isBlockCoverage":false},{"functionName":"isPostfixUnaryExpression","ranges":[{"startOffset":9104767,"endOffset":9104797,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefixUnaryExpression","ranges":[{"startOffset":9104828,"endOffset":9104857,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifier","ranges":[{"startOffset":9104884,"endOffset":9104909,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierClassElementDeclaration","ranges":[{"startOffset":9104959,"endOffset":9105007,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierPropertyAccessExpression","ranges":[{"startOffset":9105058,"endOffset":9105107,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateIdentifierSymbol","ranges":[{"startOffset":9105140,"endOffset":9105171,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramBundleEmitBuildInfo","ranges":[{"startOffset":9105207,"endOffset":9105241,"count":0}],"isBlockCoverage":false},{"functionName":"isProgramUptoDate","ranges":[{"startOffset":9105266,"endOffset":9105289,"count":0}],"isBlockCoverage":false},{"functionName":"isPrologueDirective","ranges":[{"startOffset":9105316,"endOffset":9105341,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessChain","ranges":[{"startOffset":9105370,"endOffset":9105397,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessEntityNameExpression","ranges":[{"startOffset":9105441,"endOffset":9105483,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessExpression","ranges":[{"startOffset":9105517,"endOffset":9105549,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedName","ranges":[{"startOffset":9105588,"endOffset":9105625,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAccessOrQualifiedNameOrImportTypeNode","ranges":[{"startOffset":9105680,"endOffset":9105733,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyAssignment","ranges":[{"startOffset":9105761,"endOffset":9105787,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDeclaration","ranges":[{"startOffset":9105816,"endOffset":9105843,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyName","ranges":[{"startOffset":9105865,"endOffset":9105885,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyNameLiteral","ranges":[{"startOffset":9105914,"endOffset":9105941,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertySignature","ranges":[{"startOffset":9105968,"endOffset":9105993,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoSetter","ranges":[{"startOffset":9106014,"endOffset":9106033,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypeAccess","ranges":[{"startOffset":9106058,"endOffset":9106081,"count":0}],"isBlockCoverage":false},{"functionName":"isPrototypePropertyAssignment","ranges":[{"startOffset":9106118,"endOffset":9106153,"count":0}],"isBlockCoverage":false},{"functionName":"isPunctuation","ranges":[{"startOffset":9106174,"endOffset":9106193,"count":0}],"isBlockCoverage":false},{"functionName":"isPushOrUnshiftIdentifier","ranges":[{"startOffset":9106226,"endOffset":9106257,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedName","ranges":[{"startOffset":9106280,"endOffset":9106301,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionDotToken","ranges":[{"startOffset":9106327,"endOffset":9106351,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrExclamationToken","ranges":[{"startOffset":9106387,"endOffset":9106421,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionOrPlusOrMinusToken","ranges":[{"startOffset":9106457,"endOffset":9106491,"count":0}],"isBlockCoverage":false},{"functionName":"isQuestionToken","ranges":[{"startOffset":9106514,"endOffset":9106535,"count":0}],"isBlockCoverage":false},{"functionName":"isRawSourceMap","ranges":[{"startOffset":9106557,"endOffset":9106577,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeyword","ranges":[{"startOffset":9106602,"endOffset":9106625,"count":0}],"isBlockCoverage":false},{"functionName":"isReadonlyKeywordOrPlusOrMinusToken","ranges":[{"startOffset":9106668,"endOffset":9106709,"count":0}],"isBlockCoverage":false},{"functionName":"isRecognizedTripleSlashComment","ranges":[{"startOffset":9106747,"endOffset":9106783,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenceFileLocation","ranges":[{"startOffset":9106814,"endOffset":9106843,"count":0}],"isBlockCoverage":false},{"functionName":"isReferencedFile","ranges":[{"startOffset":9106867,"endOffset":9106889,"count":0}],"isBlockCoverage":false},{"functionName":"isRegularExpressionLiteral","ranges":[{"startOffset":9106923,"endOffset":9106955,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireCall","ranges":[{"startOffset":9106976,"endOffset":9106995,"count":0}],"isBlockCoverage":false},{"functionName":"isRequireVariableStatement","ranges":[{"startOffset":9107029,"endOffset":9107061,"count":0}],"isBlockCoverage":false},{"functionName":"isRestParameter","ranges":[{"startOffset":9107084,"endOffset":9107105,"count":0}],"isBlockCoverage":false},{"functionName":"isRestTypeNode","ranges":[{"startOffset":9107127,"endOffset":9107147,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":9107172,"endOffset":9107195,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatementWithFixablePromiseHandler","ranges":[{"startOffset":9107245,"endOffset":9107293,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfAccessExpression","ranges":[{"startOffset":9107330,"endOffset":9107365,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfInstanceofExpression","ranges":[{"startOffset":9107406,"endOffset":9107445,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfPropertyAccess","ranges":[{"startOffset":9107480,"endOffset":9107513,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedName","ranges":[{"startOffset":9107547,"endOffset":9107579,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccess","ranges":[{"startOffset":9107629,"endOffset":9107677,"count":0}],"isBlockCoverage":false},{"functionName":"isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName","ranges":[{"startOffset":9107744,"endOffset":9107809,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":9107833,"endOffset":9107855,"count":0}],"isBlockCoverage":false},{"functionName":"isSameEntityName","ranges":[{"startOffset":9107879,"endOffset":9107901,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiesExpression","ranges":[{"startOffset":9107930,"endOffset":9107957,"count":0}],"isBlockCoverage":false},{"functionName":"isScopeMarker","ranges":[{"startOffset":9107978,"endOffset":9107997,"count":0}],"isBlockCoverage":false},{"functionName":"isSemicolonClassElement","ranges":[{"startOffset":9108028,"endOffset":9108057,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessor","ranges":[{"startOffset":9108078,"endOffset":9108097,"count":0}],"isBlockCoverage":false},{"functionName":"isSetAccessorDeclaration","ranges":[{"startOffset":9108129,"endOffset":9108159,"count":0}],"isBlockCoverage":false},{"functionName":"isShebangTrivia","ranges":[{"startOffset":9108182,"endOffset":9108203,"count":0}],"isBlockCoverage":false},{"functionName":"isShiftOperatorOrHigher","ranges":[{"startOffset":9108234,"endOffset":9108263,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandAmbientModuleSymbol","ranges":[{"startOffset":9108301,"endOffset":9108337,"count":0}],"isBlockCoverage":false},{"functionName":"isShorthandPropertyAssignment","ranges":[{"startOffset":9108374,"endOffset":9108409,"count":0}],"isBlockCoverage":false},{"functionName":"isSignedNumericLiteral","ranges":[{"startOffset":9108439,"endOffset":9108467,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleCopiableExpression","ranges":[{"startOffset":9108501,"endOffset":9108533,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleInlineableExpression","ranges":[{"startOffset":9108569,"endOffset":9108603,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameter","ranges":[{"startOffset":9108628,"endOffset":9108651,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParameterList","ranges":[{"startOffset":9108680,"endOffset":9108707,"count":0}],"isBlockCoverage":false},{"functionName":"isSingleOrDoubleQuote","ranges":[{"startOffset":9108736,"endOffset":9108763,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFile","ranges":[{"startOffset":9108783,"endOffset":9108801,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileFromLibrary","ranges":[{"startOffset":9108832,"endOffset":9108861,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileJS","ranges":[{"startOffset":9108883,"endOffset":9108903,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJS","ranges":[{"startOffset":9108928,"endOffset":9108951,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceFileNotJson","ranges":[{"startOffset":9108978,"endOffset":9109003,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceMapping","ranges":[{"startOffset":9109026,"endOffset":9109047,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecialPropertyDeclaration","ranges":[{"startOffset":9109083,"endOffset":9109117,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadAssignment","ranges":[{"startOffset":9109143,"endOffset":9109167,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":9109190,"endOffset":9109211,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":9109230,"endOffset":9109247,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementButNotDeclaration","ranges":[{"startOffset":9109283,"endOffset":9109317,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":9109343,"endOffset":9109367,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementWithLocals","ranges":[{"startOffset":9109396,"endOffset":9109423,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":9109439,"endOffset":9109453,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticModifier","ranges":[{"startOffset":9109477,"endOffset":9109499,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":9109515,"endOffset":9109529,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAKeyword","ranges":[{"startOffset":9109553,"endOffset":9109575,"count":0}],"isBlockCoverage":false},{"functionName":"isStringANonContextualKeyword","ranges":[{"startOffset":9109612,"endOffset":9109647,"count":0}],"isBlockCoverage":false},{"functionName":"isStringAndEmptyAnonymousObjectIntersection","ranges":[{"startOffset":9109698,"endOffset":9109747,"count":0}],"isBlockCoverage":false},{"functionName":"isStringDoubleQuoted","ranges":[{"startOffset":9109775,"endOffset":9109801,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteral","ranges":[{"startOffset":9109824,"endOffset":9109845,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralLike","ranges":[{"startOffset":9109872,"endOffset":9109897,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrJsxExpression","ranges":[{"startOffset":9109935,"endOffset":9109971,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralOrTemplate","ranges":[{"startOffset":9110004,"endOffset":9110035,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrNumericLiteralLike","ranges":[{"startOffset":9110071,"endOffset":9110105,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrRegularExpressionOrTemplateLiteral","ranges":[{"startOffset":9110157,"endOffset":9110207,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTextContainingNode","ranges":[{"startOffset":9110241,"endOffset":9110273,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperCall","ranges":[{"startOffset":9110292,"endOffset":9110309,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperKeyword","ranges":[{"startOffset":9110331,"endOffset":9110351,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperOrSuperProperty","ranges":[{"startOffset":9110381,"endOffset":9110409,"count":0}],"isBlockCoverage":false},{"functionName":"isSuperProperty","ranges":[{"startOffset":9110432,"endOffset":9110453,"count":0}],"isBlockCoverage":false},{"functionName":"isSupportedSourceFileName","ranges":[{"startOffset":9110486,"endOffset":9110517,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":9110542,"endOffset":9110565,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxList","ranges":[{"startOffset":9110585,"endOffset":9110603,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticExpression","ranges":[{"startOffset":9110632,"endOffset":9110659,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntheticReference","ranges":[{"startOffset":9110687,"endOffset":9110713,"count":0}],"isBlockCoverage":false},{"functionName":"isTagName","ranges":[{"startOffset":9110730,"endOffset":9110745,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":9110779,"endOffset":9110811,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateTag","ranges":[{"startOffset":9110838,"endOffset":9110863,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateExpression","ranges":[{"startOffset":9110891,"endOffset":9110917,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateHead","ranges":[{"startOffset":9110939,"endOffset":9110959,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":9110984,"endOffset":9111007,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralKind","ranges":[{"startOffset":9111036,"endOffset":9111063,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralToken","ranges":[{"startOffset":9111093,"endOffset":9111121,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeNode","ranges":[{"startOffset":9111154,"endOffset":9111185,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteralTypeSpan","ranges":[{"startOffset":9111218,"endOffset":9111249,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddle","ranges":[{"startOffset":9111273,"endOffset":9111295,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateMiddleOrTemplateTail","ranges":[{"startOffset":9111333,"endOffset":9111369,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateSpan","ranges":[{"startOffset":9111391,"endOffset":9111411,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateTail","ranges":[{"startOffset":9111433,"endOffset":9111453,"count":0}],"isBlockCoverage":false},{"functionName":"isTextWhiteSpaceLike","ranges":[{"startOffset":9111481,"endOffset":9111507,"count":0}],"isBlockCoverage":false},{"functionName":"isThis","ranges":[{"startOffset":9111521,"endOffset":9111533,"count":0}],"isBlockCoverage":false},{"functionName":"isThisContainerOrFunctionBlock","ranges":[{"startOffset":9111571,"endOffset":9111607,"count":0}],"isBlockCoverage":false},{"functionName":"isThisIdentifier","ranges":[{"startOffset":9111631,"endOffset":9111653,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInTypeQuery","ranges":[{"startOffset":9111678,"endOffset":9111701,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedDeclaration","ranges":[{"startOffset":9111737,"endOffset":9111771,"count":0}],"isBlockCoverage":false},{"functionName":"isThisInitializedObjectBindingExpression","ranges":[{"startOffset":9111819,"endOffset":9111865,"count":0}],"isBlockCoverage":false},{"functionName":"isThisProperty","ranges":[{"startOffset":9111887,"endOffset":9111907,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeNode","ranges":[{"startOffset":9111929,"endOffset":9111949,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeParameter","ranges":[{"startOffset":9111976,"endOffset":9112001,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypePredicate","ranges":[{"startOffset":9112028,"endOffset":9112053,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":9112077,"endOffset":9112099,"count":0}],"isBlockCoverage":false},{"functionName":"isToken","ranges":[{"startOffset":9112114,"endOffset":9112127,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenKind","ranges":[{"startOffset":9112146,"endOffset":9112163,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceEnabled","ranges":[{"startOffset":9112185,"endOffset":9112205,"count":0}],"isBlockCoverage":false},{"functionName":"isTransientSymbol","ranges":[{"startOffset":9112230,"endOffset":9112253,"count":0}],"isBlockCoverage":false},{"functionName":"isTrivia","ranges":[{"startOffset":9112269,"endOffset":9112283,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":9112305,"endOffset":9112325,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeNode","ranges":[{"startOffset":9112348,"endOffset":9112369,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":9112388,"endOffset":9112405,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAliasDeclaration","ranges":[{"startOffset":9112435,"endOffset":9112463,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAssertionExpression","ranges":[{"startOffset":9112496,"endOffset":9112527,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDeclaration","ranges":[{"startOffset":9112552,"endOffset":9112575,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeElement","ranges":[{"startOffset":9112596,"endOffset":9112615,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeyword","ranges":[{"startOffset":9112636,"endOffset":9112655,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordToken","ranges":[{"startOffset":9112681,"endOffset":9112705,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeKeywordTokenOrIdentifier","ranges":[{"startOffset":9112743,"endOffset":9112779,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeLiteralNode","ranges":[{"startOffset":9112804,"endOffset":9112827,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNode","ranges":[{"startOffset":9112845,"endOffset":9112861,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeNodeKind","ranges":[{"startOffset":9112883,"endOffset":9112903,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOfExpression","ranges":[{"startOffset":9112929,"endOffset":9112953,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyExportDeclaration","ranges":[{"startOffset":9112988,"endOffset":9113021,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportDeclaration","ranges":[{"startOffset":9113056,"endOffset":9113089,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOnlyImportOrExportDeclaration","ranges":[{"startOffset":9113132,"endOffset":9113173,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeOperatorNode","ranges":[{"startOffset":9113199,"endOffset":9113223,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":9113257,"endOffset":9113289,"count":0}],"isBlockCoverage":false},{"functionName":"isTypePredicateNode","ranges":[{"startOffset":9113316,"endOffset":9113341,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeQueryNode","ranges":[{"startOffset":9113364,"endOffset":9113385,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceNode","ranges":[{"startOffset":9113412,"endOffset":9113437,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeReferenceType","ranges":[{"startOffset":9113464,"endOffset":9113489,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeUsableAsPropertyName","ranges":[{"startOffset":9113523,"endOffset":9113555,"count":0}],"isBlockCoverage":false},{"functionName":"isUMDExportSymbol","ranges":[{"startOffset":9113580,"endOffset":9113603,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":9113628,"endOffset":9113651,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpressionWithWrite","ranges":[{"startOffset":9113685,"endOffset":9113717,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodeIdentifierStart","ranges":[{"startOffset":9113749,"endOffset":9113779,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeNode","ranges":[{"startOffset":9113802,"endOffset":9113823,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedNode","ranges":[{"startOffset":9113845,"endOffset":9113865,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedPrepend","ranges":[{"startOffset":9113890,"endOffset":9113913,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedSource","ranges":[{"startOffset":9113937,"endOffset":9113959,"count":0}],"isBlockCoverage":false},{"functionName":"isUnparsedTextLike","ranges":[{"startOffset":9113985,"endOffset":9114009,"count":0}],"isBlockCoverage":false},{"functionName":"isUrl","ranges":[{"startOffset":9114022,"endOffset":9114033,"count":0}],"isBlockCoverage":false},{"functionName":"isValidBigIntString","ranges":[{"startOffset":9114060,"endOffset":9114085,"count":0}],"isBlockCoverage":false},{"functionName":"isValidESSymbolDeclaration","ranges":[{"startOffset":9114119,"endOffset":9114151,"count":0}],"isBlockCoverage":false},{"functionName":"isValidTypeOnlyAliasUseSite","ranges":[{"startOffset":9114186,"endOffset":9114219,"count":0}],"isBlockCoverage":false},{"functionName":"isValueSignatureDeclaration","ranges":[{"startOffset":9114254,"endOffset":9114287,"count":0}],"isBlockCoverage":false},{"functionName":"isVarAwaitUsing","ranges":[{"startOffset":9114310,"endOffset":9114331,"count":0}],"isBlockCoverage":false},{"functionName":"isVarConst","ranges":[{"startOffset":9114349,"endOffset":9114365,"count":0}],"isBlockCoverage":false},{"functionName":"isVarUsing","ranges":[{"startOffset":9114383,"endOffset":9114399,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":9114428,"endOffset":9114455,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInVariableStatement","ranges":[{"startOffset":9114503,"endOffset":9114549,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToBareOrAccessedRequire","ranges":[{"startOffset":9114612,"endOffset":9114673,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationInitializedToRequire","ranges":[{"startOffset":9114722,"endOffset":9114769,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclarationList","ranges":[{"startOffset":9114802,"endOffset":9114833,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLike","ranges":[{"startOffset":9114855,"endOffset":9114875,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableLikeOrAccessor","ranges":[{"startOffset":9114907,"endOffset":9114937,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableStatement","ranges":[{"startOffset":9114964,"endOffset":9114989,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidExpression","ranges":[{"startOffset":9115013,"endOffset":9115035,"count":0}],"isBlockCoverage":false},{"functionName":"isWatchSet","ranges":[{"startOffset":9115053,"endOffset":9115069,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":9115093,"endOffset":9115115,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceLike","ranges":[{"startOffset":9115139,"endOffset":9115161,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpaceSingleLine","ranges":[{"startOffset":9115191,"endOffset":9115219,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":9115242,"endOffset":9115263,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteAccess","ranges":[{"startOffset":9115284,"endOffset":9115303,"count":0}],"isBlockCoverage":false},{"functionName":"isWriteOnlyAccess","ranges":[{"startOffset":9115328,"endOffset":9115351,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":9115376,"endOffset":9115399,"count":0}],"isBlockCoverage":false},{"functionName":"jsxModeNeedsExplicitImport","ranges":[{"startOffset":9115433,"endOffset":9115465,"count":0}],"isBlockCoverage":false},{"functionName":"keywordPart","ranges":[{"startOffset":9115484,"endOffset":9115501,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":9115513,"endOffset":9115523,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":9115546,"endOffset":9115567,"count":0}],"isBlockCoverage":false},{"functionName":"length","ranges":[{"startOffset":9115581,"endOffset":9115593,"count":0}],"isBlockCoverage":false},{"functionName":"libMap","ranges":[{"startOffset":9115607,"endOffset":9115619,"count":0}],"isBlockCoverage":false},{"functionName":"libs","ranges":[{"startOffset":9115631,"endOffset":9115641,"count":0}],"isBlockCoverage":false},{"functionName":"lineBreakPart","ranges":[{"startOffset":9115662,"endOffset":9115681,"count":0}],"isBlockCoverage":false},{"functionName":"linkNamePart","ranges":[{"startOffset":9115701,"endOffset":9115719,"count":0}],"isBlockCoverage":false},{"functionName":"linkPart","ranges":[{"startOffset":9115735,"endOffset":9115749,"count":0}],"isBlockCoverage":false},{"functionName":"linkTextPart","ranges":[{"startOffset":9115769,"endOffset":9115787,"count":0}],"isBlockCoverage":false},{"functionName":"listFiles","ranges":[{"startOffset":9115804,"endOffset":9115819,"count":0}],"isBlockCoverage":false},{"functionName":"loadModuleFromGlobalCache","ranges":[{"startOffset":9115852,"endOffset":9115883,"count":0}],"isBlockCoverage":false},{"functionName":"loadWithModeAwareCache","ranges":[{"startOffset":9115913,"endOffset":9115941,"count":0}],"isBlockCoverage":false},{"functionName":"makeIdentifierFromModuleName","ranges":[{"startOffset":9115977,"endOffset":9116011,"count":0}],"isBlockCoverage":false},{"functionName":"makeImport","ranges":[{"startOffset":9116029,"endOffset":9116045,"count":0}],"isBlockCoverage":false},{"functionName":"makeImportIfNecessary","ranges":[{"startOffset":9116074,"endOffset":9116101,"count":0}],"isBlockCoverage":false},{"functionName":"makeStringLiteral","ranges":[{"startOffset":9116126,"endOffset":9116149,"count":0}],"isBlockCoverage":false},{"functionName":"mangleScopedPackageName","ranges":[{"startOffset":9116180,"endOffset":9116209,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":9116220,"endOffset":9116229,"count":0}],"isBlockCoverage":false},{"functionName":"mapAllOrFail","ranges":[{"startOffset":9116249,"endOffset":9116267,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefined","ranges":[{"startOffset":9116285,"endOffset":9116301,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedEntries","ranges":[{"startOffset":9116326,"endOffset":9116349,"count":0}],"isBlockCoverage":false},{"functionName":"mapDefinedIterator","ranges":[{"startOffset":9116375,"endOffset":9116399,"count":0}],"isBlockCoverage":false},{"functionName":"mapEntries","ranges":[{"startOffset":9116417,"endOffset":9116433,"count":0}],"isBlockCoverage":false},{"functionName":"mapIterator","ranges":[{"startOffset":9116452,"endOffset":9116469,"count":0}],"isBlockCoverage":false},{"functionName":"mapOneOrMany","ranges":[{"startOffset":9116489,"endOffset":9116507,"count":0}],"isBlockCoverage":false},{"functionName":"mapToDisplayParts","ranges":[{"startOffset":9116532,"endOffset":9116555,"count":0}],"isBlockCoverage":false},{"functionName":"matchFiles","ranges":[{"startOffset":9116573,"endOffset":9116589,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatternOrExact","ranges":[{"startOffset":9116616,"endOffset":9116641,"count":0}],"isBlockCoverage":false},{"functionName":"matchedText","ranges":[{"startOffset":9116660,"endOffset":9116677,"count":0}],"isBlockCoverage":false},{"functionName":"matchesExclude","ranges":[{"startOffset":9116699,"endOffset":9116719,"count":0}],"isBlockCoverage":false},{"functionName":"maybeBind","ranges":[{"startOffset":9116736,"endOffset":9116751,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSetLocalizedDiagnosticMessages","ranges":[{"startOffset":9116794,"endOffset":9116835,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":9116850,"endOffset":9116863,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeCached","ranges":[{"startOffset":9116884,"endOffset":9116903,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeOne","ranges":[{"startOffset":9116921,"endOffset":9116937,"count":0}],"isBlockCoverage":false},{"functionName":"memoizeWeak","ranges":[{"startOffset":9116956,"endOffset":9116973,"count":0}],"isBlockCoverage":false},{"functionName":"metadataHelper","ranges":[{"startOffset":9116995,"endOffset":9117015,"count":0}],"isBlockCoverage":false},{"functionName":"min","ranges":[{"startOffset":9117026,"endOffset":9117035,"count":0}],"isBlockCoverage":false},{"functionName":"minAndMax","ranges":[{"startOffset":9117052,"endOffset":9117067,"count":0}],"isBlockCoverage":false},{"functionName":"missingFileModifiedTime","ranges":[{"startOffset":9117098,"endOffset":9117127,"count":0}],"isBlockCoverage":false},{"functionName":"modifierToFlag","ranges":[{"startOffset":9117149,"endOffset":9117169,"count":0}],"isBlockCoverage":false},{"functionName":"modifiersToFlags","ranges":[{"startOffset":9117193,"endOffset":9117215,"count":0}],"isBlockCoverage":false},{"functionName":"moduleOptionDeclaration","ranges":[{"startOffset":9117246,"endOffset":9117275,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionIsEqualTo","ranges":[{"startOffset":9117308,"endOffset":9117339,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionNameAndModeGetter","ranges":[{"startOffset":9117380,"endOffset":9117419,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionOptionDeclarations","ranges":[{"startOffset":9117461,"endOffset":9117501,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionSupportsPackageJsonExportsAndImports","ranges":[{"startOffset":9117561,"endOffset":9117619,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolutionUsesNodeModules","ranges":[{"startOffset":9117658,"endOffset":9117695,"count":0}],"isBlockCoverage":false},{"functionName":"moduleSpecifiers","ranges":[{"startOffset":9117719,"endOffset":9117752,"count":0}],"isBlockCoverage":false},{"functionName":"moveEmitHelpers","ranges":[{"startOffset":9117775,"endOffset":9117796,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangeEnd","ranges":[{"startOffset":9117816,"endOffset":9117834,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastDecorators","ranges":[{"startOffset":9117865,"endOffset":9117894,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePastModifiers","ranges":[{"startOffset":9117924,"endOffset":9117952,"count":0}],"isBlockCoverage":false},{"functionName":"moveRangePos","ranges":[{"startOffset":9117972,"endOffset":9117990,"count":0}],"isBlockCoverage":false},{"functionName":"moveSyntheticComments","ranges":[{"startOffset":9118019,"endOffset":9118046,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMap","ranges":[{"startOffset":9118063,"endOffset":9118078,"count":0}],"isBlockCoverage":false},{"functionName":"mutateMapSkippingNewValues","ranges":[{"startOffset":9118112,"endOffset":9118144,"count":0}],"isBlockCoverage":false},{"functionName":"needsParentheses","ranges":[{"startOffset":9118168,"endOffset":9118190,"count":0}],"isBlockCoverage":false},{"functionName":"needsScopeMarker","ranges":[{"startOffset":9118214,"endOffset":9118236,"count":0}],"isBlockCoverage":false},{"functionName":"newCaseClauseTracker","ranges":[{"startOffset":9118264,"endOffset":9118290,"count":0}],"isBlockCoverage":false},{"functionName":"newPrivateEnvironment","ranges":[{"startOffset":9118319,"endOffset":9118346,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitNotification","ranges":[{"startOffset":9118372,"endOffset":9118396,"count":0}],"isBlockCoverage":false},{"functionName":"noEmitSubstitution","ranges":[{"startOffset":9118422,"endOffset":9118446,"count":0}],"isBlockCoverage":false},{"functionName":"noTransformers","ranges":[{"startOffset":9118468,"endOffset":9118488,"count":0}],"isBlockCoverage":false},{"functionName":"noTruncationMaximumTruncationLength","ranges":[{"startOffset":9118531,"endOffset":9118572,"count":0}],"isBlockCoverage":false},{"functionName":"nodeCanBeDecorated","ranges":[{"startOffset":9118598,"endOffset":9118622,"count":0}],"isBlockCoverage":false},{"functionName":"nodeHasName","ranges":[{"startOffset":9118641,"endOffset":9118658,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsDecorated","ranges":[{"startOffset":9118681,"endOffset":9118702,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsMissing","ranges":[{"startOffset":9118723,"endOffset":9118742,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsPresent","ranges":[{"startOffset":9118763,"endOffset":9118782,"count":0}],"isBlockCoverage":false},{"functionName":"nodeIsSynthesized","ranges":[{"startOffset":9118807,"endOffset":9118830,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModuleNameResolver","ranges":[{"startOffset":9118860,"endOffset":9118888,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModulesPathPart","ranges":[{"startOffset":9118915,"endOffset":9118940,"count":0}],"isBlockCoverage":false},{"functionName":"nodeNextJsonConfigResolver","ranges":[{"startOffset":9118974,"endOffset":9119006,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOrChildIsDecorated","ranges":[{"startOffset":9119036,"endOffset":9119064,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOverlapsWithStartEnd","ranges":[{"startOffset":9119096,"endOffset":9119126,"count":0}],"isBlockCoverage":false},{"functionName":"nodePosToString","ranges":[{"startOffset":9119149,"endOffset":9119170,"count":0}],"isBlockCoverage":false},{"functionName":"nodeSeenTracker","ranges":[{"startOffset":9119193,"endOffset":9119214,"count":0}],"isBlockCoverage":false},{"functionName":"nodeStartsNewLexicalEnvironment","ranges":[{"startOffset":9119253,"endOffset":9119290,"count":0}],"isBlockCoverage":false},{"functionName":"nodeToDisplayParts","ranges":[{"startOffset":9119316,"endOffset":9119340,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":9119352,"endOffset":9119362,"count":0}],"isBlockCoverage":false},{"functionName":"noopFileWatcher","ranges":[{"startOffset":9119385,"endOffset":9119406,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":9119427,"endOffset":9119446,"count":10}],"isBlockCoverage":true},{"functionName":"normalizeSlashes","ranges":[{"startOffset":9119470,"endOffset":9119492,"count":0}],"isBlockCoverage":false},{"functionName":"not","ranges":[{"startOffset":9119503,"endOffset":9119512,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":9119534,"endOffset":9119554,"count":0}],"isBlockCoverage":false},{"functionName":"notImplementedResolver","ranges":[{"startOffset":9119584,"endOffset":9119612,"count":0}],"isBlockCoverage":false},{"functionName":"nullNodeConverters","ranges":[{"startOffset":9119638,"endOffset":9119662,"count":0}],"isBlockCoverage":false},{"functionName":"nullParenthesizerRules","ranges":[{"startOffset":9119692,"endOffset":9119720,"count":0}],"isBlockCoverage":false},{"functionName":"nullTransformationContext","ranges":[{"startOffset":9119753,"endOffset":9119784,"count":0}],"isBlockCoverage":false},{"functionName":"objectAllocator","ranges":[{"startOffset":9119807,"endOffset":9119828,"count":0}],"isBlockCoverage":false},{"functionName":"operatorPart","ranges":[{"startOffset":9119848,"endOffset":9119866,"count":0}],"isBlockCoverage":false},{"functionName":"optionDeclarations","ranges":[{"startOffset":9119892,"endOffset":9119916,"count":0}],"isBlockCoverage":false},{"functionName":"optionMapToObject","ranges":[{"startOffset":9119941,"endOffset":9119964,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAffectingProgramStructure","ranges":[{"startOffset":9120004,"endOffset":9120042,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForBuild","ranges":[{"startOffset":9120065,"endOffset":9120086,"count":0}],"isBlockCoverage":false},{"functionName":"optionsForWatch","ranges":[{"startOffset":9120109,"endOffset":9120130,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveChanges","ranges":[{"startOffset":9120156,"endOffset":9120180,"count":0}],"isBlockCoverage":false},{"functionName":"optionsHaveModuleResolutionChanges","ranges":[{"startOffset":9120222,"endOffset":9120262,"count":0}],"isBlockCoverage":false},{"functionName":"or","ranges":[{"startOffset":9120272,"endOffset":9120280,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItem","ranges":[{"startOffset":9120305,"endOffset":9120328,"count":0}],"isBlockCoverage":false},{"functionName":"orderedRemoveItemAt","ranges":[{"startOffset":9120355,"endOffset":9120380,"count":0}],"isBlockCoverage":false},{"functionName":"outFile","ranges":[{"startOffset":9120395,"endOffset":9120408,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToPackageName","ranges":[{"startOffset":9120438,"endOffset":9120466,"count":0}],"isBlockCoverage":false},{"functionName":"packageIdToString","ranges":[{"startOffset":9120491,"endOffset":9120514,"count":0}],"isBlockCoverage":false},{"functionName":"paramHelper","ranges":[{"startOffset":9120533,"endOffset":9120550,"count":0}],"isBlockCoverage":false},{"functionName":"parameterIsThisKeyword","ranges":[{"startOffset":9120580,"endOffset":9120608,"count":0}],"isBlockCoverage":false},{"functionName":"parameterNamePart","ranges":[{"startOffset":9120633,"endOffset":9120656,"count":0}],"isBlockCoverage":false},{"functionName":"parseBaseNodeFactory","ranges":[{"startOffset":9120684,"endOffset":9120710,"count":0}],"isBlockCoverage":false},{"functionName":"parseBigInt","ranges":[{"startOffset":9120729,"endOffset":9120746,"count":0}],"isBlockCoverage":false},{"functionName":"parseBuildCommand","ranges":[{"startOffset":9120771,"endOffset":9120794,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLine","ranges":[{"startOffset":9120818,"endOffset":9120840,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommandLineWorker","ranges":[{"startOffset":9120870,"endOffset":9120898,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileTextToJson","ranges":[{"startOffset":9120931,"endOffset":9120962,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigFileWithSystem","ranges":[{"startOffset":9120995,"endOffset":9121026,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfigHostFromCompilerHostLike","ranges":[{"startOffset":9121069,"endOffset":9121110,"count":0}],"isBlockCoverage":false},{"functionName":"parseCustomTypeOption","ranges":[{"startOffset":9121139,"endOffset":9121166,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedEntityName","ranges":[{"startOffset":9121197,"endOffset":9121226,"count":0}],"isBlockCoverage":false},{"functionName":"parseIsolatedJSDocComment","ranges":[{"startOffset":9121259,"endOffset":9121290,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSDocTypeExpressionForTests","ranges":[{"startOffset":9121330,"endOffset":9121368,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonConfigFileContent","ranges":[{"startOffset":9121402,"endOffset":9121434,"count":2}],"isBlockCoverage":true},{"functionName":"parseJsonSourceFileConfigFileContent","ranges":[{"startOffset":9121478,"endOffset":9121520,"count":0}],"isBlockCoverage":false},{"functionName":"parseJsonText","ranges":[{"startOffset":9121541,"endOffset":9121560,"count":0}],"isBlockCoverage":false},{"functionName":"parseListTypeOption","ranges":[{"startOffset":9121587,"endOffset":9121612,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeFactory","ranges":[{"startOffset":9121636,"endOffset":9121658,"count":0}],"isBlockCoverage":false},{"functionName":"parseNodeModuleFromPath","ranges":[{"startOffset":9121689,"endOffset":9121718,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":9121742,"endOffset":9121764,"count":0}],"isBlockCoverage":false},{"functionName":"parsePseudoBigInt","ranges":[{"startOffset":9121789,"endOffset":9121812,"count":0}],"isBlockCoverage":false},{"functionName":"parseValidBigInt","ranges":[{"startOffset":9121836,"endOffset":9121858,"count":0}],"isBlockCoverage":false},{"functionName":"patchWriteFileEnsuringDirectory","ranges":[{"startOffset":9121897,"endOffset":9121934,"count":0}],"isBlockCoverage":false},{"functionName":"pathContainsNodeModules","ranges":[{"startOffset":9121965,"endOffset":9121994,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsAbsolute","ranges":[{"startOffset":9122016,"endOffset":9122036,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsBareSpecifier","ranges":[{"startOffset":9122063,"endOffset":9122088,"count":0}],"isBlockCoverage":false},{"functionName":"pathIsRelative","ranges":[{"startOffset":9122110,"endOffset":9122130,"count":0}],"isBlockCoverage":false},{"functionName":"patternText","ranges":[{"startOffset":9122149,"endOffset":9122166,"count":0}],"isBlockCoverage":false},{"functionName":"perfLogger","ranges":[{"startOffset":9122184,"endOffset":9122200,"count":0}],"isBlockCoverage":false},{"functionName":"performIncrementalCompilation","ranges":[{"startOffset":9122237,"endOffset":9122272,"count":0}],"isBlockCoverage":false},{"functionName":"performance","ranges":[{"startOffset":9122291,"endOffset":9122319,"count":0}],"isBlockCoverage":false},{"functionName":"plainJSErrors","ranges":[{"startOffset":9122340,"endOffset":9122359,"count":0}],"isBlockCoverage":false},{"functionName":"positionBelongsToNode","ranges":[{"startOffset":9122388,"endOffset":9122415,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsASICandidate","ranges":[{"startOffset":9122445,"endOffset":9122473,"count":0}],"isBlockCoverage":false},{"functionName":"positionIsSynthesized","ranges":[{"startOffset":9122502,"endOffset":9122529,"count":0}],"isBlockCoverage":false},{"functionName":"positionsAreOnSameLine","ranges":[{"startOffset":9122559,"endOffset":9122587,"count":0}],"isBlockCoverage":false},{"functionName":"preProcessFile","ranges":[{"startOffset":9122609,"endOffset":9122629,"count":0}],"isBlockCoverage":false},{"functionName":"probablyUsesSemicolons","ranges":[{"startOffset":9122659,"endOffset":9122687,"count":0}],"isBlockCoverage":false},{"functionName":"processCommentPragmas","ranges":[{"startOffset":9122716,"endOffset":9122743,"count":0}],"isBlockCoverage":false},{"functionName":"processPragmasIntoFields","ranges":[{"startOffset":9122775,"endOffset":9122805,"count":0}],"isBlockCoverage":false},{"functionName":"processTaggedTemplateExpression","ranges":[{"startOffset":9122844,"endOffset":9122881,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsEsModules","ranges":[{"startOffset":9122913,"endOffset":9122943,"count":0}],"isBlockCoverage":false},{"functionName":"programContainsModules","ranges":[{"startOffset":9122973,"endOffset":9123001,"count":0}],"isBlockCoverage":false},{"functionName":"projectReferenceIsEqualTo","ranges":[{"startOffset":9123034,"endOffset":9123065,"count":0}],"isBlockCoverage":false},{"functionName":"propKeyHelper","ranges":[{"startOffset":9123086,"endOffset":9123105,"count":0}],"isBlockCoverage":false},{"functionName":"propertyNamePart","ranges":[{"startOffset":9123129,"endOffset":9123151,"count":0}],"isBlockCoverage":false},{"functionName":"pseudoBigIntToString","ranges":[{"startOffset":9123179,"endOffset":9123205,"count":0}],"isBlockCoverage":false},{"functionName":"punctuationPart","ranges":[{"startOffset":9123228,"endOffset":9123249,"count":0}],"isBlockCoverage":false},{"functionName":"pushIfUnique","ranges":[{"startOffset":9123269,"endOffset":9123287,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":9123300,"endOffset":9123311,"count":0}],"isBlockCoverage":false},{"functionName":"quotePreferenceFromString","ranges":[{"startOffset":9123344,"endOffset":9123375,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPosition","ranges":[{"startOffset":9123404,"endOffset":9123431,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsPositionExclusive","ranges":[{"startOffset":9123469,"endOffset":9123505,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRange","ranges":[{"startOffset":9123531,"endOffset":9123555,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsRangeExclusive","ranges":[{"startOffset":9123590,"endOffset":9123623,"count":0}],"isBlockCoverage":false},{"functionName":"rangeContainsStartEnd","ranges":[{"startOffset":9123652,"endOffset":9123679,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndIsOnSameLineAsRangeStart","ranges":[{"startOffset":9123719,"endOffset":9123757,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEndPositionsAreOnSameLine","ranges":[{"startOffset":9123795,"endOffset":9123831,"count":0}],"isBlockCoverage":false},{"functionName":"rangeEquals","ranges":[{"startOffset":9123850,"endOffset":9123867,"count":0}],"isBlockCoverage":false},{"functionName":"rangeIsOnSingleLine","ranges":[{"startOffset":9123894,"endOffset":9123919,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfNode","ranges":[{"startOffset":9123938,"endOffset":9123955,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOfTypeParameters","ranges":[{"startOffset":9123984,"endOffset":9124011,"count":0}],"isBlockCoverage":false},{"functionName":"rangeOverlapsWithStartEnd","ranges":[{"startOffset":9124044,"endOffset":9124075,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartIsOnSameLineAsRangeEnd","ranges":[{"startOffset":9124115,"endOffset":9124153,"count":0}],"isBlockCoverage":false},{"functionName":"rangeStartPositionsAreOnSameLine","ranges":[{"startOffset":9124193,"endOffset":9124231,"count":0}],"isBlockCoverage":false},{"functionName":"readBuilderProgram","ranges":[{"startOffset":9124257,"endOffset":9124281,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigFile","ranges":[{"startOffset":9124303,"endOffset":9124323,"count":2}],"isBlockCoverage":true},{"functionName":"readHelper","ranges":[{"startOffset":9124341,"endOffset":9124357,"count":0}],"isBlockCoverage":false},{"functionName":"readJson","ranges":[{"startOffset":9124373,"endOffset":9124387,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonConfigFile","ranges":[{"startOffset":9124413,"endOffset":9124437,"count":0}],"isBlockCoverage":false},{"functionName":"readJsonOrUndefined","ranges":[{"startOffset":9124464,"endOffset":9124489,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachLeadingCommentRange","ranges":[{"startOffset":9124526,"endOffset":9124561,"count":0}],"isBlockCoverage":false},{"functionName":"reduceEachTrailingCommentRange","ranges":[{"startOffset":9124599,"endOffset":9124635,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeft","ranges":[{"startOffset":9124653,"endOffset":9124669,"count":0}],"isBlockCoverage":false},{"functionName":"reduceLeftIterator","ranges":[{"startOffset":9124695,"endOffset":9124719,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":9124747,"endOffset":9124773,"count":0}],"isBlockCoverage":false},{"functionName":"refactor","ranges":[{"startOffset":9124789,"endOffset":9124814,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":9124834,"endOffset":9124852,"count":0}],"isBlockCoverage":false},{"functionName":"relativeComplement","ranges":[{"startOffset":9124878,"endOffset":9124902,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllComments","ranges":[{"startOffset":9124927,"endOffset":9124950,"count":0}],"isBlockCoverage":false},{"functionName":"removeEmitHelper","ranges":[{"startOffset":9124974,"endOffset":9124996,"count":0}],"isBlockCoverage":false},{"functionName":"removeExtension","ranges":[{"startOffset":9125019,"endOffset":9125040,"count":0}],"isBlockCoverage":false},{"functionName":"removeFileExtension","ranges":[{"startOffset":9125067,"endOffset":9125092,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPath","ranges":[{"startOffset":9125117,"endOffset":9125140,"count":0}],"isBlockCoverage":false},{"functionName":"removeMinAndVersionNumbers","ranges":[{"startOffset":9125174,"endOffset":9125206,"count":0}],"isBlockCoverage":false},{"functionName":"removeOptionality","ranges":[{"startOffset":9125231,"endOffset":9125254,"count":0}],"isBlockCoverage":false},{"functionName":"removePrefix","ranges":[{"startOffset":9125274,"endOffset":9125292,"count":0}],"isBlockCoverage":false},{"functionName":"removeSuffix","ranges":[{"startOffset":9125312,"endOffset":9125330,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":9125370,"endOffset":9125408,"count":0}],"isBlockCoverage":false},{"functionName":"repeatString","ranges":[{"startOffset":9125428,"endOffset":9125446,"count":0}],"isBlockCoverage":false},{"functionName":"replaceElement","ranges":[{"startOffset":9125468,"endOffset":9125488,"count":0}],"isBlockCoverage":false},{"functionName":"replaceFirstStar","ranges":[{"startOffset":9125512,"endOffset":9125534,"count":0}],"isBlockCoverage":false},{"functionName":"resolutionExtensionIsTSOrJson","ranges":[{"startOffset":9125571,"endOffset":9125606,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConfigFileProjectName","ranges":[{"startOffset":9125642,"endOffset":9125676,"count":0}],"isBlockCoverage":false},{"functionName":"resolveJSModule","ranges":[{"startOffset":9125699,"endOffset":9125720,"count":0}],"isBlockCoverage":false},{"functionName":"resolveLibrary","ranges":[{"startOffset":9125742,"endOffset":9125762,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleName","ranges":[{"startOffset":9125787,"endOffset":9125810,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModuleNameFromCache","ranges":[{"startOffset":9125844,"endOffset":9125876,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageNameToPackageJson","ranges":[{"startOffset":9125915,"endOffset":9125952,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePath","ranges":[{"startOffset":9125971,"endOffset":9125988,"count":0}],"isBlockCoverage":false},{"functionName":"resolveProjectReferencePath","ranges":[{"startOffset":9126023,"endOffset":9126056,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTripleslashReference","ranges":[{"startOffset":9126091,"endOffset":9126124,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTypeReferenceDirective","ranges":[{"startOffset":9126161,"endOffset":9126196,"count":0}],"isBlockCoverage":false},{"functionName":"resolvingEmptyArray","ranges":[{"startOffset":9126223,"endOffset":9126248,"count":0}],"isBlockCoverage":false},{"functionName":"restHelper","ranges":[{"startOffset":9126266,"endOffset":9126282,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":9126301,"endOffset":9126318,"count":0}],"isBlockCoverage":false},{"functionName":"returnNoopFileWatcher","ranges":[{"startOffset":9126347,"endOffset":9126374,"count":0}],"isBlockCoverage":false},{"functionName":"returnTrue","ranges":[{"startOffset":9126392,"endOffset":9126408,"count":0}],"isBlockCoverage":false},{"functionName":"returnUndefined","ranges":[{"startOffset":9126431,"endOffset":9126452,"count":0}],"isBlockCoverage":false},{"functionName":"returnsPromise","ranges":[{"startOffset":9126474,"endOffset":9126494,"count":0}],"isBlockCoverage":false},{"functionName":"runInitializersHelper","ranges":[{"startOffset":9126523,"endOffset":9126550,"count":0}],"isBlockCoverage":false},{"functionName":"sameFlatMap","ranges":[{"startOffset":9126569,"endOffset":9126586,"count":0}],"isBlockCoverage":false},{"functionName":"sameMap","ranges":[{"startOffset":9126601,"endOffset":9126614,"count":0}],"isBlockCoverage":false},{"functionName":"sameMapping","ranges":[{"startOffset":9126633,"endOffset":9126650,"count":0}],"isBlockCoverage":false},{"functionName":"scanShebangTrivia","ranges":[{"startOffset":9126675,"endOffset":9126698,"count":0}],"isBlockCoverage":false},{"functionName":"scanTokenAtPosition","ranges":[{"startOffset":9126725,"endOffset":9126750,"count":0}],"isBlockCoverage":false},{"functionName":"scanner","ranges":[{"startOffset":9126765,"endOffset":9126778,"count":0}],"isBlockCoverage":false},{"functionName":"screenStartingMessageCodes","ranges":[{"startOffset":9126812,"endOffset":9126844,"count":0}],"isBlockCoverage":false},{"functionName":"semanticDiagnosticsOptionDeclarations","ranges":[{"startOffset":9126889,"endOffset":9126932,"count":0}],"isBlockCoverage":false},{"functionName":"serializeCompilerOptions","ranges":[{"startOffset":9126964,"endOffset":9126994,"count":0}],"isBlockCoverage":false},{"functionName":"server","ranges":[{"startOffset":9127008,"endOffset":9127032,"count":0}],"isBlockCoverage":false},{"functionName":"servicesVersion","ranges":[{"startOffset":9127055,"endOffset":9127076,"count":0}],"isBlockCoverage":false},{"functionName":"setCommentRange","ranges":[{"startOffset":9127099,"endOffset":9127120,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigFileInOptions","ranges":[{"startOffset":9127150,"endOffset":9127178,"count":0}],"isBlockCoverage":false},{"functionName":"setConstantValue","ranges":[{"startOffset":9127202,"endOffset":9127224,"count":0}],"isBlockCoverage":false},{"functionName":"setEachParent","ranges":[{"startOffset":9127245,"endOffset":9127264,"count":0}],"isBlockCoverage":false},{"functionName":"setEmitFlags","ranges":[{"startOffset":9127284,"endOffset":9127302,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionNameHelper","ranges":[{"startOffset":9127331,"endOffset":9127358,"count":0}],"isBlockCoverage":false},{"functionName":"setGetSourceFileAsHashVersioned","ranges":[{"startOffset":9127397,"endOffset":9127434,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierAutoGenerate","ranges":[{"startOffset":9127467,"endOffset":9127498,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierGeneratedImportReference","ranges":[{"startOffset":9127543,"endOffset":9127586,"count":0}],"isBlockCoverage":false},{"functionName":"setIdentifierTypeArguments","ranges":[{"startOffset":9127620,"endOffset":9127652,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalEmitFlags","ranges":[{"startOffset":9127680,"endOffset":9127706,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalizedDiagnosticMessages","ranges":[{"startOffset":9127744,"endOffset":9127780,"count":0}],"isBlockCoverage":false},{"functionName":"setModuleDefaultHelper","ranges":[{"startOffset":9127810,"endOffset":9127838,"count":0}],"isBlockCoverage":false},{"functionName":"setNodeFlags","ranges":[{"startOffset":9127858,"endOffset":9127876,"count":0}],"isBlockCoverage":false},{"functionName":"setObjectAllocator","ranges":[{"startOffset":9127902,"endOffset":9127926,"count":0}],"isBlockCoverage":false},{"functionName":"setOriginalNode","ranges":[{"startOffset":9127949,"endOffset":9127970,"count":0}],"isBlockCoverage":false},{"functionName":"setParent","ranges":[{"startOffset":9127987,"endOffset":9128002,"count":0}],"isBlockCoverage":false},{"functionName":"setParentRecursive","ranges":[{"startOffset":9128028,"endOffset":9128052,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateIdentifier","ranges":[{"startOffset":9128080,"endOffset":9128106,"count":0}],"isBlockCoverage":false},{"functionName":"setSnippetElement","ranges":[{"startOffset":9128131,"endOffset":9128154,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapRange","ranges":[{"startOffset":9128179,"endOffset":9128202,"count":0}],"isBlockCoverage":false},{"functionName":"setStackTraceLimit","ranges":[{"startOffset":9128228,"endOffset":9128252,"count":0}],"isBlockCoverage":false},{"functionName":"setStartsOnNewLine","ranges":[{"startOffset":9128278,"endOffset":9128302,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticLeadingComments","ranges":[{"startOffset":9128337,"endOffset":9128370,"count":0}],"isBlockCoverage":false},{"functionName":"setSyntheticTrailingComments","ranges":[{"startOffset":9128406,"endOffset":9128440,"count":0}],"isBlockCoverage":false},{"functionName":"setSys","ranges":[{"startOffset":9128454,"endOffset":9128466,"count":0}],"isBlockCoverage":false},{"functionName":"setSysLog","ranges":[{"startOffset":9128483,"endOffset":9128498,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRange","ranges":[{"startOffset":9128518,"endOffset":9128536,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangeEnd","ranges":[{"startOffset":9128559,"endOffset":9128580,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePos","ranges":[{"startOffset":9128603,"endOffset":9128624,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosEnd","ranges":[{"startOffset":9128650,"endOffset":9128674,"count":0}],"isBlockCoverage":false},{"functionName":"setTextRangePosWidth","ranges":[{"startOffset":9128702,"endOffset":9128728,"count":0}],"isBlockCoverage":false},{"functionName":"setTokenSourceMapRange","ranges":[{"startOffset":9128758,"endOffset":9128786,"count":0}],"isBlockCoverage":false},{"functionName":"setTypeNode","ranges":[{"startOffset":9128805,"endOffset":9128822,"count":0}],"isBlockCoverage":false},{"functionName":"setUILocale","ranges":[{"startOffset":9128841,"endOffset":9128858,"count":0}],"isBlockCoverage":false},{"functionName":"setValueDeclaration","ranges":[{"startOffset":9128885,"endOffset":9128910,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAllowImportingTsExtension","ranges":[{"startOffset":9128949,"endOffset":9128986,"count":0}],"isBlockCoverage":false},{"functionName":"shouldPreserveConstEnums","ranges":[{"startOffset":9129018,"endOffset":9129048,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseUriStyleNodeCoreModules","ranges":[{"startOffset":9129088,"endOffset":9129126,"count":0}],"isBlockCoverage":false},{"functionName":"showModuleSpecifier","ranges":[{"startOffset":9129153,"endOffset":9129178,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasLiteralTypes","ranges":[{"startOffset":9129210,"endOffset":9129240,"count":0}],"isBlockCoverage":false},{"functionName":"signatureHasRestParameter","ranges":[{"startOffset":9129273,"endOffset":9129304,"count":0}],"isBlockCoverage":false},{"functionName":"signatureToDisplayParts","ranges":[{"startOffset":9129335,"endOffset":9129364,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":9129378,"endOffset":9129390,"count":0}],"isBlockCoverage":false},{"functionName":"singleElementArray","ranges":[{"startOffset":9129416,"endOffset":9129440,"count":0}],"isBlockCoverage":false},{"functionName":"singleIterator","ranges":[{"startOffset":9129462,"endOffset":9129482,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrMany","ranges":[{"startOffset":9129502,"endOffset":9129520,"count":0}],"isBlockCoverage":false},{"functionName":"singleOrUndefined","ranges":[{"startOffset":9129545,"endOffset":9129568,"count":0}],"isBlockCoverage":false},{"functionName":"skipAlias","ranges":[{"startOffset":9129585,"endOffset":9129600,"count":0}],"isBlockCoverage":false},{"functionName":"skipAssertions","ranges":[{"startOffset":9129622,"endOffset":9129642,"count":0}],"isBlockCoverage":false},{"functionName":"skipConstraint","ranges":[{"startOffset":9129664,"endOffset":9129684,"count":0}],"isBlockCoverage":false},{"functionName":"skipOuterExpressions","ranges":[{"startOffset":9129712,"endOffset":9129738,"count":0}],"isBlockCoverage":false},{"functionName":"skipParentheses","ranges":[{"startOffset":9129761,"endOffset":9129782,"count":0}],"isBlockCoverage":false},{"functionName":"skipPartiallyEmittedExpressions","ranges":[{"startOffset":9129821,"endOffset":9129858,"count":0}],"isBlockCoverage":false},{"functionName":"skipTrivia","ranges":[{"startOffset":9129876,"endOffset":9129892,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeChecking","ranges":[{"startOffset":9129916,"endOffset":9129938,"count":0}],"isBlockCoverage":false},{"functionName":"skipTypeParentheses","ranges":[{"startOffset":9129965,"endOffset":9129990,"count":0}],"isBlockCoverage":false},{"functionName":"skipWhile","ranges":[{"startOffset":9130007,"endOffset":9130022,"count":0}],"isBlockCoverage":false},{"functionName":"sliceAfter","ranges":[{"startOffset":9130040,"endOffset":9130056,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":9130068,"endOffset":9130078,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":9130090,"endOffset":9130100,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicate","ranges":[{"startOffset":9130126,"endOffset":9130150,"count":0}],"isBlockCoverage":false},{"functionName":"sortAndDeduplicateDiagnostics","ranges":[{"startOffset":9130187,"endOffset":9130222,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileAffectingCompilerOptions","ranges":[{"startOffset":9130264,"endOffset":9130304,"count":0}],"isBlockCoverage":false},{"functionName":"sourceFileMayBeEmitted","ranges":[{"startOffset":9130334,"endOffset":9130362,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExp","ranges":[{"startOffset":9130392,"endOffset":9130420,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCommentRegExpDontCareLineStart","ranges":[{"startOffset":9130467,"endOffset":9130512,"count":0}],"isBlockCoverage":false},{"functionName":"spacePart","ranges":[{"startOffset":9130529,"endOffset":9130544,"count":0}],"isBlockCoverage":false},{"functionName":"spanMap","ranges":[{"startOffset":9130559,"endOffset":9130572,"count":0}],"isBlockCoverage":false},{"functionName":"spreadArrayHelper","ranges":[{"startOffset":9130597,"endOffset":9130620,"count":0}],"isBlockCoverage":false},{"functionName":"stableSort","ranges":[{"startOffset":9130638,"endOffset":9130654,"count":0}],"isBlockCoverage":false},{"functionName":"startEndContainsRange","ranges":[{"startOffset":9130683,"endOffset":9130710,"count":0}],"isBlockCoverage":false},{"functionName":"startEndOverlapsWithStartEnd","ranges":[{"startOffset":9130746,"endOffset":9130780,"count":0}],"isBlockCoverage":false},{"functionName":"startOnNewLine","ranges":[{"startOffset":9130802,"endOffset":9130822,"count":0}],"isBlockCoverage":false},{"functionName":"startTracing","ranges":[{"startOffset":9130842,"endOffset":9130860,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":9130878,"endOffset":9130894,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithDirectory","ranges":[{"startOffset":9130921,"endOffset":9130946,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUnderscore","ranges":[{"startOffset":9130974,"endOffset":9131000,"count":0}],"isBlockCoverage":false},{"functionName":"startsWithUseStrict","ranges":[{"startOffset":9131027,"endOffset":9131052,"count":0}],"isBlockCoverage":false},{"functionName":"stringContainsAt","ranges":[{"startOffset":9131076,"endOffset":9131098,"count":0}],"isBlockCoverage":false},{"functionName":"stringToToken","ranges":[{"startOffset":9131119,"endOffset":9131138,"count":0}],"isBlockCoverage":false},{"functionName":"stripQuotes","ranges":[{"startOffset":9131157,"endOffset":9131174,"count":0}],"isBlockCoverage":false},{"functionName":"supportedDeclarationExtensions","ranges":[{"startOffset":9131212,"endOffset":9131248,"count":0}],"isBlockCoverage":false},{"functionName":"supportedJSExtensions","ranges":[{"startOffset":9131277,"endOffset":9131304,"count":0}],"isBlockCoverage":false},{"functionName":"supportedJSExtensionsFlat","ranges":[{"startOffset":9131337,"endOffset":9131368,"count":0}],"isBlockCoverage":false},{"functionName":"supportedLocaleDirectories","ranges":[{"startOffset":9131402,"endOffset":9131434,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSExtensions","ranges":[{"startOffset":9131463,"endOffset":9131490,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSExtensionsFlat","ranges":[{"startOffset":9131523,"endOffset":9131554,"count":0}],"isBlockCoverage":false},{"functionName":"supportedTSImplementationExtensions","ranges":[{"startOffset":9131597,"endOffset":9131638,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingAndTrailingTrivia","ranges":[{"startOffset":9131678,"endOffset":9131716,"count":0}],"isBlockCoverage":false},{"functionName":"suppressLeadingTrivia","ranges":[{"startOffset":9131745,"endOffset":9131772,"count":0}],"isBlockCoverage":false},{"functionName":"suppressTrailingTrivia","ranges":[{"startOffset":9131802,"endOffset":9131830,"count":0}],"isBlockCoverage":false},{"functionName":"symbolEscapedNameNoDefault","ranges":[{"startOffset":9131864,"endOffset":9131896,"count":0}],"isBlockCoverage":false},{"functionName":"symbolName","ranges":[{"startOffset":9131914,"endOffset":9131930,"count":0}],"isBlockCoverage":false},{"functionName":"symbolNameNoDefault","ranges":[{"startOffset":9131957,"endOffset":9131982,"count":0}],"isBlockCoverage":false},{"functionName":"symbolPart","ranges":[{"startOffset":9132000,"endOffset":9132016,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToDisplayParts","ranges":[{"startOffset":9132044,"endOffset":9132070,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxMayBeASICandidate","ranges":[{"startOffset":9132101,"endOffset":9132130,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxRequiresTrailingSemicolonOrASI","ranges":[{"startOffset":9132174,"endOffset":9132216,"count":0}],"isBlockCoverage":false},{"functionName":"sys","ranges":[{"startOffset":9132227,"endOffset":9132236,"count":16}],"isBlockCoverage":true},{"functionName":"sysLog","ranges":[{"startOffset":9132250,"endOffset":9132262,"count":0}],"isBlockCoverage":false},{"functionName":"tagNamesAreEquivalent","ranges":[{"startOffset":9132291,"endOffset":9132318,"count":0}],"isBlockCoverage":false},{"functionName":"takeWhile","ranges":[{"startOffset":9132335,"endOffset":9132350,"count":0}],"isBlockCoverage":false},{"functionName":"targetOptionDeclaration","ranges":[{"startOffset":9132381,"endOffset":9132410,"count":0}],"isBlockCoverage":false},{"functionName":"templateObjectHelper","ranges":[{"startOffset":9132438,"endOffset":9132464,"count":0}],"isBlockCoverage":false},{"functionName":"testFormatSettings","ranges":[{"startOffset":9132490,"endOffset":9132514,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeIsUnchanged","ranges":[{"startOffset":9132548,"endOffset":9132580,"count":0}],"isBlockCoverage":false},{"functionName":"textChangeRangeNewSpan","ranges":[{"startOffset":9132610,"endOffset":9132638,"count":0}],"isBlockCoverage":false},{"functionName":"textChanges","ranges":[{"startOffset":9132657,"endOffset":9132685,"count":0}],"isBlockCoverage":false},{"functionName":"textOrKeywordPart","ranges":[{"startOffset":9132710,"endOffset":9132733,"count":0}],"isBlockCoverage":false},{"functionName":"textPart","ranges":[{"startOffset":9132749,"endOffset":9132763,"count":0}],"isBlockCoverage":false},{"functionName":"textRangeContainsPositionInclusive","ranges":[{"startOffset":9132805,"endOffset":9132845,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsPosition","ranges":[{"startOffset":9132877,"endOffset":9132907,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanContainsTextSpan","ranges":[{"startOffset":9132939,"endOffset":9132969,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanEnd","ranges":[{"startOffset":9132988,"endOffset":9133005,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersection","ranges":[{"startOffset":9133033,"endOffset":9133059,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWith","ranges":[{"startOffset":9133089,"endOffset":9133117,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithPosition","ranges":[{"startOffset":9133155,"endOffset":9133191,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIntersectsWithTextSpan","ranges":[{"startOffset":9133229,"endOffset":9133265,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanIsEmpty","ranges":[{"startOffset":9133288,"endOffset":9133309,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlap","ranges":[{"startOffset":9133332,"endOffset":9133353,"count":0}],"isBlockCoverage":false},{"functionName":"textSpanOverlapsWith","ranges":[{"startOffset":9133381,"endOffset":9133407,"count":0}],"isBlockCoverage":false},{"functionName":"textSpansEqual","ranges":[{"startOffset":9133429,"endOffset":9133449,"count":0}],"isBlockCoverage":false},{"functionName":"textToKeywordObj","ranges":[{"startOffset":9133473,"endOffset":9133495,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":9133512,"endOffset":9133527,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":9133542,"endOffset":9133555,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderFileEmit","ranges":[{"startOffset":9133580,"endOffset":9133603,"count":0}],"isBlockCoverage":false},{"functionName":"toBuilderStateFileInfoForMultiEmit","ranges":[{"startOffset":9133645,"endOffset":9133685,"count":0}],"isBlockCoverage":false},{"functionName":"toEditorSettings","ranges":[{"startOffset":9133709,"endOffset":9133731,"count":0}],"isBlockCoverage":false},{"functionName":"toFileNameLowerCase","ranges":[{"startOffset":9133758,"endOffset":9133783,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":9133802,"endOffset":9133819,"count":0}],"isBlockCoverage":false},{"functionName":"toPath","ranges":[{"startOffset":9133833,"endOffset":9133845,"count":10}],"isBlockCoverage":true},{"functionName":"toProgramEmitPending","ranges":[{"startOffset":9133873,"endOffset":9133899,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeyword","ranges":[{"startOffset":9133933,"endOffset":9133965,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIsIdentifierOrKeywordOrGreaterThan","ranges":[{"startOffset":9134012,"endOffset":9134057,"count":0}],"isBlockCoverage":false},{"functionName":"tokenToString","ranges":[{"startOffset":9134078,"endOffset":9134097,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":9134110,"endOffset":9134121,"count":0}],"isBlockCoverage":false},{"functionName":"tracing","ranges":[{"startOffset":9134136,"endOffset":9134149,"count":0}],"isBlockCoverage":false},{"functionName":"tracingEnabled","ranges":[{"startOffset":9134171,"endOffset":9134191,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":9134208,"endOffset":9134223,"count":0}],"isBlockCoverage":false},{"functionName":"transformClassFields","ranges":[{"startOffset":9134251,"endOffset":9134277,"count":0}],"isBlockCoverage":false},{"functionName":"transformDeclarations","ranges":[{"startOffset":9134306,"endOffset":9134333,"count":0}],"isBlockCoverage":false},{"functionName":"transformECMAScriptModule","ranges":[{"startOffset":9134366,"endOffset":9134397,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2015","ranges":[{"startOffset":9134420,"endOffset":9134441,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2016","ranges":[{"startOffset":9134464,"endOffset":9134485,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2017","ranges":[{"startOffset":9134508,"endOffset":9134529,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2018","ranges":[{"startOffset":9134552,"endOffset":9134573,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2019","ranges":[{"startOffset":9134596,"endOffset":9134617,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2020","ranges":[{"startOffset":9134640,"endOffset":9134661,"count":0}],"isBlockCoverage":false},{"functionName":"transformES2021","ranges":[{"startOffset":9134684,"endOffset":9134705,"count":0}],"isBlockCoverage":false},{"functionName":"transformES5","ranges":[{"startOffset":9134725,"endOffset":9134743,"count":0}],"isBlockCoverage":false},{"functionName":"transformESDecorators","ranges":[{"startOffset":9134772,"endOffset":9134799,"count":0}],"isBlockCoverage":false},{"functionName":"transformESNext","ranges":[{"startOffset":9134822,"endOffset":9134843,"count":0}],"isBlockCoverage":false},{"functionName":"transformGenerators","ranges":[{"startOffset":9134870,"endOffset":9134895,"count":0}],"isBlockCoverage":false},{"functionName":"transformJsx","ranges":[{"startOffset":9134915,"endOffset":9134933,"count":0}],"isBlockCoverage":false},{"functionName":"transformLegacyDecorators","ranges":[{"startOffset":9134966,"endOffset":9134997,"count":0}],"isBlockCoverage":false},{"functionName":"transformModule","ranges":[{"startOffset":9135020,"endOffset":9135041,"count":0}],"isBlockCoverage":false},{"functionName":"transformNamedEvaluation","ranges":[{"startOffset":9135073,"endOffset":9135103,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodeModule","ranges":[{"startOffset":9135130,"endOffset":9135155,"count":0}],"isBlockCoverage":false},{"functionName":"transformNodes","ranges":[{"startOffset":9135177,"endOffset":9135197,"count":0}],"isBlockCoverage":false},{"functionName":"transformSystemModule","ranges":[{"startOffset":9135226,"endOffset":9135253,"count":0}],"isBlockCoverage":false},{"functionName":"transformTypeScript","ranges":[{"startOffset":9135280,"endOffset":9135305,"count":0}],"isBlockCoverage":false},{"functionName":"transpile","ranges":[{"startOffset":9135322,"endOffset":9135337,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":9135360,"endOffset":9135381,"count":0}],"isBlockCoverage":false},{"functionName":"transpileOptionValueCompilerOptions","ranges":[{"startOffset":9135424,"endOffset":9135465,"count":10}],"isBlockCoverage":true},{"functionName":"tryAddToSet","ranges":[{"startOffset":9135484,"endOffset":9135501,"count":0}],"isBlockCoverage":false},{"functionName":"tryAndIgnoreErrors","ranges":[{"startOffset":9135527,"endOffset":9135551,"count":0}],"isBlockCoverage":false},{"functionName":"tryCast","ranges":[{"startOffset":9135566,"endOffset":9135579,"count":0}],"isBlockCoverage":false},{"functionName":"tryDirectoryExists","ranges":[{"startOffset":9135605,"endOffset":9135629,"count":0}],"isBlockCoverage":false},{"functionName":"tryExtractTSExtension","ranges":[{"startOffset":9135658,"endOffset":9135685,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileExists","ranges":[{"startOffset":9135706,"endOffset":9135725,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassExtendingExpressionWithTypeArguments","ranges":[{"startOffset":9135780,"endOffset":9135833,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetClassImplementingOrExtendingExpressionWithTypeArguments","ranges":[{"startOffset":9135902,"endOffset":9135969,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetDirectories","ranges":[{"startOffset":9135994,"endOffset":9136017,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetExtensionFromPath","ranges":[{"startOffset":9136048,"endOffset":9136078,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetImportFromModuleSpecifier","ranges":[{"startOffset":9136117,"endOffset":9136154,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetJSDocSatisfiesTypeNode","ranges":[{"startOffset":9136190,"endOffset":9136224,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleNameFromFile","ranges":[{"startOffset":9136256,"endOffset":9136286,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetModuleSpecifierFromDeclaration","ranges":[{"startOffset":9136330,"endOffset":9136372,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetNativePerformanceHooks","ranges":[{"startOffset":9136408,"endOffset":9136442,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyAccessOrIdentifierToString","ranges":[{"startOffset":9136490,"endOffset":9136536,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetPropertyNameOfBindingOrAssignmentElement","ranges":[{"startOffset":9136590,"endOffset":9136642,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetSourceMappingURL","ranges":[{"startOffset":9136672,"endOffset":9136700,"count":0}],"isBlockCoverage":false},{"functionName":"tryGetTextOfPropertyName","ranges":[{"startOffset":9136732,"endOffset":9136762,"count":0}],"isBlockCoverage":false},{"functionName":"tryIOAndConsumeErrors","ranges":[{"startOffset":9136791,"endOffset":9136818,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseJson","ranges":[{"startOffset":9136838,"endOffset":9136856,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePattern","ranges":[{"startOffset":9136879,"endOffset":9136900,"count":0}],"isBlockCoverage":false},{"functionName":"tryParsePatterns","ranges":[{"startOffset":9136924,"endOffset":9136946,"count":0}],"isBlockCoverage":false},{"functionName":"tryParseRawSourceMap","ranges":[{"startOffset":9136974,"endOffset":9137000,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadDirectory","ranges":[{"startOffset":9137024,"endOffset":9137046,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadFile","ranges":[{"startOffset":9137065,"endOffset":9137082,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveDirectoryPrefix","ranges":[{"startOffset":9137114,"endOffset":9137144,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveExtension","ranges":[{"startOffset":9137170,"endOffset":9137194,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemovePrefix","ranges":[{"startOffset":9137217,"endOffset":9137238,"count":0}],"isBlockCoverage":false},{"functionName":"tryRemoveSuffix","ranges":[{"startOffset":9137261,"endOffset":9137282,"count":0}],"isBlockCoverage":false},{"functionName":"typeAcquisitionDeclarations","ranges":[{"startOffset":9137317,"endOffset":9137350,"count":0}],"isBlockCoverage":false},{"functionName":"typeAliasNamePart","ranges":[{"startOffset":9137375,"endOffset":9137398,"count":0}],"isBlockCoverage":false},{"functionName":"typeDirectiveIsEqualTo","ranges":[{"startOffset":9137428,"endOffset":9137456,"count":0}],"isBlockCoverage":false},{"functionName":"typeKeywords","ranges":[{"startOffset":9137476,"endOffset":9137494,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterNamePart","ranges":[{"startOffset":9137523,"endOffset":9137550,"count":0}],"isBlockCoverage":false},{"functionName":"typeToDisplayParts","ranges":[{"startOffset":9137576,"endOffset":9137600,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedPollThresholds","ranges":[{"startOffset":9137631,"endOffset":9137660,"count":0}],"isBlockCoverage":false},{"functionName":"unchangedTextChangeRange","ranges":[{"startOffset":9137692,"endOffset":9137722,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeLeadingUnderscores","ranges":[{"startOffset":9137756,"endOffset":9137788,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleScopedPackageName","ranges":[{"startOffset":9137821,"endOffset":9137852,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItem","ranges":[{"startOffset":9137879,"endOffset":9137904,"count":0}],"isBlockCoverage":false},{"functionName":"unorderedRemoveItemAt","ranges":[{"startOffset":9137933,"endOffset":9137960,"count":0}],"isBlockCoverage":false},{"functionName":"unreachableCodeIsError","ranges":[{"startOffset":9137990,"endOffset":9138018,"count":0}],"isBlockCoverage":false},{"functionName":"unusedLabelIsError","ranges":[{"startOffset":9138044,"endOffset":9138068,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapInnermostStatementOfLabel","ranges":[{"startOffset":9138107,"endOffset":9138144,"count":0}],"isBlockCoverage":false},{"functionName":"updateErrorForNoInputFiles","ranges":[{"startOffset":9138178,"endOffset":9138210,"count":0}],"isBlockCoverage":false},{"functionName":"updateLanguageServiceSourceFile","ranges":[{"startOffset":9138249,"endOffset":9138286,"count":0}],"isBlockCoverage":false},{"functionName":"updateMissingFilePathsWatch","ranges":[{"startOffset":9138321,"endOffset":9138354,"count":0}],"isBlockCoverage":false},{"functionName":"updateResolutionField","ranges":[{"startOffset":9138383,"endOffset":9138410,"count":0}],"isBlockCoverage":false},{"functionName":"updateSharedExtendedConfigFileWatcher","ranges":[{"startOffset":9138455,"endOffset":9138498,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceFile","ranges":[{"startOffset":9138522,"endOffset":9138544,"count":0}],"isBlockCoverage":false},{"functionName":"updateWatchingWildcardDirectories","ranges":[{"startOffset":9138585,"endOffset":9138624,"count":0}],"isBlockCoverage":false},{"functionName":"usesExtensionsOnImports","ranges":[{"startOffset":9138655,"endOffset":9138684,"count":0}],"isBlockCoverage":false},{"functionName":"usingSingleLineStringWriter","ranges":[{"startOffset":9138719,"endOffset":9138752,"count":0}],"isBlockCoverage":false},{"functionName":"utf16EncodeAsString","ranges":[{"startOffset":9138779,"endOffset":9138804,"count":0}],"isBlockCoverage":false},{"functionName":"validateLocaleAndSetLanguage","ranges":[{"startOffset":9138840,"endOffset":9138874,"count":0}],"isBlockCoverage":false},{"functionName":"valuesHelper","ranges":[{"startOffset":9138894,"endOffset":9138912,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":9138927,"endOffset":9138940,"count":13}],"isBlockCoverage":true},{"functionName":"versionMajorMinor","ranges":[{"startOffset":9138965,"endOffset":9138988,"count":0}],"isBlockCoverage":false},{"functionName":"visitArray","ranges":[{"startOffset":9139006,"endOffset":9139022,"count":0}],"isBlockCoverage":false},{"functionName":"visitCommaListElements","ranges":[{"startOffset":9139052,"endOffset":9139080,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachChild","ranges":[{"startOffset":9139102,"endOffset":9139122,"count":0}],"isBlockCoverage":false},{"functionName":"visitFunctionBody","ranges":[{"startOffset":9139147,"endOffset":9139170,"count":0}],"isBlockCoverage":false},{"functionName":"visitIterationBody","ranges":[{"startOffset":9139196,"endOffset":9139220,"count":0}],"isBlockCoverage":false},{"functionName":"visitLexicalEnvironment","ranges":[{"startOffset":9139251,"endOffset":9139280,"count":0}],"isBlockCoverage":false},{"functionName":"visitNode","ranges":[{"startOffset":9139297,"endOffset":9139312,"count":0}],"isBlockCoverage":false},{"functionName":"visitNodes","ranges":[{"startOffset":9139330,"endOffset":9139347,"count":0}],"isBlockCoverage":false},{"functionName":"visitParameterList","ranges":[{"startOffset":9139373,"endOffset":9139397,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpBindingElementsAndPatterns","ranges":[{"startOffset":9139437,"endOffset":9139475,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpLexicalEnvironments","ranges":[{"startOffset":9139508,"endOffset":9139539,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpOuterExpressions","ranges":[{"startOffset":9139569,"endOffset":9139597,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedExpressions","ranges":[{"startOffset":9139635,"endOffset":9139671,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypes","ranges":[{"startOffset":9139703,"endOffset":9139733,"count":0}],"isBlockCoverage":false},{"functionName":"walkUpParenthesizedTypesAndGetParentAndChild","ranges":[{"startOffset":9139785,"endOffset":9139835,"count":0}],"isBlockCoverage":false},{"functionName":"whitespaceOrMapCommentRegExp","ranges":[{"startOffset":9139871,"endOffset":9139905,"count":0}],"isBlockCoverage":false},{"functionName":"writeCommentRange","ranges":[{"startOffset":9139930,"endOffset":9139953,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":9139970,"endOffset":9139985,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileEnsuringDirectories","ranges":[{"startOffset":9140021,"endOffset":9140055,"count":0}],"isBlockCoverage":false},{"functionName":"zipWith","ranges":[{"startOffset":9140070,"endOffset":9140083,"count":0}],"isBlockCoverage":false},{"functionName":"src/typescript/_namespaces/ts.ts","ranges":[{"startOffset":9140119,"endOffset":9140280,"count":1}],"isBlockCoverage":true},{"functionName":"src/typescript/typescript.ts","ranges":[{"startOffset":9140366,"endOffset":9140967,"count":1}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":9140537,"endOffset":9140905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"272","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7668,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":856,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1082,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1216,"endOffset":1355,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1361,"endOffset":1527,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1533,"endOffset":1672,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1678,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1843,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2000,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2153,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2311,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2503,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2691,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2876,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3057,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3265,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3464,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3631,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3800,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3945,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4102,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4259,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4525,"endOffset":5491,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6388,"endOffset":6997,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7069,"endOffset":7587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6178,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6513,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1194,"endOffset":1660,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1716,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2476,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2590,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3045,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3360,"endOffset":3471,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3684,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3899,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4049,"endOffset":5681,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5685,"endOffset":6132,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6136,"endOffset":6400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3676,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":762,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1461,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1682,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1905,"endOffset":2004,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2351,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2581,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2873,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3129,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":690,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":198,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6612,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1393,"endOffset":1455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1461,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1774,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":2018,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2239,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2468,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2605,"endOffset":2869,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2875,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3145,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3378,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3675,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3780,"endOffset":4104,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4110,"endOffset":4239,"count":1}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":4245,"endOffset":4480,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6143,"endOffset":6317,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6201,"endOffset":6295,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6365,"endOffset":6508,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8434,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1045,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1113,"endOffset":1543,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1600,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1788,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1988,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2172,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2368,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2552,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2748,"endOffset":2877,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2934,"endOffset":3069,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3126,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3330,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3540,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3974,"endOffset":4343,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4412,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4676,"endOffset":4883,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4925,"endOffset":5045,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5051,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5220,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5288,"endOffset":5555,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5611,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5748,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6075,"endOffset":6230,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6291,"endOffset":6570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6576,"endOffset":6749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6755,"endOffset":6817,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6824,"endOffset":7017,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":7063,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":7076,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7378,"endOffset":7386,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7540,"endOffset":8244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"281","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1814,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1902,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":454,"endOffset":1649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32815,"count":1},{"startOffset":280,"endOffset":343,"count":0},{"startOffset":346,"endOffset":373,"count":0},{"startOffset":21711,"endOffset":21733,"count":0}],"isBlockCoverage":true},{"functionName":"dynamicRequire","ranges":[{"startOffset":510,"endOffset":582,"count":2}],"isBlockCoverage":true},{"functionName":"initializeSharedData","ranges":[{"startOffset":907,"endOffset":1650,"count":1},{"startOffset":1315,"endOffset":1368,"count":0},{"startOffset":1421,"endOffset":1516,"count":0},{"startOffset":1545,"endOffset":1627,"count":11}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":3602,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":3908,"endOffset":4053,"count":0}],"isBlockCoverage":false},{"functionName":"tryFileURLToPath","ranges":[{"startOffset":4055,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":4237,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":4303,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":4454,"endOffset":4526,"count":0}],"isBlockCoverage":false},{"functionName":"getCacheKey","ranges":[{"startOffset":4583,"endOffset":4943,"count":0}],"isBlockCoverage":false},{"functionName":"getFileContentsCache","ranges":[{"startOffset":4944,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"hasFileContentsCacheFromKey","ranges":[{"startOffset":5040,"endOffset":5167,"count":0}],"isBlockCoverage":false},{"functionName":"getFileContentsCacheFromKey","ranges":[{"startOffset":5168,"endOffset":5257,"count":0}],"isBlockCoverage":false},{"functionName":"setFileContentsCache","ranges":[{"startOffset":5258,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"getSourceMapCache","ranges":[{"startOffset":5369,"endOffset":5458,"count":0}],"isBlockCoverage":false},{"functionName":"setSourceMapCache","ranges":[{"startOffset":5459,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"clearCaches","ranges":[{"startOffset":5564,"endOffset":5695,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":5718,"endOffset":6075,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5770,"endOffset":6072,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6229,"endOffset":7309,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":7484,"endOffset":9155,"count":0}],"isBlockCoverage":false},{"functionName":"matchStyleOfPathOrUrl","ranges":[{"startOffset":9247,"endOffset":9813,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":9815,"endOffset":10876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11436,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"mapSourcePosition","ranges":[{"startOffset":12200,"endOffset":14481,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":14621,"endOffset":15317,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":16089,"endOffset":18524,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCallSite","ranges":[{"startOffset":18526,"endOffset":18831,"count":0}],"isBlockCoverage":false},{"functionName":"wrapCallSite","ranges":[{"startOffset":18833,"endOffset":21362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21632,"endOffset":21695,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorPrototypeToString","ranges":[{"startOffset":21768,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"createPrepareStackTrace","ranges":[{"startOffset":21849,"endOffset":23250,"count":1}],"isBlockCoverage":true},{"functionName":"prepareStackTrace","ranges":[{"startOffset":22040,"endOffset":23248,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorSource","ranges":[{"startOffset":23317,"endOffset":24203,"count":0}],"isBlockCoverage":false},{"functionName":"printFatalErrorUponExit","ranges":[{"startOffset":24205,"endOffset":24686,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":24688,"endOffset":25458,"count":0}],"isBlockCoverage":false},{"functionName":"exports.install","ranges":[{"startOffset":25804,"endOffset":30803,"count":1},{"startOffset":25844,"endOffset":25849,"count":0},{"startOffset":25985,"endOffset":26106,"count":0},{"startOffset":27948,"endOffset":28005,"count":0},{"startOffset":28212,"endOffset":28389,"count":0},{"startOffset":28482,"endOffset":28499,"count":0},{"startOffset":28501,"endOffset":28884,"count":0},{"startOffset":29044,"endOffset":29087,"count":0},{"startOffset":29618,"endOffset":29658,"count":0},{"startOffset":30170,"endOffset":30181,"count":0},{"startOffset":30720,"endOffset":30753,"count":0},{"startOffset":30755,"endOffset":30797,"count":0}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename.sharedData.moduleResolveFilenameHook.installedValue","ranges":[{"startOffset":26780,"endOffset":27640,"count":116},{"startOffset":27057,"endOffset":27106,"count":0},{"startOffset":27159,"endOffset":27216,"count":0},{"startOffset":27263,"endOffset":27538,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":28624,"endOffset":28813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.uninstall","ranges":[{"startOffset":30826,"endOffset":32675,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":32709,"endOffset":32814,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22396,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":488,"count":1},{"startOffset":190,"endOffset":485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":497,"endOffset":22346,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":565,"endOffset":679,"count":1},{"startOffset":636,"endOffset":653,"count":0},{"startOffset":654,"endOffset":657,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":764,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":1305,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":1680,"endOffset":2304,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":2309,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":2535,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":2751,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":2893,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":3613,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":4108,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":4337,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":4553,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":4903,"endOffset":5699,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":5842,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7247,"endOffset":7421,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":7879,"endOffset":7948,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":7969,"endOffset":8927,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":8933,"endOffset":11578,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":11583,"endOffset":11697,"count":0}],"isBlockCoverage":false},{"functionName":"fillSourcesContent","ranges":[{"startOffset":12065,"endOffset":12247,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":14719,"endOffset":16054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16066,"endOffset":21640,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encodedMappings","ranges":[{"startOffset":16108,"endOffset":16276,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMappings","ranges":[{"startOffset":16312,"endOffset":16423,"count":0}],"isBlockCoverage":false},{"functionName":"exports.traceSegment","ranges":[{"startOffset":16456,"endOffset":16902,"count":0}],"isBlockCoverage":false},{"functionName":"exports.originalPositionFor","ranges":[{"startOffset":16942,"endOffset":18105,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generatedPositionFor","ranges":[{"startOffset":18146,"endOffset":19372,"count":0}],"isBlockCoverage":false},{"functionName":"exports.eachMapping","ranges":[{"startOffset":19404,"endOffset":20613,"count":0}],"isBlockCoverage":false},{"functionName":"exports.presortedDecodedMap","ranges":[{"startOffset":20653,"endOffset":20891,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMap","ranges":[{"startOffset":20922,"endOffset":21262,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encodedMap","ranges":[{"startOffset":21293,"endOffset":21633,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":21649,"endOffset":22104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6390,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":314,"count":1},{"startOffset":114,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":323,"endOffset":6338,"count":1},{"startOffset":694,"endOffset":792,"count":64},{"startOffset":945,"endOffset":1473,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1009,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1220,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1479,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":3031,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":3178,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":3699,"endOffset":3847,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":3852,"endOffset":3914,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":3919,"endOffset":3984,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3989,"endOffset":5766,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":5771,"endOffset":6208,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9866,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":305,"count":1},{"startOffset":124,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":314,"endOffset":9818,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":1351,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":1433,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1520,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":1601,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":1681,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":1757,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":1971,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":2219,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":2486,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":3495,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":3843,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":4482,"endOffset":7090,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7175,"endOffset":9794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-modules-esm-resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33039,"count":1},{"startOffset":297,"endOffset":358,"count":0},{"startOffset":377,"endOffset":388,"count":0}],"isBlockCoverage":true},{"functionName":"createResolve","ranges":[{"startOffset":3003,"endOffset":33000,"count":1},{"startOffset":3598,"endOffset":3637,"count":0},{"startOffset":5482,"endOffset":5543,"count":0},{"startOffset":5619,"endOffset":5642,"count":0}],"isBlockCoverage":true},{"functionName":"emitFolderMapDeprecation","ranges":[{"startOffset":3742,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":4938,"endOffset":5290,"count":10},{"startOffset":5084,"endOffset":5215,"count":0},{"startOffset":5255,"endOffset":5289,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSyncWithoutErrors","ranges":[{"startOffset":5681,"endOffset":5843,"count":20},{"startOffset":5815,"endOffset":5842,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSyncWithErrors","ranges":[{"startOffset":5844,"endOffset":5963,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":5965,"endOffset":7303,"count":5},{"startOffset":6093,"endOffset":6119,"count":3},{"startOffset":6119,"endOffset":6202,"count":2},{"startOffset":6202,"endOffset":6477,"count":0},{"startOffset":6477,"endOffset":6547,"count":2},{"startOffset":6547,"endOffset":6726,"count":0},{"startOffset":6726,"endOffset":6848,"count":2},{"startOffset":6848,"endOffset":6867,"count":0},{"startOffset":6869,"endOffset":7067,"count":2},{"startOffset":7067,"endOffset":7089,"count":0},{"startOffset":7091,"endOffset":7105,"count":0},{"startOffset":7105,"endOffset":7302,"count":2}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":7305,"endOffset":8405,"count":5},{"startOffset":7563,"endOffset":7569,"count":0},{"startOffset":7749,"endOffset":8072,"count":0},{"startOffset":8076,"endOffset":8404,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":8661,"endOffset":8740,"count":10}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":8742,"endOffset":9984,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":10084,"endOffset":10364,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":10401,"endOffset":10666,"count":0}],"isBlockCoverage":false},{"functionName":"resolveReplacementExtensions","ranges":[{"startOffset":10711,"endOffset":11550,"count":10},{"startOffset":10917,"endOffset":10934,"count":5},{"startOffset":10935,"endOffset":10952,"count":5},{"startOffset":10953,"endOffset":10970,"count":0},{"startOffset":11105,"endOffset":11124,"count":5},{"startOffset":11133,"endOffset":11245,"count":5},{"startOffset":11150,"endOffset":11170,"count":0},{"startOffset":11225,"endOffset":11245,"count":0},{"startOffset":11518,"endOffset":11524,"count":0},{"startOffset":11528,"endOffset":11549,"count":0}],"isBlockCoverage":true},{"functionName":"resolveIndex","ranges":[{"startOffset":11552,"endOffset":11639,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":11677,"endOffset":12956,"count":10},{"startOffset":11790,"endOffset":11933,"count":0},{"startOffset":11985,"endOffset":12436,"count":0},{"startOffset":12492,"endOffset":12503,"count":0},{"startOffset":12605,"endOffset":12641,"count":0},{"startOffset":12678,"endOffset":12805,"count":0},{"startOffset":12832,"endOffset":12938,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":12958,"endOffset":13173,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":13175,"endOffset":13374,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":13376,"endOffset":13726,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":13728,"endOffset":14110,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":14211,"endOffset":15874,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":15929,"endOffset":16069,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":16071,"endOffset":18203,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":18205,"endOffset":19140,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":19353,"endOffset":21325,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":21327,"endOffset":23443,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":23445,"endOffset":23558,"count":5}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":23560,"endOffset":24670,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":24783,"endOffset":26695,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":26697,"endOffset":26807,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":26809,"endOffset":27080,"count":10},{"startOffset":26879,"endOffset":27062,"count":5},{"startOffset":26949,"endOffset":27058,"count":0},{"startOffset":27062,"endOffset":27079,"count":5}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27082,"endOffset":27265,"count":10},{"startOffset":27168,"endOffset":27181,"count":0},{"startOffset":27210,"endOffset":27222,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":27378,"endOffset":27949,"count":10},{"startOffset":27606,"endOffset":27902,"count":5},{"startOffset":27684,"endOffset":27762,"count":0},{"startOffset":27823,"endOffset":27898,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":28095,"endOffset":29503,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":29505,"endOffset":32859,"count":12},{"startOffset":29655,"endOffset":29673,"count":0},{"startOffset":29675,"endOffset":30278,"count":0},{"startOffset":30371,"endOffset":30425,"count":0},{"startOffset":30430,"endOffset":30438,"count":7},{"startOffset":30452,"endOffset":30496,"count":5},{"startOffset":30502,"endOffset":30528,"count":0},{"startOffset":30542,"endOffset":30572,"count":5},{"startOffset":30573,"endOffset":30603,"count":0},{"startOffset":30609,"endOffset":30658,"count":0},{"startOffset":30711,"endOffset":30781,"count":2},{"startOffset":30781,"endOffset":30846,"count":10},{"startOffset":30848,"endOffset":30936,"count":1},{"startOffset":30936,"endOffset":30994,"count":10},{"startOffset":30994,"endOffset":31521,"count":0},{"startOffset":31521,"endOffset":31650,"count":10},{"startOffset":31650,"endOffset":32454,"count":0},{"startOffset":32454,"endOffset":32469,"count":10},{"startOffset":32469,"endOffset":32492,"count":0},{"startOffset":32493,"endOffset":32512,"count":10},{"startOffset":32514,"endOffset":32828,"count":10},{"startOffset":32757,"endOffset":32762,"count":0},{"startOffset":32828,"endOffset":32858,"count":10}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist-raw/node-internal-modules-esm-get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3508,"count":1},{"startOffset":452,"endOffset":491,"count":0},{"startOffset":494,"endOffset":534,"count":0},{"startOffset":537,"endOffset":585,"count":0},{"startOffset":1107,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":378,"endOffset":398,"count":3}],"isBlockCoverage":true},{"functionName":"createGetFormat","ranges":[{"startOffset":1497,"endOffset":3466,"count":1},{"startOffset":1801,"endOffset":1840,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":2117,"endOffset":3436,"count":11},{"startOffset":2230,"endOffset":2269,"count":2},{"startOffset":2269,"endOffset":2336,"count":9},{"startOffset":2336,"endOffset":2746,"count":0},{"startOffset":2746,"endOffset":3407,"count":9},{"startOffset":2868,"endOffset":2956,"count":5},{"startOffset":2937,"endOffset":2949,"count":0},{"startOffset":2956,"endOffset":3009,"count":4},{"startOffset":3027,"endOffset":3364,"count":0},{"startOffset":3393,"endOffset":3400,"count":0},{"startOffset":3407,"endOffset":3435,"count":0}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/import-loader.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/esm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13118,"count":1},{"startOffset":560,"endOffset":563,"count":0},{"startOffset":649,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"filterHooksByAPIVersion","ranges":[{"startOffset":671,"endOffset":1325,"count":1},{"startOffset":922,"endOffset":1029,"count":0},{"startOffset":1194,"endOffset":1301,"count":0}],"isBlockCoverage":true},{"functionName":"registerAndCreateEsmHooks","ranges":[{"startOffset":1402,"endOffset":1620,"count":1}],"isBlockCoverage":true},{"functionName":"createEsmHooks","ranges":[{"startOffset":1684,"endOffset":12751,"count":1},{"startOffset":2299,"endOffset":2310,"count":0}],"isBlockCoverage":true},{"functionName":"globalPreload","ranges":[{"startOffset":2355,"endOffset":3283,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrlOrNodeStyleSpecifier","ranges":[{"startOffset":3288,"endOffset":3545,"count":696},{"startOffset":3515,"endOffset":3538,"count":355}],"isBlockCoverage":true},{"functionName":"isProbablyEntrypoint","ranges":[{"startOffset":3835,"endOffset":4003,"count":380},{"startOffset":3929,"endOffset":3960,"count":379},{"startOffset":3962,"endOffset":3996,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4178,"endOffset":6792,"count":380}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":4261,"endOffset":4386,"count":36}],"isBlockCoverage":true},{"functionName":"entrypointFallback","ranges":[{"startOffset":4581,"endOffset":5919,"count":380},{"startOffset":4797,"endOffset":4846,"count":1},{"startOffset":4908,"endOffset":5909,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5955,"endOffset":6784,"count":380},{"startOffset":6142,"endOffset":6207,"count":36},{"startOffset":6207,"endOffset":6242,"count":344},{"startOffset":6242,"endOffset":6265,"count":3},{"startOffset":6267,"endOffset":6332,"count":0},{"startOffset":6332,"endOffset":6434,"count":344},{"startOffset":6434,"endOffset":6600,"count":0},{"startOffset":6600,"endOffset":6783,"count":344}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6690,"endOffset":6772,"count":344}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":6878,"endOffset":8928,"count":172}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6968,"endOffset":8920,"count":172},{"startOffset":7391,"endOffset":7415,"count":155},{"startOffset":7417,"endOffset":8871,"count":144},{"startOffset":7714,"endOffset":7846,"count":0},{"startOffset":8392,"endOffset":8857,"count":0}],"isBlockCoverage":true},{"functionName":"defaultTransformSource","ranges":[{"startOffset":8014,"endOffset":8116,"count":144}],"isBlockCoverage":true},{"functionName":"getFormat","ranges":[{"startOffset":8933,"endOffset":11919,"count":172},{"startOffset":9703,"endOffset":9760,"count":17},{"startOffset":9760,"endOffset":10387,"count":155},{"startOffset":10387,"endOffset":10404,"count":1},{"startOffset":10406,"endOffset":10556,"count":1},{"startOffset":10556,"endOffset":11275,"count":154},{"startOffset":10676,"endOffset":11265,"count":0},{"startOffset":11275,"endOffset":11454,"count":155},{"startOffset":11454,"endOffset":11521,"count":1},{"startOffset":11489,"endOffset":11520,"count":0},{"startOffset":11523,"endOffset":11888,"count":1},{"startOffset":11712,"endOffset":11774,"count":0},{"startOffset":11818,"endOffset":11878,"count":0},{"startOffset":11888,"endOffset":11918,"count":155}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":9014,"endOffset":9093,"count":172}],"isBlockCoverage":true},{"functionName":"entrypointFallback","ranges":[{"startOffset":9288,"endOffset":9604,"count":172},{"startOffset":9407,"endOffset":9594,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10456,"endOffset":10544,"count":1}],"isBlockCoverage":true},{"functionName":"transformSource","ranges":[{"startOffset":11924,"endOffset":12728,"count":144},{"startOffset":12051,"endOffset":12104,"count":0},{"startOffset":12256,"endOffset":12264,"count":0},{"startOffset":12423,"endOffset":12462,"count":0},{"startOffset":12607,"endOffset":12727,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":12127,"endOffset":12196,"count":144}],"isBlockCoverage":true},{"functionName":"addShortCircuitFlag","ranges":[{"startOffset":12793,"endOffset":13086,"count":552}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12855,"endOffset":13082,"count":552},{"startOffset":12985,"endOffset":12996,"count":0}],"isBlockCoverage":true}]},{"scriptId":"291","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42763,"count":1},{"startOffset":1517,"endOffset":1529,"count":0},{"startOffset":1675,"endOffset":1751,"count":0},{"startOffset":1807,"endOffset":1954,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1193,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debug","ranges":[{"startOffset":1677,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"exports.debug","ranges":[{"startOffset":1758,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"debugFn","ranges":[{"startOffset":1809,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"debugFn","ranges":[{"startOffset":1961,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"TSError","ranges":[{"startOffset":3526,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4102,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":4265,"endOffset":5067,"count":1},{"startOffset":4402,"endOffset":4427,"count":0}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":5167,"endOffset":5342,"count":1}],"isBlockCoverage":true},{"functionName":"createFromPreloadedConfig","ranges":[{"startOffset":5385,"endOffset":36508,"count":1},{"startOffset":5932,"endOffset":5953,"count":0},{"startOffset":5955,"endOffset":6063,"count":0},{"startOffset":6387,"endOffset":6408,"count":0},{"startOffset":6410,"endOffset":6763,"count":0},{"startOffset":7033,"endOffset":7056,"count":0},{"startOffset":7189,"endOffset":7294,"count":0},{"startOffset":7321,"endOffset":7440,"count":0},{"startOffset":7796,"endOffset":7960,"count":0},{"startOffset":8291,"endOffset":8297,"count":0},{"startOffset":8384,"endOffset":8390,"count":0},{"startOffset":8436,"endOffset":8442,"count":0},{"startOffset":8479,"endOffset":8553,"count":0},{"startOffset":8640,"endOffset":8644,"count":0},{"startOffset":8978,"endOffset":8988,"count":0},{"startOffset":9091,"endOffset":9189,"count":0},{"startOffset":12599,"endOffset":12615,"count":0},{"startOffset":13368,"endOffset":13404,"count":0},{"startOffset":14860,"endOffset":29294,"count":0},{"startOffset":32397,"endOffset":32420,"count":0},{"startOffset":32421,"endOffset":32444,"count":0}],"isBlockCoverage":true},{"functionName":"isScoped","ranges":[{"startOffset":8481,"endOffset":8553,"count":0}],"isBlockCoverage":false},{"functionName":"isScoped","ranges":[{"startOffset":8556,"endOffset":8566,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8696,"endOffset":8720,"count":1}],"isBlockCoverage":true},{"functionName":"getNewLine","ranges":[{"startOffset":8773,"endOffset":8793,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":8824,"endOffset":8833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8980,"endOffset":8988,"count":0}],"isBlockCoverage":false},{"functionName":"diagnosticHost.getCanonicalFileName","ranges":[{"startOffset":8991,"endOffset":9013,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTranspilerFactory","ranges":[{"startOffset":9252,"endOffset":10648,"count":1},{"startOffset":9317,"endOffset":10642,"count":0}],"isBlockCoverage":true},{"functionName":"createTranspiler","ranges":[{"startOffset":10059,"endOffset":10632,"count":0}],"isBlockCoverage":false},{"functionName":"installSourceMapSupport","ranges":[{"startOffset":10807,"endOffset":12239,"count":1},{"startOffset":11030,"endOffset":12238,"count":0}],"isBlockCoverage":true},{"functionName":"retrieveFile","ranges":[{"startOffset":11186,"endOffset":11809,"count":0}],"isBlockCoverage":false},{"functionName":"onConflictingLibraryRedirect","ranges":[{"startOffset":11869,"endOffset":12220,"count":0}],"isBlockCoverage":false},{"functionName":"setPrettyErrors","ranges":[{"startOffset":12303,"endOffset":12549,"count":1},{"startOffset":12442,"endOffset":12507,"count":0}],"isBlockCoverage":true},{"functionName":"createTSError","ranges":[{"startOffset":12647,"endOffset":12907,"count":0}],"isBlockCoverage":false},{"functionName":"reportTSError","ranges":[{"startOffset":12912,"endOffset":13282,"count":0}],"isBlockCoverage":false},{"functionName":"getEmitExtension","ranges":[{"startOffset":13590,"endOffset":14232,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15235,"endOffset":15262,"count":0}],"isBlockCoverage":false},{"functionName":"getCustomTransformers","ranges":[{"startOffset":15308,"endOffset":15572,"count":0}],"isBlockCoverage":false},{"functionName":"getProjectVersion","ranges":[{"startOffset":15702,"endOffset":15730,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptFileNames","ranges":[{"startOffset":15768,"endOffset":15799,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptVersion","ranges":[{"startOffset":15835,"endOffset":15994,"count":0}],"isBlockCoverage":false},{"functionName":"getScriptSnapshot","ranges":[{"startOffset":16012,"endOffset":16726,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":17279,"endOffset":17299,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":17344,"endOffset":17382,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":17421,"endOffset":17430,"count":0}],"isBlockCoverage":false},{"functionName":"getCompilationSettings","ranges":[{"startOffset":17472,"endOffset":17492,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":17533,"endOffset":17579,"count":0}],"isBlockCoverage":false},{"functionName":"updateMemoryCache","ranges":[{"startOffset":18695,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":19855,"endOffset":21681,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":21709,"endOffset":22205,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":22346,"endOffset":22744,"count":0}],"isBlockCoverage":false},{"functionName":"updateMemoryCache","ranges":[{"startOffset":24622,"endOffset":25646,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":25672,"endOffset":27719,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":27747,"endOffset":28951,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29113,"endOffset":29262,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeInfo","ranges":[{"startOffset":29328,"endOffset":29435,"count":0}],"isBlockCoverage":false},{"functionName":"createTranspileOnlyGetOutputFunction","ranges":[{"startOffset":29447,"endOffset":31059,"count":5},{"startOffset":29648,"endOffset":29692,"count":4},{"startOffset":29740,"endOffset":29779,"count":0},{"startOffset":30075,"endOffset":30086,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30103,"endOffset":31052,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":32576,"endOffset":34624,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":34668,"endOffset":34736,"count":0}],"isBlockCoverage":false},{"functionName":"ignored","ranges":[{"startOffset":34758,"endOffset":35022,"count":477},{"startOffset":34807,"endOffset":34819,"count":0},{"startOffset":34918,"endOffset":34995,"count":2},{"startOffset":34995,"endOffset":35021,"count":475}],"isBlockCoverage":true},{"functionName":"addDiagnosticFilter","ranges":[{"startOffset":35028,"endOffset":35241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35290,"endOffset":35527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35579,"endOffset":35723,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35772,"endOffset":35969,"count":0}],"isBlockCoverage":false},{"functionName":"createIgnore","ranges":[{"startOffset":36624,"endOffset":36886,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36682,"endOffset":36883,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36856,"endOffset":36875,"count":2}],"isBlockCoverage":true},{"functionName":"registerExtensions","ranges":[{"startOffset":36955,"endOffset":38215,"count":1},{"startOffset":37402,"endOffset":37661,"count":4},{"startOffset":37436,"endOffset":37497,"count":2},{"startOffset":37499,"endOffset":37655,"count":2},{"startOffset":37722,"endOffset":37789,"count":2},{"startOffset":37812,"endOffset":38213,"count":0}],"isBlockCoverage":true},{"functionName":"registerExtension","ranges":[{"startOffset":38260,"endOffset":38924,"count":2},{"startOffset":38360,"endOffset":38378,"count":0}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":38410,"endOffset":38921,"count":23},{"startOffset":38510,"endOffset":38920,"count":0}],"isBlockCoverage":true},{"functionName":"m._compile","ranges":[{"startOffset":38665,"endOffset":38881,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutput","ranges":[{"startOffset":38980,"endOffset":40984,"count":0}],"isBlockCoverage":false},{"functionName":"updateSourceMap","ranges":[{"startOffset":41048,"endOffset":41288,"count":0}],"isBlockCoverage":false},{"functionName":"filterDiagnostics","ranges":[{"startOffset":41320,"endOffset":41567,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41401,"endOffset":41563,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenAtPosition","ranges":[{"startOffset":41746,"endOffset":42221,"count":0}],"isBlockCoverage":false},{"functionName":"createEsmHooks","ranges":[{"startOffset":42622,"endOffset":42687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/make-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3854,"count":1},{"startOffset":180,"endOffset":191,"count":0},{"startOffset":396,"endOffset":1049,"count":0}],"isBlockCoverage":true},{"functionName":"captureStackTrace","ranges":[{"startOffset":420,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"BaseError","ranges":[{"startOffset":1123,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1933,"endOffset":2230,"count":1},{"startOffset":2216,"endOffset":2228,"count":0}],"isBlockCoverage":true},{"functionName":"setFunctionName","ranges":[{"startOffset":1948,"endOffset":2081,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":2102,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"makeError","ranges":[{"startOffset":2308,"endOffset":3784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5723,"count":1}],"isBlockCoverage":true},{"functionName":"yn","ranges":[{"startOffset":726,"endOffset":927,"count":13},{"startOffset":824,"endOffset":852,"count":1},{"startOffset":852,"endOffset":896,"count":12},{"startOffset":896,"endOffset":925,"count":0}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":1030,"endOffset":1320,"count":2},{"startOffset":1108,"endOffset":1293,"count":5},{"startOffset":1157,"endOffset":1287,"count":46},{"startOffset":1251,"endOffset":1277,"count":6}],"isBlockCoverage":true},{"functionName":"split","ranges":[{"startOffset":1455,"endOffset":1578,"count":2},{"startOffset":1516,"endOffset":1563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1547,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1650,"endOffset":1745,"count":1},{"startOffset":1711,"endOffset":1730,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSlashes","ranges":[{"startOffset":1898,"endOffset":1997,"count":3}],"isBlockCoverage":true},{"functionName":"hasOwnProperty","ranges":[{"startOffset":2089,"endOffset":2201,"count":2}],"isBlockCoverage":true},{"functionName":"cachedLookup","ranges":[{"startOffset":2283,"endOffset":2526,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2351,"endOffset":2523,"count":1},{"startOffset":2486,"endOffset":2522,"count":0}],"isBlockCoverage":true},{"functionName":"attemptRequireWithV8CompileCache","ranges":[{"startOffset":2782,"endOffset":3112,"count":2},{"startOffset":3056,"endOffset":3110,"count":0}],"isBlockCoverage":true},{"functionName":"createProjectLocalResolveHelper","ranges":[{"startOffset":3503,"endOffset":3805,"count":3}],"isBlockCoverage":true},{"functionName":"projectLocalResolveHelper","ranges":[{"startOffset":3573,"endOffset":3802,"count":2},{"startOffset":3765,"endOffset":3783,"count":0}],"isBlockCoverage":true},{"functionName":"getBasePathForProjectLocalDependencyResolution","ranges":[{"startOffset":4056,"endOffset":4576,"count":2},{"startOffset":4220,"endOffset":4314,"count":1},{"startOffset":4315,"endOffset":4327,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":4699,"endOffset":4926,"count":3}],"isBlockCoverage":true},{"functionName":"onceFn","ranges":[{"startOffset":4759,"endOffset":4905,"count":3},{"startOffset":4815,"endOffset":4828,"count":1},{"startOffset":4828,"endOffset":4904,"count":2}],"isBlockCoverage":true},{"functionName":"versionGteLt","ranges":[{"startOffset":4965,"endOffset":5653,"count":13},{"startOffset":5187,"endOffset":5277,"count":3},{"startOffset":5210,"endOffset":5276,"count":2},{"startOffset":5231,"endOffset":5275,"count":0},{"startOffset":5323,"endOffset":5514,"count":0},{"startOffset":5532,"endOffset":5539,"count":12}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":5545,"endOffset":5651,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5621,"endOffset":5643,"count":78}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14133,"count":1}],"isBlockCoverage":true},{"functionName":"fixConfig","ranges":[{"startOffset":796,"endOffset":1517,"count":1},{"startOffset":1221,"endOffset":1281,"count":0},{"startOffset":1433,"endOffset":1496,"count":0}],"isBlockCoverage":true},{"functionName":"findAndReadConfig","ranges":[{"startOffset":1535,"endOffset":3191,"count":1},{"startOffset":2344,"endOffset":2349,"count":0}],"isBlockCoverage":true},{"functionName":"readConfig","ranges":[{"startOffset":3550,"endOffset":10365,"count":1},{"startOffset":4368,"endOffset":4376,"count":0},{"startOffset":4398,"endOffset":4501,"count":0},{"startOffset":5172,"endOffset":5487,"count":0},{"startOffset":5821,"endOffset":5895,"count":0},{"startOffset":5896,"endOffset":5909,"count":0},{"startOffset":5957,"endOffset":7148,"count":0},{"startOffset":7705,"endOffset":8024,"count":0},{"startOffset":8055,"endOffset":8146,"count":0},{"startOffset":8250,"endOffset":8313,"count":0},{"startOffset":8354,"endOffset":8416,"count":0},{"startOffset":8455,"endOffset":8515,"count":0},{"startOffset":8549,"endOffset":8604,"count":0},{"startOffset":8785,"endOffset":8810,"count":0},{"startOffset":9077,"endOffset":9209,"count":0},{"startOffset":10088,"endOffset":10098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7965,"endOffset":8012,"count":0}],"isBlockCoverage":false},{"functionName":"ts.parseJsonConfigFileContent.readDirectory","ranges":[{"startOffset":10090,"endOffset":10098,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAndLoadCompiler","ranges":[{"startOffset":10559,"endOffset":10748,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCompiler","ranges":[{"startOffset":10806,"endOffset":11056,"count":2}],"isBlockCoverage":true},{"functionName":"loadCompiler","ranges":[{"startOffset":11074,"endOffset":11185,"count":2}],"isBlockCoverage":true},{"functionName":"filterRecognizedTsConfigTsNodeOptions","ranges":[{"startOffset":11355,"endOffset":12658,"count":1},{"startOffset":11452,"endOffset":11496,"count":0}],"isBlockCoverage":true},{"functionName":"getTsConfigDefaults","ranges":[{"startOffset":12912,"endOffset":14040,"count":0}],"isBlockCoverage":false}]},{"scriptId":"295","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/ts-internals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12388,"count":1}],"isBlockCoverage":true},{"functionName":"createTsInternalsUncached","ranges":[{"startOffset":729,"endOffset":2547,"count":1}],"isBlockCoverage":true},{"functionName":"getExtendsConfigPath","ranges":[{"startOffset":936,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"isRootedDiskPath","ranges":[{"startOffset":2633,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"combinePaths","ranges":[{"startOffset":2710,"endOffset":2852,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedAbsolutePath","ranges":[{"startOffset":2853,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":3069,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":3151,"endOffset":3318,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternFromSpec","ranges":[{"startOffset":3672,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"getSubPatternFromSpec","ranges":[{"startOffset":3901,"endOffset":5050,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":5402,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":5638,"endOffset":5724,"count":0}],"isBlockCoverage":false},{"functionName":"getNormalizedPathComponents","ranges":[{"startOffset":5729,"endOffset":5869,"count":0}],"isBlockCoverage":false},{"functionName":"getPathComponents","ranges":[{"startOffset":5870,"endOffset":6032,"count":0}],"isBlockCoverage":false},{"functionName":"reducePathComponents","ranges":[{"startOffset":6033,"endOffset":6708,"count":0}],"isBlockCoverage":false},{"functionName":"getRootLength","ranges":[{"startOffset":6709,"endOffset":6846,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodedRootLength","ranges":[{"startOffset":6847,"endOffset":9710,"count":0}],"isBlockCoverage":false},{"functionName":"ensureTrailingDirectorySeparator","ranges":[{"startOffset":9711,"endOffset":9875,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingDirectorySeparator","ranges":[{"startOffset":9876,"endOffset":10013,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyDirectorySeparator","ranges":[{"startOffset":10014,"endOffset":10165,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrailingDirectorySeparator","ranges":[{"startOffset":10166,"endOffset":10335,"count":0}],"isBlockCoverage":false},{"functionName":"isVolumeCharacter","ranges":[{"startOffset":10438,"endOffset":10666,"count":0}],"isBlockCoverage":false},{"functionName":"getFileUrlVolumeSeparatorEnd","ranges":[{"startOffset":10667,"endOffset":11125,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":11126,"endOffset":11437,"count":0}],"isBlockCoverage":false},{"functionName":"pathComponents","ranges":[{"startOffset":11438,"endOffset":11697,"count":0}],"isBlockCoverage":false},{"functionName":"lastOrUndefined","ranges":[{"startOffset":11698,"endOffset":11802,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":11803,"endOffset":11904,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWildcardCharacter","ranges":[{"startOffset":11905,"endOffset":12074,"count":0}],"isBlockCoverage":false},{"functionName":"isImplicitGlob","ranges":[{"startOffset":12256,"endOffset":12347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"296","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/tsconfigs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1435,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTsconfigJsonForNodeVersion","ranges":[{"startOffset":331,"endOffset":1312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"297","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/module-type-classifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2232,"count":1}],"isBlockCoverage":true},{"functionName":"createModuleTypeClassifier","ranges":[{"startOffset":402,"endOffset":1642,"count":1},{"startOffset":549,"endOffset":609,"count":0},{"startOffset":1595,"endOffset":1611,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":687,"endOffset":847,"count":0}],"isBlockCoverage":false},{"functionName":"classifyModuleNonCached","ranges":[{"startOffset":1148,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"classifyModuleAuto","ranges":[{"startOffset":1450,"endOffset":1512,"count":1}],"isBlockCoverage":true},{"functionName":"parsePattern","ranges":[{"startOffset":1708,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1909,"endOffset":2181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/resolver-functions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7314,"count":1}],"isBlockCoverage":true},{"functionName":"createResolverFunctions","ranges":[{"startOffset":268,"endOffset":7208,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/cjs-resolve-hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"installCommonjsResolveHooksIfNecessary","ranges":[{"startOffset":155,"endOffset":1196,"count":1},{"startOffset":467,"endOffset":1194,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveFilename","ranges":[{"startOffset":661,"endOffset":982,"count":0}],"isBlockCoverage":false},{"functionName":"_findPath","ranges":[{"startOffset":991,"endOffset":1188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/node-module-type-classifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1515,"count":1}],"isBlockCoverage":true},{"functionName":"classifyModule","ranges":[{"startOffset":674,"endOffset":1418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-modules-cjs-loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19220,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":1684,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":2716,"endOffset":3526,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageScope","ranges":[{"startOffset":3528,"endOffset":4071,"count":0}],"isBlockCoverage":false},{"functionName":"createCjsLoader","ranges":[{"startOffset":4287,"endOffset":17625,"count":0}],"isBlockCoverage":false},{"functionName":"assertScriptCanLoadAsCJS","ranges":[{"startOffset":18037,"endOffset":19129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-primordials.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2306,"count":1}],"isBlockCoverage":true},{"functionName":"ArrayPrototypeShift","ranges":[{"startOffset":98,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeForEach","ranges":[{"startOffset":165,"endOffset":223,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeIncludes","ranges":[{"startOffset":251,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypeJoin","ranges":[{"startOffset":334,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypePop","ranges":[{"startOffset":412,"endOffset":466,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPrototypePush","ranges":[{"startOffset":490,"endOffset":545,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPrototypeHasOwnProperty","ranges":[{"startOffset":841,"endOffset":903,"count":40}],"isBlockCoverage":true},{"functionName":"RegExpPrototypeExec","ranges":[{"startOffset":928,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpPrototypeTest","ranges":[{"startOffset":1009,"endOffset":1065,"count":301}],"isBlockCoverage":true},{"functionName":"RegExpPrototypeSymbolReplace","ranges":[{"startOffset":1099,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeEndsWith","ranges":[{"startOffset":1251,"endOffset":1311,"count":723}],"isBlockCoverage":true},{"functionName":"StringPrototypeIncludes","ranges":[{"startOffset":1340,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeLastIndexOf","ranges":[{"startOffset":1432,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeIndexOf","ranges":[{"startOffset":1523,"endOffset":1582,"count":48}],"isBlockCoverage":true},{"functionName":"StringPrototypeRepeat","ranges":[{"startOffset":1609,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeReplace","ranges":[{"startOffset":1695,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeSlice","ranges":[{"startOffset":1780,"endOffset":1837,"count":290}],"isBlockCoverage":true},{"functionName":"StringPrototypeSplit","ranges":[{"startOffset":1863,"endOffset":1920,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeStartsWith","ranges":[{"startOffset":1951,"endOffset":2013,"count":512}],"isBlockCoverage":true},{"functionName":"StringPrototypeSubstr","ranges":[{"startOffset":2040,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeCharCodeAt","ranges":[{"startOffset":2129,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"StringPrototypeMatch","ranges":[{"startOffset":2217,"endOffset":2274,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-nativemodule.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":246,"count":1}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":115,"endOffset":205,"count":344}],"isBlockCoverage":true}]},{"scriptId":"304","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internalBinding-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1},{"startOffset":1547,"endOffset":1608,"count":0},{"startOffset":1726,"endOffset":1757,"count":0}],"isBlockCoverage":true},{"functionName":"internalModuleReadJSON","ranges":[{"startOffset":262,"endOffset":737,"count":30},{"startOffset":370,"endOffset":436,"count":4},{"startOffset":420,"endOffset":436,"count":0},{"startOffset":436,"endOffset":736,"count":26}],"isBlockCoverage":true},{"functionName":"internalModuleStat","ranges":[{"startOffset":980,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"internalModuleStatInefficient","ranges":[{"startOffset":1257,"endOffset":1464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-modules-package_json_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1264,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":522,"endOffset":1235,"count":30},{"startOffset":575,"endOffset":612,"count":0},{"startOffset":778,"endOffset":1185,"count":26},{"startOffset":812,"endOffset":1050,"count":1},{"startOffset":1078,"endOffset":1181,"count":0}],"isBlockCoverage":true}]},{"scriptId":"306","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-modules-cjs-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2666,"count":1},{"startOffset":495,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":787,"endOffset":2568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2856,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":103,"endOffset":176,"count":12}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":191,"endOffset":661,"count":12},{"startOffset":233,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"parseArgv","ranges":[{"startOffset":663,"endOffset":1110,"count":2}],"isBlockCoverage":true},{"functionName":"getNodeOptionsEnvArgv","ranges":[{"startOffset":1112,"endOffset":1337,"count":1},{"startOffset":1234,"endOffset":1239,"count":0},{"startOffset":1277,"endOffset":1317,"count":0}],"isBlockCoverage":true},{"functionName":"ParseNodeOptionsEnvVar","ranges":[{"startOffset":1487,"endOffset":2588,"count":1},{"startOffset":1688,"endOffset":2448,"count":121},{"startOffset":1799,"endOffset":1814,"count":0},{"startOffset":1816,"endOffset":2082,"count":0},{"startOffset":2102,"endOffset":2118,"count":0},{"startOffset":2120,"endOffset":2186,"count":0},{"startOffset":2207,"endOffset":2276,"count":2},{"startOffset":2276,"endOffset":2308,"count":119},{"startOffset":2308,"endOffset":2383,"count":1},{"startOffset":2383,"endOffset":2444,"count":118},{"startOffset":2470,"endOffset":2567,"count":0}],"isBlockCoverage":true},{"functionName":"getOptionValuesFromOtherEnvVars","ranges":[{"startOffset":2667,"endOffset":2855,"count":1},{"startOffset":2785,"endOffset":2835,"count":0}],"isBlockCoverage":true}]},{"scriptId":"308","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/arg/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3893,"count":1}],"isBlockCoverage":true},{"functionName":"arg","ranges":[{"startOffset":40,"endOffset":3716,"count":2},{"startOffset":156,"endOffset":224,"count":0},{"startOffset":334,"endOffset":1466,"count":18},{"startOffset":348,"endOffset":419,"count":0},{"startOffset":443,"endOffset":528,"count":0},{"startOffset":554,"endOffset":659,"count":0},{"startOffset":698,"endOffset":745,"count":0},{"startOffset":820,"endOffset":840,"count":2},{"startOffset":841,"endOffset":873,"count":2},{"startOffset":875,"endOffset":1075,"count":2},{"startOffset":1075,"endOffset":1274,"count":16},{"startOffset":1144,"endOffset":1172,"count":6},{"startOffset":1177,"endOffset":1274,"count":0},{"startOffset":1297,"endOffset":1314,"count":0},{"startOffset":1316,"endOffset":1428,"count":0},{"startOffset":1518,"endOffset":3697,"count":8},{"startOffset":1572,"endOffset":1594,"count":0},{"startOffset":1596,"endOffset":1657,"count":0},{"startOffset":1684,"endOffset":1749,"count":0},{"startOffset":1801,"endOffset":3655,"count":7},{"startOffset":1897,"endOffset":1921,"count":0},{"startOffset":1944,"endOffset":1991,"count":0},{"startOffset":2209,"endOffset":2227,"count":0},{"startOffset":2296,"endOffset":2336,"count":0},{"startOffset":2443,"endOffset":2594,"count":0},{"startOffset":2600,"endOffset":2705,"count":0},{"startOffset":2707,"endOffset":3646,"count":0},{"startOffset":3655,"endOffset":3694,"count":1},{"startOffset":3697,"endOffset":3715,"count":8}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":909,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1978,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"arg.flag","ranges":[{"startOffset":3729,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3815,"endOffset":3867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":630,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"joinArgs","ranges":[{"startOffset":1197,"endOffset":1289,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1232,"endOffset":1287,"count":0}],"isBlockCoverage":false},{"functionName":"createErrorCtor","ranges":[{"startOffset":1291,"endOffset":1462,"count":12}],"isBlockCoverage":true},{"functionName":"CustomError","ranges":[{"startOffset":1386,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"createErrRequireEsm","ranges":[{"startOffset":2208,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"getErrRequireEsmMessage","ranges":[{"startOffset":2974,"endOffset":3875,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":140,"count":1}],"isBlockCoverage":true}]},{"scriptId":"311","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/file-extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5820,"count":1}],"isBlockCoverage":true},{"functionName":"tsSupportsMtsCtsExts","ranges":[{"startOffset":961,"endOffset":1062,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":1178,"endOffset":5737,"count":1},{"startOffset":1464,"endOffset":1533,"count":0},{"startOffset":1640,"endOffset":1663,"count":0},{"startOffset":1860,"endOffset":1893,"count":0},{"startOffset":2002,"endOffset":2211,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2358,"endOffset":2397,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2471,"endOffset":2502,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2930,"endOffset":3013,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3055,"endOffset":3108,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3151,"endOffset":3190,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3233,"endOffset":3272,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3315,"endOffset":3354,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3470,"count":6}],"isBlockCoverage":true}]},{"scriptId":"312","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/ts-transpile-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5774,"count":1}],"isBlockCoverage":true},{"functionName":"createTsTranspileModule","ranges":[{"startOffset":411,"endOffset":5667,"count":5},{"startOffset":994,"endOffset":998,"count":0},{"startOffset":1124,"endOffset":1267,"count":10},{"startOffset":1202,"endOffset":1261,"count":5},{"startOffset":1330,"endOffset":1621,"count":95},{"startOffset":1460,"endOffset":1520,"count":0},{"startOffset":1522,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"getSourceFile","ranges":[{"startOffset":2070,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":2173,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultLibFileName","ranges":[{"startOffset":2620,"endOffset":2636,"count":0}],"isBlockCoverage":false},{"functionName":"useCaseSensitiveFileNames","ranges":[{"startOffset":2673,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"getCanonicalFileName","ranges":[{"startOffset":2715,"endOffset":2737,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentDirectory","ranges":[{"startOffset":2768,"endOffset":2776,"count":0}],"isBlockCoverage":false},{"functionName":"getNewLine","ranges":[{"startOffset":2798,"endOffset":2811,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":2833,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2929,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"directoryExists","ranges":[{"startOffset":3045,"endOffset":3055,"count":0}],"isBlockCoverage":false},{"functionName":"getDirectories","ranges":[{"startOffset":3081,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"transpileModule","ranges":[{"startOffset":3675,"endOffset":5665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"313","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/repl.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21998,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessTopLevelAwait","ranges":[{"startOffset":679,"endOffset":913,"count":0}],"isBlockCoverage":false},{"functionName":"getDiffLines","ranges":[{"startOffset":924,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"getNodeRepl","ranges":[{"startOffset":1234,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"REPL_FILENAME","ranges":[{"startOffset":1581,"endOffset":1714,"count":0}],"isBlockCoverage":false},{"functionName":"createRepl","ranges":[{"startOffset":2237,"endOffset":12360,"count":0}],"isBlockCoverage":false},{"functionName":"EvalState","ranges":[{"startOffset":12482,"endOffset":12734,"count":0}],"isBlockCoverage":false},{"functionName":"createEvalAwarePartialHost","ranges":[{"startOffset":12768,"endOffset":13555,"count":0}],"isBlockCoverage":false},{"functionName":"appendCompileAndEvalInput","ranges":[{"startOffset":13881,"endOffset":18904,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":18958,"endOffset":19229,"count":0}],"isBlockCoverage":false},{"functionName":"appendToEvalState","ranges":[{"startOffset":19298,"endOffset":19742,"count":0}],"isBlockCoverage":false},{"functionName":"lineCount","ranges":[{"startOffset":19781,"endOffset":19945,"count":0}],"isBlockCoverage":false},{"functionName":"isRecoverable","ranges":[{"startOffset":21294,"endOffset":21529,"count":0}],"isBlockCoverage":false},{"functionName":"setupContext","ranges":[{"startOffset":21623,"endOffset":21928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/v8-compile-cache-lib/v8-compile-cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11535,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemBlobStore","ranges":[{"startOffset":465,"endOffset":794,"count":2},{"startOffset":550,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":798,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1092,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1515,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1670,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"isDirty","ranges":[{"startOffset":2069,"endOffset":2108,"count":2}],"isBlockCoverage":true},{"functionName":"save","ranges":[{"startOffset":2112,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"_load","ranges":[{"startOffset":2685,"endOffset":3022,"count":2},{"startOffset":2845,"endOffset":2932,"count":0}],"isBlockCoverage":true},{"functionName":"_getDump","ranges":[{"startOffset":3026,"endOffset":3801,"count":0}],"isBlockCoverage":false},{"functionName":"NativeCompileCache","ranges":[{"startOffset":4019,"endOffset":4107,"count":2}],"isBlockCoverage":true},{"functionName":"setCacheStore","ranges":[{"startOffset":4111,"endOffset":4177,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":4181,"endOffset":5948,"count":2}],"isBlockCoverage":true},{"functionName":"_ownModuleCompile","ranges":[{"startOffset":4462,"endOffset":5944,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":5952,"endOffset":6215,"count":2}],"isBlockCoverage":true},{"functionName":"_moduleCompile","ranges":[{"startOffset":6219,"endOffset":8037,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirpSync","ranges":[{"startOffset":8365,"endOffset":8432,"count":0}],"isBlockCoverage":false},{"functionName":"_mkdirpSync","ranges":[{"startOffset":8434,"endOffset":8785,"count":0}],"isBlockCoverage":false},{"functionName":"slashEscape","ranges":[{"startOffset":8787,"endOffset":9072,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9039,"endOffset":9068,"count":12}],"isBlockCoverage":true},{"functionName":"supportsCachedData","ranges":[{"startOffset":9074,"endOffset":9267,"count":2}],"isBlockCoverage":true},{"functionName":"getCacheDir","ranges":[{"startOffset":9269,"endOffset":9935,"count":2},{"startOffset":9405,"endOffset":9449,"count":0},{"startOffset":9562,"endOffset":9602,"count":0},{"startOffset":9717,"endOffset":9852,"count":0}],"isBlockCoverage":true},{"functionName":"getMainName","ranges":[{"startOffset":9937,"endOffset":10288,"count":2},{"startOffset":10174,"endOffset":10218,"count":0},{"startOffset":10223,"endOffset":10246,"count":0}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":10290,"endOffset":11170,"count":2}],"isBlockCoverage":true},{"functionName":"uninstall","ranges":[{"startOffset":10880,"endOffset":11103,"count":2},{"startOffset":10910,"endOffset":10917,"count":0},{"startOffset":11024,"endOffset":11059,"count":0}],"isBlockCoverage":true}]},{"scriptId":"315","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-modules-esm-resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33058,"count":1},{"startOffset":297,"endOffset":358,"count":0},{"startOffset":377,"endOffset":388,"count":0}],"isBlockCoverage":true},{"functionName":"createResolve","ranges":[{"startOffset":3003,"endOffset":33019,"count":1},{"startOffset":3598,"endOffset":3637,"count":0},{"startOffset":5482,"endOffset":5543,"count":0},{"startOffset":5619,"endOffset":5642,"count":0}],"isBlockCoverage":true},{"functionName":"emitFolderMapDeprecation","ranges":[{"startOffset":3742,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":4938,"endOffset":5290,"count":261},{"startOffset":5084,"endOffset":5215,"count":0},{"startOffset":5255,"endOffset":5289,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSyncWithoutErrors","ranges":[{"startOffset":5700,"endOffset":5862,"count":769},{"startOffset":5821,"endOffset":5834,"count":573},{"startOffset":5834,"endOffset":5861,"count":196}],"isBlockCoverage":true},{"functionName":"tryStatSyncWithErrors","ranges":[{"startOffset":5863,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":5984,"endOffset":7322,"count":247},{"startOffset":6112,"endOffset":6138,"count":217},{"startOffset":6138,"endOffset":6221,"count":30},{"startOffset":6221,"endOffset":6496,"count":4},{"startOffset":6496,"endOffset":6566,"count":26},{"startOffset":6566,"endOffset":6745,"count":0},{"startOffset":6745,"endOffset":6867,"count":26},{"startOffset":6867,"endOffset":6886,"count":0},{"startOffset":6888,"endOffset":6941,"count":26},{"startOffset":6941,"endOffset":6958,"count":13},{"startOffset":6958,"endOffset":6991,"count":26},{"startOffset":6991,"endOffset":7008,"count":12},{"startOffset":7008,"endOffset":7086,"count":26},{"startOffset":7086,"endOffset":7108,"count":8},{"startOffset":7110,"endOffset":7124,"count":7},{"startOffset":7124,"endOffset":7321,"count":26}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":7324,"endOffset":8424,"count":195},{"startOffset":7442,"endOffset":8095,"count":201},{"startOffset":7582,"endOffset":7588,"count":0},{"startOffset":7747,"endOffset":7768,"count":195},{"startOffset":7768,"endOffset":8085,"count":6},{"startOffset":8085,"endOffset":8091,"count":0},{"startOffset":8095,"endOffset":8423,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":8680,"endOffset":8759,"count":266}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":8761,"endOffset":10003,"count":6},{"startOffset":8880,"endOffset":9713,"count":4},{"startOffset":9082,"endOffset":9713,"count":0},{"startOffset":9713,"endOffset":9880,"count":2},{"startOffset":9880,"endOffset":10002,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":10103,"endOffset":10383,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":10420,"endOffset":10685,"count":0}],"isBlockCoverage":false},{"functionName":"resolveReplacementExtensions","ranges":[{"startOffset":10730,"endOffset":11569,"count":265},{"startOffset":10936,"endOffset":10953,"count":7},{"startOffset":10954,"endOffset":10971,"count":7},{"startOffset":10972,"endOffset":10989,"count":1},{"startOffset":10991,"endOffset":11543,"count":264},{"startOffset":11124,"endOffset":11143,"count":258},{"startOffset":11152,"endOffset":11264,"count":6},{"startOffset":11169,"endOffset":11189,"count":0},{"startOffset":11244,"endOffset":11264,"count":0},{"startOffset":11537,"endOffset":11543,"count":0},{"startOffset":11547,"endOffset":11568,"count":1}],"isBlockCoverage":true},{"functionName":"resolveIndex","ranges":[{"startOffset":11571,"endOffset":11658,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":11696,"endOffset":12975,"count":261},{"startOffset":11809,"endOffset":11952,"count":0},{"startOffset":12004,"endOffset":12455,"count":0},{"startOffset":12511,"endOffset":12522,"count":1},{"startOffset":12624,"endOffset":12660,"count":0},{"startOffset":12697,"endOffset":12824,"count":0},{"startOffset":12851,"endOffset":12957,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":12977,"endOffset":13192,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":13194,"endOffset":13393,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":13395,"endOffset":13745,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":13747,"endOffset":14129,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":14230,"endOffset":15893,"count":40},{"startOffset":14369,"endOffset":14380,"count":0},{"startOffset":14381,"endOffset":14417,"count":0},{"startOffset":14423,"endOffset":14496,"count":0},{"startOffset":14546,"endOffset":15086,"count":0},{"startOffset":15173,"endOffset":15246,"count":0},{"startOffset":15469,"endOffset":15542,"count":0},{"startOffset":15582,"endOffset":15892,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":15948,"endOffset":16088,"count":162},{"startOffset":16040,"endOffset":16085,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":16090,"endOffset":18222,"count":120},{"startOffset":16272,"endOffset":16415,"count":40},{"startOffset":16415,"endOffset":18107,"count":80},{"startOffset":16447,"endOffset":17219,"count":0},{"startOffset":17372,"endOffset":17600,"count":162},{"startOffset":17430,"endOffset":17594,"count":0},{"startOffset":17643,"endOffset":18032,"count":126},{"startOffset":17700,"endOffset":17722,"count":88},{"startOffset":17724,"endOffset":18026,"count":80},{"startOffset":17984,"endOffset":17993,"count":0},{"startOffset":18032,"endOffset":18107,"count":0},{"startOffset":18107,"endOffset":18221,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":18224,"endOffset":19159,"count":40},{"startOffset":18356,"endOffset":18368,"count":0},{"startOffset":18424,"endOffset":18437,"count":0},{"startOffset":18577,"endOffset":19128,"count":142},{"startOffset":18687,"endOffset":18744,"count":40},{"startOffset":18744,"endOffset":19124,"count":102},{"startOffset":18800,"endOffset":19124,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":19372,"endOffset":21344,"count":40},{"startOffset":19584,"endOffset":19611,"count":0},{"startOffset":19911,"endOffset":19970,"count":0},{"startOffset":20012,"endOffset":21343,"count":0}],"isBlockCoverage":true},{"functionName":"packageImportsResolve","ranges":[{"startOffset":21346,"endOffset":23462,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":23464,"endOffset":23577,"count":149}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":23579,"endOffset":24689,"count":46},{"startOffset":23770,"endOffset":23998,"count":2},{"startOffset":23850,"endOffset":23889,"count":0},{"startOffset":24044,"endOffset":24059,"count":42},{"startOffset":24060,"endOffset":24112,"count":4},{"startOffset":24255,"endOffset":24372,"count":478},{"startOffset":24316,"endOffset":24368,"count":0},{"startOffset":24399,"endOffset":24518,"count":0},{"startOffset":24574,"endOffset":24578,"count":42},{"startOffset":24579,"endOffset":24632,"count":4}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":24802,"endOffset":26714,"count":46},{"startOffset":25159,"endOffset":25205,"count":0},{"startOffset":25206,"endOffset":25239,"count":0},{"startOffset":25241,"endOffset":25374,"count":0},{"startOffset":25549,"endOffset":26505,"count":242},{"startOffset":25731,"endOffset":26008,"count":196},{"startOffset":25808,"endOffset":25845,"count":10},{"startOffset":25846,"endOffset":25872,"count":186},{"startOffset":26008,"endOffset":26154,"count":46},{"startOffset":26154,"endOffset":26187,"count":40},{"startOffset":26195,"endOffset":26314,"count":40},{"startOffset":26314,"endOffset":26415,"count":6},{"startOffset":26415,"endOffset":26505,"count":0},{"startOffset":26505,"endOffset":26713,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":26716,"endOffset":26826,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":26828,"endOffset":27099,"count":261},{"startOffset":26898,"endOffset":27081,"count":212},{"startOffset":26956,"endOffset":26968,"count":210},{"startOffset":26968,"endOffset":27077,"count":2},{"startOffset":27081,"endOffset":27098,"count":49}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27101,"endOffset":27284,"count":261},{"startOffset":27187,"endOffset":27200,"count":0},{"startOffset":27229,"endOffset":27241,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":27397,"endOffset":27968,"count":261},{"startOffset":27625,"endOffset":27671,"count":212},{"startOffset":27671,"endOffset":27921,"count":49},{"startOffset":27703,"endOffset":27781,"count":0},{"startOffset":27842,"endOffset":27917,"count":46}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":28114,"endOffset":29522,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":29524,"endOffset":32878,"count":344},{"startOffset":29656,"endOffset":29673,"count":343},{"startOffset":29674,"endOffset":29692,"count":0},{"startOffset":29694,"endOffset":30297,"count":0},{"startOffset":30390,"endOffset":30444,"count":0},{"startOffset":30449,"endOffset":30457,"count":341},{"startOffset":30471,"endOffset":30515,"count":3},{"startOffset":30521,"endOffset":30547,"count":0},{"startOffset":30561,"endOffset":30591,"count":3},{"startOffset":30592,"endOffset":30622,"count":0},{"startOffset":30628,"endOffset":30677,"count":0},{"startOffset":30730,"endOffset":30800,"count":83},{"startOffset":30800,"endOffset":30817,"count":261},{"startOffset":30817,"endOffset":30865,"count":260},{"startOffset":30867,"endOffset":30955,"count":0},{"startOffset":30955,"endOffset":31013,"count":261},{"startOffset":31013,"endOffset":31540,"count":1},{"startOffset":31497,"endOffset":31536,"count":0},{"startOffset":31540,"endOffset":31669,"count":261},{"startOffset":31669,"endOffset":32473,"count":0},{"startOffset":32473,"endOffset":32488,"count":261},{"startOffset":32488,"endOffset":32511,"count":1},{"startOffset":32512,"endOffset":32531,"count":260},{"startOffset":32533,"endOffset":32847,"count":261},{"startOffset":32776,"endOffset":32781,"count":0},{"startOffset":32847,"endOffset":32877,"count":261}],"isBlockCoverage":true}]},{"scriptId":"316","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist-raw/node-internal-modules-esm-get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3508,"count":1},{"startOffset":452,"endOffset":491,"count":0},{"startOffset":494,"endOffset":534,"count":0},{"startOffset":537,"endOffset":585,"count":0},{"startOffset":1107,"endOffset":1180,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":378,"endOffset":398,"count":3}],"isBlockCoverage":true},{"functionName":"createGetFormat","ranges":[{"startOffset":1497,"endOffset":3466,"count":1},{"startOffset":1801,"endOffset":1840,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":2117,"endOffset":3436,"count":172},{"startOffset":2230,"endOffset":2269,"count":17},{"startOffset":2269,"endOffset":2336,"count":155},{"startOffset":2336,"endOffset":2746,"count":0},{"startOffset":2746,"endOffset":3407,"count":155},{"startOffset":2868,"endOffset":2956,"count":149},{"startOffset":2926,"endOffset":2936,"count":138},{"startOffset":2937,"endOffset":2949,"count":11},{"startOffset":2956,"endOffset":3009,"count":6},{"startOffset":3027,"endOffset":3364,"count":0},{"startOffset":3393,"endOffset":3400,"count":0},{"startOffset":3407,"endOffset":3435,"count":0}],"isBlockCoverage":true}]},{"scriptId":"317","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/loader.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":true}]},{"scriptId":"318","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/hooks.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3992,"count":1}],"isBlockCoverage":true},{"functionName":"globalPreload","ranges":[{"startOffset":753,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":1746,"endOffset":1780,"count":1}],"isBlockCoverage":true},{"functionName":"record","ranges":[{"startOffset":1797,"endOffset":2813,"count":79},{"startOffset":1884,"endOffset":1904,"count":72},{"startOffset":1905,"endOffset":1910,"count":7},{"startOffset":1944,"endOffset":1967,"count":7},{"startOffset":1967,"endOffset":2006,"count":72},{"startOffset":2006,"endOffset":2029,"count":0},{"startOffset":2029,"endOffset":2088,"count":72},{"startOffset":2088,"endOffset":2151,"count":4},{"startOffset":2153,"endOffset":2404,"count":72},{"startOffset":2392,"endOffset":2397,"count":0},{"startOffset":2404,"endOffset":2594,"count":72},{"startOffset":2564,"endOffset":2574,"count":69},{"startOffset":2594,"endOffset":2811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2376,"endOffset":2389,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2835,"endOffset":3817,"count":79},{"startOffset":2906,"endOffset":3552,"count":72},{"startOffset":3368,"endOffset":3546,"count":0}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":3869,"endOffset":3956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"320","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-exclude.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":681,"count":1}],"isBlockCoverage":true},{"functionName":"parseExclude","ranges":[{"startOffset":181,"endOffset":398,"count":3},{"startOffset":214,"endOffset":221,"count":0},{"startOffset":377,"endOffset":390,"count":0}],"isBlockCoverage":true},{"functionName":"getExclude","ranges":[{"startOffset":448,"endOffset":640,"count":3},{"startOffset":543,"endOffset":582,"count":0}],"isBlockCoverage":true}]},{"scriptId":"321","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"getMain","ranges":[{"startOffset":139,"endOffset":489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-import-meta-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":266,"count":1}],"isBlockCoverage":true},{"functionName":"getImportMetaURL","ranges":[{"startOffset":151,"endOffset":217,"count":2}],"isBlockCoverage":true}]},{"scriptId":"323","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/line-lengths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1173,"count":1}],"isBlockCoverage":true},{"functionName":"saveLineLengths","ranges":[{"startOffset":326,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"getLineLengths","ranges":[{"startOffset":998,"endOffset":1131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-process-info.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2902,"count":1}],"isBlockCoverage":true},{"functionName":"envKey","ranges":[{"startOffset":163,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":227,"endOffset":250,"count":0}],"isBlockCoverage":false},{"functionName":"setEnv","ranges":[{"startOffset":267,"endOffset":299,"count":0}],"isBlockCoverage":false},{"functionName":"delEnv","ranges":[{"startOffset":316,"endOffset":346,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":1307,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessInfo","ranges":[{"startOffset":1412,"endOffset":2856,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/lookup-sources.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2403,"count":1}],"isBlockCoverage":true},{"functionName":"loadPendingSourceMaps","ranges":[{"startOffset":1164,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"lookupSources","ranges":[{"startOffset":1885,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"getSources","ranges":[{"startOffset":2000,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"likelyHasSourceMap","ranges":[{"startOffset":2260,"endOffset":2359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/wrapper.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true}]},{"scriptId":"327","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":5},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":0},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":0},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":16}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":16},{"startOffset":840,"endOffset":852,"count":4},{"startOffset":853,"endOffset":862,"count":4},{"startOffset":862,"endOffset":913,"count":12},{"startOffset":913,"endOffset":1023,"count":70},{"startOffset":958,"endOffset":1022,"count":0},{"startOffset":1023,"endOffset":1032,"count":12},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":5},{"startOffset":1192,"endOffset":1214,"count":15651}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":3},{"startOffset":1245,"endOffset":33615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-process-end.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1},{"startOffset":318,"endOffset":331,"count":0}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":443,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-coverage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6218,"count":1},{"startOffset":1288,"endOffset":1293,"count":0},{"startOffset":1493,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1056,"endOffset":1064,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1365,"endOffset":1373,"count":2}],"isBlockCoverage":true},{"functionName":"fileCovered","ranges":[{"startOffset":1608,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":3177,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"coverageOnProcessEnd","ranges":[{"startOffset":3559,"endOffset":6150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"node:inspector","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5594,"count":1}],"isBlockCoverage":false},{"functionName":"Session","ranges":[{"startOffset":1286,"endOffset":1436,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":1532,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"connectToMainThread","ranges":[{"startOffset":1868,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2917,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":3121,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"disconnect","ranges":[{"startOffset":3971,"endOffset":4380,"count":0}],"isBlockCoverage":false},{"functionName":"inspectorOpen","ranges":[{"startOffset":4541,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"inspectorWaitForDebugger","ranges":[{"startOffset":5333,"endOffset":5443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"getEnvs","ranges":[{"startOffset":221,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":683,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":907,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":368,"endOffset":861,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/find-source-map-safe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":773,"count":1}],"isBlockCoverage":true},{"functionName":"findSourceMapSafe","ranges":[{"startOffset":149,"endOffset":723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"336","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"337","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"338","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"339","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"340","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":1}],"isBlockCoverage":true}]},{"scriptId":"341","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"342","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"343","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11,"count":1}],"isBlockCoverage":true}]},{"scriptId":"344","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":1}],"isBlockCoverage":true}]},{"scriptId":"345","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":2}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/node_modules/signal-exit/dist/mjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9090,"count":1},{"startOffset":9028,"endOffset":9054,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":323,"endOffset":690,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":868,"endOffset":2172,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":1063,"endOffset":1354,"count":1},{"startOffset":1113,"endOffset":1165,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1359,"endOffset":1414,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":1419,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"signalExitWrap","ranges":[{"startOffset":2221,"endOffset":2470,"count":1}],"isBlockCoverage":true},{"functionName":"onExit","ranges":[{"startOffset":2257,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2340,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2403,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2526,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2573,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2588,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2603,"endOffset":8102,"count":1},{"startOffset":2819,"endOffset":2829,"count":0}],"isBlockCoverage":true},{"functionName":"SignalExit","ranges":[{"startOffset":3007,"endOffset":4931,"count":1},{"startOffset":3192,"endOffset":4813,"count":3}],"isBlockCoverage":true},{"functionName":"SignalExit.#sigListeners.<computed>","ranges":[{"startOffset":3232,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":4936,"endOffset":5529,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5534,"endOffset":6349,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":6354,"endOffset":7092,"count":0}],"isBlockCoverage":false},{"functionName":"#processReallyExit","ranges":[{"startOffset":7097,"endOffset":7463,"count":0}],"isBlockCoverage":false},{"functionName":"#processEmit","ranges":[{"startOffset":7468,"endOffset":8100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/set-sources.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":703,"count":1}],"isBlockCoverage":true},{"functionName":"setSources","ranges":[{"startOffset":373,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/canonical-source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1159,"count":1}],"isBlockCoverage":true},{"functionName":"canonicalSource","ranges":[{"startOffset":358,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"canonicalPath","ranges":[{"startOffset":776,"endOffset":1113,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/node-options-env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5131,"count":1}],"isBlockCoverage":true},{"functionName":"getKeyValue","ranges":[{"startOffset":271,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"hasLoader","ranges":[{"startOffset":896,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"rmLoader","ranges":[{"startOffset":1612,"endOffset":2754,"count":0}],"isBlockCoverage":false},{"functionName":"addLoader","ranges":[{"startOffset":2774,"endOffset":4656,"count":0}],"isBlockCoverage":false},{"functionName":"addIgnoreLoadersWarning","ranges":[{"startOffset":4690,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"nodeOptionsEnv","ranges":[{"startOffset":4865,"endOffset":5085,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/path-to-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"pathToURL","ranges":[{"startOffset":62,"endOffset":183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/node_modules/signal-exit/dist/mjs/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1438,"count":1},{"startOffset":1073,"endOffset":1303,"count":0},{"startOffset":1338,"endOffset":1402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"352","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/url-to-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":181,"count":1}],"isBlockCoverage":true},{"functionName":"urlToPath","ranges":[{"startOffset":62,"endOffset":140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/argv-to-node-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"argvToNodeOptions","ranges":[{"startOffset":33,"endOffset":97,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/loader-paths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"legacyMatch","ranges":[{"startOffset":406,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"importMatch","ranges":[{"startOffset":664,"endOffset":893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/node-options-to-argv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1500,"count":1}],"isBlockCoverage":true},{"functionName":"nodeOptionsToArgv","ranges":[{"startOffset":33,"endOffset":1450,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1765,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":146,"endOffset":186,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":257,"endOffset":298,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":369,"endOffset":410,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":481,"endOffset":522,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":594,"endOffset":636,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":712,"endOffset":758,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":835,"endOffset":882,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":960,"endOffset":1008,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1082,"endOffset":1126,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1670,"endOffset":1765,"count":9},{"startOffset":1744,"endOffset":1762,"count":0}],"isBlockCoverage":true}]},{"scriptId":"357","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/v1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3618,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v1","ranges":[{"startOffset":627,"endOffset":3570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/rng.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":162,"endOffset":257,"count":1},{"startOffset":230,"endOffset":235,"count":0}],"isBlockCoverage":true},{"functionName":"rng","ranges":[{"startOffset":370,"endOffset":549,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1667,"count":1},{"startOffset":442,"endOffset":499,"count":256}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":501,"endOffset":1612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":168,"endOffset":263,"count":1},{"startOffset":242,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":265,"endOffset":356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true}]},{"scriptId":"362","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/v3.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":2},{"startOffset":292,"endOffset":310,"count":0}],"isBlockCoverage":true}]},{"scriptId":"363","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/v35.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2008,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringToBytes","ranges":[{"startOffset":372,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":725,"endOffset":2008,"count":2}],"isBlockCoverage":true},{"functionName":"generateUUID","ranges":[{"startOffset":772,"endOffset":1736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1380,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":271,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":550,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":262,"endOffset":501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/v4.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":860,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":233,"endOffset":328,"count":2},{"startOffset":307,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"v4","ranges":[{"startOffset":330,"endOffset":812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/v5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":417,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":220,"endOffset":315,"count":2},{"startOffset":294,"endOffset":312,"count":0}],"isBlockCoverage":true}]},{"scriptId":"368","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/sha1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":165,"endOffset":260,"count":1},{"startOffset":233,"endOffset":238,"count":0}],"isBlockCoverage":true},{"functionName":"sha1","ranges":[{"startOffset":262,"endOffset":503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/nil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true}]},{"scriptId":"370","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/uuid/dist/version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"version","ranges":[{"startOffset":271,"endOffset":421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/process-on-spawn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2651,"count":1}],"isBlockCoverage":true},{"functionName":"getState","ranges":[{"startOffset":144,"endOffset":616,"count":1}],"isBlockCoverage":true},{"functionName":"wrappedSpawnFunction","ranges":[{"startOffset":618,"endOffset":1683,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":662,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSpawnFunctions","ranges":[{"startOffset":1685,"endOffset":2303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2201,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":2325,"endOffset":2385,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2388,"endOffset":2455,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":2458,"endOffset":2595,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":2598,"endOffset":2647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/fromentries/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true},{"functionName":"fromEntries","ranges":[{"startOffset":102,"endOffset":233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28219,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1993,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3552,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5281,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5786,"endOffset":6318,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6880,"endOffset":7132,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":7170,"endOffset":7550,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7192,"endOffset":7546,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7695,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":9271,"endOffset":14238,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":14390,"endOffset":14596,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14600,"endOffset":20037,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":20041,"endOffset":20307,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20886,"endOffset":22132,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22924,"endOffset":24478,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":24484,"endOffset":24883,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":25418,"endOffset":25899,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":26418,"endOffset":26809,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":26815,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":27048,"endOffset":27214,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":27220,"endOffset":27412,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":27418,"endOffset":27697,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":27703,"endOffset":28074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":32916,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2594,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2664,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2788,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2866,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":3046,"endOffset":4646,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4655,"endOffset":5417,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5901,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5972,"endOffset":6033,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6042,"endOffset":6098,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6169,"endOffset":6293,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6302,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6482,"endOffset":6912,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6916,"endOffset":8462,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8590,"endOffset":9083,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":9089,"endOffset":9181,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":9187,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9427,"endOffset":9543,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9580,"endOffset":13272,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":13279,"endOffset":13342,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":13348,"endOffset":13400,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":13436,"endOffset":14126,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":14171,"endOffset":14232,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":14268,"endOffset":14324,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":14362,"endOffset":14420,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14425,"endOffset":15463,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15617,"endOffset":28126,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":28164,"endOffset":28481,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":28519,"endOffset":31545,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":31551,"endOffset":31875,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":31881,"endOffset":32088,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":32092,"endOffset":32780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68315,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1656,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4174,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4606,"endOffset":4702,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4706,"endOffset":5105,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5111,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"isPipeName","ranges":[{"startOffset":5258,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5556,"endOffset":5662,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5900,"endOffset":6317,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6321,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6402,"endOffset":6521,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6525,"endOffset":6630,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6634,"endOffset":6829,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7335,"endOffset":8094,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":8170,"endOffset":8795,"count":0}],"isBlockCoverage":false},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8799,"endOffset":9151,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":9411,"endOffset":14177,"count":0}],"isBlockCoverage":false},{"functionName":"_unrefTimer","ranges":[{"startOffset":14355,"endOffset":14490,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":14615,"endOffset":15253,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15258,"endOffset":15410,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15622,"endOffset":16150,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16237,"endOffset":16756,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16793,"endOffset":17185,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17224,"endOffset":17856,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17890,"endOffset":17936,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18027,"endOffset":18073,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18158,"endOffset":18216,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18334,"endOffset":18660,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18755,"endOffset":18839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18932,"endOffset":18979,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":18991,"endOffset":19244,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":19339,"endOffset":19671,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19701,"endOffset":19861,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19901,"endOffset":20265,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20295,"endOffset":20640,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20673,"endOffset":20863,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":20894,"endOffset":21086,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21137,"endOffset":21240,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21277,"endOffset":21432,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":21467,"endOffset":23029,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23060,"endOffset":23163,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23200,"endOffset":23507,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23512,"endOffset":23701,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23730,"endOffset":23823,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23858,"endOffset":23926,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23960,"endOffset":24026,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24058,"endOffset":24120,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24160,"endOffset":24445,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24480,"endOffset":24547,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24580,"endOffset":24641,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24674,"endOffset":24739,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24782,"endOffset":24831,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24869,"endOffset":25815,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25849,"endOffset":25919,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":25952,"endOffset":26035,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26233,"endOffset":26339,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":26373,"endOffset":27336,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":27344,"endOffset":28161,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28167,"endOffset":30225,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":30231,"endOffset":33056,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":33087,"endOffset":34743,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":34788,"endOffset":34949,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":34954,"endOffset":35109,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":35113,"endOffset":39172,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":39176,"endOffset":43262,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":43266,"endOffset":43327,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":43356,"endOffset":43554,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":43586,"endOffset":43790,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":43797,"endOffset":45436,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":45440,"endOffset":45880,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":45884,"endOffset":46403,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":46407,"endOffset":47582,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":47586,"endOffset":47904,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":47908,"endOffset":48366,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":48370,"endOffset":50009,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":50125,"endOffset":50190,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":50261,"endOffset":51769,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":51773,"endOffset":54193,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":54264,"endOffset":54328,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":54334,"endOffset":54453,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":54459,"endOffset":55759,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":55791,"endOffset":59730,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":59735,"endOffset":60158,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":60244,"endOffset":60289,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":60370,"endOffset":60671,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":60676,"endOffset":62640,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":62797,"endOffset":63585,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":63617,"endOffset":64521,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":64565,"endOffset":64690,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":64734,"endOffset":65133,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":65140,"endOffset":65226,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":65288,"endOffset":65460,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65689,"endOffset":65725,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":65730,"endOffset":65771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":65856,"endOffset":65887,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":65892,"endOffset":65928,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setupWorker","ranges":[{"startOffset":65970,"endOffset":66218,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":66246,"endOffset":66351,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":66381,"endOffset":66487,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":66637,"endOffset":67326,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":67367,"endOffset":67615,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":67751,"endOffset":67856,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":67861,"endOffset":67986,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7321,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1047,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1198,"endOffset":2086,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":2090,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2806,"endOffset":3055,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":3059,"endOffset":3721,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3725,"endOffset":3936,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3940,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":4257,"endOffset":6256,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6260,"endOffset":7098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29334,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2917,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3133,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4731,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4817,"endOffset":5276,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5280,"endOffset":5861,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5865,"endOffset":6167,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6238,"endOffset":6666,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6694,"endOffset":10276,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":10308,"endOffset":11131,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":11138,"endOffset":11498,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11504,"endOffset":12172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":12208,"endOffset":12525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12634,"endOffset":13087,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":13094,"endOffset":13877,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13883,"endOffset":14281,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":14287,"endOffset":14725,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14731,"endOffset":14872,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14878,"endOffset":15005,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":15011,"endOffset":15216,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15804,"endOffset":18796,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18801,"endOffset":19983,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19987,"endOffset":20172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":20201,"endOffset":20791,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20835,"endOffset":20973,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20980,"endOffset":21036,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":21069,"endOffset":21269,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":21307,"endOffset":21630,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":21669,"endOffset":21822,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21855,"endOffset":22038,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":22080,"endOffset":22281,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":22328,"endOffset":22535,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":22583,"endOffset":22853,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22891,"endOffset":23278,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":23319,"endOffset":23709,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":23761,"endOffset":24383,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":24438,"endOffset":25066,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":25073,"endOffset":25241,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":25247,"endOffset":25419,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":25425,"endOffset":25686,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":25692,"endOffset":25810,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":25839,"endOffset":25953,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25985,"endOffset":26101,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":26145,"endOffset":26204,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":26248,"endOffset":26307,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":26351,"endOffset":26410,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":26454,"endOffset":26513,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":26554,"endOffset":26625,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":26667,"endOffset":26739,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26863,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26993,"endOffset":27051,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27210,"endOffset":27269,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27346,"endOffset":27407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27569,"endOffset":27628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27705,"endOffset":27766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27924,"endOffset":27979,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28052,"endOffset":28109,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28267,"endOffset":28326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28403,"endOffset":28464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28575,"endOffset":28612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28724,"endOffset":28763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29055,"endOffset":29091,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29096,"endOffset":29137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1943,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":500,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":609,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":710,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1389,"endOffset":1858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2817,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":243,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":395,"endOffset":1071,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1077,"endOffset":1233,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1239,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1603,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2503,"endOffset":2753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/pirates/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5866,"count":1},{"startOffset":572,"endOffset":592,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":2},{"startOffset":285,"endOffset":290,"count":0}],"isBlockCoverage":true},{"functionName":"shouldCompile","ranges":[{"startOffset":1528,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"addHook","ranges":[{"startOffset":3427,"endOffset":5866,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/loader.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":92,"count":1}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/hooks.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1949,"count":1}],"isBlockCoverage":true},{"functionName":"globalPreload","ranges":[{"startOffset":189,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":789,"endOffset":848,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":870,"endOffset":1340,"count":1},{"startOffset":923,"endOffset":1126,"count":0},{"startOffset":1188,"endOffset":1304,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1365,"endOffset":1913,"count":1},{"startOffset":1421,"endOffset":1627,"count":0},{"startOffset":1715,"endOffset":1751,"count":0},{"startOffset":1752,"endOffset":1862,"count":0}],"isBlockCoverage":true}]},{"scriptId":"383","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/mock-service-client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1796,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":206,"endOffset":242,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":251,"endOffset":1748,"count":1}],"isBlockCoverage":true},{"functionName":"MockServiceClient","ranges":[{"startOffset":341,"endOffset":482,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":421,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"#receive","ranges":[{"startOffset":487,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"#fetch","ranges":[{"startOffset":1081,"endOffset":1345,"count":1},{"startOffset":1167,"endOffset":1344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1195,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":1350,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1506,"endOffset":1746,"count":1},{"startOffset":1566,"endOffset":1738,"count":0}],"isBlockCoverage":true}]},{"scriptId":"384","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/mock-service.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9208,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwn","ranges":[{"startOffset":1545,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getKey","ranges":[{"startOffset":1597,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"buildSrc","ranges":[{"startOffset":1706,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"isMockServiceResponse","ranges":[{"startOffset":2333,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"isMockServiceRequest","ranges":[{"startOffset":2529,"endOffset":2764,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3280,"endOffset":9167,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3304,"endOffset":3316,"count":1}],"isBlockCoverage":true}]},{"scriptId":"385","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9645,"count":1},{"startOffset":497,"endOffset":508,"count":0}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":263,"endOffset":315,"count":7}],"isBlockCoverage":true},{"functionName":"setCwd","ranges":[{"startOffset":678,"endOffset":694,"count":0}],"isBlockCoverage":false},{"functionName":"getCwd","ranges":[{"startOffset":854,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterNodeInternals","ranges":[{"startOffset":1048,"endOffset":1073,"count":0}],"isBlockCoverage":false},{"functionName":"setFilterNodeInternals","ranges":[{"startOffset":1175,"endOffset":1207,"count":0}],"isBlockCoverage":false},{"functionName":"addIgnoredPackage","ranges":[{"startOffset":1719,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"removeIgnoredPackage","ranges":[{"startOffset":1991,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"getIgnoredPackages","ranges":[{"startOffset":2263,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"getTestBuiltPath","ranges":[{"startOffset":2335,"endOffset":2573,"count":1},{"startOffset":2490,"endOffset":2500,"count":0}],"isBlockCoverage":true},{"functionName":"buildIgnoredPackages","ranges":[{"startOffset":2604,"endOffset":3473,"count":1},{"startOffset":2738,"endOffset":2755,"count":0},{"startOffset":3291,"endOffset":3341,"count":0},{"startOffset":3380,"endOffset":3384,"count":0},{"startOffset":3439,"endOffset":3443,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2815,"endOffset":2835,"count":7}],"isBlockCoverage":true},{"functionName":"getIgnoredPackagesRE","ranges":[{"startOffset":3589,"endOffset":3670,"count":0}],"isBlockCoverage":false},{"functionName":"setFilterIgnoredPackages","ranges":[{"startOffset":3894,"endOffset":3928,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterIgnoredPackages","ranges":[{"startOffset":4070,"endOffset":4097,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorStackHead","ranges":[{"startOffset":4179,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4629,"endOffset":5098,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":5114,"endOffset":5358,"count":0}],"isBlockCoverage":false},{"functionName":"capture","ranges":[{"startOffset":5390,"endOffset":6412,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":6657,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"captureString","ranges":[{"startOffset":6734,"endOffset":7032,"count":0}],"isBlockCoverage":false},{"functionName":"captureError","ranges":[{"startOffset":7703,"endOffset":8617,"count":0}],"isBlockCoverage":false},{"functionName":"captureErrorString","ranges":[{"startOffset":8928,"endOffset":8996,"count":0}],"isBlockCoverage":false},{"functionName":"parseStack","ranges":[{"startOffset":9261,"endOffset":9384,"count":0}],"isBlockCoverage":false},{"functionName":"expandStack","ranges":[{"startOffset":9413,"endOffset":9610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/is-relative-require.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"isRelativeRequire","ranges":[{"startOffset":151,"endOffset":219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/export-line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"exportLine","ranges":[{"startOffset":209,"endOffset":535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/munge-mocks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1477,"count":1}],"isBlockCoverage":true},{"functionName":"mungeMocks","ranges":[{"startOffset":335,"endOffset":1436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/resolve-mock-entry-point.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":925,"count":1}],"isBlockCoverage":true},{"functionName":"resolveMockEntryPoint","ranges":[{"startOffset":85,"endOffset":871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/service-key.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":153,"count":1}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/call-site-like.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15501,"count":1}],"isBlockCoverage":true},{"functionName":"isCallSite","ranges":[{"startOffset":264,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":346,"endOffset":15458,"count":0}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/require-resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":316,"count":1}],"isBlockCoverage":true},{"functionName":"requireResolve","ranges":[{"startOffset":179,"endOffset":271,"count":1},{"startOffset":235,"endOffset":269,"count":0}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-all-conditions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2800,"count":1}],"isBlockCoverage":true},{"functionName":"getAllConditions","ranges":[{"startOffset":678,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"getAllConditionsFromCond","ranges":[{"startOffset":1924,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-all-conditional-values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1323,"count":1}],"isBlockCoverage":true},{"functionName":"getAllConditionalValues","ranges":[{"startOffset":1128,"endOffset":1267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-unique-condition-sets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1432,"count":1}],"isBlockCoverage":true},{"functionName":"getUniqueConditionSets","ranges":[{"startOffset":879,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"arrayIsEquivalent","ranges":[{"startOffset":1204,"endOffset":1377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-all-exports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2302,"count":1}],"isBlockCoverage":true},{"functionName":"resolveAllExports","ranges":[{"startOffset":969,"endOffset":2253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-all-local-imports.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4524,"count":1}],"isBlockCoverage":true},{"functionName":"resolveAllLocalImports","ranges":[{"startOffset":928,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"getNamedImportsList","ranges":[{"startOffset":4118,"endOffset":4469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-conditional-value.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":767,"count":1}],"isBlockCoverage":true},{"functionName":"resolveConditionalValue","ranges":[{"startOffset":169,"endOffset":712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3338,"count":1}],"isBlockCoverage":true},{"functionName":"realpathParentDir","ranges":[{"startOffset":978,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"resolveImport","ranges":[{"startOffset":1482,"endOffset":3294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/is-windows.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":135,"count":1}],"isBlockCoverage":true}]},{"scriptId":"402","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6863,"count":1}],"isBlockCoverage":true},{"functionName":"isLineRef","ranges":[{"startOffset":146,"endOffset":242,"count":0}],"isBlockCoverage":false},{"functionName":"isCompiledCallSiteLine","ranges":[{"startOffset":282,"endOffset":343,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallSiteLine","ranges":[{"startOffset":1850,"endOffset":2819,"count":0}],"isBlockCoverage":false},{"functionName":"parseCallSiteLine_","ranges":[{"startOffset":2848,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"compileLineRefParse","ranges":[{"startOffset":4221,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"parseLineRefs","ranges":[{"startOffset":4909,"endOffset":6828,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-conditional-values-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3494,"count":1}],"isBlockCoverage":true},{"functionName":"getConditionalValuesList","ranges":[{"startOffset":504,"endOffset":1789,"count":0}],"isBlockCoverage":false},{"functionName":"isSubset","ranges":[{"startOffset":1808,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionalValuesListFromCond","ranges":[{"startOffset":2180,"endOffset":3437,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/read-pkg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":883,"count":1}],"isBlockCoverage":true},{"functionName":"isExports","ranges":[{"startOffset":61,"endOffset":123,"count":0}],"isBlockCoverage":false},{"functionName":"isImports","ranges":[{"startOffset":143,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"isPkg","ranges":[{"startOffset":354,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"readPkg","ranges":[{"startOffset":761,"endOffset":845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2322,"count":1}],"isBlockCoverage":true},{"functionName":"invalidImportSpecifier","ranges":[{"startOffset":395,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackage","ranges":[{"startOffset":583,"endOffset":730,"count":0}],"isBlockCoverage":false},{"functionName":"relativeImportWithoutParentURL","ranges":[{"startOffset":778,"endOffset":1000,"count":0}],"isBlockCoverage":false},{"functionName":"subpathNotExported","ranges":[{"startOffset":1036,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"packageNotFound","ranges":[{"startOffset":1437,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"moduleNotFound","ranges":[{"startOffset":1711,"endOffset":1952,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportNotDefined","ranges":[{"startOffset":1993,"endOffset":2286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1688,"count":1}],"isBlockCoverage":true},{"functionName":"resolveExport","ranges":[{"startOffset":348,"endOffset":1644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-named-exports-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":603,"count":1}],"isBlockCoverage":true},{"functionName":"getNamedExportsList","ranges":[{"startOffset":126,"endOffset":315,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSubpaths","ranges":[{"startOffset":342,"endOffset":551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/star-glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":687,"count":1}],"isBlockCoverage":true},{"functionName":"starGlob","ranges":[{"startOffset":93,"endOffset":648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/to-path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"toPath","ranges":[{"startOffset":59,"endOffset":137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/file-exists.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":160,"count":1}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":62,"endOffset":119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/find-dep-package.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1232,"count":1}],"isBlockCoverage":true},{"functionName":"dirExists","ranges":[{"startOffset":149,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"findDepPackage","ranges":[{"startOffset":243,"endOffset":1186,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-package-import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3406,"count":1}],"isBlockCoverage":true},{"functionName":"resolvePackageImport","ranges":[{"startOffset":777,"endOffset":3354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/to-file-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"toFileURL","ranges":[{"startOffset":62,"endOffset":176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-dependency-export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2858,"count":1}],"isBlockCoverage":true},{"functionName":"resolveDependencyExports","ranges":[{"startOffset":506,"endOffset":2803,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/read-json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":193,"count":1}],"isBlockCoverage":true},{"functionName":"readJSON","ranges":[{"startOffset":69,"endOffset":154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/find-star-match.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":795,"count":1}],"isBlockCoverage":true},{"functionName":"findStarMatch","ranges":[{"startOffset":232,"endOffset":750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/walk-up-path/dist/mjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":322,"count":1}],"isBlockCoverage":true},{"functionName":"walkUp","ranges":[{"startOffset":63,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1647,"count":1}],"isBlockCoverage":true},{"functionName":"globStreamSync","ranges":[{"startOffset":291,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":401,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":503,"endOffset":597,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":598,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":699,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":811,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39074,"count":1},{"startOffset":2711,"endOffset":2720,"count":0},{"startOffset":2877,"endOffset":2893,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":239,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":614,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":695,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":757,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":903,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1055,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1128,"endOffset":1177,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1228,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1322,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1387,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":1505,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":1725,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":1942,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2092,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2244,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2371,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":3543,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":3648,"endOffset":3686,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":3712,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5590,"endOffset":5939,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":6644,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":6761,"endOffset":6983,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":7108,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7169,"endOffset":38773,"count":0}],"isBlockCoverage":true}]},{"scriptId":"420","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8339,"count":1},{"startOffset":504,"endOffset":513,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":585,"endOffset":8306,"count":0}],"isBlockCoverage":true}]},{"scriptId":"421","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":648,"endOffset":878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4101,"count":1},{"startOffset":422,"endOffset":431,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":490,"endOffset":4066,"count":0}],"isBlockCoverage":true}]},{"scriptId":"423","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":72,"endOffset":286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":848,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":458,"endOffset":812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":847,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":597,"endOffset":809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7161,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":134,"endOffset":156,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobList","ranges":[{"startOffset":177,"endOffset":199,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":295,"endOffset":7125,"count":0}],"isBlockCoverage":true}]},{"scriptId":"427","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12569,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":247,"endOffset":392,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":471,"endOffset":10321,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10329,"endOffset":11478,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11486,"endOffset":12534,"count":0}],"isBlockCoverage":true}]},{"scriptId":"428","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22588,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":198,"endOffset":217,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":972,"endOffset":1024,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1430,"endOffset":22556,"count":0}],"isBlockCoverage":true}]},{"scriptId":"429","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/path-scurry/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64317,"count":1},{"startOffset":63889,"endOffset":63900,"count":0},{"startOffset":64206,"endOffset":64282,"count":0}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":794,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"uncToDrive","ranges":[{"startOffset":1159,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":2360,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":2753,"endOffset":2908,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNocase","ranges":[{"startOffset":2974,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":3286,"endOffset":3336,"count":0}],"isBlockCoverage":false},{"functionName":"ChildrenCache","ranges":[{"startOffset":4222,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5011,"endOffset":36632,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":36811,"endOffset":38684,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38781,"endOffset":39702,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":40035,"endOffset":61046,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":61232,"endOffset":62334,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":62559,"endOffset":63266,"count":0}],"isBlockCoverage":true},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":63539,"endOffset":63671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minipass/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33228,"count":1},{"startOffset":70,"endOffset":123,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":408,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":663,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":994,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2382,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2434,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2465,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":2554,"endOffset":2733,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":2761,"endOffset":2812,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2901,"endOffset":3449,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":3606,"endOffset":3706,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":3711,"endOffset":3879,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":3910,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":3959,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4384,"endOffset":33194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5631,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":894,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":992,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1130,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1522,"endOffset":5584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10453,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":189,"endOffset":770,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":993,"endOffset":1445,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1554,"endOffset":2368,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2545,"endOffset":10415,"count":0}],"isBlockCoverage":true}]},{"scriptId":"433","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/lru-cache/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50864,"count":1},{"startOffset":159,"endOffset":165,"count":0},{"startOffset":283,"endOffset":287,"count":0},{"startOffset":636,"endOffset":2205,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":332,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":664,"endOffset":850,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":878,"endOffset":1387,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1499,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2246,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2321,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"getUintArray","ranges":[{"startOffset":2891,"endOffset":3208,"count":0}],"isBlockCoverage":false},{"functionName":"ZeroArray","ranges":[{"startOffset":3267,"endOffset":3335,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3338,"endOffset":4088,"count":0}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3405,"endOffset":3433,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4482,"endOffset":50830,"count":0}],"isBlockCoverage":true}]},{"scriptId":"434","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4992,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/commonjs/service-key.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":377,"count":1}],"isBlockCoverage":true}]}],"timestamp":396193.000739,"source-map-cache":{"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/esm.js":{"lineLengths":[13,62,102,35,29,31,33,33,35,91,79,16,41,64,65,32,77,67,20,1,58,16,42,74,55,42,1,62,40,55,109,73,76,48,46,16,13,18,24,7,52,107,36,57,5,7,59,81,7,57,74,5,58,51,58,64,35,79,21,10,64,119,47,17,46,95,71,69,34,13,38,72,43,21,49,75,25,60,79,21,29,141,65,72,67,17,47,43,17,13,9,48,55,60,57,49,13,60,49,13,74,27,100,49,13,50,122,11,5,80,52,48,19,80,123,167,35,64,63,70,31,27,32,68,112,17,119,113,36,128,43,13,38,11,5,62,102,64,119,47,17,34,13,36,59,41,46,13,9,45,53,45,9,36,95,57,21,112,80,52,64,70,50,138,9,14,17,59,13,23,41,36,69,32,32,39,76,153,74,17,24,13,9,130,49,79,148,39,46,13,44,44,13,9,24,5,77,54,41,9,92,93,32,45,53,27,9,57,48,27,9,76,37,5,20,1,40,40,27,77,20,19,12,15,27,6,1,31],"data":{"version":3,"file":"esm.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/esm.ts"],"names":[],"mappings":"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","sourcesContent":["import { register, RegisterOptions, Service } from './index';\nimport {\n  parse as parseUrl,\n  format as formatUrl,\n  UrlWithStringQuery,\n  fileURLToPath,\n  pathToFileURL,\n} from 'url';\nimport { extname } from 'path';\nimport * as assert from 'assert';\nimport { normalizeSlashes, versionGteLt } from './util';\nimport { createRequire } from 'module';\n\n// Note: On Windows, URLs look like this: file:///D:/dev/@TypeStrong/ts-node-examples/foo.ts\n\n// NOTE ABOUT MULTIPLE EXPERIMENTAL LOADER APIS\n//\n// At the time of writing, this file implements 2x different loader APIs.\n// Node made a breaking change to the loader API in https://github.com/nodejs/node/pull/37468\n//\n// We check the node version number and export either the *old* or the *new* API.\n//\n// Today, we are implementing the *new* API on top of our implementation of the *old* API,\n// which relies on copy-pasted code from the *old* hooks implementation in node.\n//\n// In the future, we will likely invert this: we will copy-paste the *new* API implementation\n// from node, build our implementation of the *new* API on top of it, and implement the *old*\n// hooks API as a shim to the *new* API.\n\nexport interface NodeLoaderHooksAPI1 {\n  resolve: NodeLoaderHooksAPI1.ResolveHook;\n  getFormat: NodeLoaderHooksAPI1.GetFormatHook;\n  transformSource: NodeLoaderHooksAPI1.TransformSourceHook;\n}\nexport namespace NodeLoaderHooksAPI1 {\n  export type ResolveHook = NodeLoaderHooksAPI2.ResolveHook;\n  export type GetFormatHook = (\n    url: string,\n    context: {},\n    defaultGetFormat: GetFormatHook\n  ) => Promise<{ format: NodeLoaderHooksFormat }>;\n  export type TransformSourceHook = (\n    source: string | Buffer,\n    context: { url: string; format: NodeLoaderHooksFormat },\n    defaultTransformSource: NodeLoaderHooksAPI1.TransformSourceHook\n  ) => Promise<{ source: string | Buffer }>;\n}\n\nexport interface NodeLoaderHooksAPI2 {\n  resolve: NodeLoaderHooksAPI2.ResolveHook;\n  load: NodeLoaderHooksAPI2.LoadHook;\n}\nexport namespace NodeLoaderHooksAPI2 {\n  export type ResolveHook = (\n    specifier: string,\n    context: {\n      conditions?: NodeImportConditions;\n      importAssertions?: NodeImportAssertions;\n      parentURL: string;\n    },\n    defaultResolve: ResolveHook\n  ) => Promise<{\n    url: string;\n    format?: NodeLoaderHooksFormat;\n    shortCircuit?: boolean;\n  }>;\n  export type LoadHook = (\n    url: string,\n    context: {\n      format: NodeLoaderHooksFormat | null | undefined;\n      importAssertions?: NodeImportAssertions;\n    },\n    defaultLoad: NodeLoaderHooksAPI2['load']\n  ) => Promise<{\n    format: NodeLoaderHooksFormat;\n    source: string | Buffer | undefined;\n    shortCircuit?: boolean;\n  }>;\n  export type NodeImportConditions = unknown;\n  export interface NodeImportAssertions {\n    type?: 'json';\n  }\n}\n\nexport type NodeLoaderHooksFormat =\n  | 'builtin'\n  | 'commonjs'\n  | 'dynamic'\n  | 'json'\n  | 'module'\n  | 'wasm';\n\nexport type NodeImportConditions = unknown;\nexport interface NodeImportAssertions {\n  type?: 'json';\n}\n\n// The hooks API changed in node version X so we need to check for backwards compatibility.\nconst newHooksAPI = versionGteLt(process.versions.node, '16.12.0');\n\n/** @internal */\nexport function filterHooksByAPIVersion(\n  hooks: NodeLoaderHooksAPI1 & NodeLoaderHooksAPI2\n): NodeLoaderHooksAPI1 | NodeLoaderHooksAPI2 {\n  const { getFormat, load, resolve, transformSource } = hooks;\n  // Explicit return type to avoid TS's non-ideal inferred type\n  const hooksAPI: NodeLoaderHooksAPI1 | NodeLoaderHooksAPI2 = newHooksAPI\n    ? { resolve, load, getFormat: undefined, transformSource: undefined }\n    : { resolve, getFormat, transformSource, load: undefined };\n  return hooksAPI;\n}\n\n/** @internal */\nexport function registerAndCreateEsmHooks(opts?: RegisterOptions) {\n  // Automatically performs registration just like `-r ts-node/register`\n  const tsNodeInstance = register(opts);\n\n  return createEsmHooks(tsNodeInstance);\n}\n\nexport function createEsmHooks(tsNodeService: Service) {\n  tsNodeService.enableExperimentalEsmLoaderInterop();\n\n  // Custom implementation that considers additional file extensions and automatically adds file extensions\n  const nodeResolveImplementation = tsNodeService.getNodeEsmResolver();\n  const nodeGetFormatImplementation = tsNodeService.getNodeEsmGetFormat();\n  const extensions = tsNodeService.extensions;\n\n  const hooksAPI = filterHooksByAPIVersion({\n    resolve,\n    load,\n    getFormat,\n    transformSource,\n  });\n\n  function isFileUrlOrNodeStyleSpecifier(parsed: UrlWithStringQuery) {\n    // We only understand file:// URLs, but in node, the specifier can be a node-style `./foo` or `foo`\n    const { protocol } = parsed;\n    return protocol === null || protocol === 'file:';\n  }\n\n  /**\n   * Named \"probably\" as a reminder that this is a guess.\n   * node does not explicitly tell us if we're resolving the entrypoint or not.\n   */\n  function isProbablyEntrypoint(specifier: string, parentURL: string) {\n    return parentURL === undefined && specifier.startsWith('file://');\n  }\n  // Side-channel between `resolve()` and `load()` hooks\n  const rememberIsProbablyEntrypoint = new Set();\n  const rememberResolvedViaCommonjsFallback = new Set();\n\n  async function resolve(\n    specifier: string,\n    context: { parentURL: string },\n    defaultResolve: typeof resolve\n  ): Promise<{ url: string; format?: NodeLoaderHooksFormat }> {\n    const defer = async () => {\n      const r = await defaultResolve(specifier, context, defaultResolve);\n      return r;\n    };\n    // See: https://github.com/nodejs/node/discussions/41711\n    // nodejs will likely implement a similar fallback.  Till then, we can do our users a favor and fallback today.\n    async function entrypointFallback(\n      cb: () => ReturnType<typeof resolve> | Awaited<ReturnType<typeof resolve>>\n    ): ReturnType<typeof resolve> {\n      try {\n        const resolution = await cb();\n        if (\n          resolution?.url &&\n          isProbablyEntrypoint(specifier, context.parentURL)\n        )\n          rememberIsProbablyEntrypoint.add(resolution.url);\n        return resolution;\n      } catch (esmResolverError) {\n        if (!isProbablyEntrypoint(specifier, context.parentURL))\n          throw esmResolverError;\n        try {\n          let cjsSpecifier = specifier;\n          // Attempt to convert from ESM file:// to CommonJS path\n          try {\n            if (specifier.startsWith('file://'))\n              cjsSpecifier = fileURLToPath(specifier);\n          } catch {}\n          const resolution = pathToFileURL(\n            createRequire(process.cwd()).resolve(cjsSpecifier)\n          ).toString();\n          rememberIsProbablyEntrypoint.add(resolution);\n          rememberResolvedViaCommonjsFallback.add(resolution);\n          return { url: resolution, format: 'commonjs' };\n        } catch (commonjsResolverError) {\n          throw esmResolverError;\n        }\n      }\n    }\n\n    return addShortCircuitFlag(async () => {\n      const parsed = parseUrl(specifier);\n      const { pathname, protocol, hostname } = parsed;\n\n      if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n        return entrypointFallback(defer);\n      }\n\n      if (protocol !== null && protocol !== 'file:') {\n        return entrypointFallback(defer);\n      }\n\n      // Malformed file:// URL?  We should always see `null` or `''`\n      if (hostname) {\n        // TODO file://./foo sets `hostname` to `'.'`.  Perhaps we should special-case this.\n        return entrypointFallback(defer);\n      }\n\n      // pathname is the path to be resolved\n\n      return entrypointFallback(() =>\n        nodeResolveImplementation.defaultResolve(\n          specifier,\n          context,\n          defaultResolve\n        )\n      );\n    });\n  }\n\n  // `load` from new loader hook API (See description at the top of this file)\n  async function load(\n    url: string,\n    context: {\n      format: NodeLoaderHooksFormat | null | undefined;\n      importAssertions?: NodeLoaderHooksAPI2.NodeImportAssertions;\n    },\n    defaultLoad: typeof load\n  ): Promise<{\n    format: NodeLoaderHooksFormat;\n    source: string | Buffer | undefined;\n  }> {\n    return addShortCircuitFlag(async () => {\n      // If we get a format hint from resolve() on the context then use it\n      // otherwise call the old getFormat() hook using node's old built-in defaultGetFormat() that ships with ts-node\n      const format =\n        context.format ??\n        (\n          await getFormat(\n            url,\n            context,\n            nodeGetFormatImplementation.defaultGetFormat\n          )\n        ).format;\n\n      let source = undefined;\n      if (format !== 'builtin' && format !== 'commonjs') {\n        // Call the new defaultLoad() to get the source\n        const { source: rawSource } = await defaultLoad(\n          url,\n          {\n            ...context,\n            format,\n          },\n          defaultLoad\n        );\n\n        if (rawSource === undefined || rawSource === null) {\n          throw new Error(\n            `Failed to load raw source: Format was '${format}' and url was '${url}''.`\n          );\n        }\n\n        // Emulate node's built-in old defaultTransformSource() so we can re-use the old transformSource() hook\n        const defaultTransformSource: typeof transformSource = async (\n          source,\n          _context,\n          _defaultTransformSource\n        ) => ({ source });\n\n        // Call the old hook\n        const { source: transformedSource } = await transformSource(\n          rawSource,\n          { url, format },\n          defaultTransformSource\n        );\n        source = transformedSource;\n      }\n\n      return { format, source };\n    });\n  }\n\n  async function getFormat(\n    url: string,\n    context: {},\n    defaultGetFormat: typeof getFormat\n  ): Promise<{ format: NodeLoaderHooksFormat }> {\n    const defer = (overrideUrl: string = url) =>\n      defaultGetFormat(overrideUrl, context, defaultGetFormat);\n\n    // See: https://github.com/nodejs/node/discussions/41711\n    // nodejs will likely implement a similar fallback.  Till then, we can do our users a favor and fallback today.\n    async function entrypointFallback(\n      cb: () => ReturnType<typeof getFormat>\n    ): ReturnType<typeof getFormat> {\n      try {\n        return await cb();\n      } catch (getFormatError) {\n        if (!rememberIsProbablyEntrypoint.has(url)) throw getFormatError;\n        return { format: 'commonjs' };\n      }\n    }\n\n    const parsed = parseUrl(url);\n\n    if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n      return entrypointFallback(defer);\n    }\n\n    const { pathname } = parsed;\n    assert(\n      pathname !== null,\n      'ESM getFormat() hook: URL should never have null pathname'\n    );\n\n    const nativePath = fileURLToPath(url);\n\n    let nodeSays: { format: NodeLoaderHooksFormat };\n\n    // If file has extension not understood by node, then ask node how it would treat the emitted extension.\n    // E.g. .mts compiles to .mjs, so ask node how to classify an .mjs file.\n    const ext = extname(nativePath);\n    const tsNodeIgnored = tsNodeService.ignored(nativePath);\n    const nodeEquivalentExt = extensions.nodeEquivalents.get(ext);\n    if (nodeEquivalentExt && !tsNodeIgnored) {\n      nodeSays = await entrypointFallback(() =>\n        defer(formatUrl(pathToFileURL(nativePath + nodeEquivalentExt)))\n      );\n    } else {\n      try {\n        nodeSays = await entrypointFallback(defer);\n      } catch (e) {\n        if (\n          e instanceof Error &&\n          tsNodeIgnored &&\n          extensions.nodeDoesNotUnderstand.includes(ext)\n        ) {\n          e.message +=\n            `\\n\\n` +\n            `Hint:\\n` +\n            `ts-node is configured to ignore this file.\\n` +\n            `If you want ts-node to handle this file, consider enabling the \"skipIgnore\" option or adjusting your \"ignore\" patterns.\\n` +\n            `https://typestrong.org/ts-node/docs/scope\\n`;\n        }\n        throw e;\n      }\n    }\n    // For files compiled by ts-node that node believes are either CJS or ESM, check if we should override that classification\n    if (\n      !tsNodeService.ignored(nativePath) &&\n      (nodeSays.format === 'commonjs' || nodeSays.format === 'module')\n    ) {\n      const { moduleType } =\n        tsNodeService.moduleTypeClassifier.classifyModuleByModuleTypeOverrides(\n          normalizeSlashes(nativePath)\n        );\n      if (moduleType === 'cjs') {\n        return { format: 'commonjs' };\n      } else if (moduleType === 'esm') {\n        return { format: 'module' };\n      }\n    }\n    return nodeSays;\n  }\n\n  async function transformSource(\n    source: string | Buffer,\n    context: { url: string; format: NodeLoaderHooksFormat },\n    defaultTransformSource: typeof transformSource\n  ): Promise<{ source: string | Buffer }> {\n    if (source === null || source === undefined) {\n      throw new Error('No source');\n    }\n\n    const defer = () =>\n      defaultTransformSource(source, context, defaultTransformSource);\n\n    const sourceAsString =\n      typeof source === 'string' ? source : source.toString('utf8');\n\n    const { url } = context;\n    const parsed = parseUrl(url);\n\n    if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n      return defer();\n    }\n    const nativePath = fileURLToPath(url);\n\n    if (tsNodeService.ignored(nativePath)) {\n      return defer();\n    }\n\n    const emittedJs = tsNodeService.compile(sourceAsString, nativePath);\n\n    return { source: emittedJs };\n  }\n\n  return hooksAPI;\n}\n\nasync function addShortCircuitFlag<T>(fn: () => Promise<T>) {\n  const ret = await fn();\n  // Not sure if this is necessary; being lazy.  Can revisit in the future.\n  if (ret == null) return ret;\n  return {\n    ...ret,\n    shortCircuit: true,\n  };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/index.js":{"lineLengths":[13,11,62,263,31,35,29,29,43,33,51,69,61,59,79,55,63,31,115,3,63,73,3,95,3,78,71,2,71,3,61,90,13,18,6,3,45,3,68,16,26,3,12,3,58,3,23,3,62,16,27,80,22,27,20,18,23,44,25,10,5,20,3,30,3,53,3,71,13,12,3,20,97,51,53,44,53,55,43,77,58,41,66,64,69,81,70,62,68,60,137,39,2,3,32,3,46,68,68,47,30,55,31,27,34,11,52,31,27,31,11,5,7,16,7,32,35,5,1,26,62,34,46,32,112,36,100,5,56,43,49,31,110,77,49,61,19,1,28,3,39,2,18,3,34,81,56,1,24,16,55,23,123,106,59,74,78,71,100,5,42,79,74,109,5,70,31,26,36,117,57,44,46,119,9,33,124,9,5,57,63,88,85,35,31,39,29,40,56,5,27,61,49,5,59,31,9,36,34,33,21,22,22,58,23,138,21,26,53,26,10,6,85,34,90,203,111,34,82,21,71,12,86,28,41,39,79,62,22,37,6,70,90,5,57,44,15,25,31,101,95,133,73,81,44,92,61,24,36,76,112,30,32,33,38,53,26,50,22,55,39,41,19,13,9,5,7,75,67,7,38,51,37,5,61,30,40,74,34,32,37,23,37,60,71,87,74,25,62,21,31,43,21,17,58,108,14,45,95,253,14,11,5,104,52,73,31,41,78,63,73,5,50,58,31,63,54,9,14,47,24,9,5,39,36,44,71,7,47,44,7,37,51,32,49,26,27,27,33,28,28,60,28,28,34,28,28,34,13,9,21,5,7,82,12,7,18,20,97,91,101,38,7,89,67,25,39,56,87,43,36,35,101,49,57,57,71,17,36,14,58,33,64,68,49,63,61,18,45,89,62,66,49,60,51,35,54,61,41,21,66,18,41,52,107,88,110,41,84,32,49,82,47,61,86,61,39,14,235,34,37,19,20,23,42,24,27,15,64,77,68,56,47,94,76,63,101,88,51,57,59,48,83,37,17,72,68,69,52,68,57,71,37,17,14,44,45,50,59,56,112,17,63,97,43,53,71,58,194,47,89,42,50,41,56,17,63,54,108,92,99,71,17,87,14,57,82,60,90,84,88,41,14,9,14,25,26,34,41,69,52,45,62,33,61,36,18,52,107,88,110,98,41,84,32,14,57,71,19,27,67,64,51,35,88,22,109,169,83,18,41,182,21,20,23,19,37,42,24,27,15,57,81,78,60,47,57,44,25,64,64,18,169,50,73,59,31,57,63,68,70,38,57,17,85,49,51,57,59,48,48,17,52,62,193,17,14,45,33,32,50,74,32,76,60,82,89,42,50,100,48,38,21,26,39,21,37,70,61,41,56,17,79,37,78,132,21,108,92,99,71,17,48,14,57,82,60,84,32,76,74,77,65,28,53,77,36,53,48,18,24,43,88,53,108,18,14,62,61,42,58,64,19,13,9,5,10,29,89,10,5,91,54,45,56,153,77,70,32,40,43,14,24,36,23,35,59,29,19,13,41,50,29,77,13,18,51,29,36,44,47,19,13,98,38,46,68,10,5,85,69,100,39,97,83,83,56,7,25,39,7,104,34,62,96,111,106,39,137,74,49,54,74,108,23,27,31,24,77,82,9,87,50,70,82,9,55,65,77,9,31,75,113,32,44,74,50,73,50,78,54,77,83,9,92,65,22,5,22,87,35,20,24,50,48,65,9,20,6,42,32,22,100,11,5,126,19,43,87,8,195,125,19,43,46,8,12,38,11,31,15,16,20,16,16,16,23,29,24,28,32,43,22,34,27,28,25,19,6,1,62,3,43,3,46,26,70,59,48,6,1,3,59,3,83,37,110,75,75,63,96,79,28,35,9,5,31,29,59,5,23,45,20,47,11,51,48,81,43,64,9,5,1,3,35,3,59,59,54,38,36,55,36,48,60,59,57,10,32,6,1,3,46,3,74,99,108,131,104,43,39,64,59,57,86,90,6,87,62,50,125,7,83,17,77,30,5,161,98,80,17,74,30,5,48,1,3,54,3,51,48,30,35,32,37,1,3,22,3,50,59,15,39,114,56,8,1,3,30,2,135,3,55,29,25,62,47,33,22,39,34,32,31,13,9,23,5,1,3,55,2,28,78,31,2,77,61,2,23,3,89,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/index.ts"],"names":[],"mappings":";;;;AAAA,+BAAkE;AAClE,mCAAgC;AAChC,6BAA6B;AAC7B,6BAAoC;AAGpC,2CAAuC;AAIvC,iCAWgB;AAChB,mDAAkE;AAElE,qEAGkC;AAClC,6DAA+D;AAE/D,2DAG6B;AAC7B,+EAA+D;AAI/D,uDAA8D;AAC9D,+DAAgE;AAGhE,+BAKgB;AAJd,kGAAA,UAAU,OAAA;AAmBZ;;;GAGG;AACH,MAAM,8BAA8B,GAClC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;AAE1D;;;;;GAKG;AACH,IAAI,wBAAwB,GAIhB,8BAA8B;IACxC,CAAC,CACG,OAAO,CAAC,8CAA8C,CACvD,CAAC,4BAA4B;IAChC,CAAC,CAAC,GAAG,EAAE;QACH,UAAU;IACZ,CAAC,CAAC;AAEN;;GAEG;AACU,QAAA,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AAazE,gBAAgB;AACH,QAAA,GAAG,GAAG,OAAO,CAAC,GAAiB,CAAC;AAkC7C;;GAEG;AACU,QAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC;AAE/D;;GAEG;AACH,MAAM,WAAW,GAAG,IAAA,SAAE,EAAC,WAAG,CAAC,aAAa,CAAC,CAAC;AAC1C,gBAAgB;AACH,QAAA,KAAK,GAAG,WAAW;IAC9B,CAAC,CAAC,CAAC,GAAG,IAAS,EAAE,EAAE,CACf,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACjE,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;AACpB,MAAM,OAAO,GAAG,WAAW;IACzB,CAAC,CAAC,CAAO,GAAW,EAAE,EAAiB,EAAE,EAAE;QACvC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,CAAI,EAAE,EAAE;YACd,IAAA,aAAK,EAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACnB,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC;IACJ,CAAC;IACH,CAAC,CAAC,CAAO,CAAS,EAAE,EAAiB,EAAE,EAAE,CAAC,EAAE,CAAC;AAE/C;;GAEG;AACU,QAAA,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC;AAsR1D;;;;GAIG;AACU,QAAA,QAAQ,GAAoB;IACvC,GAAG,EAAE,MAAA,WAAG,CAAC,WAAW,mCAAI,WAAG,CAAC,WAAW;IACvC,IAAI,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,YAAY,CAAC;IAC1B,KAAK,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,aAAa,CAAC;IAC5B,QAAQ,EAAE,WAAG,CAAC,iBAAiB;IAC/B,KAAK,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,aAAa,CAAC;IAC5B,MAAM,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,cAAc,CAAC;IAC9B,QAAQ,EAAE,WAAG,CAAC,gBAAgB;IAC9B,eAAe,EAAE,IAAA,YAAK,EAAC,WAAG,CAAC,wBAAwB,CAAC;IACpD,MAAM,EAAE,IAAA,YAAK,EAAC,WAAG,CAAC,cAAc,CAAC;IACjC,OAAO,EAAE,WAAG,CAAC,eAAe;IAC5B,WAAW,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,oBAAoB,CAAC;IACzC,UAAU,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,mBAAmB,CAAC;IACvC,YAAY,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,sBAAsB,CAAC;IAC5C,iBAAiB,EAAE,IAAA,YAAK,EAAC,WAAG,CAAC,0BAA0B,CAAC;IACxD,aAAa,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,sBAAsB,CAAC;IAC7C,SAAS,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,kBAAkB,CAAC;IACrC,YAAY,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,qBAAqB,CAAC;IAC3C,QAAQ,EAAE,IAAA,SAAE,EAAC,WAAG,CAAC,iBAAiB,CAAC;IACnC,qBAAqB,EAAE,MAAA,IAAA,SAAE,EAAC,WAAG,CAAC,+BAA+B,CAAC,mCAAI,SAAS;IAC3E,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;CACnC,CAAC;AAEF;;GAEG;AACH,MAAa,OAAQ,SAAQ,sBAAS;IAKpC,YACE,cAAsB,EACf,eAAyB,EAChC,cAA6C,EAAE;QAE/C,KAAK,CAAC,oCAAoC,cAAc,EAAE,CAAC,CAAC;QAHrD,oBAAe,GAAf,eAAe,CAAU;QANlC,SAAI,GAAG,SAAS,CAAC;QAUf,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,EAAE;YAC5C,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,cAAc;SACtB,CAAC,CAAC;QACH,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;YACzC,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,WAAW;SACnB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,CAAC,sBAAc,CAAC;QACd,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;CACF;AA7BD,0BA6BC;AAED,MAAM,qBAAqB,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;AA8E9D,SAAgB,QAAQ,CACtB,aAAoD;IAEpD,0CAA0C;IAC1C,IAAI,OAAO,GAAG,aAAwB,CAAC;IACvC,IAAI,CAAC,CAAC,aAAyB,aAAzB,aAAa,uBAAb,aAAa,CAAe,qBAAqB,CAAC,CAAA,EAAE;QACxD,4BAA4B;QAC5B,OAAO,GAAG,MAAM,CAAC,CAAC,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,EAAE,CAAoB,CAAC,CAAC;KAC5D;IAED,MAAM,iBAAiB,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAEpD,uCAAuC;IACvC,OAAO,CAAC,yBAAiB,CAAC,GAAG,OAAO,CAAC;IAErC,2BAA2B;IAC3B,kBAAkB,CAChB,OAAO,CAAC,OAAO,CAAC,YAAY,EAC5B,OAAO,CAAC,UAAU,CAAC,QAAQ,EAC3B,OAAO,EACP,iBAAiB,CAClB,CAAC;IAEF,IAAA,0DAAsC,EAAC,OAAO,CAAC,CAAC;IAEhD,6CAA6C;IAC5C,eAAyC,CAAC,eAAe,CACxD,OAAO,CAAC,OAAO,CAAC,OAAO,CACxB,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC;AA/BD,4BA+BC;AAED;;;;GAIG;AACH,SAAgB,MAAM,CAAC,aAA4B,EAAE;IACnD,MAAM,iBAAiB,GAAG,IAAA,iCAAiB,EAAC,UAAU,CAAC,CAAC;IACxD,OAAO,yBAAyB,CAAC,iBAAiB,CAAC,CAAC;AACtD,CAAC;AAHD,wBAGC;AAED,gBAAgB;AAChB,SAAgB,yBAAyB,CACvC,iBAAuD;;IAEvD,MAAM,EACJ,cAAc,EACd,GAAG,EACH,OAAO,EACP,MAAM,EACN,QAAQ,EACR,sBAAsB,EACtB,eAAe,GAChB,GAAG,iBAAiB,CAAC;IAEtB,MAAM,yBAAyB,GAAG,IAAA,sCAA+B,EAC/D,sBAAsB,CACvB,CAAC;IAEF,MAAM,EAAE,GAAG,IAAA,4BAAY,EAAC,QAAQ,CAAC,CAAC;IAElC,sEAAsE;IACtE,MAAM,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,MAAO,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC;IAC3E,IAAI,OAAO,CAAC,qBAAqB,KAAK,IAAI,IAAI,CAAC,iBAAiB,EAAE;QAChE,MAAM,IAAI,KAAK,CACb,0EAA0E,CAC3E,CAAC;KACH;IACD,sCAAsC;IACtC,MAAM,oBAAoB,GAAG,IAAA,mBAAY,EAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC/D,IAAI,OAAO,CAAC,qBAAqB,KAAK,IAAI,IAAI,CAAC,oBAAoB,EAAE;QACnE,MAAM,IAAI,KAAK,CACb,mFAAmF,CACpF,CAAC;KACH;IAED,MAAM,eAAe,GACnB,OAAO,CAAC,qBAAqB,KAAK,KAAK;QACvC,oBAAoB;QACpB,iBAAiB,CAAC;IAEpB,gCAAgC;IAChC,iHAAiH;IACjH,qDAAqD;IACrD,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;QACrC,IAAI,OAAO,CAAC,aAAa,KAAK,KAAK,EAAE;YACnC,MAAM,IAAI,KAAK,CACb,yFAAyF,CAC1F,CAAC;SACH;QACD,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,MAAM,IAAI,KAAK,CACb,8FAA8F,CAC/F,CAAC;SACH;KACF;IAED,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC;IACrD,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC;IAC3D,oFAAoF;IACpF,MAAM,aAAa,GACjB,CAAC,OAAO,CAAC,aAAa,KAAK,IAAI,IAAI,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC;QACxD,OAAO,CAAC,SAAS,KAAK,IAAI,CAAC;IAC7B,IAAI,UAAU,GAA8C,SAAS,CAAC;IACtE,IAAI,kBAAkB,GAAuB,SAAS,CAAC;IACvD,IAAI,OAAO,CAAC,UAAU,EAAE;QACtB,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QAChC,kBAAkB,GAAG,eAAe,CAAC,UAAU,CAAC;KACjD;SAAM,IAAI,OAAO,CAAC,GAAG,EAAE;QACtB,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACrD,kBAAkB,GAAG,eAAe,CAAC,GAAG,CAAC;KAC1C;IACD,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,SAAS,CAAC;IACvD,MAAM,iBAAiB,GAA4B;QACjD;YACE,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,EAAE;YACrB,kBAAkB,EAAE;gBAClB,IAAI;gBACJ,KAAK;gBACL,KAAK;gBACL,GAAG,CAAC,OAAO,CAAC,8BAA8B;oBACxC,CAAC,CAAC;wBACE,IAAI,EAAE,4GAA4G;qBACnH;oBACH,CAAC,CAAC,EAAE,CAAC;gBACP,GAAG,CAAC,OAAO,CAAC,iBAAiB,IAAI,EAAE,CAAC;aACrC,CAAC,GAAG,CAAC,MAAM,CAAC;SACd;KACF,CAAC;IAEF,MAAM,oBAAoB,GAAG,iBAAiB,CAC5C,MAAM,CAAC,MAAM,EACb,iBAAiB,CAClB,CAAC;IACF,MAAM,WAAW,GAAG,IAAI,GAAG,EAKxB,CAAC;IAEJ,MAAM,iBAAiB,GAAG,cAAc,CAAC,CAAC,CAAC,IAAA,cAAO,EAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1E,MAAM,QAAQ,GACZ,MAAA,MAAA,MAAA,OAAO,CAAC,QAAQ,mCAAI,MAAM,CAAC,OAAO,CAAC,OAAO,mCAAI,iBAAiB,mCAAI,GAAG,CAAC;IACzE,MAAM,aAAa,GAAG,iBAAiB,aAAjB,iBAAiB,cAAjB,iBAAiB,GAAI,GAAG,CAAC;IAC/C,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK;QAC5B,CAAC,CAAC,CAAC,QAAgB,EAAE,EAAE,CAAC,IAAA,eAAQ,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;QACtE,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;IACf,MAAM,YAAY,GAAG,YAAY,CAC/B,aAAa,EACb,OAAO,CAAC,UAAU;QAChB,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,CAC9C,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CACzB,CACN,CAAC;IAEF,MAAM,cAAc,GAA8B;QAChD,UAAU,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO;QAChC,mBAAmB,EAAE,GAAG,EAAE,CAAC,GAAG;QAC9B,uEAAuE;QACvE,oBAAoB,EAAE,EAAE,CAAC,GAAG,CAAC,yBAAyB;YACpD,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE;KAC3B,CAAC;IAEF,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;QAC/D,MAAM,IAAI,SAAS,CACjB,4DAA4D,CAC7D,CAAC;KACH;IACD,IAAI,gBAAgB,GAAG,2BAA2B,EAAE,CAAC;IACrD,SAAS,2BAA2B;;QAClC,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,aAAa;gBAChB,MAAM,IAAI,KAAK,CACb,mEAAmE,CACpE,CAAC;YACJ,MAAM,cAAc,GAClB,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC9D,MAAM,iBAAiB,GACrB,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAA,UAAU,CAAC,CAAC,CAAC,mCAAI,EAAE,CAAC;YAC5D,MAAM,kCAAkC,GAAG,kBAAkB;gBAC3D,CAAC,CAAC,IAAA,sCAA+B,EAAC,kBAAkB,CAAC;gBACrD,CAAC,CAAC,yBAAyB,CAAC;YAC9B,MAAM,cAAc,GAAG,kCAAkC,CACvD,cAAc,EACd,IAAI,CACL,CAAC;YACF,MAAM,iBAAiB,GAAG,OAAO,CAAC,cAAc,CAAC;iBAC9C,MAA2B,CAAC;YAC/B,OAAO,gBAAgB,CAAC;YAExB,SAAS,gBAAgB,CACvB,eAAyC,EACzC,kBAAuC;gBAEvC,OAAO,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAG;oBACzB,OAAO,EAAE;wBACP,OAAO;wBACP,MAAM,EAAE;4BACN,GAAG,MAAM;4BACT,OAAO,EAAE,eAAe;yBACzB;wBACD,yBAAyB;qBAC1B;oBACD,kCAAkC;oBAClC,kBAAkB;oBAClB,GAAG,iBAAiB;iBACrB,CAAC,CAAC;YACL,CAAC;SACF;IACH,CAAC;IAED;;;OAGG;IACH,IAAI,qBAAqB,GAAG,KAAK,CAAC;IAClC,SAAS,kCAAkC;QACzC,qBAAqB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,yDAAyD;IACzD,uBAAuB,EAAE,CAAC;IAC1B,SAAS,uBAAuB;QAC9B,MAAM,gBAAgB,GACpB,OAAO,CAAC,+BAA+B,CAA6B,CAAC;QACvE,gBAAgB,CAAC,OAAO,CAAC;YACvB,WAAW,EAAE,MAAM;YACnB,YAAY,CAAC,SAAiB;;gBAC5B,IAAI,IAAI,GAAG,SAAS,CAAC;gBACrB,4CAA4C;gBAC5C,uDAAuD;gBACvD,uEAAuE;gBACvE,IAAI,qBAAqB,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;oBACvD,IAAI;wBACF,IAAI,GAAG,IAAA,mBAAa,EAAC,IAAI,CAAC,CAAC;qBAC5B;oBAAC,OAAO,CAAC,EAAE;wBACV,mBAAmB;qBACpB;iBACF;gBACD,IAAI,GAAG,IAAA,uBAAgB,EAAC,IAAI,CAAC,CAAC;gBAC9B,OAAO,CAAA,MAAA,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,0CAAE,OAAO,KAAI,EAAE,CAAC;YAC9C,CAAC;YACD,0BAA0B,EAAE,IAAI;YAChC,4BAA4B,CAC1B,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,iBAAiB;gBAEjB,IAAA,aAAK,EACH,2GACG,MAAwB,CAAC,QAC5B,sCAAsC,OAAO,4BAA4B,iBAAiB,IAAI,CAC/F,CAAC;YACJ,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,MAAM,sBAAsB,GAC1B,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;IAEvE,MAAM,iBAAiB,GAAG,sBAAsB;QAC9C,CAAC,CAAC,EAAE,CAAC,oCAAoC,IAAI,EAAE,CAAC,iBAAiB;QACjE,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC;IAEzB,SAAS,aAAa,CAAC,WAA0C;QAC/D,MAAM,cAAc,GAAG,iBAAiB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;QACtE,MAAM,eAAe,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,IAAI,OAAO,CAAC,cAAc,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC;IAED,SAAS,aAAa,CAAC,oBAAsC;QAC3D,MAAM,KAAK,GAAG,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAClD,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,mDAAmD;YACnD,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;SAC3C;aAAM;YACL,mCAAmC;YACnC,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IAED,mCAAmC;IACnC,IAAI,oBAAoB,CAAC,MAAM;QAAE,aAAa,CAAC,oBAAoB,CAAC,CAAC;IAErE,MAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC;IACnE;;;OAGG;IACH,SAAS,gBAAgB,CAAC,IAAY;QACpC,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,YAAY,IAAI,CAAC,EAAE;YACrB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YACrC,QAAQ,GAAG,EAAE;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK;oBACR,OAAO,KAAK,CAAC;gBACf,KAAK,MAAM,CAAC;gBACZ,KAAK,MAAM;oBACT,OAAO,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC1C,KAAK,MAAM,CAAC;gBACZ,KAAK,MAAM;oBACT,OAAO,MAAM,CAAC;gBAChB,KAAK,MAAM,CAAC;gBACZ,KAAK,MAAM;oBACT,OAAO,MAAM,CAAC;aACjB;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAGD;;;OAGG;IACH,IAAI,SAAwC,CAAC;IAC7C,IAAI,WAIS,CAAC;IAEd,MAAM,oBAAoB,GACxB,EACD,CAAC,0BAA0B,CAAC,EAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAE/D,MAAM,oBAAoB,GAAG,IAAA,mDAA0B,EAAC;QACtD,QAAQ,EAAE,MAAA,OAAO,CAAC,eAAe,0CAAE,WAAW;QAC9C,QAAQ,EAAE,OAAO,CAAC,WAAW;KAC9B,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,IAAA,+BAAa,EAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;IAE9D,+DAA+D;IAC/D,IAAI,CAAC,aAAa,EAAE;QAClB,MAAM,YAAY,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC/C,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAChD,MAAM,cAAc,GAAG,IAAA,mBAAY,EAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;QAEnE,mCAAmC;QACnC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YACzB,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,MAAM,YAAY,GAAG,IAAI,GAAG,CAC1B,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAC3D,CAAC;YAEF,MAAM,qBAAqB,GAAG,GAAG,EAAE;gBACjC,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;oBACtC,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;oBACrC,OAAO,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;iBACpD;gBAED,OAAO,YAAY,CAAC;YACtB,CAAC,CAAC;YAEF,8CAA8C;YAC9C,MAAM,WAAW,GACsD;gBACrE,iBAAiB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC;gBAC/C,kBAAkB,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;gBACnD,gBAAgB,EAAE,CAAC,QAAgB,EAAE,EAAE;oBACrC,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC3C,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3C,CAAC;gBACD,iBAAiB,CAAC,QAAgB;oBAChC,qEAAqE;oBACrE,IAAI,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAE1C,8CAA8C;oBAC9C,IAAI,QAAQ,KAAK,SAAS,EAAE;wBAC1B,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;wBACpC,IAAI,QAAQ,KAAK,SAAS;4BAAE,OAAO;wBAEnC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBAC9B,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;wBACrC,cAAc,EAAE,CAAC;qBAClB;oBAED,OAAO,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAChD,CAAC;gBACD,QAAQ,EAAE,cAAc;gBACxB,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,aAAa;gBACnC,cAAc,EAAE,IAAA,mBAAY,EAC1B,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CACjD;gBACD,UAAU,EAAE,IAAA,mBAAY,EAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC3D,eAAe,EAAE,IAAA,mBAAY,EAC3B,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CACnD;gBACD,QAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;oBACvB,CAAC,CAAC,IAAA,mBAAY,EAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACpD,CAAC,CAAC,SAAS;gBACb,UAAU,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO;gBAChC,yBAAyB,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,yBAAyB;gBACjE,mBAAmB,EAAE,GAAG,EAAE,CAAC,GAAG;gBAC9B,sBAAsB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO;gBAC5C,qBAAqB,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC;gBACrE,qBAAqB,EAAE,qBAAqB;gBAC5C,KAAK,EAAE,OAAO,CAAC,OAAO;aACvB,CAAC;YACF,MAAM,EACJ,kBAAkB,EAClB,mDAAmD,EACnD,8BAA8B,EAC9B,uBAAuB,EACvB,4BAA4B,GAC7B,GAAG,IAAA,4CAAuB,EAAC;gBAC1B,IAAI,EAAE,WAAW;gBACjB,oBAAoB;gBACpB,EAAE;gBACF,GAAG;gBACH,MAAM;gBACN,yBAAyB;gBACzB,OAAO;gBACP,UAAU;aACX,CAAC,CAAC;YACH,WAAW,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YACpD,WAAW,CAAC,mDAAmD;gBAC7D,mDAAmD,CAAC;YACtD,WAAW,CAAC,8BAA8B;gBACxC,8BAA8B,CAAC;YAEjC,MAAM,QAAQ,GAAG,EAAE,CAAC,sBAAsB,CACxC,EAAE,CAAC,GAAG,CAAC,yBAAyB,EAChC,GAAG,CACJ,CAAC;YACF,MAAM,OAAO,GAAG,EAAE,CAAC,qBAAqB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAEhE,MAAM,iBAAiB,GAAG,CAAC,QAAgB,EAAE,QAAgB,EAAE,EAAE;gBAC/D,qFAAqF;gBACrF,wEAAwE;gBACxE,IACE,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;oBAC5B,CAAC,uBAAuB,CAAC,QAAQ,CAAC,EAClC;oBACA,4BAA4B,CAAC,QAAQ,CAAC,CAAC;oBACvC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC5B,+DAA+D;oBAC/D,cAAc,EAAE,CAAC;iBAClB;gBAED,MAAM,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACxD,MAAM,gBAAgB,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACpD,qDAAqD;gBACrD,IAAI,QAAQ,KAAK,gBAAgB,EAAE;oBACjC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;oBAChD,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBACrC,mDAAmD;oBACnD,cAAc,EAAE,CAAC;iBAClB;YACH,CAAC,CAAC;YAEF,IAAI,eAAe,GAA4B,SAAS,CAAC;YAEzD,SAAS,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,EAAE;gBAC7C,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAElC,MAAM,aAAa,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;gBAC3C,IAAI,aAAa,KAAK,eAAe,EAAE;oBACrC,IAAA,aAAK,EACH,6DAA6D,QAAQ,EAAE,CACxE,CAAC;iBACH;gBAED,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAE/C,iFAAiF;gBACjF,MAAM,WAAW,GAAG,OAAO;qBACxB,sBAAsB,CAAC,QAAQ,CAAC;qBAChC,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAErD,MAAM,YAAY,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;gBAE1C,IAAA,aAAK,EACH,6HAA6H,EAC7H,aAAa,KAAK,YAAY,CAC/B,CAAC;gBAEF,eAAe,GAAG,YAAY,CAAC;gBAE/B,MAAM,cAAc,GAAG,iBAAiB,CACtC,WAAW,EACX,iBAAiB,CAClB,CAAC;gBACF,IAAI,cAAc,CAAC,MAAM;oBAAE,aAAa,CAAC,cAAc,CAAC,CAAC;gBAEzD,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtB,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;iBACrC;gBAED,+CAA+C;gBAC/C,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;oBACnC,MAAM,IAAI,SAAS,CACjB,2BAA2B,IAAA,eAAQ,EAAC,GAAG,EAAE,QAAQ,CAAC,IAAI;wBACpD,kEAAkE;wBAClE,yEAAyE;wBACzE,6CAA6C,CAChD,CAAC;iBACH;gBAED,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACzE,CAAC,CAAC;YAEF,WAAW,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,QAAgB,EAAE,EAAE;gBACjE,MAAM,kBAAkB,GAAG,IAAA,uBAAgB,EAAC,QAAQ,CAAC,CAAC;gBACtD,iBAAiB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;gBAE5C,MAAM,IAAI,GAAG,OAAO,CAAC,sBAAsB,CACzC,kBAAkB,EAClB,QAAQ,CACT,CAAC;gBACF,MAAM,IAAI,GAAG,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACpE,MAAM,OAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAExE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;YAC3B,CAAC,CAAC;SACH;aAAM;YACL,MAAM,GAAG,GAA2C;gBAClD,GAAG,EAAE,CAAC,GAAG;gBACT,GAAG,cAAc;gBACjB,QAAQ,EAAE,CAAC,QAAgB,EAAE,EAAE;oBAC7B,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACjD,IAAI,aAAa,KAAK,SAAS;wBAAE,OAAO,aAAa,CAAC;oBACtD,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,QAAQ;wBAAE,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBACnD,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBACD,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,aAAa;gBACnC,cAAc,EAAE,IAAA,mBAAY,EAC1B,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CACjD;gBACD,UAAU,EAAE,IAAA,mBAAY,EAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gBAC3D,eAAe,EAAE,IAAA,mBAAY,EAC3B,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CACnD;gBACD,WAAW,EAAE,IAAA,mBAAY,EAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACrE,QAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;oBACvB,CAAC,CAAC,IAAA,mBAAY,EAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACpD,CAAC,CAAC,SAAS;aACd,CAAC;YAEF,MAAM,IAAI,GAAqB,EAAE,CAAC,6BAA6B;gBAC7D,CAAC,CAAC,EAAE,CAAC,6BAA6B,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC;gBACvD,CAAC,CAAC;oBACE,GAAG,GAAG;oBACN,aAAa,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,EAAE;wBAC3C,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBACxC,IAAI,QAAQ,KAAK,SAAS;4BAAE,OAAO;wBACnC,OAAO,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;oBAClE,CAAC;oBACD,qBAAqB,EAAE,GAAG,EAAE,CAAC,IAAA,uBAAgB,EAAC,IAAA,cAAO,EAAC,QAAQ,CAAC,CAAC;oBAChE,qBAAqB,EAAE,GAAG,EAAE,CAC1B,IAAA,uBAAgB,EACd,IAAA,WAAI,EACF,IAAA,cAAO,EAAC,QAAQ,CAAC,EACjB,EAAE,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CACzC,CACF;oBACH,yBAAyB,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,yBAAyB;iBAC/D,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;YAC7B,MAAM,EACJ,kBAAkB,EAClB,8BAA8B,EAC9B,uBAAuB,EACvB,4BAA4B,GAC7B,GAAG,IAAA,4CAAuB,EAAC;gBAC1B,IAAI;gBACJ,GAAG;gBACH,MAAM;gBACN,EAAE;gBACF,oBAAoB;gBACpB,yBAAyB;gBACzB,OAAO;gBACP,UAAU;aACX,CAAC,CAAC;YACH,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;YAErE,kEAAkE;YAClE,IAAI,cAAc,GAAG,EAAE,CAAC,wBAAwB;gBAC9C,CAAC,CAAC,EAAE,CAAC,wBAAwB,CAAC;oBAC1B,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;oBACpC,OAAO,EAAE,MAAM,CAAC,OAAO;oBACvB,IAAI;oBACJ,4BAA4B,EAAE,MAAM,CAAC,MAAM;oBAC3C,iBAAiB,EAAE,MAAM,CAAC,iBAAiB;iBAC5C,CAAC;gBACJ,CAAC,CAAC,EAAE,CAAC,8CAA8C,CAC/C,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EACzB,MAAM,CAAC,OAAO,EACd,IAAI,EACJ,SAAS,EACT,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,iBAAiB,CACzB,CAAC;YAEN,sCAAsC;YACtC,MAAM,kBAAkB,GACtB,OAAO,YAAY,KAAK,UAAU;gBAChC,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;gBAC3C,CAAC,CAAC,YAAY,CAAC;YAEnB,6CAA6C;YAC7C,MAAM,iBAAiB,GAAG,CAAC,QAAgB,EAAE,QAAgB,EAAE,EAAE;gBAC/D,MAAM,gBAAgB,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACpD,MAAM,eAAe,GAAG,gBAAgB,KAAK,QAAQ,CAAC;gBACtD,IAAI,eAAe,EAAE;oBACnB,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;iBACtC;gBAED,qEAAqE;gBACrE,IAAI,oBAAoB,GAAG,KAAK,CAAC;gBACjC,IACE,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;oBAC5B,CAAC,uBAAuB,CAAC,QAAQ,CAAC,EAClC;oBACA,4BAA4B,CAAC,QAAQ,CAAC,CAAC;oBACvC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC5B,oBAAoB,GAAG,IAAI,CAAC;iBAC7B;gBAED,oCAAoC;gBACpC,IAAI,oBAAoB,IAAI,eAAe,EAAE;oBAC3C,cAAc,GAAG,EAAE,CAAC,8CAA8C,CAChE,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EACzB,MAAM,CAAC,OAAO,EACd,IAAI,EACJ,cAAc,EACd,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,iBAAiB,CACzB,CAAC;iBACH;YACH,CAAC,CAAC;YAEF,SAAS,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,EAAE;gBAC7C,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,IAAI,MAAM,GAAG,EAAE,CAAC;gBAEhB,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAElC,MAAM,UAAU,GAAG,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC1D,IAAI,CAAC,UAAU;oBACb,MAAM,IAAI,SAAS,CAAC,wBAAwB,QAAQ,EAAE,CAAC,CAAC;gBAE1D,MAAM,OAAO,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC;gBAC5C,MAAM,WAAW,GAAG,EAAE,CAAC,qBAAqB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;gBAClE,MAAM,cAAc,GAAG,iBAAiB,CACtC,WAAW,EACX,iBAAiB,CAClB,CAAC;gBACF,IAAI,cAAc,CAAC,MAAM;oBAAE,aAAa,CAAC,cAAc,CAAC,CAAC;gBAEzD,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAChC,UAAU,EACV,CAAC,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,EAAE;oBACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;wBACzB,MAAM,GAAG,IAAI,CAAC;qBACf;yBAAM;wBACL,OAAO,GAAG,IAAI,CAAC;qBAChB;oBAED,IAAI,OAAO,CAAC,IAAI;wBAAE,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,kBAAkB,CAAC,CAAC;gBAClE,CAAC,EACD,SAAS,EACT,SAAS,EACT,kBAAkB,CACnB,CAAC;gBAEF,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtB,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;iBACrC;gBAED,+DAA+D;gBAC/D,IAAI,OAAO,KAAK,EAAE,EAAE;oBAClB,IAAI,OAAO,CAAC,+BAA+B,CAAC,UAAU,CAAC,EAAE;wBACvD,MAAM,IAAI,SAAS,CACjB,iDAAiD,IAAA,eAAQ,EACvD,GAAG,EACH,QAAQ,CACT,EAAE,CACJ,CAAC;qBACH;oBAED,MAAM,IAAI,SAAS,CACjB,2BAA2B,IAAA,eAAQ,EAAC,GAAG,EAAE,QAAQ,CAAC,IAAI;wBACpD,kEAAkE;wBAClE,yEAAyE;wBACzE,6CAA6C,CAChD,CAAC;iBACH;gBAED,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YAClC,CAAC,CAAC;YAEF,WAAW,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,QAAgB,EAAE,EAAE;gBACjE,MAAM,kBAAkB,GAAG,IAAA,uBAAgB,EAAC,QAAQ,CAAC,CAAC;gBACtD,iBAAiB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;gBAE5C,MAAM,UAAU,GAAG,cAAc,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;gBACpE,IAAI,CAAC,UAAU;oBACb,MAAM,IAAI,SAAS,CAAC,wBAAwB,QAAQ,EAAE,CAAC,CAAC;gBAE1D,MAAM,IAAI,GAAG,kBAAkB,CAAC,EAAE,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;gBAC1D,MAAM,OAAO,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC,cAAc,EAAE,CAAC;gBAC7D,MAAM,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAEjD,IAAI,CAAC,MAAM;oBAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;gBAE9C,MAAM,IAAI,GAAG,OAAO,CAAC,yBAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC7D,MAAM,UAAU,GAAG;oBACjB,GAAG,IAAI,CAAC,sBAAsB,EAAE;oBAChC,GAAG,IAAI,CAAC,iBAAiB,EAAE;iBAC5B,CAAC;gBAEF,OAAO;oBACL,IAAI,EAAE,UAAU,CAAC,MAAM;wBACrB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;wBAChE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;oBAC9B,OAAO,EAAE,EAAE,CAAC,oBAAoB,CAC9B,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CACtD;iBACF,CAAC;YACJ,CAAC,CAAC;YAEF,kDAAkD;YAClD,IAAI,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC9C,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;oBACtB,sCAAsC;oBACrC,cAAc,CAAC,UAAU,EAAU,CAAC,aAAa,EAAE,CAAC;gBACvD,CAAC,CAAC,CAAC;aACJ;SACF;KACF;SAAM;QACL,WAAW,GAAG,GAAG,EAAE;YACjB,MAAM,IAAI,SAAS,CACjB,uDAAuD,CACxD,CAAC;QACJ,CAAC,CAAC;KACH;IAED,SAAS,oCAAoC,CAC3C,kBAAmC,EACnC,kBAAuC;QAEvC,MAAM,eAAe,GAAG,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC9C,IAAI,kBAAkB,KAAK,SAAS;YAClC,eAAe,CAAC,MAAM,GAAG,kBAAkB,CAAC;QAC9C,IAAI,gBAAgB,GAAG,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CACrC,eAAe,EACf,kBAAkB,CACnB,CAAC;QACF,IAAI,iBAAiB,GAAG,IAAA,mBAAY,EAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;YACvD,CAAC,CAAC,IAAA,6CAAuB,EAAC,EAAE,EAAE;gBAC1B,eAAe;gBACf,iBAAiB,EAAE,IAAI;gBACvB,YAAY,EAAE,YAAkD;aACjE,CAAC;YACJ,CAAC,CAAC,SAAS,CAAC;QACd,OAAO,CAAC,IAAY,EAAE,QAAgB,EAAgB,EAAE;YACtD,IAAI,MAA2B,CAAC;YAChC,IAAI,gBAAgB,EAAE;gBACpB,MAAM,GAAG,gBAAgB,CAAC,SAAS,CAAC,IAAI,EAAE;oBACxC,QAAQ;iBACT,CAAC,CAAC;aACJ;iBAAM,IAAI,iBAAiB,EAAE;gBAC5B,MAAM,GAAG,iBAAiB,CACxB,IAAI,EACJ;oBACE,QAAQ;iBACT,EACD,kBAAkB,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CACzD,CAAC;aACH;iBAAM;gBACL,MAAM,GAAG,EAAE,CAAC,eAAe,CAAC,IAAI,EAAE;oBAChC,QAAQ;oBACR,eAAe;oBACf,iBAAiB,EAAE,IAAI;oBACvB,YAAY,EAAE,YAAkD;iBACjE,CAAC,CAAC;aACJ;YAED,MAAM,cAAc,GAAG,iBAAiB,CACtC,MAAM,CAAC,WAAW,IAAI,EAAE,EACxB,iBAAiB,CAClB,CAAC;YACF,IAAI,cAAc,CAAC,MAAM;gBAAE,aAAa,CAAC,cAAc,CAAC,CAAC;YAEzD,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,aAAuB,EAAE,KAAK,CAAC,CAAC;QACpE,CAAC,CAAC;IACJ,CAAC;IAED,iFAAiF;IACjF,iEAAiE;IACjE,MAAM,sCAAsC,GAC1C,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;IACnD,mCAAmC;IACnC,MAAM,iCAAiC,GAAG,CAAC,CACzC,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM;QAC9C,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;QACxE,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;QACxE,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM,CAC/C,CAAC;IACF;;;OAGG;IACH,MAAM,gBAAgB,GACpB,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;QACxE,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ;YACrB,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACtD,MAAM,sBAAsB,GAAG,oCAAoC,CACjE,EAAE,CAAC,UAAU,CAAC,QAAQ,CACvB,CAAC;IACF,MAAM,0BAA0B,GAAG,oCAAoC,CACrE,EAAE,CAAC,UAAU,CAAC,QAAQ,EACtB,SAAS,CACV,CAAC;IACF,MAAM,qBAAqB,GAAG,oCAAoC,CAChE,EAAE,CAAC,UAAU,CAAC,QAAQ,EACtB,SAAS,CACV,CAAC;IACF,mCAAmC;IACnC,MAAM,iBAAiB,GAAG,oCAAoC,CAC5D,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,CACrE,CAAC;IACF,MAAM,sBAAsB,GAAG,oCAAoC,EAAE,CAAC;IAEtE,6CAA6C;IAC7C,SAAS,OAAO,CAAC,IAAY,EAAE,QAAgB,EAAE,UAAU,GAAG,CAAC;QAC7D,MAAM,kBAAkB,GAAG,IAAA,uBAAgB,EAAC,QAAQ,CAAC,CAAC;QACtD,MAAM,cAAc,GAClB,oBAAoB,CAAC,mCAAmC,CACtD,kBAAkB,CACnB,CAAC;QACJ,IAAI,KAAK,GAAuB,EAAE,CAAC;QACnC,IAAI,SAAS,GAAuB,EAAE,CAAC;QACvC,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,SAAS,EAAE;YACb,iEAAiE;YACjE,CAAC,KAAK,EAAE,SAAS,EAAE,WAAW,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;SACvE;QACD,+EAA+E;QAC/E,IACE,cAAc,CAAC,UAAU,KAAK,KAAK;YACnC,CAAC,sCAAsC,IAAI,WAAW,CAAC,EACvD;YACA,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,sBAAsB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;SACvE;aAAM,IACL,cAAc,CAAC,UAAU,KAAK,KAAK;YACnC,CAAC,iCAAiC,IAAI,WAAW,CAAC,EAClD;YACA,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,iBAAiB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;SAClE;aAAM,IAAI,WAAW,EAAE;YACtB,+DAA+D;YAC/D,MAAM,cAAc,GAAG,IAAA,4CAAc,EAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAClE,CAAC,KAAK,EAAE,SAAS,CAAC;gBAChB,cAAc,KAAK,SAAS;oBAC1B,CAAC,CAAC,0BAA0B,CAAC,IAAI,EAAE,kBAAkB,CAAC;oBACtD,CAAC,CAAC,cAAc,KAAK,SAAS;wBAC9B,CAAC,CAAC,qBAAqB,CAAC,IAAI,EAAE,kBAAkB,CAAC;wBACjD,CAAC,CAAC,cAAc,KAAK,KAAK;4BAC1B,CAAC,CAAC,sBAAsB,CAAC,IAAI,EAAE,kBAAkB,CAAC;4BAClD,CAAC,CAAC,cAAc,KAAK,KAAK;gCAC1B,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,kBAAkB,CAAC;gCAC7C,CAAC,CAAC,sBAAsB,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;SACxD;QACD,MAAM,MAAM,GAAG,YAAY,CACzB,KAAM,EACN,kBAAkB,EAClB,SAAU,EACV,gBAAgB,CACjB,CAAC;QACF,WAAW,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QACzD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,OAAiB,EAAE,EAAE,CACpC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;IACxD,MAAM,OAAO,GAAG,CAAC,QAAgB,EAAE,EAAE;QACnC,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QACzB,MAAM,GAAG,GAAG,IAAA,cAAO,EAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACrC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;SACtD;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;IAEF,SAAS,mBAAmB,CAAC,MAAwB;QACnD,iBAAiB,CAAC,IAAI,CAAC;YACrB,GAAG,MAAM;YACT,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CACpD,IAAA,uBAAgB,EAAC,CAAC,CAAC,CACpB;SACF,CAAC,CAAC;IACL,CAAC;IAED,MAAM,kBAAkB,GAAG,IAAA,WAAI,EAAC,GAAG,EAAE,CAEjC,OAAO,CAAC,+CAA+C,CACxD,CAAC,aAAa,CAAC;QACd,UAAU;QACV,YAAY,EAAE,OAAO,CAAC,YAAY;QAClC,qCAAqC,EACnC,OAAO,CAAC,+BAA+B;KAC1C,CAAC,CACH,CAAC;IACF,MAAM,mBAAmB,GAAG,IAAA,WAAI,EAAC,GAAG,EAAE,CAElC,OAAO,CAAC,kDAAkD,CAC3D,CAAC,eAAe,CACf,OAAO,CAAC,+BAA+B,EACvC,kBAAkB,EAAE,CACrB,CACF,CAAC;IACF,MAAM,gBAAgB,GAAG,IAAA,WAAI,EAAC,GAAG,EAAE,CAE/B,OAAO,CAAC,8CAA8C,CACvD,CAAC,eAAe,CAAC;QAChB,UAAU;QACV,YAAY,EAAE,OAAO,CAAC,YAAY;QAClC,eAAe,EAAE,kBAAkB,EAAE;KACtC,CAAC,CACH,CAAC;IAEF,OAAO;QACL,CAAC,qBAAqB,CAAC,EAAE,IAAI;QAC7B,EAAE;QACF,YAAY,EAAE,QAAQ;QACtB,MAAM;QACN,OAAO;QACP,WAAW;QACX,OAAO;QACP,OAAO;QACP,OAAO;QACP,cAAc;QACd,oBAAoB;QACpB,eAAe;QACf,mBAAmB;QACnB,uBAAuB;QACvB,kCAAkC;QAClC,aAAa;QACb,yBAAyB;QACzB,kBAAkB;QAClB,mBAAmB;QACnB,gBAAgB;QAChB,UAAU;KACX,CAAC;AACJ,CAAC;AAl5BD,8DAk5BC;AAED;;GAEG;AACH,SAAS,YAAY,CAAC,aAAqB,EAAE,MAAgB;IAC3D,OAAO,CAAC,QAAgB,EAAE,EAAE;QAC1B,MAAM,OAAO,GAAG,IAAA,eAAQ,EAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAClD,MAAM,IAAI,GAAG,IAAA,uBAAgB,EAAC,OAAO,CAAC,CAAC;QAEvC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,SAAS,kBAAkB,CACzB,YAAwC,EACxC,UAAoB,EACpB,OAAgB,EAChB,iBAA2D;IAE3D,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;IACjC,0GAA0G;IAC1G,uEAAuE;IACvE,uEAAuE;IACvE,KAAK,MAAM,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE;QACxD,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAA,qBAAc,EAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE;YACzE,mEAAmE;YACnE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACxB;KACF;IAED,2BAA2B;IAC3B,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAC;KACpD;IAED,IAAI,YAAY,EAAE;QAChB,MAAM,mBAAmB,GAAG,IAAI,GAAG,CAAC;YAClC,GAAG,IAAI;YACP,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SACnC,CAAC,CAAC;QAEH,2CAA2C;QAC3C,KAAK,MAAM,GAAG,IAAI,mBAAmB,EAAE;YACrC,MAAM,GAAG,GAAG,MAAM,CAAC,wBAAwB,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;YACrE,OAAO,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,EAAE,GAAI,CAAC,CAAC;SACtD;KACF;AACH,CAAC;AAED;;GAEG;AACH,SAAS,iBAAiB,CACxB,GAAW,EACX,OAAgB,EAChB,eAAyD;IAEzD,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC;IAEvD,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAM,EAAE,QAAQ;QAClD,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;YAAE,OAAO,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEvD,wBAAwB,CAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAE/C,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAE5B,CAAC,CAAC,QAAQ,GAAG,UAAU,IAAY,EAAE,QAAgB;YACnD,IAAA,aAAK,EAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YAEnC,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC/C,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC/C,CAAC,CAAC;QAEF,OAAO,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC1B,CAAC,CAAC;AACJ,CAAC;AAOD;;GAEG;AACH,SAAS,YAAY,CACnB,UAAkB,EAClB,QAAgB,EAChB,SAAiB,EACjB,gBAA8C;IAE9C,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAC3B,eAAe,CAAC,SAAS,EAAE,QAAQ,CAAC,EACpC,MAAM,CACP,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACrB,MAAM,gBAAgB,GAAG,mEAAmE,SAAS,EAAE,CAAC;IACxG,+HAA+H;IAC/H,oGAAoG;IACpG,MAAM,MAAM,GAAG,uBAAuB,CAAC;IACvC,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;IACnC,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAA,eAAQ,EAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAA,cAAO,EAAC,QAAQ,CAAC,CAAC;IAC3C,MAAM,SAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACrD,MAAM,iBAAiB,GACrB,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC;IAC1D,MAAM,qCAAqC,GACzC,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC;IAC1C;;;;;OAKG;IACH,IACE,UAAU,CAAC,MAAM,CAAC,CAAC,qCAAqC,EAAE,YAAY,CAAC;QACvE,MAAM,EACN;QACA,OAAO,CACL,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,qCAAqC,CAAC;YAC3D,gBAAgB,CACjB,CAAC;KACH;IACD,6JAA6J;IAC7J,MAAM,kCAAkC,GACtC,YAAY,GAAG,SAAS,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC;IACrD,IACE,UAAU,CAAC,MAAM,CAAC,CAAC,kCAAkC,EAAE,YAAY,CAAC;QACpE,MAAM,EACN;QACA,OAAO,CACL,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,kCAAkC,CAAC;YACxD,gBAAgB,CACjB,CAAC;KACH;IAED,OAAO,GAAG,UAAU,KAAK,gBAAgB,EAAE,CAAC;AAC9C,CAAC;AAED;;GAEG;AACH,SAAS,eAAe,CAAC,aAAqB,EAAE,QAAgB;IAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAC5C,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC;IAC1B,SAAS,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC/B,OAAO,SAAS,CAAC,UAAU,CAAC;IAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACnC,CAAC;AAED;;GAEG;AACH,SAAS,iBAAiB,CACxB,WAAsC,EACtC,OAA2B;IAE3B,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAC9B,OAAO,CAAC,KAAK,CACX,CAAC,CAAC,EAAE,EAAE;;QACJ,OAAA,CAAC,CAAC,CAAC,CAAC,iBAAiB;YACnB,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAA,CAAC,CAAC,IAAI,0CAAE,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;KAAA,CAC9C,CACF,CAAC;AACJ,CAAC;AAED;;;;GAIG;AACH,SAAS,kBAAkB,CACzB,EAAY,EACZ,UAA0B,EAC1B,QAAgB;IAEhB,IAAI,OAAO,GAAa,UAAU,CAAC;IAEnC,KAAK,EAAE,OAAO,IAAI,EAAE;QAClB,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;YACnD,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,KAAK,GAAG,QAAQ;gBAAE,MAAM;YAE5B,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC3B,IAAI,QAAQ,IAAI,GAAG,EAAE;gBACnB,OAAO,GAAG,KAAK,CAAC;gBAChB,SAAS,KAAK,CAAC;aAChB;SACF;QAED,OAAO,OAAO,CAAC;KAChB;AACH,CAAC;AAED;;;;;;;;;;;GAWG;AACI,MAAM,cAAc,GAA4B,CACrD,aAAsB,EACtB,EAAE,CAAE,OAAO,CAAC,OAAO,CAA4B,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;AAFnE,QAAA,cAAc,kBAEqD","sourcesContent":["import { relative, basename, extname, dirname, join } from 'path';\nimport { Module } from 'module';\nimport * as util from 'util';\nimport { fileURLToPath } from 'url';\n\nimport type * as _sourceMapSupport from '@cspotcode/source-map-support';\nimport { BaseError } from 'make-error';\nimport type * as _ts from 'typescript';\n\nimport type { Transpiler, TranspilerFactory } from './transpilers/types';\nimport {\n  cachedLookup,\n  createProjectLocalResolveHelper,\n  hasOwnProperty,\n  normalizeSlashes,\n  once,\n  parse,\n  ProjectLocalResolveHelper,\n  split,\n  versionGteLt,\n  yn,\n} from './util';\nimport { findAndReadConfig, loadCompiler } from './configuration';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport {\n  createModuleTypeClassifier,\n  ModuleTypeClassifier,\n} from './module-type-classifier';\nimport { createResolverFunctions } from './resolver-functions';\nimport type { createEsmHooks as createEsmHooksFn } from './esm';\nimport {\n  installCommonjsResolveHooksIfNecessary,\n  ModuleConstructorWithInternals,\n} from './cjs-resolve-hooks';\nimport { classifyModule } from './node-module-type-classifier';\nimport type * as _nodeInternalModulesEsmResolve from '../dist-raw/node-internal-modules-esm-resolve';\nimport type * as _nodeInternalModulesEsmGetFormat from '../dist-raw/node-internal-modules-esm-get_format';\nimport type * as _nodeInternalModulesCjsLoader from '../dist-raw/node-internal-modules-cjs-loader';\nimport { Extensions, getExtensions } from './file-extensions';\nimport { createTsTranspileModule } from './ts-transpile-module';\n\nexport { TSCommon };\nexport {\n  createRepl,\n  CreateReplOptions,\n  ReplService,\n  EvalAwarePartialHost,\n} from './repl';\nexport type {\n  TranspilerModule,\n  TranspilerFactory,\n  CreateTranspilerOptions,\n  TranspileOutput,\n  TranspileOptions,\n  Transpiler,\n} from './transpilers/types';\nexport type {\n  NodeLoaderHooksAPI1,\n  NodeLoaderHooksAPI2,\n  NodeLoaderHooksFormat,\n} from './esm';\n\n/**\n * Does this version of node obey the package.json \"type\" field\n * and throw ERR_REQUIRE_ESM when attempting to require() an ESM modules.\n */\nconst engineSupportsPackageTypeField =\n  parseInt(process.versions.node.split('.')[0], 10) >= 12;\n\n/**\n * Assert that script can be loaded as CommonJS when we attempt to require it.\n * If it should be loaded as ESM, throw ERR_REQUIRE_ESM like node does.\n *\n * Loaded conditionally so we don't need to support older node versions\n */\nlet assertScriptCanLoadAsCJS: (\n  service: Service,\n  module: NodeJS.Module,\n  filename: string\n) => void = engineSupportsPackageTypeField\n  ? (\n      require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader\n    ).assertScriptCanLoadAsCJSImpl\n  : () => {\n      /* noop */\n    };\n\n/**\n * Registered `ts-node` instance information.\n */\nexport const REGISTER_INSTANCE = Symbol.for('ts-node.register.instance');\n\n/**\n * Expose `REGISTER_INSTANCE` information on node.js `process`.\n */\ndeclare global {\n  namespace NodeJS {\n    interface Process {\n      [REGISTER_INSTANCE]?: Service;\n    }\n  }\n}\n\n/** @internal */\nexport const env = process.env as ProcessEnv;\n/**\n * Declare all env vars, to aid discoverability.\n * If an env var affects ts-node's behavior, it should not be buried somewhere in our codebase.\n * @internal\n */\nexport interface ProcessEnv {\n  TS_NODE_DEBUG?: string;\n  TS_NODE_CWD?: string;\n  /** @deprecated */\n  TS_NODE_DIR?: string;\n  TS_NODE_EMIT?: string;\n  TS_NODE_SCOPE?: string;\n  TS_NODE_SCOPE_DIR?: string;\n  TS_NODE_FILES?: string;\n  TS_NODE_PRETTY?: string;\n  TS_NODE_COMPILER?: string;\n  TS_NODE_COMPILER_OPTIONS?: string;\n  TS_NODE_IGNORE?: string;\n  TS_NODE_PROJECT?: string;\n  TS_NODE_SKIP_PROJECT?: string;\n  TS_NODE_SKIP_IGNORE?: string;\n  TS_NODE_PREFER_TS_EXTS?: string;\n  TS_NODE_IGNORE_DIAGNOSTICS?: string;\n  TS_NODE_TRANSPILE_ONLY?: string;\n  TS_NODE_TYPE_CHECK?: string;\n  TS_NODE_COMPILER_HOST?: string;\n  TS_NODE_LOG_ERROR?: string;\n  TS_NODE_HISTORY?: string;\n  TS_NODE_EXPERIMENTAL_REPL_AWAIT?: string;\n\n  NODE_NO_READLINE?: string;\n}\n\n/**\n * @internal\n */\nexport const INSPECT_CUSTOM = util.inspect.custom || 'inspect';\n\n/**\n * Debugging `ts-node`.\n */\nconst shouldDebug = yn(env.TS_NODE_DEBUG);\n/** @internal */\nexport const debug = shouldDebug\n  ? (...args: any) =>\n      console.log(`[ts-node ${new Date().toISOString()}]`, ...args)\n  : () => undefined;\nconst debugFn = shouldDebug\n  ? <T, U>(key: string, fn: (arg: T) => U) => {\n      let i = 0;\n      return (x: T) => {\n        debug(key, x, ++i);\n        return fn(x);\n      };\n    }\n  : <T, U>(_: string, fn: (arg: T) => U) => fn;\n\n/**\n * Export the current version.\n */\nexport const VERSION = require('../package.json').version;\n\n/**\n * Options for creating a new TypeScript compiler instance.\n\n * @category Basic\n */\nexport interface CreateOptions {\n  /**\n   * Behave as if invoked within this working directory.  Roughly equivalent to `cd $dir && ts-node ...`\n   *\n   * @default process.cwd()\n   */\n  cwd?: string;\n  /**\n   * Legacy alias for `cwd`\n   *\n   * @deprecated use `projectSearchDir` or `cwd`\n   */\n  dir?: string;\n  /**\n   * Emit output files into `.ts-node` directory.\n   *\n   * @default false\n   */\n  emit?: boolean;\n  /**\n   * Scope compiler to files within `scopeDir`.\n   *\n   * @default false\n   */\n  scope?: boolean;\n  /**\n   * @default First of: `tsconfig.json` \"rootDir\" if specified, directory containing `tsconfig.json`, or cwd if no `tsconfig.json` is loaded.\n   */\n  scopeDir?: string;\n  /**\n   * Use pretty diagnostic formatter.\n   *\n   * @default false\n   */\n  pretty?: boolean;\n  /**\n   * Use TypeScript's faster `transpileModule`.\n   *\n   * @default false\n   */\n  transpileOnly?: boolean;\n  /**\n   * **DEPRECATED** Specify type-check is enabled (e.g. `transpileOnly == false`).\n   *\n   * @default true\n   */\n  typeCheck?: boolean;\n  /**\n   * Use TypeScript's compiler host API instead of the language service API.\n   *\n   * @default false\n   */\n  compilerHost?: boolean;\n  /**\n   * Logs TypeScript errors to stderr instead of throwing exceptions.\n   *\n   * @default false\n   */\n  logError?: boolean;\n  /**\n   * Load \"files\" and \"include\" from `tsconfig.json` on startup.\n   *\n   * Default is to override `tsconfig.json` \"files\" and \"include\" to only include the entrypoint script.\n   *\n   * @default false\n   */\n  files?: boolean;\n  /**\n   * Specify a custom TypeScript compiler.\n   *\n   * @default \"typescript\"\n   */\n  compiler?: string;\n  /**\n   * Specify a custom transpiler for use with transpileOnly\n   */\n  transpiler?: string | [string, object];\n  /**\n   * Transpile with swc instead of the TypeScript compiler, and skip typechecking.\n   *\n   * Equivalent to setting both `transpileOnly: true` and `transpiler: 'ts-node/transpilers/swc'`\n   *\n   * For complete instructions: https://typestrong.org/ts-node/docs/transpilers\n   */\n  swc?: boolean;\n  /**\n   * Paths which should not be compiled.\n   *\n   * Each string in the array is converted to a regular expression via `new RegExp()` and tested against source paths prior to compilation.\n   *\n   * Source paths are normalized to posix-style separators, relative to the directory containing `tsconfig.json` or to cwd if no `tsconfig.json` is loaded.\n   *\n   * Default is to ignore all node_modules subdirectories.\n   *\n   * @default [\"(?:^|/)node_modules/\"]\n   */\n  ignore?: string[];\n  /**\n   * Path to TypeScript config file or directory containing a `tsconfig.json`.\n   * Similar to the `tsc --project` flag: https://www.typescriptlang.org/docs/handbook/compiler-options.html\n   */\n  project?: string;\n  /**\n   * Search for TypeScript config file (`tsconfig.json`) in this or parent directories.\n   */\n  projectSearchDir?: string;\n  /**\n   * Skip project config resolution and loading.\n   *\n   * @default false\n   */\n  skipProject?: boolean;\n  /**\n   * Skip ignore check, so that compilation will be attempted for all files with matching extensions.\n   *\n   * @default false\n   */\n  skipIgnore?: boolean;\n  /**\n   * JSON object to merge with TypeScript `compilerOptions`.\n   *\n   * @allOf [{\"$ref\": \"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json#definitions/compilerOptionsDefinition/properties/compilerOptions\"}]\n   */\n  compilerOptions?: object;\n  /**\n   * Ignore TypeScript warnings by diagnostic code.\n   */\n  ignoreDiagnostics?: Array<number | string>;\n  /**\n   * Modules to require, like node's `--require` flag.\n   *\n   * If specified in `tsconfig.json`, the modules will be resolved relative to the `tsconfig.json` file.\n   *\n   * If specified programmatically, each input string should be pre-resolved to an absolute path for\n   * best results.\n   */\n  require?: Array<string>;\n  readFile?: (path: string) => string | undefined;\n  fileExists?: (path: string) => boolean;\n  transformers?:\n    | _ts.CustomTransformers\n    | ((p: _ts.Program) => _ts.CustomTransformers);\n  /**\n   * Allows the usage of top level await in REPL.\n   *\n   * Uses node's implementation which accomplishes this with an AST syntax transformation.\n   *\n   * Enabled by default when tsconfig target is es2018 or above. Set to false to disable.\n   *\n   * **Note**: setting to `true` when tsconfig target is too low will throw an Error.  Leave as `undefined`\n   * to get default, automatic behavior.\n   */\n  experimentalReplAwait?: boolean;\n  /**\n   * Override certain paths to be compiled and executed as CommonJS or ECMAScript modules.\n   * When overridden, the tsconfig \"module\" and package.json \"type\" fields are overridden, and\n   * the file extension is ignored.\n   * This is useful if you cannot use .mts, .cts, .mjs, or .cjs file extensions;\n   * it achieves the same effect.\n   *\n   * Each key is a glob pattern following the same rules as tsconfig's \"include\" array.\n   * When multiple patterns match the same file, the last pattern takes precedence.\n   *\n   * `cjs` overrides matches files to compile and execute as CommonJS.\n   * `esm` overrides matches files to compile and execute as native ECMAScript modules.\n   * `package` overrides either of the above to default behavior, which obeys package.json \"type\" and\n   * tsconfig.json \"module\" options.\n   */\n  moduleTypes?: ModuleTypes;\n  /**\n   * @internal\n   * Set by our configuration loader whenever a config file contains options that\n   * are relative to the config file they came from, *and* when other logic needs\n   * to know this.  Some options can be eagerly resolved to absolute paths by\n   * the configuration loader, so it is *not* necessary for their source to be set here.\n   */\n  optionBasePaths?: OptionBasePaths;\n  /**\n   * A function to collect trace messages from the TypeScript compiler, for example when `traceResolution` is enabled.\n   *\n   * @default console.log\n   */\n  tsTrace?: (str: string) => void;\n  /**\n   * Enable native ESM support.\n   *\n   * For details, see https://typestrong.org/ts-node/docs/imports#native-ecmascript-modules\n   */\n  esm?: boolean;\n  /**\n   * Re-order file extensions so that TypeScript imports are preferred.\n   *\n   * For example, when both `index.js` and `index.ts` exist, enabling this option causes `require('./index')` to resolve to `index.ts` instead of `index.js`\n   *\n   * @default false\n   */\n  preferTsExts?: boolean;\n  /**\n   * Like node's `--experimental-specifier-resolution`, , but can also be set in your `tsconfig.json` for convenience.\n   *\n   * For details, see https://nodejs.org/dist/latest-v18.x/docs/api/esm.html#customizing-esm-specifier-resolution-algorithm\n   */\n  experimentalSpecifierResolution?: 'node' | 'explicit';\n  /**\n   * Allow using voluntary `.ts` file extension in import specifiers.\n   *\n   * Typically, in ESM projects, import specifiers must have an emit extension, `.js`, `.cjs`, or `.mjs`,\n   * and we automatically map to the corresponding `.ts`, `.cts`, or `.mts` source file.  This is the\n   * recommended approach.\n   *\n   * However, if you really want to use `.ts` in import specifiers, and are aware that this may\n   * break tooling, you can enable this flag.\n   */\n  experimentalTsImportSpecifiers?: boolean;\n}\n\nexport type ModuleTypes = Record<string, ModuleTypeOverride>;\nexport type ModuleTypeOverride = 'cjs' | 'esm' | 'package';\n\n/** @internal */\nexport interface OptionBasePaths {\n  moduleTypes?: string;\n  transpiler?: string;\n  compiler?: string;\n  swc?: string;\n}\n\n/**\n * Options for registering a TypeScript compiler instance globally.\n\n * @category Basic\n */\nexport interface RegisterOptions extends CreateOptions {\n  /**\n   * Enable experimental features that re-map imports and require calls to support:\n   * `baseUrl`, `paths`, `rootDirs`, `.js` to `.ts` file extension mappings,\n   * `outDir` to `rootDir` mappings for composite projects and monorepos.\n   *\n   * For details, see https://github.com/TypeStrong/ts-node/issues/1514\n   */\n  experimentalResolver?: boolean;\n}\n\nexport type ExperimentalSpecifierResolution = 'node' | 'explicit';\n\n/**\n * Must be an interface to support `typescript-json-schema`.\n */\nexport interface TsConfigOptions\n  extends Omit<\n    RegisterOptions,\n    | 'transformers'\n    | 'readFile'\n    | 'fileExists'\n    | 'skipProject'\n    | 'project'\n    | 'dir'\n    | 'cwd'\n    | 'projectSearchDir'\n    | 'optionBasePaths'\n    | 'tsTrace'\n  > {}\n\n/**\n * Information retrieved from type info check.\n */\nexport interface TypeInfo {\n  name: string;\n  comment: string;\n}\n\n/**\n * Default register options, including values specified via environment\n * variables.\n * @internal\n */\nexport const DEFAULTS: RegisterOptions = {\n  cwd: env.TS_NODE_CWD ?? env.TS_NODE_DIR,\n  emit: yn(env.TS_NODE_EMIT),\n  scope: yn(env.TS_NODE_SCOPE),\n  scopeDir: env.TS_NODE_SCOPE_DIR,\n  files: yn(env.TS_NODE_FILES),\n  pretty: yn(env.TS_NODE_PRETTY),\n  compiler: env.TS_NODE_COMPILER,\n  compilerOptions: parse(env.TS_NODE_COMPILER_OPTIONS),\n  ignore: split(env.TS_NODE_IGNORE),\n  project: env.TS_NODE_PROJECT,\n  skipProject: yn(env.TS_NODE_SKIP_PROJECT),\n  skipIgnore: yn(env.TS_NODE_SKIP_IGNORE),\n  preferTsExts: yn(env.TS_NODE_PREFER_TS_EXTS),\n  ignoreDiagnostics: split(env.TS_NODE_IGNORE_DIAGNOSTICS),\n  transpileOnly: yn(env.TS_NODE_TRANSPILE_ONLY),\n  typeCheck: yn(env.TS_NODE_TYPE_CHECK),\n  compilerHost: yn(env.TS_NODE_COMPILER_HOST),\n  logError: yn(env.TS_NODE_LOG_ERROR),\n  experimentalReplAwait: yn(env.TS_NODE_EXPERIMENTAL_REPL_AWAIT) ?? undefined,\n  tsTrace: console.log.bind(console),\n};\n\n/**\n * TypeScript diagnostics error.\n */\nexport class TSError extends BaseError {\n  name = 'TSError';\n  diagnosticText!: string;\n  diagnostics!: ReadonlyArray<_ts.Diagnostic>;\n\n  constructor(\n    diagnosticText: string,\n    public diagnosticCodes: number[],\n    diagnostics: ReadonlyArray<_ts.Diagnostic> = []\n  ) {\n    super(`⨯ Unable to compile TypeScript:\\n${diagnosticText}`);\n    Object.defineProperty(this, 'diagnosticText', {\n      configurable: true,\n      writable: true,\n      value: diagnosticText,\n    });\n    Object.defineProperty(this, 'diagnostics', {\n      configurable: true,\n      writable: true,\n      value: diagnostics,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  [INSPECT_CUSTOM]() {\n    return this.diagnosticText;\n  }\n}\n\nconst TS_NODE_SERVICE_BRAND = Symbol('TS_NODE_SERVICE_BRAND');\n\n/**\n * Primary ts-node service, which wraps the TypeScript API and can compile TypeScript to JavaScript\n */\nexport interface Service {\n  /** @internal */\n  [TS_NODE_SERVICE_BRAND]: true;\n  ts: TSCommon;\n  /** @internal */\n  compilerPath: string;\n  config: _ts.ParsedCommandLine;\n  options: RegisterOptions;\n  enabled(enabled?: boolean): boolean;\n  ignored(fileName: string): boolean;\n  compile(code: string, fileName: string, lineOffset?: number): string;\n  getTypeInfo(code: string, fileName: string, position: number): TypeInfo;\n  /** @internal */\n  configFilePath: string | undefined;\n  /** @internal */\n  moduleTypeClassifier: ModuleTypeClassifier;\n  /** @internal */\n  readonly shouldReplAwait: boolean;\n  /** @internal */\n  addDiagnosticFilter(filter: DiagnosticFilter): void;\n  /** @internal */\n  installSourceMapSupport(): void;\n  /** @internal */\n  enableExperimentalEsmLoaderInterop(): void;\n  /** @internal */\n  transpileOnly: boolean;\n  /** @internal */\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  /** @internal */\n  getNodeEsmResolver: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-resolve').createResolve\n  >;\n  /** @internal */\n  getNodeEsmGetFormat: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-get_format').createGetFormat\n  >;\n  /** @internal */\n  getNodeCjsLoader: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-cjs-loader').createCjsLoader\n  >;\n  /** @internal */\n  extensions: Extensions;\n}\n\n/**\n * Re-export of `Service` interface for backwards-compatibility\n * @deprecated use `Service` instead\n * @see {Service}\n */\nexport type Register = Service;\n\n/** @internal */\nexport interface DiagnosticFilter {\n  /** if true, filter applies to all files */\n  appliesToAllFiles: boolean;\n  /** Filter applies onto to these filenames.  Only used if appliesToAllFiles is false */\n  filenamesAbsolute: string[];\n  /** these diagnostic codes are ignored */\n  diagnosticsIgnored: number[];\n}\n\n/**\n * Create a new TypeScript compiler instance and register it onto node.js\n *\n * @category Basic\n */\nexport function register(opts?: RegisterOptions): Service;\n/**\n * Register TypeScript compiler instance onto node.js\n\n * @category Basic\n */\nexport function register(service: Service): Service;\nexport function register(\n  serviceOrOpts: Service | RegisterOptions | undefined\n): Service {\n  // Is this a Service or a RegisterOptions?\n  let service = serviceOrOpts as Service;\n  if (!(serviceOrOpts as Service)?.[TS_NODE_SERVICE_BRAND]) {\n    // Not a service; is options\n    service = create((serviceOrOpts ?? {}) as RegisterOptions);\n  }\n\n  const originalJsHandler = require.extensions['.js'];\n\n  // Expose registered instance globally.\n  process[REGISTER_INSTANCE] = service;\n\n  // Register the extensions.\n  registerExtensions(\n    service.options.preferTsExts,\n    service.extensions.compiled,\n    service,\n    originalJsHandler\n  );\n\n  installCommonjsResolveHooksIfNecessary(service);\n\n  // Require specified modules before start-up.\n  (Module as ModuleConstructorWithInternals)._preloadModules(\n    service.options.require\n  );\n\n  return service;\n}\n\n/**\n * Create TypeScript compiler instance.\n *\n * @category Basic\n */\nexport function create(rawOptions: CreateOptions = {}): Service {\n  const foundConfigResult = findAndReadConfig(rawOptions);\n  return createFromPreloadedConfig(foundConfigResult);\n}\n\n/** @internal */\nexport function createFromPreloadedConfig(\n  foundConfigResult: ReturnType<typeof findAndReadConfig>\n): Service {\n  const {\n    configFilePath,\n    cwd,\n    options,\n    config,\n    compiler,\n    projectLocalResolveDir,\n    optionBasePaths,\n  } = foundConfigResult;\n\n  const projectLocalResolveHelper = createProjectLocalResolveHelper(\n    projectLocalResolveDir\n  );\n\n  const ts = loadCompiler(compiler);\n\n  // Experimental REPL await is not compatible targets lower than ES2018\n  const targetSupportsTla = config.options.target! >= ts.ScriptTarget.ES2018;\n  if (options.experimentalReplAwait === true && !targetSupportsTla) {\n    throw new Error(\n      'Experimental REPL await is not compatible with targets lower than ES2018'\n    );\n  }\n  // Top-level await was added in TS 3.8\n  const tsVersionSupportsTla = versionGteLt(ts.version, '3.8.0');\n  if (options.experimentalReplAwait === true && !tsVersionSupportsTla) {\n    throw new Error(\n      'Experimental REPL await is not compatible with TypeScript versions older than 3.8'\n    );\n  }\n\n  const shouldReplAwait =\n    options.experimentalReplAwait !== false &&\n    tsVersionSupportsTla &&\n    targetSupportsTla;\n\n  // swc implies two other options\n  // typeCheck option was implemented specifically to allow overriding tsconfig transpileOnly from the command-line\n  // So we should allow using typeCheck to override swc\n  if (options.swc && !options.typeCheck) {\n    if (options.transpileOnly === false) {\n      throw new Error(\n        \"Cannot enable 'swc' option with 'transpileOnly: false'.  'swc' implies 'transpileOnly'.\"\n      );\n    }\n    if (options.transpiler) {\n      throw new Error(\n        \"Cannot specify both 'swc' and 'transpiler' options.  'swc' uses the built-in swc transpiler.\"\n      );\n    }\n  }\n\n  const readFile = options.readFile || ts.sys.readFile;\n  const fileExists = options.fileExists || ts.sys.fileExists;\n  // typeCheck can override transpileOnly, useful for CLI flag to override config file\n  const transpileOnly =\n    (options.transpileOnly === true || options.swc === true) &&\n    options.typeCheck !== true;\n  let transpiler: RegisterOptions['transpiler'] | undefined = undefined;\n  let transpilerBasePath: string | undefined = undefined;\n  if (options.transpiler) {\n    transpiler = options.transpiler;\n    transpilerBasePath = optionBasePaths.transpiler;\n  } else if (options.swc) {\n    transpiler = require.resolve('./transpilers/swc.js');\n    transpilerBasePath = optionBasePaths.swc;\n  }\n  const transformers = options.transformers || undefined;\n  const diagnosticFilters: Array<DiagnosticFilter> = [\n    {\n      appliesToAllFiles: true,\n      filenamesAbsolute: [],\n      diagnosticsIgnored: [\n        6059, // \"'rootDir' is expected to contain all source files.\"\n        18002, // \"The 'files' list in config file is empty.\"\n        18003, // \"No inputs were found in config file.\"\n        ...(options.experimentalTsImportSpecifiers\n          ? [\n              2691, // \"An import path cannot end with a '.ts' extension. Consider importing '<specifier without ext>' instead.\"\n            ]\n          : []),\n        ...(options.ignoreDiagnostics || []),\n      ].map(Number),\n    },\n  ];\n\n  const configDiagnosticList = filterDiagnostics(\n    config.errors,\n    diagnosticFilters\n  );\n  const outputCache = new Map<\n    string,\n    {\n      content: string;\n    }\n  >();\n\n  const configFileDirname = configFilePath ? dirname(configFilePath) : null;\n  const scopeDir =\n    options.scopeDir ?? config.options.rootDir ?? configFileDirname ?? cwd;\n  const ignoreBaseDir = configFileDirname ?? cwd;\n  const isScoped = options.scope\n    ? (fileName: string) => relative(scopeDir, fileName).charAt(0) !== '.'\n    : () => true;\n  const shouldIgnore = createIgnore(\n    ignoreBaseDir,\n    options.skipIgnore\n      ? []\n      : (options.ignore || ['(?:^|/)node_modules/']).map(\n          (str) => new RegExp(str)\n        )\n  );\n\n  const diagnosticHost: _ts.FormatDiagnosticsHost = {\n    getNewLine: () => ts.sys.newLine,\n    getCurrentDirectory: () => cwd,\n    // TODO switch to getCanonicalFileName we already create later in scope\n    getCanonicalFileName: ts.sys.useCaseSensitiveFileNames\n      ? (x) => x\n      : (x) => x.toLowerCase(),\n  };\n\n  if (options.transpileOnly && typeof transformers === 'function') {\n    throw new TypeError(\n      'Transformers function is unavailable in \"--transpile-only\"'\n    );\n  }\n  let createTranspiler = initializeTranspilerFactory();\n  function initializeTranspilerFactory() {\n    if (transpiler) {\n      if (!transpileOnly)\n        throw new Error(\n          'Custom transpiler can only be used when transpileOnly is enabled.'\n        );\n      const transpilerName =\n        typeof transpiler === 'string' ? transpiler : transpiler[0];\n      const transpilerOptions =\n        typeof transpiler === 'string' ? {} : transpiler[1] ?? {};\n      const transpilerConfigLocalResolveHelper = transpilerBasePath\n        ? createProjectLocalResolveHelper(transpilerBasePath)\n        : projectLocalResolveHelper;\n      const transpilerPath = transpilerConfigLocalResolveHelper(\n        transpilerName,\n        true\n      );\n      const transpilerFactory = require(transpilerPath)\n        .create as TranspilerFactory;\n      return createTranspiler;\n\n      function createTranspiler(\n        compilerOptions: TSCommon.CompilerOptions,\n        nodeModuleEmitKind?: NodeModuleEmitKind\n      ) {\n        return transpilerFactory?.({\n          service: {\n            options,\n            config: {\n              ...config,\n              options: compilerOptions,\n            },\n            projectLocalResolveHelper,\n          },\n          transpilerConfigLocalResolveHelper,\n          nodeModuleEmitKind,\n          ...transpilerOptions,\n        });\n      }\n    }\n  }\n\n  /**\n   * True if require() hooks should interop with experimental ESM loader.\n   * Enabled explicitly via a flag since it is a breaking change.\n   */\n  let experimentalEsmLoader = false;\n  function enableExperimentalEsmLoaderInterop() {\n    experimentalEsmLoader = true;\n  }\n\n  // Install source map support and read from memory cache.\n  installSourceMapSupport();\n  function installSourceMapSupport() {\n    const sourceMapSupport =\n      require('@cspotcode/source-map-support') as typeof _sourceMapSupport;\n    sourceMapSupport.install({\n      environment: 'node',\n      retrieveFile(pathOrUrl: string) {\n        let path = pathOrUrl;\n        // If it's a file URL, convert to local path\n        // Note: fileURLToPath does not exist on early node v10\n        // I could not find a way to handle non-URLs except to swallow an error\n        if (experimentalEsmLoader && path.startsWith('file://')) {\n          try {\n            path = fileURLToPath(path);\n          } catch (e) {\n            /* swallow error */\n          }\n        }\n        path = normalizeSlashes(path);\n        return outputCache.get(path)?.content || '';\n      },\n      redirectConflictingLibrary: true,\n      onConflictingLibraryRedirect(\n        request,\n        parent,\n        isMain,\n        options,\n        redirectedRequest\n      ) {\n        debug(\n          `Redirected an attempt to require source-map-support to instead receive @cspotcode/source-map-support.  \"${\n            (parent as NodeJS.Module).filename\n          }\" attempted to require or resolve \"${request}\" and was redirected to \"${redirectedRequest}\".`\n        );\n      },\n    });\n  }\n\n  const shouldHavePrettyErrors =\n    options.pretty === undefined ? process.stdout.isTTY : options.pretty;\n\n  const formatDiagnostics = shouldHavePrettyErrors\n    ? ts.formatDiagnosticsWithColorAndContext || ts.formatDiagnostics\n    : ts.formatDiagnostics;\n\n  function createTSError(diagnostics: ReadonlyArray<_ts.Diagnostic>) {\n    const diagnosticText = formatDiagnostics(diagnostics, diagnosticHost);\n    const diagnosticCodes = diagnostics.map((x) => x.code);\n    return new TSError(diagnosticText, diagnosticCodes, diagnostics);\n  }\n\n  function reportTSError(configDiagnosticList: _ts.Diagnostic[]) {\n    const error = createTSError(configDiagnosticList);\n    if (options.logError) {\n      // Print error in red color and continue execution.\n      console.error('\\x1b[31m%s\\x1b[0m', error);\n    } else {\n      // Throw error and exit the script.\n      throw error;\n    }\n  }\n\n  // Render the configuration errors.\n  if (configDiagnosticList.length) reportTSError(configDiagnosticList);\n\n  const jsxEmitPreserve = config.options.jsx === ts.JsxEmit.Preserve;\n  /**\n   * Get the extension for a transpiled file.\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  function getEmitExtension(path: string) {\n    const lastDotIndex = path.lastIndexOf('.');\n    if (lastDotIndex >= 0) {\n      const ext = path.slice(lastDotIndex);\n      switch (ext) {\n        case '.js':\n        case '.ts':\n          return '.js';\n        case '.jsx':\n        case '.tsx':\n          return jsxEmitPreserve ? '.jsx' : '.js';\n        case '.mjs':\n        case '.mts':\n          return '.mjs';\n        case '.cjs':\n        case '.cts':\n          return '.cjs';\n      }\n    }\n    return '.js';\n  }\n\n  type GetOutputFunction = (code: string, fileName: string) => SourceOutput;\n  /**\n   * Get output from TS compiler w/typechecking.  `undefined` in `transpileOnly`\n   * mode.\n   */\n  let getOutput: GetOutputFunction | undefined;\n  let getTypeInfo: (\n    _code: string,\n    _fileName: string,\n    _position: number\n  ) => TypeInfo;\n\n  const getCanonicalFileName = (\n    ts as unknown as TSInternal\n  ).createGetCanonicalFileName(ts.sys.useCaseSensitiveFileNames);\n\n  const moduleTypeClassifier = createModuleTypeClassifier({\n    basePath: options.optionBasePaths?.moduleTypes,\n    patterns: options.moduleTypes,\n  });\n\n  const extensions = getExtensions(config, options, ts.version);\n\n  // Use full language services when the fast option is disabled.\n  if (!transpileOnly) {\n    const fileContents = new Map<string, string>();\n    const rootFileNames = new Set(config.fileNames);\n    const cachedReadFile = cachedLookup(debugFn('readFile', readFile));\n\n    // Use language services by default\n    if (!options.compilerHost) {\n      let projectVersion = 1;\n      const fileVersions = new Map(\n        Array.from(rootFileNames).map((fileName) => [fileName, 0])\n      );\n\n      const getCustomTransformers = () => {\n        if (typeof transformers === 'function') {\n          const program = service.getProgram();\n          return program ? transformers(program) : undefined;\n        }\n\n        return transformers;\n      };\n\n      // Create the compiler host for type checking.\n      const serviceHost: _ts.LanguageServiceHost &\n        Required<Pick<_ts.LanguageServiceHost, 'fileExists' | 'readFile'>> = {\n        getProjectVersion: () => String(projectVersion),\n        getScriptFileNames: () => Array.from(rootFileNames),\n        getScriptVersion: (fileName: string) => {\n          const version = fileVersions.get(fileName);\n          return version ? version.toString() : '';\n        },\n        getScriptSnapshot(fileName: string) {\n          // TODO ordering of this with getScriptVersion?  Should they sync up?\n          let contents = fileContents.get(fileName);\n\n          // Read contents into TypeScript memory cache.\n          if (contents === undefined) {\n            contents = cachedReadFile(fileName);\n            if (contents === undefined) return;\n\n            fileVersions.set(fileName, 1);\n            fileContents.set(fileName, contents);\n            projectVersion++;\n          }\n\n          return ts.ScriptSnapshot.fromString(contents);\n        },\n        readFile: cachedReadFile,\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(\n          debugFn('getDirectories', ts.sys.getDirectories)\n        ),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(\n          debugFn('directoryExists', ts.sys.directoryExists)\n        ),\n        realpath: ts.sys.realpath\n          ? cachedLookup(debugFn('realpath', ts.sys.realpath))\n          : undefined,\n        getNewLine: () => ts.sys.newLine,\n        useCaseSensitiveFileNames: () => ts.sys.useCaseSensitiveFileNames,\n        getCurrentDirectory: () => cwd,\n        getCompilationSettings: () => config.options,\n        getDefaultLibFileName: () => ts.getDefaultLibFilePath(config.options),\n        getCustomTransformers: getCustomTransformers,\n        trace: options.tsTrace,\n      };\n      const {\n        resolveModuleNames,\n        getResolvedModuleWithFailedLookupLocationsFromCache,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host: serviceHost,\n        getCanonicalFileName,\n        ts,\n        cwd,\n        config,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      serviceHost.resolveModuleNames = resolveModuleNames;\n      serviceHost.getResolvedModuleWithFailedLookupLocationsFromCache =\n        getResolvedModuleWithFailedLookupLocationsFromCache;\n      serviceHost.resolveTypeReferenceDirectives =\n        resolveTypeReferenceDirectives;\n\n      const registry = ts.createDocumentRegistry(\n        ts.sys.useCaseSensitiveFileNames,\n        cwd\n      );\n      const service = ts.createLanguageService(serviceHost, registry);\n\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        // Add to `rootFiles` as necessary, either to make TS include a file it has not seen,\n        // or to trigger a re-classification of files from external to internal.\n        if (\n          !rootFileNames.has(fileName) &&\n          !isFileKnownToBeInternal(fileName)\n        ) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          // Increment project version for every change to rootFileNames.\n          projectVersion++;\n        }\n\n        const previousVersion = fileVersions.get(fileName) || 0;\n        const previousContents = fileContents.get(fileName);\n        // Avoid incrementing cache when nothing has changed.\n        if (contents !== previousContents) {\n          fileVersions.set(fileName, previousVersion + 1);\n          fileContents.set(fileName, contents);\n          // Increment project version for every file change.\n          projectVersion++;\n        }\n      };\n\n      let previousProgram: _ts.Program | undefined = undefined;\n\n      getOutput = (code: string, fileName: string) => {\n        updateMemoryCache(code, fileName);\n\n        const programBefore = service.getProgram();\n        if (programBefore !== previousProgram) {\n          debug(\n            `compiler rebuilt Program instance when getting output for ${fileName}`\n          );\n        }\n\n        const output = service.getEmitOutput(fileName);\n\n        // Get the relevant diagnostics - this is 3x faster than `getPreEmitDiagnostics`.\n        const diagnostics = service\n          .getSemanticDiagnostics(fileName)\n          .concat(service.getSyntacticDiagnostics(fileName));\n\n        const programAfter = service.getProgram();\n\n        debug(\n          'invariant: Is service.getProject() identical before and after getting emit output and diagnostics? (should always be true) ',\n          programBefore === programAfter\n        );\n\n        previousProgram = programAfter;\n\n        const diagnosticList = filterDiagnostics(\n          diagnostics,\n          diagnosticFilters\n        );\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        if (output.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring `.d.ts` files.\n        if (output.outputFiles.length === 0) {\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [output.outputFiles[1].text, output.outputFiles[0].text, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const info = service.getQuickInfoAtPosition(\n          normalizedFileName,\n          position\n        );\n        const name = ts.displayPartsToString(info ? info.displayParts : []);\n        const comment = ts.displayPartsToString(info ? info.documentation : []);\n\n        return { name, comment };\n      };\n    } else {\n      const sys: _ts.System & _ts.FormatDiagnosticsHost = {\n        ...ts.sys,\n        ...diagnosticHost,\n        readFile: (fileName: string) => {\n          const cacheContents = fileContents.get(fileName);\n          if (cacheContents !== undefined) return cacheContents;\n          const contents = cachedReadFile(fileName);\n          if (contents) fileContents.set(fileName, contents);\n          return contents;\n        },\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(\n          debugFn('getDirectories', ts.sys.getDirectories)\n        ),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(\n          debugFn('directoryExists', ts.sys.directoryExists)\n        ),\n        resolvePath: cachedLookup(debugFn('resolvePath', ts.sys.resolvePath)),\n        realpath: ts.sys.realpath\n          ? cachedLookup(debugFn('realpath', ts.sys.realpath))\n          : undefined,\n      };\n\n      const host: _ts.CompilerHost = ts.createIncrementalCompilerHost\n        ? ts.createIncrementalCompilerHost(config.options, sys)\n        : {\n            ...sys,\n            getSourceFile: (fileName, languageVersion) => {\n              const contents = sys.readFile(fileName);\n              if (contents === undefined) return;\n              return ts.createSourceFile(fileName, contents, languageVersion);\n            },\n            getDefaultLibLocation: () => normalizeSlashes(dirname(compiler)),\n            getDefaultLibFileName: () =>\n              normalizeSlashes(\n                join(\n                  dirname(compiler),\n                  ts.getDefaultLibFileName(config.options)\n                )\n              ),\n            useCaseSensitiveFileNames: () => sys.useCaseSensitiveFileNames,\n          };\n      host.trace = options.tsTrace;\n      const {\n        resolveModuleNames,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host,\n        cwd,\n        config,\n        ts,\n        getCanonicalFileName,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      host.resolveModuleNames = resolveModuleNames;\n      host.resolveTypeReferenceDirectives = resolveTypeReferenceDirectives;\n\n      // Fallback for older TypeScript releases without incremental API.\n      let builderProgram = ts.createIncrementalProgram\n        ? ts.createIncrementalProgram({\n            rootNames: Array.from(rootFileNames),\n            options: config.options,\n            host,\n            configFileParsingDiagnostics: config.errors,\n            projectReferences: config.projectReferences,\n          })\n        : ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            undefined,\n            config.errors,\n            config.projectReferences\n          );\n\n      // Read and cache custom transformers.\n      const customTransformers =\n        typeof transformers === 'function'\n          ? transformers(builderProgram.getProgram())\n          : transformers;\n\n      // Set the file contents into cache manually.\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        const previousContents = fileContents.get(fileName);\n        const contentsChanged = previousContents !== contents;\n        if (contentsChanged) {\n          fileContents.set(fileName, contents);\n        }\n\n        // Add to `rootFiles` when discovered by compiler for the first time.\n        let addedToRootFileNames = false;\n        if (\n          !rootFileNames.has(fileName) &&\n          !isFileKnownToBeInternal(fileName)\n        ) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          addedToRootFileNames = true;\n        }\n\n        // Update program when file changes.\n        if (addedToRootFileNames || contentsChanged) {\n          builderProgram = ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            builderProgram,\n            config.errors,\n            config.projectReferences\n          );\n        }\n      };\n\n      getOutput = (code: string, fileName: string) => {\n        let outText = '';\n        let outMap = '';\n\n        updateMemoryCache(code, fileName);\n\n        const sourceFile = builderProgram.getSourceFile(fileName);\n        if (!sourceFile)\n          throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const program = builderProgram.getProgram();\n        const diagnostics = ts.getPreEmitDiagnostics(program, sourceFile);\n        const diagnosticList = filterDiagnostics(\n          diagnostics,\n          diagnosticFilters\n        );\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        const result = builderProgram.emit(\n          sourceFile,\n          (path, file, writeByteOrderMark) => {\n            if (path.endsWith('.map')) {\n              outMap = file;\n            } else {\n              outText = file;\n            }\n\n            if (options.emit) sys.writeFile(path, file, writeByteOrderMark);\n          },\n          undefined,\n          undefined,\n          customTransformers\n        );\n\n        if (result.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring files that cannot be compiled.\n        if (outText === '') {\n          if (program.isSourceFileFromExternalLibrary(sourceFile)) {\n            throw new TypeError(\n              `Unable to compile file from external library: ${relative(\n                cwd,\n                fileName\n              )}`\n            );\n          }\n\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [outText, outMap, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const sourceFile = builderProgram.getSourceFile(normalizedFileName);\n        if (!sourceFile)\n          throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const node = getTokenAtPosition(ts, sourceFile, position);\n        const checker = builderProgram.getProgram().getTypeChecker();\n        const symbol = checker.getSymbolAtLocation(node);\n\n        if (!symbol) return { name: '', comment: '' };\n\n        const type = checker.getTypeOfSymbolAtLocation(symbol, node);\n        const signatures = [\n          ...type.getConstructSignatures(),\n          ...type.getCallSignatures(),\n        ];\n\n        return {\n          name: signatures.length\n            ? signatures.map((x) => checker.signatureToString(x)).join('\\n')\n            : checker.typeToString(type),\n          comment: ts.displayPartsToString(\n            symbol ? symbol.getDocumentationComment(checker) : []\n          ),\n        };\n      };\n\n      // Write `.tsbuildinfo` when `--build` is enabled.\n      if (options.emit && config.options.incremental) {\n        process.on('exit', () => {\n          // Emits `.tsbuildinfo` to filesystem.\n          (builderProgram.getProgram() as any).emitBuildInfo();\n        });\n      }\n    }\n  } else {\n    getTypeInfo = () => {\n      throw new TypeError(\n        'Type information is unavailable in \"--transpile-only\"'\n      );\n    };\n  }\n\n  function createTranspileOnlyGetOutputFunction(\n    overrideModuleType?: _ts.ModuleKind,\n    nodeModuleEmitKind?: NodeModuleEmitKind\n  ): GetOutputFunction {\n    const compilerOptions = { ...config.options };\n    if (overrideModuleType !== undefined)\n      compilerOptions.module = overrideModuleType;\n    let customTranspiler = createTranspiler?.(\n      compilerOptions,\n      nodeModuleEmitKind\n    );\n    let tsTranspileModule = versionGteLt(ts.version, '4.7.0')\n      ? createTsTranspileModule(ts, {\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        })\n      : undefined;\n    return (code: string, fileName: string): SourceOutput => {\n      let result: _ts.TranspileOutput;\n      if (customTranspiler) {\n        result = customTranspiler.transpile(code, {\n          fileName,\n        });\n      } else if (tsTranspileModule) {\n        result = tsTranspileModule(\n          code,\n          {\n            fileName,\n          },\n          nodeModuleEmitKind === 'nodeesm' ? 'module' : 'commonjs'\n        );\n      } else {\n        result = ts.transpileModule(code, {\n          fileName,\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        });\n      }\n\n      const diagnosticList = filterDiagnostics(\n        result.diagnostics || [],\n        diagnosticFilters\n      );\n      if (diagnosticList.length) reportTSError(diagnosticList);\n\n      return [result.outputText, result.sourceMapText as string, false];\n    };\n  }\n\n  // When true, these mean that a `moduleType` override will cause a different emit\n  // than the TypeScript compiler, so we *must* overwrite the emit.\n  const shouldOverwriteEmitWhenForcingCommonJS =\n    config.options.module !== ts.ModuleKind.CommonJS;\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const shouldOverwriteEmitWhenForcingEsm = !(\n    config.options.module === ts.ModuleKind.ES2015 ||\n    (ts.ModuleKind.ES2020 && config.options.module === ts.ModuleKind.ES2020) ||\n    (ts.ModuleKind.ES2022 && config.options.module === ts.ModuleKind.ES2022) ||\n    config.options.module === ts.ModuleKind.ESNext\n  );\n  /**\n   * node16 or nodenext\n   * [MUST_UPDATE_FOR_NEW_MODULEKIND]\n   */\n  const isNodeModuleType =\n    (ts.ModuleKind.Node16 && config.options.module === ts.ModuleKind.Node16) ||\n    (ts.ModuleKind.NodeNext &&\n      config.options.module === ts.ModuleKind.NodeNext);\n  const getOutputForceCommonJS = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.CommonJS\n  );\n  const getOutputForceNodeCommonJS = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.NodeNext,\n    'nodecjs'\n  );\n  const getOutputForceNodeESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.NodeNext,\n    'nodeesm'\n  );\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const getOutputForceESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.ES2022 || ts.ModuleKind.ES2020 || ts.ModuleKind.ES2015\n  );\n  const getOutputTranspileOnly = createTranspileOnlyGetOutputFunction();\n\n  // Create a simple TypeScript compiler proxy.\n  function compile(code: string, fileName: string, lineOffset = 0) {\n    const normalizedFileName = normalizeSlashes(fileName);\n    const classification =\n      moduleTypeClassifier.classifyModuleByModuleTypeOverrides(\n        normalizedFileName\n      );\n    let value: string | undefined = '';\n    let sourceMap: string | undefined = '';\n    let emitSkipped = true;\n    if (getOutput) {\n      // Must always call normal getOutput to throw typechecking errors\n      [value, sourceMap, emitSkipped] = getOutput(code, normalizedFileName);\n    }\n    // If module classification contradicts the above, call the relevant transpiler\n    if (\n      classification.moduleType === 'cjs' &&\n      (shouldOverwriteEmitWhenForcingCommonJS || emitSkipped)\n    ) {\n      [value, sourceMap] = getOutputForceCommonJS(code, normalizedFileName);\n    } else if (\n      classification.moduleType === 'esm' &&\n      (shouldOverwriteEmitWhenForcingEsm || emitSkipped)\n    ) {\n      [value, sourceMap] = getOutputForceESM(code, normalizedFileName);\n    } else if (emitSkipped) {\n      // Happens when ts compiler skips emit or in transpileOnly mode\n      const classification = classifyModule(fileName, isNodeModuleType);\n      [value, sourceMap] =\n        classification === 'nodecjs'\n          ? getOutputForceNodeCommonJS(code, normalizedFileName)\n          : classification === 'nodeesm'\n          ? getOutputForceNodeESM(code, normalizedFileName)\n          : classification === 'cjs'\n          ? getOutputForceCommonJS(code, normalizedFileName)\n          : classification === 'esm'\n          ? getOutputForceESM(code, normalizedFileName)\n          : getOutputTranspileOnly(code, normalizedFileName);\n    }\n    const output = updateOutput(\n      value!,\n      normalizedFileName,\n      sourceMap!,\n      getEmitExtension\n    );\n    outputCache.set(normalizedFileName, { content: output });\n    return output;\n  }\n\n  let active = true;\n  const enabled = (enabled?: boolean) =>\n    enabled === undefined ? active : (active = !!enabled);\n  const ignored = (fileName: string) => {\n    if (!active) return true;\n    const ext = extname(fileName);\n    if (extensions.compiled.includes(ext)) {\n      return !isScoped(fileName) || shouldIgnore(fileName);\n    }\n    return true;\n  };\n\n  function addDiagnosticFilter(filter: DiagnosticFilter) {\n    diagnosticFilters.push({\n      ...filter,\n      filenamesAbsolute: filter.filenamesAbsolute.map((f) =>\n        normalizeSlashes(f)\n      ),\n    });\n  }\n\n  const getNodeEsmResolver = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-resolve') as typeof _nodeInternalModulesEsmResolve\n    ).createResolve({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      tsNodeExperimentalSpecifierResolution:\n        options.experimentalSpecifierResolution,\n    })\n  );\n  const getNodeEsmGetFormat = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-get_format') as typeof _nodeInternalModulesEsmGetFormat\n    ).createGetFormat(\n      options.experimentalSpecifierResolution,\n      getNodeEsmResolver()\n    )\n  );\n  const getNodeCjsLoader = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader\n    ).createCjsLoader({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      nodeEsmResolver: getNodeEsmResolver(),\n    })\n  );\n\n  return {\n    [TS_NODE_SERVICE_BRAND]: true,\n    ts,\n    compilerPath: compiler,\n    config,\n    compile,\n    getTypeInfo,\n    ignored,\n    enabled,\n    options,\n    configFilePath,\n    moduleTypeClassifier,\n    shouldReplAwait,\n    addDiagnosticFilter,\n    installSourceMapSupport,\n    enableExperimentalEsmLoaderInterop,\n    transpileOnly,\n    projectLocalResolveHelper,\n    getNodeEsmResolver,\n    getNodeEsmGetFormat,\n    getNodeCjsLoader,\n    extensions,\n  };\n}\n\n/**\n * Check if the filename should be ignored.\n */\nfunction createIgnore(ignoreBaseDir: string, ignore: RegExp[]) {\n  return (fileName: string) => {\n    const relname = relative(ignoreBaseDir, fileName);\n    const path = normalizeSlashes(relname);\n\n    return ignore.some((x) => x.test(path));\n  };\n}\n\n/**\n * Register the extensions to support when importing files.\n */\nfunction registerExtensions(\n  preferTsExts: boolean | null | undefined,\n  extensions: string[],\n  service: Service,\n  originalJsHandler: (m: NodeModule, filename: string) => any\n) {\n  const exts = new Set(extensions);\n  // Can't add these extensions cuz would allow omitting file extension; node requires ext for .cjs and .mjs\n  // Unless they're already registered by something else (nyc does this):\n  // then we *must* hook them or else our transformer will not be called.\n  for (const cannotAdd of ['.mts', '.cts', '.mjs', '.cjs']) {\n    if (exts.has(cannotAdd) && !hasOwnProperty(require.extensions, cannotAdd)) {\n      // Unrecognized file exts can be transformed via the `.js` handler.\n      exts.add('.js');\n      exts.delete(cannotAdd);\n    }\n  }\n\n  // Register new extensions.\n  for (const ext of exts) {\n    registerExtension(ext, service, originalJsHandler);\n  }\n\n  if (preferTsExts) {\n    const preferredExtensions = new Set([\n      ...exts,\n      ...Object.keys(require.extensions),\n    ]);\n\n    // Re-sort iteration order of Object.keys()\n    for (const ext of preferredExtensions) {\n      const old = Object.getOwnPropertyDescriptor(require.extensions, ext);\n      delete require.extensions[ext];\n      Object.defineProperty(require.extensions, ext, old!);\n    }\n  }\n}\n\n/**\n * Register the extension for node.\n */\nfunction registerExtension(\n  ext: string,\n  service: Service,\n  originalHandler: (m: NodeModule, filename: string) => any\n) {\n  const old = require.extensions[ext] || originalHandler;\n\n  require.extensions[ext] = function (m: any, filename) {\n    if (service.ignored(filename)) return old(m, filename);\n\n    assertScriptCanLoadAsCJS(service, m, filename);\n\n    const _compile = m._compile;\n\n    m._compile = function (code: string, fileName: string) {\n      debug('module._compile', fileName);\n\n      const result = service.compile(code, fileName);\n      return _compile.call(this, result, fileName);\n    };\n\n    return old(m, filename);\n  };\n}\n\n/**\n * Internal source output.\n */\ntype SourceOutput = [string, string, false] | [undefined, undefined, true];\n\n/**\n * Update the output remapping the source map.\n */\nfunction updateOutput(\n  outputText: string,\n  fileName: string,\n  sourceMap: string,\n  getEmitExtension: (fileName: string) => string\n) {\n  const base64Map = Buffer.from(\n    updateSourceMap(sourceMap, fileName),\n    'utf8'\n  ).toString('base64');\n  const sourceMapContent = `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64Map}`;\n  // Expected form: `//# sourceMappingURL=foo bar.js.map` or `//# sourceMappingURL=foo%20bar.js.map` for input file \"foo bar.tsx\"\n  // Percent-encoding behavior added in TS 4.1.1: https://github.com/microsoft/TypeScript/issues/40951\n  const prefix = '//# sourceMappingURL=';\n  const prefixLength = prefix.length;\n  const baseName = /*foo.tsx*/ basename(fileName);\n  const extName = /*.tsx*/ extname(fileName);\n  const extension = /*.js*/ getEmitExtension(fileName);\n  const sourcemapFilename =\n    baseName.slice(0, -extName.length) + extension + '.map';\n  const sourceMapLengthWithoutPercentEncoding =\n    prefixLength + sourcemapFilename.length;\n  /*\n   * Only rewrite if existing directive exists at the location we expect, to support:\n   *   a) compilers that do not append a sourcemap directive\n   *   b) situations where we did the math wrong\n   *     Not ideal, but appending our sourcemap *after* a pre-existing sourcemap still overrides, so the end-user is happy.\n   */\n  if (\n    outputText.substr(-sourceMapLengthWithoutPercentEncoding, prefixLength) ===\n    prefix\n  ) {\n    return (\n      outputText.slice(0, -sourceMapLengthWithoutPercentEncoding) +\n      sourceMapContent\n    );\n  }\n  // If anyone asks why we're not using URL, the URL equivalent is: `u = new URL('http://d'); u.pathname = \"/\" + sourcemapFilename; return u.pathname.slice(1);\n  const sourceMapLengthWithPercentEncoding =\n    prefixLength + encodeURI(sourcemapFilename).length;\n  if (\n    outputText.substr(-sourceMapLengthWithPercentEncoding, prefixLength) ===\n    prefix\n  ) {\n    return (\n      outputText.slice(0, -sourceMapLengthWithPercentEncoding) +\n      sourceMapContent\n    );\n  }\n\n  return `${outputText}\\n${sourceMapContent}`;\n}\n\n/**\n * Update the source map contents for improved output.\n */\nfunction updateSourceMap(sourceMapText: string, fileName: string) {\n  const sourceMap = JSON.parse(sourceMapText);\n  sourceMap.file = fileName;\n  sourceMap.sources = [fileName];\n  delete sourceMap.sourceRoot;\n  return JSON.stringify(sourceMap);\n}\n\n/**\n * Filter diagnostics.\n */\nfunction filterDiagnostics(\n  diagnostics: readonly _ts.Diagnostic[],\n  filters: DiagnosticFilter[]\n) {\n  return diagnostics.filter((d) =>\n    filters.every(\n      (f) =>\n        (!f.appliesToAllFiles &&\n          f.filenamesAbsolute.indexOf(d.file?.fileName!) === -1) ||\n        f.diagnosticsIgnored.indexOf(d.code) === -1\n    )\n  );\n}\n\n/**\n * Get token at file position.\n *\n * Reference: https://github.com/microsoft/TypeScript/blob/fcd9334f57d85b73dd66ad2d21c02e84822f4841/src/services/utilities.ts#L705-L731\n */\nfunction getTokenAtPosition(\n  ts: TSCommon,\n  sourceFile: _ts.SourceFile,\n  position: number\n): _ts.Node {\n  let current: _ts.Node = sourceFile;\n\n  outer: while (true) {\n    for (const child of current.getChildren(sourceFile)) {\n      const start = child.getFullStart();\n      if (start > position) break;\n\n      const end = child.getEnd();\n      if (position <= end) {\n        current = child;\n        continue outer;\n      }\n    }\n\n    return current;\n  }\n}\n\n/**\n * Create an implementation of node's ESM loader hooks.\n *\n * This may be useful if you\n * want to wrap or compose the loader hooks to add additional functionality or\n * combine with another loader.\n *\n * Node changed the hooks API, so there are two possible APIs.  This function\n * detects your node version and returns the appropriate API.\n *\n * @category ESM Loader\n */\nexport const createEsmHooks: typeof createEsmHooksFn = (\n  tsNodeService: Service\n) => (require('./esm') as typeof import('./esm')).createEsmHooks(tsNodeService);\n\n/**\n * When using `module: nodenext` or `module: node12`, there are two possible styles of emit depending in file extension or package.json \"type\":\n *\n * - CommonJS with dynamic imports preserved (not transformed into `require()` calls)\n * - ECMAScript modules with `import foo = require()` transformed into `require = createRequire(); const foo = require()`\n */\nexport type NodeModuleEmitKind = 'nodeesm' | 'nodecjs';\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/util.js":{"lineLengths":[13,7,62,348,35,31,31,16,217,3,71,91,12,3,20,11,77,1,16,3,60,2,12,3,43,35,48,38,36,42,9,5,24,1,24,3,33,53,12,3,23,36,55,20,1,22,3,26,12,3,23,69,1,22,31,30,3,44,12,3,34,62,1,44,3,24,12,3,43,66,1,40,3,31,3,27,28,21,30,30,30,21,9,30,6,1,36,3,12,89,106,3,65,9,63,13,40,9,17,73,9,5,15,36,5,1,76,3,75,78,80,55,12,3,58,84,43,43,45,35,11,6,1,74,3,120,32,12,3,123,11,31,51,171,83,98,62,1,104,16,19,14,20,30,16,25,28,19,21,5,18,1,20,16,63,56,65,37,30,77,20,24,65,14,30,37,81,5,25,33,70,5,1,36,32],"data":{"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/util.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createRequire as nodeCreateRequire,\n  createRequireFromPath as nodeCreateRequireFromPath,\n} from 'module';\nimport type _createRequire from 'create-require';\nimport * as ynModule from 'yn';\nimport { dirname } from 'path';\n\n/** @internal */\nexport const createRequire =\n  nodeCreateRequire ??\n  nodeCreateRequireFromPath ??\n  (require('create-require') as typeof _createRequire);\n\n/**\n * Wrapper around yn module that returns `undefined` instead of `null`.\n * This is implemented by yn v4, but we're staying on v3 to avoid v4's node 10 requirement.\n * @internal\n */\nexport function yn(value: string | undefined) {\n  return ynModule(value) ?? undefined;\n}\n\n/**\n * Like `Object.assign`, but ignores `undefined` properties.\n *\n * @internal\n */\nexport function assign<T extends object>(\n  initialValue: T,\n  ...sources: Array<T>\n): T {\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      const value = (source as any)[key];\n      if (value !== undefined) (initialValue as any)[key] = value;\n    }\n  }\n  return initialValue;\n}\n\n/**\n * Split a string array of values\n * and remove empty strings from the resulting array.\n * @internal\n */\nexport function split(value: string | undefined) {\n  return typeof value === 'string'\n    ? value.split(/ *, */g).filter((v) => v !== '')\n    : undefined;\n}\n\n/**\n * Parse a string as JSON.\n * @internal\n */\nexport function parse(value: string | undefined): object | undefined {\n  return typeof value === 'string' ? JSON.parse(value) : undefined;\n}\n\nconst directorySeparator = '/';\nconst backslashRegExp = /\\\\/g;\n/**\n * Replace backslashes with forward slashes.\n * @internal\n */\nexport function normalizeSlashes(value: string): string {\n  return value.replace(backslashRegExp, directorySeparator);\n}\n\n/**\n * Safe `hasOwnProperty`\n * @internal\n */\nexport function hasOwnProperty(object: any, property: string): boolean {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * Cached fs operation wrapper.\n */\nexport function cachedLookup<T, R>(fn: (arg: T) => R): (arg: T) => R {\n  const cache = new Map<T, R>();\n\n  return (arg: T): R => {\n    if (!cache.has(arg)) {\n      const v = fn(arg);\n      cache.set(arg, v);\n      return v;\n    }\n    return cache.get(arg)!;\n  };\n}\n\n/**\n * @internal\n * Require something with v8-compile-cache, which should make subsequent requires faster.\n * Do lots of error-handling so that, worst case, we require without the cache, and users are not blocked.\n */\nexport function attemptRequireWithV8CompileCache(\n  requireFn: typeof require,\n  specifier: string\n) {\n  try {\n    const v8CC = (\n      require('v8-compile-cache-lib') as typeof import('v8-compile-cache-lib')\n    ).install();\n    try {\n      return requireFn(specifier);\n    } finally {\n      v8CC?.uninstall();\n    }\n  } catch (e) {\n    return requireFn(specifier);\n  }\n}\n\n/**\n * Helper to discover dependencies relative to a user's project, optionally\n * falling back to relative to ts-node.  This supports global installations of\n * ts-node, for example where someone does `#!/usr/bin/env -S ts-node --swc` and\n * we need to fallback to a global install of @swc/core\n * @internal\n */\nexport function createProjectLocalResolveHelper(localDirectory: string) {\n  return function projectLocalResolveHelper(\n    specifier: string,\n    fallbackToTsNodeRelative: boolean\n  ) {\n    return require.resolve(specifier, {\n      paths: fallbackToTsNodeRelative\n        ? [localDirectory, __dirname]\n        : [localDirectory],\n    });\n  };\n}\n/** @internal */\nexport type ProjectLocalResolveHelper = ReturnType<\n  typeof createProjectLocalResolveHelper\n>;\n\n/**\n * Used as a reminder of all the factors we must consider when finding project-local dependencies and when a config file\n * on disk may or may not exist.\n * @internal\n */\nexport function getBasePathForProjectLocalDependencyResolution(\n  configFilePath: string | undefined,\n  projectSearchDirOption: string | undefined,\n  projectOption: string | undefined,\n  cwdOption: string\n) {\n  if (configFilePath != null) return dirname(configFilePath);\n  return projectSearchDirOption ?? projectOption ?? cwdOption;\n  // TODO technically breaks if projectOption is path to a file, not a directory,\n  // and we attempt to resolve relative specifiers.  By the time we resolve relative specifiers,\n  // should have configFilePath, so not reach this codepath.\n}\n\n/** @internal */\nexport function once<Fn extends (...args: any[]) => any>(fn: Fn) {\n  let value: ReturnType<Fn>;\n  let ran = false;\n  function onceFn(...args: Parameters<Fn>): ReturnType<Fn> {\n    if (ran) return value;\n    value = fn(...args);\n    ran = true;\n    return value;\n  }\n  return onceFn;\n}\n\n/** @internal */\nexport function versionGteLt(\n  version: string,\n  gteRequirement: string,\n  ltRequirement?: string\n) {\n  const [major, minor, patch, extra] = parse(version);\n  const [gteMajor, gteMinor, gtePatch] = parse(gteRequirement);\n  const isGte =\n    major > gteMajor ||\n    (major === gteMajor &&\n      (minor > gteMinor || (minor === gteMinor && patch >= gtePatch)));\n  let isLt = true;\n  if (ltRequirement) {\n    const [ltMajor, ltMinor, ltPatch] = parse(ltRequirement);\n    isLt =\n      major < ltMajor ||\n      (major === ltMajor &&\n        (minor < ltMinor || (minor === ltMinor && patch < ltPatch)));\n  }\n  return isGte && isLt;\n\n  function parse(requirement: string) {\n    return requirement.split(/[\\.-]/).map((s) => parseInt(s, 10));\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/configuration.js":{"lineLengths":[13,62,179,31,35,49,43,33,3,86,3,34,20,27,24,23,18,23,2,2,61,3,32,58,30,34,36,41,41,46,53,46,52,5,105,46,55,5,18,1,16,40,27,222,111,55,157,88,74,115,127,23,53,38,6,54,97,78,25,162,148,5,12,16,15,31,24,23,12,17,6,1,46,3,74,54,2,79,73,2,12,3,45,19,59,27,41,23,35,130,206,49,23,22,63,71,68,9,14,77,9,29,57,74,30,40,26,84,38,35,28,39,87,54,44,22,17,40,72,34,30,33,56,19,38,26,96,31,56,29,80,35,60,36,28,39,71,54,44,22,17,55,26,69,13,52,9,5,68,41,31,55,64,92,100,30,84,122,99,9,31,79,9,69,34,51,9,41,50,9,39,48,9,34,43,9,63,5,36,173,97,62,75,19,11,89,28,10,45,47,57,42,38,28,19,38,49,47,30,35,55,30,77,19,17,63,70,63,68,45,12,23,28,34,24,6,1,32,3,78,59,12,3,55,63,38,28,1,56,48,98,75,24,1,16,33,75,1,36,3,96,26,3,60,27,52,365,37,17,21,24,13,30,14,15,26,17,21,15,16,19,22,18,19,14,17,20,12,29,12,40,39,6,93,38,35,65,1,16,46,3,98,68,12,3,76,49,41,26,22,31,91,12,57,5,48,70,72,43,69,75,132,174,27,67,1,50,41],"data":{"version":3,"file":"configuration.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/configuration.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve, dirname, join } from 'path';\nimport type * as _ts from 'typescript';\nimport {\n  CreateOptions,\n  DEFAULTS,\n  OptionBasePaths,\n  RegisterOptions,\n  TSCommon,\n  TsConfigOptions,\n} from './index';\nimport type { TSInternal } from './ts-compiler-types';\nimport { createTsInternals } from './ts-internals';\nimport { getDefaultTsconfigJsonForNodeVersion } from './tsconfigs';\nimport {\n  assign,\n  attemptRequireWithV8CompileCache,\n  createProjectLocalResolveHelper,\n  getBasePathForProjectLocalDependencyResolution,\n} from './util';\n\n/**\n * TypeScript compiler option values required by `ts-node` which cannot be overridden.\n */\nconst TS_NODE_COMPILER_OPTIONS = {\n  sourceMap: true,\n  inlineSourceMap: false,\n  inlineSources: true,\n  declaration: false,\n  noEmit: false,\n  outDir: '.ts-node',\n};\n\n/*\n * Do post-processing on config options to support `ts-node`.\n */\nfunction fixConfig(ts: TSCommon, config: _ts.ParsedCommandLine) {\n  // Delete options that *should not* be passed through.\n  delete config.options.out;\n  delete config.options.outFile;\n  delete config.options.composite;\n  delete config.options.declarationDir;\n  delete config.options.declarationMap;\n  delete config.options.emitDeclarationOnly;\n\n  // Target ES5 output by default (instead of ES3).\n  if (config.options.target === undefined) {\n    config.options.target = ts.ScriptTarget.ES5;\n  }\n\n  // Target CommonJS modules by default (instead of magically switching to ES6 when the target is ES6).\n  if (config.options.module === undefined) {\n    config.options.module = ts.ModuleKind.CommonJS;\n  }\n\n  return config;\n}\n\n/** @internal */\nexport function findAndReadConfig(rawOptions: CreateOptions) {\n  const cwd = resolve(\n    rawOptions.cwd ?? rawOptions.dir ?? DEFAULTS.cwd ?? process.cwd()\n  );\n  const compilerName = rawOptions.compiler ?? DEFAULTS.compiler;\n\n  // Compute minimum options to read the config file.\n  let projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n    undefined,\n    rawOptions.projectSearchDir,\n    rawOptions.project,\n    cwd\n  );\n  let { compiler, ts } = resolveAndLoadCompiler(\n    compilerName,\n    projectLocalResolveDir\n  );\n\n  // Read config file and merge new options between env and CLI options.\n  const { configFilePath, config, tsNodeOptionsFromTsconfig, optionBasePaths } =\n    readConfig(cwd, ts, rawOptions);\n\n  const options = assign<RegisterOptions>(\n    {},\n    DEFAULTS,\n    tsNodeOptionsFromTsconfig || {},\n    { optionBasePaths },\n    rawOptions\n  );\n  options.require = [\n    ...(tsNodeOptionsFromTsconfig.require || []),\n    ...(rawOptions.require || []),\n  ];\n\n  // Re-resolve the compiler in case it has changed.\n  // Compiler is loaded relative to tsconfig.json, so tsconfig discovery may cause us to load a\n  // different compiler than we did above, even if the name has not changed.\n  if (configFilePath) {\n    projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n      configFilePath,\n      rawOptions.projectSearchDir,\n      rawOptions.project,\n      cwd\n    );\n    ({ compiler } = resolveCompiler(\n      options.compiler,\n      optionBasePaths.compiler ?? projectLocalResolveDir\n    ));\n  }\n\n  return {\n    options,\n    config,\n    projectLocalResolveDir,\n    optionBasePaths,\n    configFilePath,\n    cwd,\n    compiler,\n  };\n}\n\n/**\n * Load TypeScript configuration. Returns the parsed TypeScript config and\n * any `ts-node` options specified in the config file.\n *\n * Even when a tsconfig.json is not loaded, this function still handles merging\n * compilerOptions from various sources: API, environment variables, etc.\n *\n * @internal\n */\nexport function readConfig(\n  cwd: string,\n  ts: TSCommon,\n  rawApiOptions: CreateOptions\n): {\n  /**\n   * Path of tsconfig file if one was loaded\n   */\n  configFilePath: string | undefined;\n  /**\n   * Parsed TypeScript configuration with compilerOptions merged from all other sources (env vars, etc)\n   */\n  config: _ts.ParsedCommandLine;\n  /**\n   * ts-node options pulled from `tsconfig.json`, NOT merged with any other sources.  Merging must happen outside\n   * this function.\n   */\n  tsNodeOptionsFromTsconfig: TsConfigOptions;\n  optionBasePaths: OptionBasePaths;\n} {\n  // Ordered [a, b, c] where config a extends b extends c\n  const configChain: Array<{\n    config: any;\n    basePath: string;\n    configPath: string;\n  }> = [];\n  let config: any = { compilerOptions: {} };\n  let basePath = cwd;\n  let configFilePath: string | undefined = undefined;\n  const projectSearchDir = resolve(cwd, rawApiOptions.projectSearchDir ?? cwd);\n\n  const {\n    fileExists = ts.sys.fileExists,\n    readFile = ts.sys.readFile,\n    skipProject = DEFAULTS.skipProject,\n    project = DEFAULTS.project,\n    tsTrace = DEFAULTS.tsTrace,\n  } = rawApiOptions;\n\n  // Read project configuration when available.\n  if (!skipProject) {\n    if (project) {\n      const resolved = resolve(cwd, project);\n      const nested = join(resolved, 'tsconfig.json');\n      configFilePath = fileExists(nested) ? nested : resolved;\n    } else {\n      configFilePath = ts.findConfigFile(projectSearchDir, fileExists);\n    }\n\n    if (configFilePath) {\n      let pathToNextConfigInChain = configFilePath;\n      const tsInternals = createTsInternals(ts);\n      const errors: Array<_ts.Diagnostic> = [];\n\n      // Follow chain of \"extends\"\n      while (true) {\n        const result = ts.readConfigFile(pathToNextConfigInChain, readFile);\n\n        // Return diagnostics.\n        if (result.error) {\n          return {\n            configFilePath,\n            config: { errors: [result.error], fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n\n        const c = result.config;\n        const bp = dirname(pathToNextConfigInChain);\n        configChain.push({\n          config: c,\n          basePath: bp,\n          configPath: pathToNextConfigInChain,\n        });\n\n        if (c.extends == null) break;\n        const resolvedExtendedConfigPath = tsInternals.getExtendsConfigPath(\n          c.extends,\n          {\n            fileExists,\n            readDirectory: ts.sys.readDirectory,\n            readFile,\n            useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n            trace: tsTrace,\n          },\n          bp,\n          errors,\n          (ts as unknown as TSInternal).createCompilerDiagnostic\n        );\n        if (errors.length) {\n          return {\n            configFilePath,\n            config: { errors, fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n        if (resolvedExtendedConfigPath == null) break;\n        pathToNextConfigInChain = resolvedExtendedConfigPath;\n      }\n\n      ({ config, basePath } = configChain[0]);\n    }\n  }\n\n  // Merge and fix ts-node options that come from tsconfig.json(s)\n  const tsNodeOptionsFromTsconfig: TsConfigOptions = {};\n  const optionBasePaths: OptionBasePaths = {};\n  for (let i = configChain.length - 1; i >= 0; i--) {\n    const { config, basePath, configPath } = configChain[i];\n    const options = filterRecognizedTsConfigTsNodeOptions(\n      config['ts-node']\n    ).recognized;\n\n    // Some options are relative to the config file, so must be converted to absolute paths here\n    if (options.require) {\n      // Modules are found relative to the tsconfig file, not the `dir` option\n      const tsconfigRelativeResolver = createProjectLocalResolveHelper(\n        dirname(configPath)\n      );\n      options.require = options.require.map((path: string) =>\n        tsconfigRelativeResolver(path, false)\n      );\n    }\n    if (options.scopeDir) {\n      options.scopeDir = resolve(basePath, options.scopeDir!);\n    }\n\n    // Downstream code uses the basePath; we do not do that here.\n    if (options.moduleTypes) {\n      optionBasePaths.moduleTypes = basePath;\n    }\n    if (options.transpiler != null) {\n      optionBasePaths.transpiler = basePath;\n    }\n    if (options.compiler != null) {\n      optionBasePaths.compiler = basePath;\n    }\n    if (options.swc != null) {\n      optionBasePaths.swc = basePath;\n    }\n\n    assign(tsNodeOptionsFromTsconfig, options);\n  }\n\n  // Remove resolution of \"files\".\n  const files =\n    rawApiOptions.files ?? tsNodeOptionsFromTsconfig.files ?? DEFAULTS.files;\n\n  // Only if a config file is *not* loaded, load an implicit configuration from @tsconfig/bases\n  const skipDefaultCompilerOptions = configFilePath != null;\n  const defaultCompilerOptionsForNodeVersion = skipDefaultCompilerOptions\n    ? undefined\n    : {\n        ...getDefaultTsconfigJsonForNodeVersion(ts).compilerOptions,\n        types: ['node'],\n      };\n\n  // Merge compilerOptions from all sources\n  config.compilerOptions = Object.assign(\n    {},\n    // automatically-applied options from @tsconfig/bases\n    defaultCompilerOptionsForNodeVersion,\n    // tsconfig.json \"compilerOptions\"\n    config.compilerOptions,\n    // from env var\n    DEFAULTS.compilerOptions,\n    // tsconfig.json \"ts-node\": \"compilerOptions\"\n    tsNodeOptionsFromTsconfig.compilerOptions,\n    // passed programmatically\n    rawApiOptions.compilerOptions,\n    // overrides required by ts-node, cannot be changed\n    TS_NODE_COMPILER_OPTIONS\n  );\n\n  const fixedConfig = fixConfig(\n    ts,\n    ts.parseJsonConfigFileContent(\n      config,\n      {\n        fileExists,\n        readFile,\n        // Only used for globbing \"files\", \"include\", \"exclude\"\n        // When `files` option disabled, we want to avoid the fs calls\n        readDirectory: files ? ts.sys.readDirectory : () => [],\n        useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n      },\n      basePath,\n      undefined,\n      configFilePath\n    )\n  );\n\n  return {\n    configFilePath,\n    config: fixedConfig,\n    tsNodeOptionsFromTsconfig,\n    optionBasePaths,\n  };\n}\n\n/**\n * Load the typescript compiler. It is required to load the tsconfig but might\n * be changed by the tsconfig, so we have to do this twice.\n * @internal\n */\nexport function resolveAndLoadCompiler(\n  name: string | undefined,\n  relativeToPath: string\n) {\n  const { compiler } = resolveCompiler(name, relativeToPath);\n  const ts = loadCompiler(compiler);\n  return { compiler, ts };\n}\n\nfunction resolveCompiler(name: string | undefined, relativeToPath: string) {\n  const projectLocalResolveHelper =\n    createProjectLocalResolveHelper(relativeToPath);\n  const compiler = projectLocalResolveHelper(name || 'typescript', true);\n  return { compiler };\n}\n\n/** @internal */\nexport function loadCompiler(compiler: string): TSCommon {\n  return attemptRequireWithV8CompileCache(require, compiler);\n}\n\n/**\n * Given the raw \"ts-node\" sub-object from a tsconfig, return an object with only the properties\n * recognized by \"ts-node\"\n */\nfunction filterRecognizedTsConfigTsNodeOptions(jsonObject: any): {\n  recognized: TsConfigOptions;\n  unrecognized: any;\n} {\n  if (jsonObject == null) return { recognized: {}, unrecognized: {} };\n  const {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    experimentalReplAwait,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n    ...unrecognized\n  } = jsonObject as TsConfigOptions;\n  const filteredTsConfigOptions = {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    experimentalReplAwait,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n  };\n  // Use the typechecker to make sure this implementation has the correct set of properties\n  const catchExtraneousProps: keyof TsConfigOptions =\n    null as any as keyof typeof filteredTsConfigOptions;\n  const catchMissingProps: keyof typeof filteredTsConfigOptions =\n    null as any as keyof TsConfigOptions;\n  return { recognized: filteredTsConfigOptions, unrecognized };\n}\n\n/** @internal */\nexport const ComputeAsCommonRootOfFiles = Symbol();\n\n/**\n * Some TS compiler options have defaults which are not provided by TS's config parsing functions.\n * This function centralizes the logic for computing those defaults.\n * @internal\n */\nexport function getTsConfigDefaults(\n  config: _ts.ParsedCommandLine,\n  basePath: string,\n  _files: string[] | undefined,\n  _include: string[] | undefined,\n  _exclude: string[] | undefined\n) {\n  const { composite = false } = config.options;\n  let rootDir: string | typeof ComputeAsCommonRootOfFiles =\n    config.options.rootDir!;\n  if (rootDir == null) {\n    if (composite) rootDir = basePath;\n    // Return this symbol to avoid computing from `files`, which would require fs calls\n    else rootDir = ComputeAsCommonRootOfFiles;\n  }\n  const { outDir = rootDir } = config.options;\n  // Docs are wrong: https://www.typescriptlang.org/tsconfig#include\n  // Docs say **, but it's actually **/*; compiler throws error for **\n  const include = _files ? [] : ['**/*'];\n  const files = _files ?? [];\n  // Docs are misleading: https://www.typescriptlang.org/tsconfig#exclude\n  // Docs say it excludes node_modules, bower_components, jspm_packages, but actually those are excluded via behavior of \"include\"\n  const exclude = _exclude ?? [outDir]; // TODO technically, outDir is absolute path, but exclude should be relative glob pattern?\n\n  // TODO compute baseUrl\n\n  return { rootDir, outDir, include, files, exclude, composite };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/ts-internals.js":{"lineLengths":[13,62,131,31,33,16,80,3,82,57,73,2,79,79,36,3,41,19,7,19,104,7,93,70,47,47,48,89,55,67,66,59,99,37,17,13,38,9,77,73,168,29,35,70,58,38,60,9,87,25,5,36,1,84,33,40,1,39,100,1,64,64,57,41,1,34,44,1,32,51,80,1,93,94,9,46,3,12,85,3,45,82,48,1,48,137,24,36,67,43,81,55,68,40,35,5,26,39,33,54,9,14,38,49,13,96,9,35,5,31,27,24,5,22,1,28,41,7,92,88,7,51,121,2,24,41,43,117,2,62,75,1,57,48,53,1,43,26,18,36,49,40,23,21,30,21,33,37,59,34,29,17,13,32,25,9,32,5,19,1,30,50,53,1,37,14,17,35,19,93,39,59,119,19,64,57,5,10,89,39,95,44,30,50,5,10,55,27,69,78,34,70,82,89,97,52,71,36,66,71,96,48,96,112,57,21,61,108,67,51,21,17,13,82,9,69,5,15,13,1,49,47,41,5,16,1,46,90,1,44,106,1,49,46,47,5,16,1,31,35,33,38,96,90,1,51,38,46,25,50,67,46,83,29,5,14,1,33,16,24,36,35,32,17,13,9,14,36,9,5,17,1,43,47,70,46,19,27,1,33,68,1,22,40,35,1,71,24,37,23,20,27,1,3,120,51,3,44,44,1,30,33,34,33,35,120,54,64,72,50,1,64,120,47,11,154,88,30,1,50,40],"data":{"version":3,"file":"ts-internals.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/ts-internals.ts"],"names":[],"mappings":"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","sourcesContent":["import { isAbsolute, resolve } from 'path';\nimport { cachedLookup, normalizeSlashes, versionGteLt } from './util';\nimport type * as _ts from 'typescript';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\n\n/** @internal */\nexport const createTsInternals = cachedLookup(createTsInternalsUncached);\n/**\n * Given a reference to the TS compiler, return some TS internal functions that we\n * could not or did not want to grab off the `ts` object.\n * These have been copy-pasted from TS's source and tweaked as necessary.\n *\n * NOTE: This factory returns *only* functions which need a reference to the TS\n * compiler.  Other functions do not need a reference to the TS compiler so are\n * exported directly from this file.\n */\nfunction createTsInternalsUncached(_ts: TSCommon) {\n  const ts = _ts as TSCommon & TSInternal;\n  /**\n   * Copied from:\n   * https://github.com/microsoft/TypeScript/blob/v4.3.2/src/compiler/commandLineParser.ts#L2821-L2846\n   */\n  function getExtendsConfigPath(\n    extendedConfig: string,\n    host: _ts.ParseConfigHost,\n    basePath: string,\n    errors: _ts.Push<_ts.Diagnostic>,\n    createDiagnostic: (\n      message: _ts.DiagnosticMessage,\n      arg1?: string\n    ) => _ts.Diagnostic\n  ) {\n    extendedConfig = normalizeSlashes(extendedConfig);\n    if (\n      isRootedDiskPath(extendedConfig) ||\n      startsWith(extendedConfig, './') ||\n      startsWith(extendedConfig, '../')\n    ) {\n      let extendedConfigPath = getNormalizedAbsolutePath(\n        extendedConfig,\n        basePath\n      );\n      if (\n        !host.fileExists(extendedConfigPath) &&\n        !endsWith(extendedConfigPath, ts.Extension.Json)\n      ) {\n        extendedConfigPath = `${extendedConfigPath}.json`;\n        if (!host.fileExists(extendedConfigPath)) {\n          errors.push(\n            createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig)\n          );\n          return undefined;\n        }\n      }\n      return extendedConfigPath;\n    }\n    // If the path isn't a rooted or relative path, resolve like a module\n    const tsGte5_3_0 = versionGteLt(ts.version, '5.3.0');\n    const resolved = ts.nodeModuleNameResolver(\n      extendedConfig,\n      combinePaths(basePath, 'tsconfig.json'),\n      { moduleResolution: ts.ModuleResolutionKind.NodeJs },\n      host,\n      /*cache*/ undefined,\n      /*projectRefs*/ undefined,\n      /*conditionsOrIsConfigLookup*/ tsGte5_3_0 ? undefined : true,\n      /*isConfigLookup*/ tsGte5_3_0 ? true : undefined\n    );\n    if (resolved.resolvedModule) {\n      return resolved.resolvedModule.resolvedFileName;\n    }\n    errors.push(\n      createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig)\n    );\n    return undefined;\n  }\n\n  return { getExtendsConfigPath };\n}\n\n// These functions have alternative implementation to avoid copying too much from TS\nfunction isRootedDiskPath(path: string) {\n  return isAbsolute(path);\n}\nfunction combinePaths(path: string, ...paths: (string | undefined)[]): string {\n  return normalizeSlashes(\n    resolve(path, ...(paths.filter((path) => path) as string[]))\n  );\n}\nfunction getNormalizedAbsolutePath(\n  fileName: string,\n  currentDirectory: string | undefined\n) {\n  return normalizeSlashes(\n    currentDirectory != null\n      ? resolve(currentDirectory!, fileName)\n      : resolve(fileName)\n  );\n}\n\nfunction startsWith(str: string, prefix: string): boolean {\n  return str.lastIndexOf(prefix, 0) === 0;\n}\n\nfunction endsWith(str: string, suffix: string): boolean {\n  const expectedPos = str.length - suffix.length;\n  return expectedPos >= 0 && str.indexOf(suffix, expectedPos) === expectedPos;\n}\n// Reserved characters, forces escaping of any non-word (or digit), non-whitespace character.\n// It may be inefficient (we could just match (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g), but this is future\n// proof.\nconst reservedCharacterPattern = /[^\\w\\s\\/]/g;\n\n/**\n * @internal\n * See also: getRegularExpressionForWildcard, which seems to do almost the same thing\n */\nexport function getPatternFromSpec(spec: string, basePath: string) {\n  const pattern = spec && getSubPatternFromSpec(spec, basePath, excludeMatcher);\n  return pattern && `^(${pattern})${'($|/)'}`;\n}\nfunction getSubPatternFromSpec(\n  spec: string,\n  basePath: string,\n  {\n    singleAsteriskRegexFragment,\n    doubleAsteriskRegexFragment,\n    replaceWildcardCharacter,\n  }: WildcardMatcher\n): string {\n  let subpattern = '';\n  let hasWrittenComponent = false;\n  const components = getNormalizedPathComponents(spec, basePath);\n  const lastComponent = last(components);\n\n  // getNormalizedPathComponents includes the separator for the root component.\n  // We need to remove to create our regex correctly.\n  components[0] = removeTrailingDirectorySeparator(components[0]);\n\n  if (isImplicitGlob(lastComponent)) {\n    components.push('**', '*');\n  }\n\n  let optionalCount = 0;\n  for (let component of components) {\n    if (component === '**') {\n      subpattern += doubleAsteriskRegexFragment;\n    } else {\n      if (hasWrittenComponent) {\n        subpattern += directorySeparator;\n      }\n      subpattern += component.replace(\n        reservedCharacterPattern,\n        replaceWildcardCharacter\n      );\n    }\n\n    hasWrittenComponent = true;\n  }\n\n  while (optionalCount > 0) {\n    subpattern += ')?';\n    optionalCount--;\n  }\n\n  return subpattern;\n}\ninterface WildcardMatcher {\n  singleAsteriskRegexFragment: string;\n  doubleAsteriskRegexFragment: string;\n  replaceWildcardCharacter: (match: string) => string;\n}\nconst directoriesMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  /**\n   * Regex for the ** wildcard. Matches any num of subdirectories. When used for including\n   * files or directories, does not match subdirectories that start with a . character\n   */\n  doubleAsteriskRegexFragment: `(/[^/.][^/]*)*?`,\n  replaceWildcardCharacter: (match) =>\n    replaceWildcardCharacter(\n      match,\n      directoriesMatcher.singleAsteriskRegexFragment\n    ),\n};\nconst excludeMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  doubleAsteriskRegexFragment: '(/.+?)?',\n  replaceWildcardCharacter: (match) =>\n    replaceWildcardCharacter(match, excludeMatcher.singleAsteriskRegexFragment),\n};\nfunction getNormalizedPathComponents(\n  path: string,\n  currentDirectory: string | undefined\n) {\n  return reducePathComponents(getPathComponents(path, currentDirectory));\n}\nfunction getPathComponents(path: string, currentDirectory = '') {\n  path = combinePaths(currentDirectory, path);\n  return pathComponents(path, getRootLength(path));\n}\nfunction reducePathComponents(components: readonly string[]) {\n  if (!some(components)) return [];\n  const reduced = [components[0]];\n  for (let i = 1; i < components.length; i++) {\n    const component = components[i];\n    if (!component) continue;\n    if (component === '.') continue;\n    if (component === '..') {\n      if (reduced.length > 1) {\n        if (reduced[reduced.length - 1] !== '..') {\n          reduced.pop();\n          continue;\n        }\n      } else if (reduced[0]) continue;\n    }\n    reduced.push(component);\n  }\n  return reduced;\n}\nfunction getRootLength(path: string) {\n  const rootLength = getEncodedRootLength(path);\n  return rootLength < 0 ? ~rootLength : rootLength;\n}\nfunction getEncodedRootLength(path: string): number {\n  if (!path) return 0;\n  const ch0 = path.charCodeAt(0);\n\n  // POSIX or UNC\n  if (ch0 === CharacterCodes.slash || ch0 === CharacterCodes.backslash) {\n    if (path.charCodeAt(1) !== ch0) return 1; // POSIX: \"/\" (or non-normalized \"\\\")\n\n    const p1 = path.indexOf(\n      ch0 === CharacterCodes.slash ? directorySeparator : altDirectorySeparator,\n      2\n    );\n    if (p1 < 0) return path.length; // UNC: \"//server\" or \"\\\\server\"\n\n    return p1 + 1; // UNC: \"//server/\" or \"\\\\server\\\"\n  }\n\n  // DOS\n  if (isVolumeCharacter(ch0) && path.charCodeAt(1) === CharacterCodes.colon) {\n    const ch2 = path.charCodeAt(2);\n    if (ch2 === CharacterCodes.slash || ch2 === CharacterCodes.backslash)\n      return 3; // DOS: \"c:/\" or \"c:\\\"\n    if (path.length === 2) return 2; // DOS: \"c:\" (but not \"c:d\")\n  }\n\n  // URL\n  const schemeEnd = path.indexOf(urlSchemeSeparator);\n  if (schemeEnd !== -1) {\n    const authorityStart = schemeEnd + urlSchemeSeparator.length;\n    const authorityEnd = path.indexOf(directorySeparator, authorityStart);\n    if (authorityEnd !== -1) {\n      // URL: \"file:///\", \"file://server/\", \"file://server/path\"\n      // For local \"file\" URLs, include the leading DOS volume (if present).\n      // Per https://www.ietf.org/rfc/rfc1738.txt, a host of \"\" or \"localhost\" is a\n      // special case interpreted as \"the machine from which the URL is being interpreted\".\n      const scheme = path.slice(0, schemeEnd);\n      const authority = path.slice(authorityStart, authorityEnd);\n      if (\n        scheme === 'file' &&\n        (authority === '' || authority === 'localhost') &&\n        isVolumeCharacter(path.charCodeAt(authorityEnd + 1))\n      ) {\n        const volumeSeparatorEnd = getFileUrlVolumeSeparatorEnd(\n          path,\n          authorityEnd + 2\n        );\n        if (volumeSeparatorEnd !== -1) {\n          if (path.charCodeAt(volumeSeparatorEnd) === CharacterCodes.slash) {\n            // URL: \"file:///c:/\", \"file://localhost/c:/\", \"file:///c%3a/\", \"file://localhost/c%3a/\"\n            return ~(volumeSeparatorEnd + 1);\n          }\n          if (volumeSeparatorEnd === path.length) {\n            // URL: \"file:///c:\", \"file://localhost/c:\", \"file:///c$3a\", \"file://localhost/c%3a\"\n            // but not \"file:///c:d\" or \"file:///c%3ad\"\n            return ~volumeSeparatorEnd;\n          }\n        }\n      }\n      return ~(authorityEnd + 1); // URL: \"file://server/\", \"http://server/\"\n    }\n    return ~path.length; // URL: \"file://server\", \"http://server\"\n  }\n\n  // relative\n  return 0;\n}\nfunction ensureTrailingDirectorySeparator(path: string) {\n  if (!hasTrailingDirectorySeparator(path)) {\n    return path + directorySeparator;\n  }\n\n  return path;\n}\nfunction hasTrailingDirectorySeparator(path: string) {\n  return (\n    path.length > 0 && isAnyDirectorySeparator(path.charCodeAt(path.length - 1))\n  );\n}\nfunction isAnyDirectorySeparator(charCode: number): boolean {\n  return (\n    charCode === CharacterCodes.slash || charCode === CharacterCodes.backslash\n  );\n}\nfunction removeTrailingDirectorySeparator(path: string) {\n  if (hasTrailingDirectorySeparator(path)) {\n    return path.substr(0, path.length - 1);\n  }\n\n  return path;\n}\nconst directorySeparator = '/';\nconst altDirectorySeparator = '\\\\';\nconst urlSchemeSeparator = '://';\nfunction isVolumeCharacter(charCode: number) {\n  return (\n    (charCode >= CharacterCodes.a && charCode <= CharacterCodes.z) ||\n    (charCode >= CharacterCodes.A && charCode <= CharacterCodes.Z)\n  );\n}\nfunction getFileUrlVolumeSeparatorEnd(url: string, start: number) {\n  const ch0 = url.charCodeAt(start);\n  if (ch0 === CharacterCodes.colon) return start + 1;\n  if (\n    ch0 === CharacterCodes.percent &&\n    url.charCodeAt(start + 1) === CharacterCodes._3\n  ) {\n    const ch2 = url.charCodeAt(start + 2);\n    if (ch2 === CharacterCodes.a || ch2 === CharacterCodes.A) return start + 3;\n  }\n  return -1;\n}\nfunction some<T>(array: readonly T[] | undefined): array is readonly T[];\nfunction some<T>(\n  array: readonly T[] | undefined,\n  predicate: (value: T) => boolean\n): boolean;\nfunction some<T>(\n  array: readonly T[] | undefined,\n  predicate?: (value: T) => boolean\n): boolean {\n  if (array) {\n    if (predicate) {\n      for (const v of array) {\n        if (predicate(v)) {\n          return true;\n        }\n      }\n    } else {\n      return array.length > 0;\n    }\n  }\n  return false;\n}\n/* @internal */\nconst enum CharacterCodes {\n  _3 = 0x33,\n  a = 0x61,\n  z = 0x7a,\n  A = 0x41,\n  Z = 0x5a,\n  asterisk = 0x2a, // *\n  backslash = 0x5c, // \\\n  colon = 0x3a, // :\n  percent = 0x25, // %\n  question = 0x3f, // ?\n  slash = 0x2f, // /\n}\nfunction pathComponents(path: string, rootLength: number) {\n  const root = path.substring(0, rootLength);\n  const rest = path.substring(rootLength).split(directorySeparator);\n  if (rest.length && !lastOrUndefined(rest)) rest.pop();\n  return [root, ...rest];\n}\nfunction lastOrUndefined<T>(array: readonly T[]): T | undefined {\n  return array.length === 0 ? undefined : array[array.length - 1];\n}\nfunction last<T>(array: readonly T[]): T {\n  // Debug.assert(array.length !== 0);\n  return array[array.length - 1];\n}\nfunction replaceWildcardCharacter(\n  match: string,\n  singleAsteriskRegexFragment: string\n) {\n  return match === '*'\n    ? singleAsteriskRegexFragment\n    : match === '?'\n    ? '[^/]'\n    : '\\\\' + match;\n}\n/**\n * An \"includes\" path \"foo\" is implicitly a glob \"foo/** /*\" (without the space) if its last component has no extension,\n * and does not contain any glob characters itself.\n */\nfunction isImplicitGlob(lastPathComponent: string): boolean {\n  return !/[.*?]/.test(lastPathComponent);\n}\n\nconst ts_ScriptTarget_ES5 = 1;\nconst ts_ScriptTarget_ES2022 = 9;\nconst ts_ScriptTarget_ESNext = 99;\nconst ts_ModuleKind_Node16 = 100;\nconst ts_ModuleKind_NodeNext = 199;\n// https://github.com/microsoft/TypeScript/blob/fc418a2e611c88cf9afa0115ff73490b2397d311/src/compiler/utilities.ts#L8761\nexport function getUseDefineForClassFields(compilerOptions: _ts.CompilerOptions): boolean {\n  return compilerOptions.useDefineForClassFields === undefined\n    ? getEmitScriptTarget(compilerOptions) >= ts_ScriptTarget_ES2022\n    : compilerOptions.useDefineForClassFields;\n}\n\n// https://github.com/microsoft/TypeScript/blob/fc418a2e611c88cf9afa0115ff73490b2397d311/src/compiler/utilities.ts#L8556\nexport function getEmitScriptTarget(compilerOptions: {\n  module?: _ts.CompilerOptions['module'];\n  target?: _ts.CompilerOptions['target'];\n}): _ts.ScriptTarget {\n  return (\n    compilerOptions.target ??\n    ((compilerOptions.module === ts_ModuleKind_Node16 && ts_ScriptTarget_ES2022) ||\n      (compilerOptions.module === ts_ModuleKind_NodeNext && ts_ScriptTarget_ESNext) ||\n      ts_ScriptTarget_ES5)\n  );\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/tsconfigs.js":{"lineLengths":[13,62,54,68,3,79,28,12,3,51,26,26,65,37,26,5,26,65,37,26,5,26,65,37,26,5,53,90,39,99,30,86,5,1,84,37],"data":{"version":3,"file":"tsconfigs.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/tsconfigs.ts"],"names":[],"mappings":";;;AAEA,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACpE;;;;GAIG;AACH,SAAgB,oCAAoC,CAAC,EAAY;IAC/D,MAAM,UAAU,GAAG,EAAuB,CAAC;IAC3C,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,OAAO,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAEjD,sFAAsF;IACtF,SAAS,gBAAgB,CAAC,MAKzB;QACC,OAAO,CACL,OAAQ,EAAE,CAAC,YAAoB,CAC7B,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,EAAE,CAC5C,KAAK,QAAQ;YACd,UAAU,CAAC,IAAI;YACf,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,IAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC1E,CAAC;IACJ,CAAC;AACH,CAAC;AA/BD,oFA+BC","sourcesContent":["import type { TSCommon, TSInternal } from './ts-compiler-types';\n\nconst nodeMajor = parseInt(process.versions.node.split('.')[0], 10);\n/**\n * return parsed JSON of the bundled @tsconfig/bases config appropriate for the\n * running version of nodejs\n * @internal\n */\nexport function getDefaultTsconfigJsonForNodeVersion(ts: TSCommon): any {\n  const tsInternal = ts as any as TSInternal;\n  if (nodeMajor >= 16) {\n    const config = require('@tsconfig/node16/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 14) {\n    const config = require('@tsconfig/node14/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 12) {\n    const config = require('@tsconfig/node12/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  return require('@tsconfig/node10/tsconfig.json');\n\n  // Verify that tsconfig target and lib options are compatible with TypeScript compiler\n  function configCompatible(config: {\n    compilerOptions: {\n      lib: string[];\n      target: string;\n    };\n  }) {\n    return (\n      typeof (ts.ScriptTarget as any)[\n        config.compilerOptions.target.toUpperCase()\n      ] === 'number' &&\n      tsInternal.libs &&\n      config.compilerOptions.lib.every((lib) => tsInternal.libs!.includes(lib))\n    );\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/module-type-classifier.js":{"lineLengths":[13,62,44,49,33,3,12,89,14,69,3,46,54,44,68,20,129,63,66,7,29,18,31,10,14,30,10,14,30,10,6,41,38,44,80,20,49,20,5,77,39,20,5,12,68,28,33,6,1,64,48,84,64,1,56,51,34,43,88,26,9,5,1,50],"data":{"version":3,"file":"module-type-classifier.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/module-type-classifier.ts"],"names":[],"mappings":";;;AACA,iDAAoD;AACpD,iCAAwD;AAwBxD;;;;;GAKG;AACH,SAAgB,0BAA0B,CACxC,OAAoC;IAEpC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAClD,MAAM,QAAQ,GACZ,SAAS,KAAK,SAAS;QACrB,CAAC,CAAC,IAAA,uBAAgB,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAChD,CAAC,CAAC,SAAS,CAAC;IAEhB,MAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,EAAE,CAAC,CAAC,GAAG,CACzD,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE;QACnB,MAAM,OAAO,GAAG,IAAA,uBAAgB,EAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO,EAAE,OAAO,EAAE,YAAY,CAAC,QAAS,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC;IAC7D,CAAC,CACF,CAAC;IAEF,MAAM,eAAe,GACnB;QACE,OAAO,EAAE;YACP,UAAU,EAAE,MAAM;SACnB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,KAAK;SAClB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IACJ,MAAM,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC;IAErC,kCAAkC;IAClC,SAAS,uBAAuB,CAAC,IAAY;QAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxE,IAAI,OAAO;YAAE,OAAO,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,cAAc,GAAG,IAAA,mBAAY,EAAC,uBAAuB,CAAC,CAAC;IAE7D,SAAS,kBAAkB,CAAC,IAAY;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,mCAAmC,EAAE,gBAAgB,CAAC,MAAM;YAC1D,CAAC,CAAC,cAAc;YAChB,CAAC,CAAC,kBAAkB;KACvB,CAAC;AACJ,CAAC;AAhDD,gEAgDC;AAED,SAAS,YAAY,CAAC,QAAgB,EAAE,aAAqB;IAC3D,MAAM,OAAO,GAAG,IAAA,iCAAkB,EAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC5D,OAAO,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC9D,CAAC;AAED,SAAS,aAAa,CACpB,OAAY,EACZ,UAA4B,EAC5B,SAAiB;IAEjB,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5C,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnC,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,SAAS,CAAC,EAAE;YAC5B,OAAO,MAAM,CAAC;SACf;KACF;AACH,CAAC","sourcesContent":["import type { ModuleTypeOverride, ModuleTypes } from '.';\nimport { getPatternFromSpec } from './ts-internals';\nimport { cachedLookup, normalizeSlashes } from './util';\n\n// Logic to support our `moduleTypes` option, which allows overriding node's default ESM / CJS\n// classification of `.js` files based on package.json `type` field.\n\n/**\n * Seperate internal type because `auto` is clearer than `package`, but changing\n * the public API is a breaking change.\n * @internal\n */\nexport type InternalModuleTypeOverride = 'cjs' | 'esm' | 'auto';\n/** @internal */\nexport interface ModuleTypeClassification {\n  moduleType: InternalModuleTypeOverride;\n}\n/** @internal */\nexport interface ModuleTypeClassifierOptions {\n  basePath?: string;\n  patterns?: ModuleTypes;\n}\n/** @internal */\nexport type ModuleTypeClassifier = ReturnType<\n  typeof createModuleTypeClassifier\n>;\n/**\n * @internal\n * May receive non-normalized options -- basePath and patterns -- and will normalize them\n * internally.\n * However, calls to `classifyModule` must pass pre-normalized paths!\n */\nexport function createModuleTypeClassifier(\n  options: ModuleTypeClassifierOptions\n) {\n  const { patterns, basePath: _basePath } = options;\n  const basePath =\n    _basePath !== undefined\n      ? normalizeSlashes(_basePath).replace(/\\/$/, '')\n      : undefined;\n\n  const patternTypePairs = Object.entries(patterns ?? []).map(\n    ([_pattern, type]) => {\n      const pattern = normalizeSlashes(_pattern);\n      return { pattern: parsePattern(basePath!, pattern), type };\n    }\n  );\n\n  const classifications: Record<ModuleTypeOverride, ModuleTypeClassification> =\n    {\n      package: {\n        moduleType: 'auto',\n      },\n      cjs: {\n        moduleType: 'cjs',\n      },\n      esm: {\n        moduleType: 'esm',\n      },\n    };\n  const auto = classifications.package;\n\n  // Passed path must be normalized!\n  function classifyModuleNonCached(path: string): ModuleTypeClassification {\n    const matched = matchPatterns(patternTypePairs, (_) => _.pattern, path);\n    if (matched) return classifications[matched.type];\n    return auto;\n  }\n\n  const classifyModule = cachedLookup(classifyModuleNonCached);\n\n  function classifyModuleAuto(path: String) {\n    return auto;\n  }\n\n  return {\n    classifyModuleByModuleTypeOverrides: patternTypePairs.length\n      ? classifyModule\n      : classifyModuleAuto,\n  };\n}\n\nfunction parsePattern(basePath: string, patternString: string): RegExp {\n  const pattern = getPatternFromSpec(patternString, basePath);\n  return pattern !== undefined ? new RegExp(pattern) : /(?:)/;\n}\n\nfunction matchPatterns<T>(\n  objects: T[],\n  getPattern: (t: T) => RegExp,\n  candidate: string\n): T | undefined {\n  for (let i = objects.length - 1; i >= 0; i--) {\n    const object = objects[i];\n    const pattern = getPattern(object);\n\n    if (pattern?.test(candidate)) {\n      return object;\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/resolver-functions.js":{"lineLengths":[13,62,41,31,3,12,95,3,42,116,108,45,84,38,96,124,138,70,40,51,17,27,18,5,78,53,55,5,47,62,5,48,52,5,7,77,7,53,52,43,19,48,55,36,53,49,55,53,60,53,60,60,60,59,9,54,57,9,6,6,12,73,123,7,153,51,23,45,136,28,158,76,65,84,26,83,120,207,43,34,21,17,13,33,52,13,34,11,6,84,113,117,40,52,9,19,6,181,10,86,62,62,42,71,37,27,84,40,35,59,171,82,142,45,21,107,17,99,47,95,57,93,46,38,55,17,13,49,68,13,50,11,6,12,27,60,39,32,37,6,1,58,46],"data":{"version":3,"file":"resolver-functions.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/resolver-functions.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve } from 'path';\nimport type { CreateOptions } from '.';\nimport type { Extensions } from './file-extensions';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport type { ProjectLocalResolveHelper } from './util';\n\n/**\n * @internal\n * In a factory because these are shared across both CompilerHost and LanguageService codepaths\n */\nexport function createResolverFunctions(kwargs: {\n  ts: TSCommon;\n  host: TSCommon.ModuleResolutionHost;\n  cwd: string;\n  getCanonicalFileName: (filename: string) => string;\n  config: TSCommon.ParsedCommandLine;\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  options: CreateOptions;\n  extensions: Extensions;\n}) {\n  const {\n    host,\n    ts,\n    config,\n    cwd,\n    getCanonicalFileName,\n    projectLocalResolveHelper,\n    options,\n    extensions,\n  } = kwargs;\n  const moduleResolutionCache = ts.createModuleResolutionCache(\n    cwd,\n    getCanonicalFileName,\n    config.options\n  );\n  const knownInternalFilenames = new Set<string>();\n  /** \"Buckets\" (module directories) whose contents should be marked \"internal\" */\n  const internalBuckets = new Set<string>();\n\n  // Get bucket for a source filename.  Bucket is the containing `./node_modules/*/` directory\n  // For '/project/node_modules/foo/node_modules/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/bar/'\n  // For '/project/node_modules/foo/node_modules/@scope/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/@scope/bar/'\n  const moduleBucketRe = /.*\\/node_modules\\/(?:@[^\\/]+\\/)?[^\\/]+\\//;\n  function getModuleBucket(filename: string) {\n    const find = moduleBucketRe.exec(filename);\n    if (find) return find[0];\n    return '';\n  }\n\n  // Mark that this file and all siblings in its bucket should be \"internal\"\n  function markBucketOfFilenameInternal(filename: string) {\n    internalBuckets.add(getModuleBucket(filename));\n  }\n\n  function isFileInInternalBucket(filename: string) {\n    return internalBuckets.has(getModuleBucket(filename));\n  }\n\n  function isFileKnownToBeInternal(filename: string) {\n    return knownInternalFilenames.has(filename);\n  }\n\n  /**\n   * If we need to emit JS for a file, force TS to consider it non-external\n   */\n  const fixupResolvedModule = (\n    resolvedModule:\n      | TSCommon.ResolvedModule\n      | TSCommon.ResolvedTypeReferenceDirective\n  ) => {\n    const { resolvedFileName } = resolvedModule;\n    if (resolvedFileName === undefined) return;\n    // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n    // .ts,.mts,.cts is always switched to internal\n    // .js is switched on-demand\n    if (\n      resolvedModule.isExternalLibraryImport &&\n      ((resolvedFileName.endsWith('.ts') &&\n        !resolvedFileName.endsWith('.d.ts')) ||\n        (resolvedFileName.endsWith('.cts') &&\n          !resolvedFileName.endsWith('.d.cts')) ||\n        (resolvedFileName.endsWith('.mts') &&\n          !resolvedFileName.endsWith('.d.mts')) ||\n        isFileKnownToBeInternal(resolvedFileName) ||\n        isFileInInternalBucket(resolvedFileName))\n    ) {\n      resolvedModule.isExternalLibraryImport = false;\n    }\n    if (!resolvedModule.isExternalLibraryImport) {\n      knownInternalFilenames.add(resolvedFileName);\n    }\n  };\n  /*\n   * NOTE:\n   * Older ts versions do not pass `redirectedReference` nor `options`.\n   * We must pass `redirectedReference` to newer ts versions, but cannot rely on `options`, hence the weird argument name\n   */\n  const resolveModuleNames: TSCommon.LanguageServiceHost['resolveModuleNames'] =\n    (\n      moduleNames: string[],\n      containingFile: string,\n      reusedNames: string[] | undefined,\n      redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n      optionsOnlyWithNewerTsVersions: TSCommon.CompilerOptions,\n      containingSourceFile?: TSCommon.SourceFile\n    ): (TSCommon.ResolvedModule | undefined)[] => {\n      return moduleNames.map((moduleName, i) => {\n        const mode = containingSourceFile\n          ? (ts as any as TSInternal).getModeForResolutionAtIndex?.(\n              containingSourceFile,\n              i\n            )\n          : undefined;\n        let { resolvedModule } = ts.resolveModuleName(\n          moduleName,\n          containingFile,\n          config.options,\n          host,\n          moduleResolutionCache,\n          redirectedReference,\n          mode\n        );\n        if (!resolvedModule && options.experimentalTsImportSpecifiers) {\n          const lastDotIndex = moduleName.lastIndexOf('.');\n          const ext = lastDotIndex >= 0 ? moduleName.slice(lastDotIndex) : '';\n          if (ext) {\n            const replacements = extensions.tsResolverEquivalents.get(ext);\n            for (const replacementExt of replacements ?? []) {\n              ({ resolvedModule } = ts.resolveModuleName(\n                moduleName.slice(0, -ext.length) + replacementExt,\n                containingFile,\n                config.options,\n                host,\n                moduleResolutionCache,\n                redirectedReference,\n                mode\n              ));\n              if (resolvedModule) break;\n            }\n          }\n        }\n        if (resolvedModule) {\n          fixupResolvedModule(resolvedModule);\n        }\n        return resolvedModule;\n      });\n    };\n\n  // language service never calls this, but TS docs recommend that we implement it\n  const getResolvedModuleWithFailedLookupLocationsFromCache: TSCommon.LanguageServiceHost['getResolvedModuleWithFailedLookupLocationsFromCache'] =\n    (\n      moduleName,\n      containingFile,\n      resolutionMode?: TSCommon.ModuleKind.CommonJS | TSCommon.ModuleKind.ESNext\n    ): TSCommon.ResolvedModuleWithFailedLookupLocations | undefined => {\n      const ret = ts.resolveModuleNameFromCache(\n        moduleName,\n        containingFile,\n        moduleResolutionCache,\n        resolutionMode\n      );\n      if (ret && ret.resolvedModule) {\n        fixupResolvedModule(ret.resolvedModule);\n      }\n      return ret;\n    };\n\n  const resolveTypeReferenceDirectives: TSCommon.LanguageServiceHost['resolveTypeReferenceDirectives'] =\n    (\n      typeDirectiveNames: string[] | readonly TSCommon.FileReference[],\n      containingFile: string,\n      redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n      options: TSCommon.CompilerOptions,\n      containingFileMode?: TSCommon.SourceFile['impliedNodeFormat'] | undefined // new impliedNodeFormat is accepted by compilerHost\n    ): (TSCommon.ResolvedTypeReferenceDirective | undefined)[] => {\n      // Note: seems to be called with empty typeDirectiveNames array for all files.\n      // TODO consider using `ts.loadWithTypeDirectiveCache`\n      return typeDirectiveNames.map((typeDirectiveName) => {\n        // Copy-pasted from TS source:\n        const nameIsString = typeof typeDirectiveName === 'string';\n        const mode = nameIsString\n          ? undefined\n          : (ts as any as TSInternal).getModeForFileReference!(\n              typeDirectiveName,\n              containingFileMode\n            );\n        const strName = nameIsString\n          ? typeDirectiveName\n          : typeDirectiveName.fileName.toLowerCase();\n        let { resolvedTypeReferenceDirective } =\n          ts.resolveTypeReferenceDirective(\n            strName,\n            containingFile,\n            config.options,\n            host,\n            redirectedReference,\n            undefined,\n            mode\n          );\n        if (typeDirectiveName === 'node' && !resolvedTypeReferenceDirective) {\n          // Resolve @types/node relative to project first, then __dirname (copy logic from elsewhere / refactor into reusable function)\n          let typesNodePackageJsonPath: string | undefined;\n          try {\n            typesNodePackageJsonPath = projectLocalResolveHelper(\n              '@types/node/package.json',\n              true\n            );\n          } catch {} // gracefully do nothing when @types/node is not installed for any reason\n          if (typesNodePackageJsonPath) {\n            const typeRoots = [resolve(typesNodePackageJsonPath, '../..')];\n            ({ resolvedTypeReferenceDirective } =\n              ts.resolveTypeReferenceDirective(\n                typeDirectiveName,\n                containingFile,\n                {\n                  ...config.options,\n                  typeRoots,\n                },\n                host,\n                redirectedReference\n              ));\n          }\n        }\n        if (resolvedTypeReferenceDirective) {\n          fixupResolvedModule(resolvedTypeReferenceDirective);\n        }\n        return resolvedTypeReferenceDirective;\n      });\n    };\n\n  return {\n    resolveModuleNames,\n    getResolvedModuleWithFailedLookupLocationsFromCache,\n    resolveTypeReferenceDirectives,\n    isFileKnownToBeInternal,\n    markBucketOfFilenameInternal,\n  };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/cjs-resolve-hooks.js":{"lineLengths":[13,62,56,3,12,3,64,37,60,46,73,28,93,51,37,78,41,101,96,9,30,41,63,58,9,5,1,88,45],"data":{"version":3,"file":"cjs-resolve-hooks.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/cjs-resolve-hooks.ts"],"names":[],"mappings":";;;AAoBA;;GAEG;AACH,SAAgB,sCAAsC,CAAC,aAAsB;IAC3E,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAmC,CAAC;IACnE,MAAM,uBAAuB,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACxD,MAAM,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC;IAC1C,MAAM,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,oBAAoB,CAAC;IACrE,IAAI,iBAAiB,EAAE;QACrB,MAAM,EAAE,eAAe,EAAE,sBAAsB,EAAE,GAC/C,aAAa,CAAC,gBAAgB,EAAE,CAAC;QACnC,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAC3C,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,SAAS,gBAAgB,CAEvB,OAAe,EACf,MAAe,EACf,MAAgB,EAChB,OAAsC,EACtC,GAAG,IAAQ;YAEX,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAC1B,OAAO,uBAAuB,CAAC,IAAI,CACjC,IAAI,EACJ,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,GAAG,IAAI,CACR,CAAC;YAEJ,OAAO,sBAAsB,CAAC,IAAI,CAChC,IAAI,EACJ,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,GAAG,IAAI,CACR,CAAC;QACJ,CAAC;QACD,SAAS,SAAS;YAChB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAC1B,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAgB,CAAC,CAAC;YACxD,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,SAAgB,CAAC,CAAC;QACvD,CAAC;KACF;AACH,CAAC;AA3CD,wFA2CC","sourcesContent":["import type Module = require('module');\nimport type { Service } from '.';\n\n/** @internal */\nexport type ModuleConstructorWithInternals = typeof Module & {\n  _resolveFilename(\n    request: string,\n    parent?: Module,\n    isMain?: boolean,\n    options?: ModuleResolveFilenameOptions,\n    ...rest: any[]\n  ): string;\n  _preloadModules(requests?: string[]): void;\n  _findPath(request: string, paths: string[], isMain: boolean): string;\n};\n\ninterface ModuleResolveFilenameOptions {\n  paths?: Array<string>;\n}\n\n/**\n * @internal\n */\nexport function installCommonjsResolveHooksIfNecessary(tsNodeService: Service) {\n  const Module = require('module') as ModuleConstructorWithInternals;\n  const originalResolveFilename = Module._resolveFilename;\n  const originalFindPath = Module._findPath;\n  const shouldInstallHook = tsNodeService.options.experimentalResolver;\n  if (shouldInstallHook) {\n    const { Module_findPath, Module_resolveFilename } =\n      tsNodeService.getNodeCjsLoader();\n    Module._resolveFilename = _resolveFilename;\n    Module._findPath = _findPath;\n    function _resolveFilename(\n      this: any,\n      request: string,\n      parent?: Module,\n      isMain?: boolean,\n      options?: ModuleResolveFilenameOptions,\n      ...rest: []\n    ): string {\n      if (!tsNodeService.enabled())\n        return originalResolveFilename.call(\n          this,\n          request,\n          parent,\n          isMain,\n          options,\n          ...rest\n        );\n\n      return Module_resolveFilename.call(\n        this,\n        request,\n        parent,\n        isMain,\n        options,\n        ...rest\n      );\n    }\n    function _findPath(this: any): string {\n      if (!tsNodeService.enabled())\n        return originalFindPath.apply(this, arguments as any);\n      return Module_findPath.apply(this, arguments as any);\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/node-module-type-classifier.js":{"lineLengths":[13,62,32,99,3,84,2,78,53,2,26,8,8,94,78,12,3,59,44,57,76,18,20,20,56,20,20,56,5,27,102,64,29,25,5,21,1,40,55],"data":{"version":3,"file":"node-module-type-classifier.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/node-module-type-classifier.ts"],"names":[],"mappings":";;;AAAA,mGAAgF;AAEhF;;;;;;;;;;;;GAYG;AACH,SAAgB,cAAc,CAC5B,cAAsB,EACtB,gBAAyB;IAEzB,wCAAwC;IACxC,MAAM,YAAY,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,GAAG,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxE,QAAQ,GAAG,EAAE;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;KAC/C;IACD,IAAI,gBAAgB,EAAE;QACpB,MAAM,YAAY,GAAG,IAAA,mDAAgB,EAAC,cAAc,CAAC,CAAC;QACtD,IAAI,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ;YAAE,OAAO,SAAS,CAAC;QAC1E,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AArBD,wCAqBC","sourcesContent":["import { readPackageScope } from '../dist-raw/node-internal-modules-cjs-loader';\n\n/**\n * Determine how to emit a module based on tsconfig \"module\" and package.json \"type\"\n *\n * Supports module=nodenext/node16 with transpileOnly, where we cannot ask the\n * TS typechecker to tell us if a file is CJS or ESM.\n *\n * Return values indicate:\n * - cjs\n * - esm\n * - nodecjs == node-flavored cjs where dynamic imports are *not* transformed into `require()`\n * - undefined == emit according to tsconfig `module` config, whatever that is\n * @internal\n */\nexport function classifyModule(\n  nativeFilename: string,\n  isNodeModuleType: boolean\n): 'nodecjs' | 'cjs' | 'esm' | 'nodeesm' | undefined {\n  // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n  const lastDotIndex = nativeFilename.lastIndexOf('.');\n  const ext = lastDotIndex >= 0 ? nativeFilename.slice(lastDotIndex) : '';\n  switch (ext) {\n    case '.cjs':\n    case '.cts':\n      return isNodeModuleType ? 'nodecjs' : 'cjs';\n    case '.mjs':\n    case '.mts':\n      return isNodeModuleType ? 'nodeesm' : 'esm';\n  }\n  if (isNodeModuleType) {\n    const packageScope = readPackageScope(nativeFilename);\n    if (packageScope && packageScope.data.type === 'module') return 'nodeesm';\n    return 'nodecjs';\n  }\n  return undefined;\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/file-extensions.js":{"lineLengths":[13,62,31,33,33,19,20,20,21,21,3,39,21,30,23,23,3,44,31,10,12,12,11,11,2,65,17,98,22,73,28,31,10,11,11,11,11,2,3,40,12,3,52,82,78,47,30,77,72,63,33,33,8,39,35,27,41,29,48,33,39,31,45,33,52,5,77,109,104,7,109,67,72,51,44,7,146,94,81,81,81,115,102,68,124,64,105,12,107,17,95,30,64,38,11,80,44,11,24,11,79,64,10,85,84,39,10,83,84,41,11,30,11,88,35,11,40,11,78,11,53,11,76,11,39,27,27,27,26,6,1,38,43],"data":{"version":3,"file":"file-extensions.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/file-extensions.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as _ts from 'typescript';\nimport type { RegisterOptions } from '.';\nimport { versionGteLt } from './util';\n\n/**\n * Centralized specification of how we deal with file extensions based on\n * project options:\n * which ones we do/don't support, in what situations, etc.  These rules drive\n * logic elsewhere.\n * @internal\n * */\nexport type Extensions = ReturnType<typeof getExtensions>;\n\nconst nodeEquivalents = new Map<string, string>([\n  ['.ts', '.js'],\n  ['.tsx', '.js'],\n  ['.jsx', '.js'],\n  ['.mts', '.mjs'],\n  ['.cts', '.cjs'],\n]);\n\nconst tsResolverEquivalents = new Map<string, readonly string[]>([\n  ['.ts', ['.js']],\n  ['.tsx', ['.js', '.jsx']],\n  ['.mts', ['.mjs']],\n  ['.cts', ['.cjs']],\n]);\n\n// All extensions understood by vanilla node\nconst vanillaNodeExtensions: readonly string[] = [\n  '.js',\n  '.json',\n  '.node',\n  '.mjs',\n  '.cjs',\n];\n\n// Extensions added by vanilla node's require() if you omit them:\n// js, json, node\n// Extensions added by vanilla node if you omit them with --experimental-specifier-resolution=node\n// js, json, node, mjs\n// Extensions added by ESM codepath's legacy package.json \"main\" resolver\n// js, json, node (not mjs!)\n\nconst nodeDoesNotUnderstand: readonly string[] = [\n  '.ts',\n  '.tsx',\n  '.jsx',\n  '.cts',\n  '.mts',\n];\n\n/**\n * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n * @internal\n */\nexport function getExtensions(\n  config: _ts.ParsedCommandLine,\n  options: RegisterOptions,\n  tsVersion: string\n) {\n  // TS 4.5 is first version to understand .cts, .mts, .cjs, and .mjs extensions\n  const tsSupportsMtsCtsExts = versionGteLt(tsVersion, '4.5.0');\n\n  const requiresHigherTypescriptVersion: string[] = [];\n  if (!tsSupportsMtsCtsExts)\n    requiresHigherTypescriptVersion.push('.cts', '.cjs', '.mts', '.mjs');\n\n  const allPossibleExtensionsSortedByPreference = Array.from(\n    new Set([\n      ...(options.preferTsExts ? nodeDoesNotUnderstand : []),\n      ...vanillaNodeExtensions,\n      ...nodeDoesNotUnderstand,\n    ])\n  );\n\n  const compiledJsUnsorted: string[] = ['.ts'];\n  const compiledJsxUnsorted: string[] = [];\n\n  if (config.options.jsx) compiledJsxUnsorted.push('.tsx');\n  if (tsSupportsMtsCtsExts) compiledJsUnsorted.push('.mts', '.cts');\n  if (config.options.allowJs) {\n    compiledJsUnsorted.push('.js');\n    if (config.options.jsx) compiledJsxUnsorted.push('.jsx');\n    if (tsSupportsMtsCtsExts) compiledJsUnsorted.push('.mjs', '.cjs');\n  }\n\n  const compiledUnsorted = [...compiledJsUnsorted, ...compiledJsxUnsorted];\n  const compiled = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    compiledUnsorted.includes(ext)\n  );\n\n  const compiledNodeDoesNotUnderstand = nodeDoesNotUnderstand.filter((ext) =>\n    compiled.includes(ext)\n  );\n\n  /**\n   * TS's resolver can resolve foo.js to foo.ts, by replacing .js extension with several source extensions.\n   * IMPORTANT: Must preserve ordering according to preferTsExts!\n   *            Must include the .js/.mjs/.cjs extension in the array!\n   *            This affects resolution behavior!\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  const r = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    [...compiledUnsorted, '.js', '.mjs', '.cjs', '.mts', '.cts'].includes(ext)\n  );\n  const replacementsForJs = r.filter((ext) =>\n    ['.js', '.jsx', '.ts', '.tsx'].includes(ext)\n  );\n  const replacementsForJsx = r.filter((ext) => ['.jsx', '.tsx'].includes(ext));\n  const replacementsForMjs = r.filter((ext) => ['.mjs', '.mts'].includes(ext));\n  const replacementsForCjs = r.filter((ext) => ['.cjs', '.cts'].includes(ext));\n  const replacementsForJsOrMjs = r.filter((ext) =>\n    ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.mts'].includes(ext)\n  );\n\n  // Node allows omitting .js or .mjs extension in certain situations (CJS, ESM w/experimental flag)\n  // So anything that compiles to .js or .mjs can also be omitted.\n  const experimentalSpecifierResolutionAddsIfOmitted = Array.from(\n    new Set([...replacementsForJsOrMjs, '.json', '.node'])\n  );\n  // Same as above, except node curiuosly doesn't do .mjs here\n  const legacyMainResolveAddsIfOmitted = Array.from(\n    new Set([...replacementsForJs, '.json', '.node'])\n  );\n\n  return {\n    /** All file extensions we transform, ordered by resolution preference according to preferTsExts */\n    compiled,\n    /** Resolved extensions that vanilla node will not understand; we should handle them */\n    nodeDoesNotUnderstand,\n    /** Like the above, but only the ones we're compiling */\n    compiledNodeDoesNotUnderstand,\n    /**\n     * Mapping from extensions understood by tsc to the equivalent for node,\n     * as far as getFormat is concerned.\n     */\n    nodeEquivalents,\n    /**\n     * Mapping from extensions rejected by TSC in import specifiers, to the\n     * possible alternatives that TS's resolver will accept.\n     *\n     * When we allow users to opt-in to .ts extensions in import specifiers, TS's\n     * resolver requires us to replace the .ts extensions with .js alternatives.\n     * Otherwise, resolution fails.\n     *\n     * Note TS's resolver is only used by, and only required for, typechecking.\n     * This is separate from node's resolver, which we hook separately and which\n     * does not require this mapping.\n     */\n    tsResolverEquivalents,\n    /**\n     * Extensions that we can support if the user upgrades their typescript version.\n     * Used when raising hints.\n     */\n    requiresHigherTypescriptVersion,\n    /**\n     * --experimental-specifier-resolution=node will add these extensions.\n     */\n    experimentalSpecifierResolutionAddsIfOmitted,\n    /**\n     * ESM loader will add these extensions to package.json \"main\" field\n     */\n    legacyMainResolveAddsIfOmitted,\n    replacementsForMjs,\n    replacementsForCjs,\n    replacementsForJsx,\n    replacementsForJs,\n  };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/ts-transpile-module.js":{"lineLengths":[13,62,41,16,56,340,42,52,92,13,29,55,39,77,47,9,5,63,59,5,144,43,35,40,49,81,26,104,36,48,115,37,13,18,101,34,13,10,48,46,53,38,34,97,106,36,33,6,22,28,25,19,19,22,27,86,54,23,41,89,34,35,80,43,61,58,121,56,79,11,43,65,9,52,104,9,17,31,34,78,63,49,21,32,66,83,9,15,21,40,33,41,71,37,58,58,5,1,58,47],"data":{"version":3,"file":"ts-transpile-module.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/ts-transpile-module.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  CompilerHost,\n  CompilerOptions,\n  Diagnostic,\n  SourceFile,\n  TranspileOptions,\n  TranspileOutput,\n} from 'typescript';\nimport type { TSCommon } from './ts-compiler-types';\n\n/** @internal */\nexport function createTsTranspileModule(\n  ts: TSCommon,\n  transpileOptions: Pick<\n    TranspileOptions,\n    'compilerOptions' | 'reportDiagnostics' | 'transformers'\n  >\n) {\n  const {\n    createProgram,\n    createSourceFile,\n    getDefaultCompilerOptions,\n    getImpliedNodeFormatForFile,\n    fixupCompilerOptions,\n    transpileOptionValueCompilerOptions,\n    getNewLineCharacter,\n    fileExtensionIs,\n    normalizePath,\n    Debug,\n    toPath,\n    getSetExternalModuleIndicator,\n    getEntries,\n    addRange,\n    hasProperty,\n    getEmitScriptTarget,\n    getDirectoryPath,\n  } = ts as any;\n\n  const compilerOptionsDiagnostics: Diagnostic[] = [];\n\n  const options: CompilerOptions = transpileOptions.compilerOptions\n    ? fixupCompilerOptions(\n        transpileOptions.compilerOptions,\n        compilerOptionsDiagnostics\n      )\n    : {};\n\n  // mix in default options\n  const defaultOptions = getDefaultCompilerOptions();\n  for (const key in defaultOptions) {\n    if (hasProperty(defaultOptions, key) && options[key] === undefined) {\n      options[key] = defaultOptions[key];\n    }\n  }\n\n  for (const option of transpileOptionValueCompilerOptions) {\n    options[option.name] = option.transpileOptionValue;\n  }\n\n  // transpileModule does not write anything to disk so there is no need to verify that there are no conflicts between input and output paths.\n  options.suppressOutputPathCheck = true;\n\n  // Filename can be non-ts file.\n  options.allowNonTsExtensions = true;\n\n  const newLine = getNewLineCharacter(options);\n  // Create a compilerHost object to allow the compiler to read and write files\n  const compilerHost: CompilerHost = {\n    getSourceFile: (fileName) =>\n      fileName === normalizePath(inputFileName) ? sourceFile : undefined,\n    writeFile: (name, text) => {\n      if (fileExtensionIs(name, '.map')) {\n        Debug.assertEqual(\n          sourceMapText,\n          undefined,\n          'Unexpected multiple source map outputs, file:',\n          name\n        );\n        sourceMapText = text;\n      } else {\n        Debug.assertEqual(\n          outputText,\n          undefined,\n          'Unexpected multiple outputs, file:',\n          name\n        );\n        outputText = text;\n      }\n    },\n    getDefaultLibFileName: () => 'lib.d.ts',\n    useCaseSensitiveFileNames: () => true,\n    getCanonicalFileName: (fileName) => fileName,\n    getCurrentDirectory: () => '',\n    getNewLine: () => newLine,\n    fileExists: (fileName): boolean =>\n      fileName === inputFileName || fileName === packageJsonFileName,\n    readFile: (fileName) =>\n      fileName === packageJsonFileName ? `{\"type\": \"${_packageJsonType}\"}` : '',\n    directoryExists: () => true,\n    getDirectories: () => [],\n  };\n\n  let inputFileName: string;\n  let packageJsonFileName: string;\n  let _packageJsonType: 'module' | 'commonjs';\n  let sourceFile: SourceFile;\n  let outputText: string | undefined;\n  let sourceMapText: string | undefined;\n\n  return transpileModule;\n\n  function transpileModule(\n    input: string,\n    transpileOptions2: Pick<\n      TranspileOptions,\n      'fileName' | 'moduleName' | 'renamedDependencies'\n    >,\n    packageJsonType: 'module' | 'commonjs' = 'commonjs'\n  ): TranspileOutput {\n    // if jsx is specified then treat file as .tsx\n    inputFileName =\n      transpileOptions2.fileName ||\n      (transpileOptions.compilerOptions && transpileOptions.compilerOptions.jsx\n        ? 'module.tsx'\n        : 'module.ts');\n    packageJsonFileName = getDirectoryPath(inputFileName) + '/package.json';\n    _packageJsonType = packageJsonType;\n\n    sourceFile = createSourceFile(inputFileName, input, {\n      languageVersion: getEmitScriptTarget(options),\n      impliedNodeFormat: getImpliedNodeFormatForFile(\n        toPath(inputFileName, '', compilerHost.getCanonicalFileName),\n        /*cache*/ undefined,\n        compilerHost,\n        options\n      ),\n      setExternalModuleIndicator: getSetExternalModuleIndicator(options),\n    });\n    if (transpileOptions2.moduleName) {\n      sourceFile.moduleName = transpileOptions2.moduleName;\n    }\n\n    if (transpileOptions2.renamedDependencies) {\n      (sourceFile as any).renamedDependencies = new Map(\n        getEntries(transpileOptions2.renamedDependencies)\n      );\n    }\n\n    // Output\n    outputText = undefined;\n    sourceMapText = undefined;\n\n    const program = createProgram([inputFileName], options, compilerHost);\n\n    const diagnostics = compilerOptionsDiagnostics.slice();\n\n    if (transpileOptions.reportDiagnostics) {\n      addRange(\n        /*to*/ diagnostics,\n        /*from*/ program.getSyntacticDiagnostics(sourceFile)\n      );\n      addRange(/*to*/ diagnostics, /*from*/ program.getOptionsDiagnostics());\n    }\n    // Emit\n    program.emit(\n      /*targetSourceFile*/ undefined,\n      /*writeFile*/ undefined,\n      /*cancellationToken*/ undefined,\n      /*emitOnlyDtsFiles*/ undefined,\n      transpileOptions.transformers\n    );\n\n    if (outputText === undefined) return Debug.fail('Output generation failed');\n\n    return { outputText, diagnostics, sourceMapText };\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/dist/repl.js":{"lineLengths":[13,62,242,27,31,31,27,35,27,37,33,35,15,26,36,46,10,56,61,5,33,1,9,25,29,31,5,26,1,16,36,16,29,16,38,16,31,16,36,16,29,3,34,2,81,82,14,2,17,2,40,69,32,20,2,17,3,35,27,81,34,23,76,95,16,142,108,86,89,89,75,17,48,25,139,19,17,25,17,29,14,22,14,15,15,26,6,23,35,27,64,41,41,48,37,25,25,25,85,18,15,9,5,29,50,29,18,24,20,40,11,55,28,5,40,63,42,29,18,24,32,20,11,5,59,58,32,27,19,9,13,49,21,42,24,15,51,30,25,70,21,42,50,21,21,13,18,49,13,9,23,31,9,84,53,73,37,23,87,94,41,51,68,65,60,27,17,22,42,50,104,63,21,35,17,13,18,35,46,52,118,25,82,74,176,21,29,17,33,13,9,41,236,9,5,42,26,32,5,42,37,123,87,53,27,19,17,38,13,25,36,103,32,13,9,72,66,69,90,40,25,37,39,158,37,60,27,28,31,11,30,31,67,55,26,24,85,74,34,53,13,37,66,38,35,52,111,62,113,93,72,62,42,69,81,35,13,9,16,32,36,62,43,34,41,27,17,66,107,23,25,57,28,60,37,14,11,73,32,126,53,25,27,36,32,15,9,20,5,1,32,3,57,3,17,23,25,24,24,24,25,24,25,24,23,5,1,30,57,29,32,31,91,46,13,56,9,21,25,9,5,31,32,24,93,48,13,51,52,9,21,25,9,5,36,1,64,67,3,29,2,115,34,3,45,112,28,75,68,68,114,27,69,38,26,5,30,134,49,15,114,36,76,75,71,5,9,66,5,17,15,25,84,101,26,13,35,46,27,32,15,9,23,29,18,5,37,46,79,81,81,40,85,81,90,57,100,23,15,5,10,30,93,60,107,96,97,33,51,23,11,5,22,38,85,35,27,38,42,53,71,65,80,45,49,35,40,92,23,29,17,13,27,83,15,9,5,82,29,32,16,34,40,26,49,52,60,17,29,17,10,5,10,16,41,73,10,5,1,3,44,3,48,55,54,41,5,10,44,5,1,3,59,3,42,34,38,36,34,25,36,20,24,32,34,36,32,6,1,3,29,3,27,18,31,28,20,9,5,17,1,3,109,108,123,22,3,32,17,17,17,17,5,13,121,6,17,17,17,17,5,13,110,6,3,3,54,56,89,3,38,9,9,9,168,2,3,46,3,31,50,46,32,76,7,1,3,12,71,3,60,29,32,55,5,28,37,50,1,36,32],"data":{"version":3,"file":"repl.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/ts-node/src/repl.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as _diff from 'diff';\nimport { homedir } from 'os';\nimport { join } from 'path';\nimport {\n  Recoverable,\n  ReplOptions,\n  REPLServer,\n  start as nodeReplStart,\n} from 'repl';\nimport { Context, createContext, Script } from 'vm';\nimport { Service, CreateOptions, TSError, env } from './index';\nimport { readFileSync, statSync } from 'fs';\nimport { Console } from 'console';\nimport * as assert from 'assert';\nimport type * as tty from 'tty';\nimport type * as Module from 'module';\nimport { builtinModules } from 'module';\n\n// Lazy-loaded.\nlet _processTopLevelAwait: (src: string) => string | null;\nfunction getProcessTopLevelAwait() {\n  if (_processTopLevelAwait === undefined) {\n    ({\n      processTopLevelAwait: _processTopLevelAwait,\n    } = require('../dist-raw/node-internal-repl-await'));\n  }\n  return _processTopLevelAwait;\n}\nlet diff: typeof _diff;\nfunction getDiffLines() {\n  if (diff === undefined) {\n    diff = require('diff');\n  }\n  return diff.diffLines;\n}\n\n/** @internal */\nexport const EVAL_FILENAME = `[eval].ts`;\n/** @internal */\nexport const EVAL_NAME = `[eval]`;\n/** @internal */\nexport const STDIN_FILENAME = `[stdin].ts`;\n/** @internal */\nexport const STDIN_NAME = `[stdin]`;\n/** @internal */\nexport const REPL_FILENAME = '<repl>.ts';\n/** @internal */\nexport const REPL_NAME = '<repl>';\n\nexport interface ReplService {\n  readonly state: EvalState;\n  /**\n   * Bind this REPL to a ts-node compiler service.  A compiler service must be bound before `eval`-ing code or starting the REPL\n   */\n  setService(service: Service): void;\n  /**\n   * Append code to the virtual <repl> source file, compile it to JavaScript, throw semantic errors if the typechecker is enabled,\n   * and execute it.\n   *\n   * Note: typically, you will want to call `start()` instead of using this method.\n   *\n   * @param code string of TypeScript.\n   */\n  evalCode(code: string): any;\n  /** @internal */\n  evalCodeInternal(opts: {\n    code: string;\n    enableTopLevelAwait?: boolean;\n    context?: Context;\n  }):\n    | {\n        containsTopLevelAwait: true;\n        valuePromise: Promise<any>;\n      }\n    | {\n        containsTopLevelAwait: false;\n        value: any;\n      };\n  /**\n   * `eval` implementation compatible with node's REPL API\n   *\n   * Can be used in advanced scenarios if you want to manually create your own\n   * node REPL instance and delegate eval to this `ReplService`.\n   *\n   * Example:\n   *\n   *     import {start} from 'repl';\n   *     const replService: tsNode.ReplService = ...; // assuming you have already created a ts-node ReplService\n   *     const nodeRepl = start({eval: replService.eval});\n   */\n  nodeEval(\n    code: string,\n    // TODO change to `Context` in a future release?  Technically a breaking change\n    context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ): void;\n  evalAwarePartialHost: EvalAwarePartialHost;\n  /** Start a node REPL */\n  start(): void;\n  /**\n   * Start a node REPL, evaling a string of TypeScript before it starts.\n   * @deprecated\n   */\n  start(code: string): void;\n  /** @internal */\n  startInternal(opts?: ReplOptions): REPLServer;\n  /** @internal */\n  readonly stdin: NodeJS.ReadableStream;\n  /** @internal */\n  readonly stdout: NodeJS.WritableStream;\n  /** @internal */\n  readonly stderr: NodeJS.WritableStream;\n  /** @internal */\n  readonly console: Console;\n}\n\n/** @category REPL */\nexport interface CreateReplOptions {\n  service?: Service;\n  state?: EvalState;\n  stdin?: NodeJS.ReadableStream;\n  stdout?: NodeJS.WritableStream;\n  stderr?: NodeJS.WritableStream;\n  /** @internal */\n  composeWithEvalAwarePartialHost?: EvalAwarePartialHost;\n  /**\n   * @internal\n   * Ignore diagnostics that are annoying when interactively entering input line-by-line.\n   */\n  ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl?: boolean;\n}\n\n/**\n * Create a ts-node REPL instance.\n *\n * Pay close attention to the example below.  Today, the API requires a few lines\n * of boilerplate to correctly bind the `ReplService` to the ts-node `Service` and\n * vice-versa.\n *\n * Usage example:\n *\n *     const repl = tsNode.createRepl();\n *     const service = tsNode.create({...repl.evalAwarePartialHost});\n *     repl.setService(service);\n *     repl.start();\n *\n * @category REPL\n */\nexport function createRepl(options: CreateReplOptions = {}) {\n  const { ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl = true } = options;\n  let service = options.service;\n  let nodeReplServer: REPLServer;\n  // If `useGlobal` is not true, then REPL creates a context when started.\n  // This stores a reference to it or to `global`, whichever is used, after REPL has started.\n  let context: Context | undefined;\n  const state =\n    options.state ?? new EvalState(join(process.cwd(), REPL_FILENAME));\n  const evalAwarePartialHost = createEvalAwarePartialHost(\n    state,\n    options.composeWithEvalAwarePartialHost\n  );\n  const stdin = options.stdin ?? process.stdin;\n  const stdout = options.stdout ?? process.stdout;\n  const stderr = options.stderr ?? process.stderr;\n  const _console =\n    stdout === process.stdout && stderr === process.stderr\n      ? console\n      : new Console(stdout, stderr);\n\n  const replService: ReplService = {\n    state: options.state ?? new EvalState(join(process.cwd(), EVAL_FILENAME)),\n    setService,\n    evalCode,\n    evalCodeInternal,\n    nodeEval,\n    evalAwarePartialHost,\n    start,\n    startInternal,\n    stdin,\n    stdout,\n    stderr,\n    console: _console,\n  };\n\n  return replService;\n\n  function setService(_service: Service) {\n    service = _service;\n    if (ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl) {\n      service.addDiagnosticFilter({\n        appliesToAllFiles: false,\n        filenamesAbsolute: [state.path],\n        diagnosticsIgnored: [\n          2393, // Duplicate function implementation: https://github.com/TypeStrong/ts-node/issues/729\n          6133, // <identifier> is declared but its value is never read. https://github.com/TypeStrong/ts-node/issues/850\n          7027, // Unreachable code detected. https://github.com/TypeStrong/ts-node/issues/469\n          ...(service.shouldReplAwait ? topLevelAwaitDiagnosticCodes : []),\n        ],\n      });\n    }\n  }\n\n  function evalCode(code: string) {\n    const result = appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      context,\n      overrideIsCompletion: false,\n    });\n    assert(result.containsTopLevelAwait === false);\n    return result.value;\n  }\n\n  function evalCodeInternal(options: {\n    code: string;\n    enableTopLevelAwait?: boolean;\n    context: Context;\n  }) {\n    const { code, enableTopLevelAwait, context } = options;\n    return appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      enableTopLevelAwait,\n      context,\n    });\n  }\n\n  function nodeEval(\n    code: string,\n    context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ) {\n    // TODO: Figure out how to handle completion here.\n    if (code === '.scope') {\n      callback(null);\n      return;\n    }\n\n    try {\n      const evalResult = evalCodeInternal({\n        code,\n        enableTopLevelAwait: true,\n        context,\n      });\n\n      if (evalResult.containsTopLevelAwait) {\n        (async () => {\n          try {\n            callback(null, await evalResult.valuePromise);\n          } catch (promiseError) {\n            handleError(promiseError);\n          }\n        })();\n      } else {\n        callback(null, evalResult.value);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n\n    // Log TSErrors, check if they're recoverable, log helpful hints for certain\n    // well-known errors, and invoke `callback()`\n    // TODO should evalCode API get the same error-handling benefits?\n    function handleError(error: unknown) {\n      // Don't show TLA hint if the user explicitly disabled repl top level await\n      const canLogTopLevelAwaitHint =\n        service!.options.experimentalReplAwait !== false &&\n        !service!.shouldReplAwait;\n      if (error instanceof TSError) {\n        // Support recoverable compilations using >= node 6.\n        if (Recoverable && isRecoverable(error)) {\n          callback(new Recoverable(error));\n          return;\n        } else {\n          _console.error(error);\n\n          if (\n            canLogTopLevelAwaitHint &&\n            error.diagnosticCodes.some((dC) =>\n              topLevelAwaitDiagnosticCodes.includes(dC)\n            )\n          ) {\n            _console.error(getTopLevelAwaitHint());\n          }\n          callback(null);\n        }\n      } else {\n        let _error = error as Error | undefined;\n        if (\n          canLogTopLevelAwaitHint &&\n          _error instanceof SyntaxError &&\n          _error.message?.includes('await is only valid')\n        ) {\n          try {\n            // Only way I know to make our hint appear after the error\n            _error.message += `\\n\\n${getTopLevelAwaitHint()}`;\n            _error.stack = _error.stack?.replace(\n              /(SyntaxError:.*)/,\n              (_, $1) => `${$1}\\n\\n${getTopLevelAwaitHint()}`\n            );\n          } catch {}\n        }\n        callback(_error as Error);\n      }\n    }\n    function getTopLevelAwaitHint() {\n      return `Hint: REPL top-level await requires TypeScript version 3.8 or higher and target ES2018 or higher. You are using TypeScript ${\n        service!.ts.version\n      } and target ${\n        service!.ts.ScriptTarget[service!.config.options.target!]\n      }.`;\n    }\n  }\n\n  // Note: `code` argument is deprecated\n  function start(code?: string) {\n    startInternal({ code });\n  }\n\n  // Note: `code` argument is deprecated\n  function startInternal(\n    options?: ReplOptions & { code?: string; forceToBeModule?: boolean }\n  ) {\n    const { code, forceToBeModule = true, ...optionsOverride } = options ?? {};\n    // TODO assert that `service` is set; remove all `service!` non-null assertions\n\n    // Eval incoming code before the REPL starts.\n    // Note: deprecated\n    if (code) {\n      try {\n        evalCode(`${code}\\n`);\n      } catch (err) {\n        _console.error(err);\n        // Note: should not be killing the process here, but this codepath is deprecated anyway\n        process.exit(1);\n      }\n    }\n\n    // In case the typescript compiler hasn't compiled anything yet,\n    // make it run though compilation at least one time before\n    // the REPL starts for a snappier user experience on startup.\n    service?.compile('', state.path);\n\n    const repl = nodeReplStart({\n      prompt: '> ',\n      input: replService.stdin,\n      output: replService.stdout,\n      // Mimicking node's REPL implementation: https://github.com/nodejs/node/blob/168b22ba073ee1cbf8d0bcb4ded7ff3099335d04/lib/internal/repl.js#L28-L30\n      terminal:\n        (stdout as tty.WriteStream).isTTY &&\n        !parseInt(env.NODE_NO_READLINE!, 10),\n      eval: nodeEval,\n      useGlobal: true,\n      ...optionsOverride,\n    });\n\n    nodeReplServer = repl;\n    context = repl.context;\n\n    // Bookmark the point where we should reset the REPL state.\n    const resetEval = appendToEvalState(state, '');\n\n    function reset() {\n      resetEval();\n\n      // Hard fix for TypeScript forcing `Object.defineProperty(exports, ...)`.\n      runInContext('exports = module.exports', state.path, context);\n      if (forceToBeModule) {\n        state.input += 'export {};void 0;\\n';\n      }\n\n      // Declare node builtins.\n      // Skip the same builtins as `addBuiltinLibsToObject`:\n      //   those starting with _\n      //   those containing /\n      //   those that already exist as globals\n      // Intentionally suppress type errors in case @types/node does not declare any of them, and because\n      // `declare import` is technically invalid syntax.\n      // Avoid this when in transpileOnly, because third-party transpilers may not handle `declare import`.\n      if (!service?.transpileOnly) {\n        state.input += `// @ts-ignore\\n${builtinModules\n          .filter(\n            (name) =>\n              !name.startsWith('_') &&\n              !name.includes('/') &&\n              !['console', 'module', 'process'].includes(name)\n          )\n          .map((name) => `declare import ${name} = require('${name}')`)\n          .join(';')}\\n`;\n      }\n    }\n\n    reset();\n    repl.on('reset', reset);\n\n    repl.defineCommand('type', {\n      help: 'Check the type of a TypeScript identifier',\n      action: function (identifier: string) {\n        if (!identifier) {\n          repl.displayPrompt();\n          return;\n        }\n\n        const undo = appendToEvalState(state, identifier);\n        const { name, comment } = service!.getTypeInfo(\n          state.input,\n          state.path,\n          state.input.length\n        );\n\n        undo();\n\n        if (name) repl.outputStream.write(`${name}\\n`);\n        if (comment) repl.outputStream.write(`${comment}\\n`);\n        repl.displayPrompt();\n      },\n    });\n\n    // Set up REPL history when available natively via node.js >= 11.\n    if (repl.setupHistory) {\n      const historyPath =\n        env.TS_NODE_HISTORY || join(homedir(), '.ts_node_repl_history');\n\n      repl.setupHistory(historyPath, (err) => {\n        if (!err) return;\n\n        _console.error(err);\n        process.exit(1);\n      });\n    }\n\n    return repl;\n  }\n}\n\n/**\n * Eval state management. Stores virtual `[eval].ts` file\n */\nexport class EvalState {\n  /** @internal */\n  input = '';\n  /** @internal */\n  output = '';\n  /** @internal */\n  version = 0;\n  /** @internal */\n  lines = 0;\n\n  __tsNodeEvalStateBrand: unknown;\n\n  constructor(public path: string) {}\n}\n\n/**\n * Filesystem host functions which are aware of the \"virtual\" `[eval].ts`, `<repl>`, or `[stdin].ts` file used to compile REPL inputs.\n * Must be passed to `create()` to create a ts-node compiler service which can compile REPL inputs.\n */\nexport type EvalAwarePartialHost = Pick<\n  CreateOptions,\n  'readFile' | 'fileExists'\n>;\n\nexport function createEvalAwarePartialHost(\n  state: EvalState,\n  composeWith?: EvalAwarePartialHost\n): EvalAwarePartialHost {\n  function readFile(path: string) {\n    if (path === state.path) return state.input;\n\n    if (composeWith?.readFile) return composeWith.readFile(path);\n\n    try {\n      return readFileSync(path, 'utf8');\n    } catch (err) {\n      /* Ignore. */\n    }\n  }\n  function fileExists(path: string) {\n    if (path === state.path) return true;\n\n    if (composeWith?.fileExists) return composeWith.fileExists(path);\n\n    try {\n      const stats = statSync(path);\n      return stats.isFile() || stats.isFIFO();\n    } catch (err) {\n      return false;\n    }\n  }\n  return { readFile, fileExists };\n}\n\nconst sourcemapCommentRe = /\\/\\/# ?sourceMappingURL=\\S+[\\s\\r\\n]*$/;\n\ntype AppendCompileAndEvalInputResult =\n  | { containsTopLevelAwait: true; valuePromise: Promise<any> }\n  | { containsTopLevelAwait: false; value: any };\n/**\n * Evaluate the code snippet.\n *\n * Append it to virtual .ts file, compile, handle compiler errors, compute a diff of the JS, and eval any code that\n * appears as \"added\" in the diff.\n */\nfunction appendCompileAndEvalInput(options: {\n  service: Service;\n  state: EvalState;\n  input: string;\n  wrappedErr?: unknown;\n  /** Enable top-level await but only if the TSNode service allows it. */\n  enableTopLevelAwait?: boolean;\n  context: Context | undefined;\n  /**\n   * Added so that `evalCode` can be guaranteed *not* to trigger the `isCompletion`\n   * codepath.  However, the `isCompletion` logic is ancient and maybe should be removed entirely.\n   * Nobody's looked at it in a long time.\n   */\n  overrideIsCompletion?: boolean;\n}): AppendCompileAndEvalInputResult {\n  const {\n    service,\n    state,\n    wrappedErr,\n    enableTopLevelAwait = false,\n    context,\n    overrideIsCompletion,\n  } = options;\n  let { input } = options;\n\n  // It's confusing for `{ a: 1 }` to be interpreted as a block statement\n  // rather than an object literal. So, we first try to wrap it in\n  // parentheses, so that it will be interpreted as an expression.\n  // Based on https://github.com/nodejs/node/blob/c2e6822153bad023ab7ebd30a6117dcc049e475c/lib/repl.js#L413-L422\n  let wrappedCmd = false;\n  if (!wrappedErr && /^\\s*{/.test(input) && !/;\\s*$/.test(input)) {\n    input = `(${input.trim()})\\n`;\n    wrappedCmd = true;\n  }\n\n  const lines = state.lines;\n  const isCompletion = overrideIsCompletion ?? !/\\n$/.test(input);\n  const undo = appendToEvalState(state, input);\n  let output: string;\n\n  // Based on https://github.com/nodejs/node/blob/92573721c7cff104ccb82b6ed3e8aa69c4b27510/lib/repl.js#L457-L461\n  function adjustUseStrict(code: string) {\n    // \"void 0\" keeps the repl from returning \"use strict\" as the result\n    // value for statements and declarations that don't return a value.\n    return code.replace(/^\"use strict\";/, '\"use strict\"; void 0;');\n  }\n\n  try {\n    output = service.compile(state.input, state.path, -lines);\n  } catch (err) {\n    undo();\n\n    if (wrappedCmd) {\n      if (err instanceof TSError && err.diagnosticCodes[0] === 2339) {\n        // Ensure consistent and more sane behavior between { a: 1 }['b'] and ({ a: 1 }['b'])\n        throw err;\n      }\n      // Unwrap and try again\n      return appendCompileAndEvalInput({\n        ...options,\n        wrappedErr: err,\n      });\n    }\n\n    if (wrappedErr) throw wrappedErr;\n    throw err;\n  }\n\n  output = adjustUseStrict(output);\n\n  // Note: REPL does not respect sourcemaps!\n  // To properly do that, we'd need to prefix the code we eval -- which comes\n  // from `diffLines` -- with newlines so that it's at the proper line numbers.\n  // Then we'd need to ensure each bit of eval-ed code, if there are multiples,\n  // has the sourcemap appended to it.\n  // We might also need to integrate with our sourcemap hooks' cache; I'm not sure.\n  const outputWithoutSourcemapComment = output.replace(sourcemapCommentRe, '');\n  const oldOutputWithoutSourcemapComment = state.output.replace(\n    sourcemapCommentRe,\n    ''\n  );\n\n  // Use `diff` to check for new JavaScript to execute.\n  const changes = getDiffLines()(\n    oldOutputWithoutSourcemapComment,\n    outputWithoutSourcemapComment\n  );\n\n  if (isCompletion) {\n    undo();\n  } else {\n    state.output = output;\n\n    // Insert a semicolon to make sure that the code doesn't interact with the next line,\n    // for example to prevent `2\\n+ 2` from producing 4.\n    // This is safe since the output will not change since we can only get here with successful inputs,\n    // and adding a semicolon to the end of a successful input won't ever change the output.\n    state.input = state.input.replace(\n      /([^\\n\\s])([\\n\\s]*)$/,\n      (all, lastChar, whitespace) => {\n        if (lastChar !== ';') return `${lastChar};${whitespace}`;\n        return all;\n      }\n    );\n  }\n\n  let commands: Array<{ mustAwait?: true; execCommand: () => any }> = [];\n  let containsTopLevelAwait = false;\n\n  // Build a list of \"commands\": bits of JS code in the diff that must be executed.\n  for (const change of changes) {\n    if (change.added) {\n      if (\n        enableTopLevelAwait &&\n        service.shouldReplAwait &&\n        change.value.indexOf('await') > -1\n      ) {\n        const processTopLevelAwait = getProcessTopLevelAwait();\n\n        // Newline prevents comments to mess with wrapper\n        const wrappedResult = processTopLevelAwait(change.value + '\\n');\n        if (wrappedResult !== null) {\n          containsTopLevelAwait = true;\n          commands.push({\n            mustAwait: true,\n            execCommand: () => runInContext(wrappedResult, state.path, context),\n          });\n          continue;\n        }\n      }\n      commands.push({\n        execCommand: () => runInContext(change.value, state.path, context),\n      });\n    }\n  }\n\n  // Execute all commands asynchronously if necessary, returning the result or a\n  // promise of the result.\n  if (containsTopLevelAwait) {\n    return {\n      containsTopLevelAwait,\n      valuePromise: (async () => {\n        let value;\n        for (const command of commands) {\n          const r = command.execCommand();\n          value = command.mustAwait ? await r : r;\n        }\n        return value;\n      })(),\n    };\n  } else {\n    return {\n      containsTopLevelAwait: false,\n      value: commands.reduce<any>((_, c) => c.execCommand(), undefined),\n    };\n  }\n}\n\n/**\n * Low-level execution of JS code in context\n */\nfunction runInContext(code: string, filename: string, context?: Context) {\n  const script = new Script(code, { filename });\n\n  if (context === undefined || context === global) {\n    return script.runInThisContext();\n  } else {\n    return script.runInContext(context);\n  }\n}\n\n/**\n * Append to the eval instance and return an undo function.\n */\nfunction appendToEvalState(state: EvalState, input: string) {\n  const undoInput = state.input;\n  const undoVersion = state.version;\n  const undoOutput = state.output;\n  const undoLines = state.lines;\n\n  state.input += input;\n  state.lines += lineCount(input);\n  state.version++;\n\n  return function () {\n    state.input = undoInput;\n    state.output = undoOutput;\n    state.version = undoVersion;\n    state.lines = undoLines;\n  };\n}\n\n/**\n * Count the number of lines.\n */\nfunction lineCount(value: string) {\n  let count = 0;\n\n  for (const char of value) {\n    if (char === '\\n') {\n      count++;\n    }\n  }\n\n  return count;\n}\n\n/**\n * TS diagnostic codes which are recoverable, meaning that the user likely entered an incomplete line of code\n * and should be prompted for the next.  For example, starting a multi-line for() loop and not finishing it.\n * null value means code is always recoverable.  `Set` means code is only recoverable when occurring alongside at least one\n * of the other codes.\n */\nconst RECOVERY_CODES: Map<number, Set<number> | null> = new Map([\n  [1003, null], // \"Identifier expected.\"\n  [1005, null], // \"')' expected.\", \"'}' expected.\"\n  [1109, null], // \"Expression expected.\"\n  [1126, null], // \"Unexpected end of text.\"\n  [\n    1136, // \"Property assignment expected.\"\n    new Set([1005]), // happens when typing out an object literal or block scope across multiple lines: '{ foo: 123,'\n  ],\n  [1160, null], // \"Unterminated template literal.\"\n  [1161, null], // \"Unterminated regular expression literal.\"\n  [2355, null], // \"A function whose declared type is neither 'void' nor 'any' must return a value.\"\n  [2391, null], // \"Function implementation is missing or not immediately following the declaration.\"\n  [\n    7010, // \"Function, which lacks return-type annotation, implicitly has an 'any' return type.\"\n    new Set([1005]), // happens when fn signature spread across multiple lines: 'function a(\\nb: any\\n) {'\n  ],\n]);\n\n/**\n * Diagnostic codes raised when using top-level await.\n * These are suppressed when top-level await is enabled.\n * When it is *not* enabled, these trigger a helpful hint about enabling top-level await.\n */\nconst topLevelAwaitDiagnosticCodes = [\n  1375, // 'await' expressions are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1378, // Top-level 'await' expressions are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n  1431, // 'for await' loops are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1432, // Top-level 'for await' loops are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n];\n\n/**\n * Check if a function can recover gracefully.\n */\nfunction isRecoverable(error: TSError) {\n  return error.diagnosticCodes.every((code) => {\n    const deps = RECOVERY_CODES.get(code);\n    return (\n      deps === null ||\n      (deps && error.diagnosticCodes.some((code) => deps.has(code)))\n    );\n  });\n}\n\n/**\n * @internal\n * Set properties on `context` before eval-ing [stdin] or [eval] input.\n */\nexport function setupContext(\n  context: any,\n  module: Module,\n  filenameAndDirname: 'eval' | 'stdin' | null\n) {\n  if (filenameAndDirname) {\n    context.__dirname = '.';\n    context.__filename = `[${filenameAndDirname}]`;\n  }\n  context.module = module;\n  context.exports = module.exports;\n  context.require = module.require.bind(module);\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":{"lineLengths":[29,161,137,156,72,0,118,0,77,0,35,72,79,134,40,24,59,5,0,7,67,7,34,18,22,44,40,5,0,21,28,26,28,26,33,35,0,41,67,46,28,106,68,19,40,104,59,9,24,5,55,55,39,25,9,31,5,29,47,56,29,13,9,20,5,40,19,32,41,5,35,37,5,0,22,7,81,100,101,22,6,12,28,24,82,6,30,42,42,10,7,56,29,50,55,28,29,27,13,26,30,13,18,31,13,9,22,23,5,50,68,47,22,9,21,5,50,55,47,22,9,21,5,30,16,24,27,26,10,5,7,100,87,7,65,57,20,39,30,40,83,33,13,39,76,55,13,18,33,13,9,28,34,77,5,0,103,32,45,50,50,36,51,36,37,29,55,52,56,60,103,48,107,105,109,66,137,99,13,9,23,5,42,52,36,9,29,5,104,101,104,99,40,31,35,5,0,43,71,36,48,28,27,34,25,36,18,46,46,106,9,34,106,9,24,23,30,18,20,27,21,10,51,6,106,48,74,45,41,53,40,41,97,33,110,59,30,98,99,49,44,56,39,36,107,26,89,108,54,55,51,36,53,108,33,56,26,39,39,29,17,72,52,56,39,79,29,17,107,13,9,5,33,46,31,5,101,101,99,58,38,34,37,37,30,5,0,52,21,19,21,19,7,53,19,21,7,82,102,33,35,7,79,7,37,7,95,7,37,7,97,84,7,34,7,96,101,28,7,41,7,104,93,6,103,87,7,42,7,57,7,33,7,103,12,7,41,7,104,41,7,32,7,104,41,7,32,20,34,48,40,44,53,58,27,62,89,35,29,31,41,35,49,39,78,82,13,18,67,13,40,47,41,42,13,18,42,62,13,9,5,12,44,19,127,10,44,90,10,55,57,88,85,39,28,109,10,72,19,25,47,27,49,57,88,85,39,48,126,32,48,36,48,51,20,64,47,47,80,14,10,81,19,25,47,27,49,53,54,35,62,35,49,165,45,58,33,49,123,32,49,20,54,54,14,10,44,57,51,54,40,55,40,48,51,38,44,46,36,43,57,50,48,21,41,45,24,38,40,31,37,39,29,23,17,13,10,56,49,32,55,43,26,10,39,20,27,31,33,43,37,51,55,14,10,39,20,27,31,33,43,37,51,55,14,10,9,71,71,20,100,9,44,20,54,24,31,5,0,28,56,50,32,0,66,0,4,45,0],"data":{"version":3,"file":"trace-mapping.umd.js","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/resolve.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/strip-filename.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/sourcemap-segment.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/sort.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/binary-search.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/by-source.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/any-map.ts","file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/trace-mapping.ts"],"sourcesContent":[null,null,null,null,null,null,null,null],"names":["resolveUri","presortedDecodedMap","decodedMappings","encodedMappings","traceSegment","originalPositionFor","generatedPositionFor","eachMapping","decodedMap","encodedMap","encode","decode","bsFound"],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":{"lineLengths":[29,85,79,116,44,0,36,40,85,63,63,44,38,25,25,5,49,49,43,39,15,29,88,42,18,13,15,29,33,58,59,21,31,18,14,31,40,27,22,12,50,28,30,28,25,48,24,70,37,34,35,30,52,77,75,77,56,79,76,21,26,66,21,17,22,32,17,31,13,24,27,31,29,43,23,5,39,49,50,5,53,22,22,24,12,49,35,45,23,31,39,21,27,41,9,26,19,5,46,24,25,48,5,25,34,5,35,27,5,30,40,36,41,46,47,20,21,50,36,24,40,42,28,17,39,13,34,25,25,51,40,86,36,38,42,54,37,17,26,39,78,41,29,81,79,81,41,29,79,13,9,53,5,57,32,34,24,51,12,41,23,24,36,44,26,19,5,0,28,28,0,66,0,4,47,0],"data":{"version":3,"file":"sourcemap-codec.umd.js","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts"],"sourcesContent":["export type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array) {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array) {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport function decode(mappings: string): SourceMapMappings {\n  const state: [number, number, number, number, number] = new Int32Array(5) as any;\n  const decoded: SourceMapMappings = [];\n\n  let index = 0;\n  do {\n    const semi = indexOf(mappings, index);\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    state[0] = 0;\n\n    for (let i = index; i < semi; i++) {\n      let seg: SourceMapSegment;\n\n      i = decodeInteger(mappings, i, state, 0); // genColumn\n      const col = state[0];\n      if (col < lastCol) sorted = false;\n      lastCol = col;\n\n      if (hasMoreVlq(mappings, i, semi)) {\n        i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n        i = decodeInteger(mappings, i, state, 2); // sourceLine\n        i = decodeInteger(mappings, i, state, 3); // sourceColumn\n\n        if (hasMoreVlq(mappings, i, semi)) {\n          i = decodeInteger(mappings, i, state, 4); // namesIndex\n          seg = [col, state[1], state[2], state[3], state[4]];\n        } else {\n          seg = [col, state[1], state[2], state[3]];\n        }\n      } else {\n        seg = [col];\n      }\n\n      line.push(seg);\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    index = semi + 1;\n  } while (index <= mappings.length);\n\n  return decoded;\n}\n\nfunction indexOf(mappings: string, index: number): number {\n  const idx = mappings.indexOf(';', index);\n  return idx === -1 ? mappings.length : idx;\n}\n\nfunction decodeInteger(mappings: string, pos: number, state: SourceMapSegment, j: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = mappings.charCodeAt(pos++);\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  state[j] += value;\n  return pos;\n}\n\nfunction hasMoreVlq(mappings: string, i: number, length: number): boolean {\n  if (i >= length) return false;\n  return mappings.charCodeAt(i) !== comma;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const state: [number, number, number, number, number] = new Int32Array(5) as any;\n  const bufLength = 1024 * 16;\n  const subLength = bufLength - 36;\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  let pos = 0;\n  let out = '';\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) {\n      if (pos === bufLength) {\n        out += td.decode(buf);\n        pos = 0;\n      }\n      buf[pos++] = semicolon;\n    }\n    if (line.length === 0) continue;\n\n    state[0] = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      // We can push up to 5 ints, each int can take at most 7 chars, and we\n      // may push a comma.\n      if (pos > subLength) {\n        out += td.decode(sub);\n        buf.copyWithin(0, subLength, pos);\n        pos -= subLength;\n      }\n      if (j > 0) buf[pos++] = comma;\n\n      pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n\n      if (segment.length === 1) continue;\n      pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n      pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n      pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n\n      if (segment.length === 4) continue;\n      pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n    }\n  }\n\n  return out + td.decode(buf.subarray(0, pos));\n}\n\nfunction encodeInteger(\n  buf: Uint8Array,\n  pos: number,\n  state: SourceMapSegment,\n  segment: SourceMapSegment,\n  j: number,\n): number {\n  const next = segment[j];\n  let num = next - state[j];\n  state[j] = next;\n\n  num = num < 0 ? (-num << 1) | 1 : num << 1;\n  do {\n    let clamped = num & 0b011111;\n    num >>>= 5;\n    if (num > 0) clamped |= 0b100000;\n    buf[pos++] = intToChar[clamped];\n  } while (num > 0);\n\n  return pos;\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":{"lineLengths":[29,95,66,110,37,0,48,41,7,34,44,49,27,40,40,41,40,7,96,7,101,102,6,25,50,41,40,7,88,35,39,5,41,38,5,36,37,5,31,41,5,32,36,5,38,43,124,5,34,44,30,130,5,67,16,19,17,17,17,17,18,17,35,10,5,30,41,58,28,46,23,9,36,67,28,26,44,23,9,29,39,33,43,64,24,22,24,35,31,39,34,42,28,19,5,38,100,56,33,24,44,40,5,36,39,105,17,31,33,9,14,86,63,9,5,7,96,66,7,39,49,43,101,40,24,104,100,25,105,101,93,37,49,36,96,25,40,25,13,86,37,61,30,25,104,74,33,31,44,31,30,17,31,112,101,46,17,25,13,108,49,38,23,9,22,43,36,9,67,24,9,24,5,7,63,7,35,28,22,36,33,53,43,42,32,35,44,31,34,46,31,35,42,45,31,42,98,44,44,44,31,44,103,48,13,37,37,9,38,47,28,92,34,30,31,33,40,81,47,26,44,69,108,104,87,51,17,40,13,38,44,20,97,9,5,0,19,0,4,43,0],"data":{"version":3,"file":"resolve-uri.umd.js","sources":["file:///C:/Users/AbdulafeezAdetunmbi/desktop/first-fastify/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/esm.js":{"lineLengths":[13,62,102,35,29,31,33,33,35,91,81,7,64,11,12,16,41,91,65,42,115,31,119,120,20,1,58,16,42,74,55,42,1,62,40,109,73,76,48,86,46,16,13,18,24,67,30,7,43,71,73,64,28,65,42,39,56,17,15,31,26,45,11,8,9,14,33,9,16,53,67,24,36,6,5,52,107,36,57,5,126,7,59,81,7,57,108,5,58,51,58,64,35,79,21,10,64,119,47,17,46,90,69,34,13,38,72,43,21,49,75,25,60,79,21,29,141,65,72,67,17,47,43,17,13,9,48,55,60,57,49,13,60,49,13,74,27,100,49,13,50,122,11,5,80,52,54,80,123,130,35,64,63,70,31,27,32,68,112,17,119,102,27,19,36,21,132,47,17,28,80,44,37,67,54,60,55,30,17,13,38,11,5,62,102,64,119,47,17,34,13,36,59,41,46,13,9,45,53,45,9,36,95,57,21,112,80,52,64,70,50,138,9,14,17,59,13,23,108,32,32,39,76,153,74,17,24,13,9,130,117,148,39,46,13,44,44,13,9,24,5,77,54,41,9,92,93,32,45,53,27,9,57,48,27,9,76,37,5,20,1,40,40,31,81,24,23,16,19,31,10,7,1,31],"data":{"version":3,"file":"esm.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/esm.ts"],"names":[],"mappings":";;;AAAA,mCAA2E;AAC3E,6BAA+G;AAC/G,+BAAuD;AACvD,iCAAiC;AACjC,iCAAwD;AACxD,mCAAuC;AA8FvC,2FAA2F;AAC3F,MAAM,eAAe,GAAG,IAAA,mBAAY,EAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC;IACnE,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,IAAA,mBAAY,EAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC,CAAC;AAEN,gBAAgB;AAChB,SAAgB,uBAAuB,CACrC,KAAsE;IAEtE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;IACvF,6DAA6D;IAC7D,MAAM,QAAQ,GACZ,eAAe,KAAK,CAAC;QACnB,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE;QAC3G,CAAC,CAAC,eAAe,KAAK,CAAC;YACvB,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE;YAC3G,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;IAChH,OAAO,QAAQ,CAAC;AAClB,CAAC;AAZD,0DAYC;AAED,gBAAgB;AAChB,SAAgB,yBAAyB,CAAC,IAAsB;IAC9D,sEAAsE;IACtE,MAAM,cAAc,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAC;IAEtC,OAAO,cAAc,CAAC,cAAc,CAAC,CAAC;AACxC,CAAC;AALD,8DAKC;AAED,SAAgB,cAAc,CAAC,aAAsB;IACnD,yGAAyG;IACzG,MAAM,yBAAyB,GAAG,aAAa,CAAC,kBAAkB,EAAE,CAAC;IACrE,MAAM,2BAA2B,GAAG,aAAa,CAAC,mBAAmB,EAAE,CAAC;IACxE,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;IAC5C,MAAM,eAAe,GAAG,IAAA,mBAAY,EAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAEtE,MAAM,QAAQ,GAAG,uBAAuB,CAAC;QACvC,OAAO;QACP,IAAI;QACJ,SAAS;QACT,eAAe;QACf,aAAa,EAAE,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS;QAC1D,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;IAEH,SAAS,aAAa,CAAC,EAAE,IAAI,KAA6B,EAAE;QAC1D,+DAA+D;QAC/D,iEAAiE;QACjE,wDAAwD;QACxD,IAAI,eAAuB,CAAC;QAC5B,IAAI,IAAI,IAAI,aAAa,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;YACtD,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAA+B,EAAE,EAAE;gBACrD,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBACrC;YACH,CAAC,CAAC,CAAC;YACH,eAAe,GAAG;;;;OAIjB,CAAC;SACH;aAAM;YACL,eAAe,GAAG,EAAE,CAAC;SACtB;QACD,OAAO;;sCAE2B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QACxD,eAAe;;KAElB,CAAC;IACJ,CAAC;IAED,SAAS,6BAA6B,CAAC,MAA0B;QAC/D,mGAAmG;QACnG,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;QAC5B,OAAO,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,OAAO,CAAC;IACnD,CAAC;IAED,MAAM,cAAc,GAAG,IAAA,mBAAa,EAAC,IAAA,cAAW,EAAC,SAAS,EAAE,6BAA6B,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAEvG;;;OAGG;IACH,SAAS,oBAAoB,CAAC,SAAiB,EAAE,SAAiB;QAChE,OAAO,CAAC,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,cAAc,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACtG,CAAC;IACD,sDAAsD;IACtD,MAAM,4BAA4B,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/C,MAAM,mCAAmC,GAAG,IAAI,GAAG,EAAE,CAAC;IAEtD,KAAK,UAAU,OAAO,CACpB,SAAiB,EACjB,OAA8B,EAC9B,cAA8B;QAE9B,MAAM,KAAK,GAAG,KAAK,IAAI,EAAE;YACvB,MAAM,CAAC,GAAG,MAAM,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;YACnE,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;QACF,wDAAwD;QACxD,+GAA+G;QAC/G,KAAK,UAAU,kBAAkB,CAC/B,EAA0E;YAE1E,IAAI;gBACF,MAAM,UAAU,GAAG,MAAM,EAAE,EAAE,CAAC;gBAC9B,IAAI,UAAU,EAAE,GAAG,IAAI,oBAAoB,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC;oBACvE,4BAA4B,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACnD,OAAO,UAAU,CAAC;aACnB;YAAC,OAAO,gBAAgB,EAAE;gBACzB,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC;oBAAE,MAAM,gBAAgB,CAAC;gBAChF,IAAI;oBACF,IAAI,YAAY,GAAG,SAAS,CAAC;oBAC7B,uDAAuD;oBACvD,IAAI;wBACF,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC;4BAAE,YAAY,GAAG,IAAA,mBAAa,EAAC,SAAS,CAAC,CAAC;qBAC9E;oBAAC,MAAM,GAAE;oBACV,MAAM,UAAU,GAAG,IAAA,mBAAa,EAAC,IAAA,sBAAa,EAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;oBAChG,4BAA4B,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBAC7C,mCAAmC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACpD,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;iBAChD;gBAAC,OAAO,qBAAqB,EAAE;oBAC9B,MAAM,gBAAgB,CAAC;iBACxB;aACF;QACH,CAAC;QAED,OAAO,mBAAmB,CAAC,KAAK,IAAI,EAAE;YACpC,MAAM,MAAM,GAAG,IAAA,WAAQ,EAAC,SAAS,CAAC,CAAC;YACnC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;YAEhD,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,EAAE;gBAC1C,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAClC;YAED,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,OAAO,EAAE;gBAC7C,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAClC;YAED,8DAA8D;YAC9D,IAAI,QAAQ,EAAE;gBACZ,oFAAoF;gBACpF,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAClC;YAED,sCAAsC;YAEtC,OAAO,kBAAkB,CAAC,GAAG,EAAE,CAAC,yBAAyB,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC;QAChH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAA4E;IAC5E,KAAK,UAAU,IAAI,CACjB,GAAW,EACX,OAGC,EACD,WAAwB;QAKxB,OAAO,MAAM,mBAAmB,CAAC,KAAK,IAAI,EAAE;YAC1C,oEAAoE;YACpE,+GAA+G;YAC/G,MAAM,MAAM,GACV,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,2BAA2B,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC;YAEzG,IAAI,MAAM,GAAG,SAAS,CAAC;YACvB,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,UAAU,EAAE;gBACjD,+CAA+C;gBAC/C,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,WAAW,CAC7C,GAAG,EACH;oBACE,GAAG,OAAO;oBACV,MAAM;iBACP,EACD,WAAW,CACZ,CAAC;gBAEF,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;oBACjD,MAAM,IAAI,KAAK,CAAC,0CAA0C,MAAM,kBAAkB,GAAG,KAAK,CAAC,CAAC;iBAC7F;gBAED,uGAAuG;gBACvG,MAAM,sBAAsB,GAA2B,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,uBAAuB,EAAE,EAAE,CAAC,CAAC;oBAC3G,MAAM;iBACP,CAAC,CAAC;gBAEH,oBAAoB;gBACpB,IAAI;oBACF,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE,GAAG,MAAM,eAAe,CACzD,SAAS,EACT,EAAE,GAAG,EAAE,MAAM,EAAE,EACf,sBAAsB,CACvB,CAAC;oBACF,MAAM,GAAG,iBAAiB,CAAC;iBAC5B;gBAAC,OAAO,EAAE,EAAE;oBACX,4DAA4D;oBAC5D,wBAAwB;oBACxB,MAAM,KAAK,GAAG,EAAa,CAAC;oBAC5B,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC/C,MAAM,EAAE,eAAe,EAAE,GAAG,KAAK,CAAC;oBAClC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC;oBACxC,KAAK,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACnC,MAAM,GAAG,CAAC;iBACX;aACF;YAED,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,UAAU,SAAS,CACtB,GAAW,EACX,OAAW,EACX,gBAAkC;QAElC,MAAM,KAAK,GAAG,CAAC,cAAsB,GAAG,EAAE,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;QAEtG,wDAAwD;QACxD,+GAA+G;QAC/G,KAAK,UAAU,kBAAkB,CAAC,EAAsC;YACtE,IAAI;gBACF,OAAO,MAAM,EAAE,EAAE,CAAC;aACnB;YAAC,OAAO,cAAc,EAAE;gBACvB,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,GAAG,CAAC;oBAAE,MAAM,cAAc,CAAC;gBACjE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAC/B;QACH,CAAC;QAED,MAAM,MAAM,GAAG,IAAA,WAAQ,EAAC,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,EAAE;YAC1C,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAClC;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;QAC5B,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE,2DAA2D,CAAC,CAAC;QAEvF,MAAM,UAAU,GAAG,IAAA,mBAAa,EAAC,GAAG,CAAC,CAAC;QAEtC,IAAI,QAA2C,CAAC;QAEhD,wGAAwG;QACxG,wEAAwE;QACxE,MAAM,GAAG,GAAG,IAAA,cAAO,EAAC,UAAU,CAAC,CAAC;QAChC,MAAM,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACxD,MAAM,iBAAiB,GAAG,UAAU,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI,iBAAiB,IAAI,CAAC,aAAa,EAAE;YACvC,QAAQ,GAAG,MAAM,kBAAkB,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAA,YAAS,EAAC,IAAA,mBAAa,EAAC,UAAU,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5G;aAAM;YACL,IAAI;gBACF,QAAQ,GAAG,MAAM,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAC5C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,YAAY,KAAK,IAAI,aAAa,IAAI,UAAU,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;oBACzF,CAAC,CAAC,OAAO;wBACP,MAAM;4BACN,SAAS;4BACT,8CAA8C;4BAC9C,2HAA2H;4BAC3H,6CAA6C,CAAC;iBACjD;gBACD,MAAM,CAAC,CAAC;aACT;SACF;QACD,0HAA0H;QAC1H,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,UAAU,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,EAAE;YAC1G,MAAM,EAAE,UAAU,EAAE,GAAG,aAAa,CAAC,oBAAoB,CAAC,mCAAmC,CAC3F,IAAA,uBAAgB,EAAC,UAAU,CAAC,CAC7B,CAAC;YACF,IAAI,UAAU,KAAK,KAAK,EAAE;gBACxB,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;aAC/B;iBAAM,IAAI,UAAU,KAAK,KAAK,EAAE;gBAC/B,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;aAC7B;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,KAAK,UAAU,eAAe,CAC5B,MAAuB,EACvB,OAAuD,EACvD,sBAA8C;QAE9C,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;SAC9B;QAED,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,sBAAsB,CAAC,MAAM,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC;QAEpF,MAAM,cAAc,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAErF,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC;QACxB,MAAM,MAAM,GAAG,IAAA,WAAQ,EAAC,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,EAAE;YAC1C,OAAO,KAAK,EAAE,CAAC;SAChB;QACD,MAAM,UAAU,GAAG,IAAA,mBAAa,EAAC,GAAG,CAAC,CAAC;QAEtC,IAAI,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACrC,OAAO,KAAK,EAAE,CAAC;SAChB;QAED,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QAEpE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AA5RD,wCA4RC;AAED,KAAK,UAAU,mBAAmB,CAAI,EAAoB;IACxD,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;QACvB,yEAAyE;QACzE,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,GAAG,CAAC;QAC5B,OAAO;YACL,GAAG,GAAG;YACN,YAAY,EAAE,IAAI;SACnB,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { register, RegisterOptions, Service, type TSError } from './index';\nimport { parse as parseUrl, format as formatUrl, UrlWithStringQuery, fileURLToPath, pathToFileURL } from 'url';\nimport { extname, resolve as pathResolve } from 'path';\nimport * as assert from 'assert';\nimport { normalizeSlashes, versionGteLt } from './util';\nimport { createRequire } from 'module';\nimport type { MessagePort } from 'worker_threads';\n\n// Note: On Windows, URLs look like this: file:///D:/dev/@TypeStrong/ts-node-examples/foo.ts\n\n// NOTE ABOUT MULTIPLE EXPERIMENTAL LOADER APIS\n//\n// At the time of writing, this file implements 2x different loader APIs.\n// Node made a breaking change to the loader API in https://github.com/nodejs/node/pull/37468\n//\n// We check the node version number and export either the *old* or the *new* API.\n//\n// Today, we are implementing the *new* API on top of our implementation of the *old* API,\n// which relies on copy-pasted code from the *old* hooks implementation in node.\n//\n// In the future, we will likely invert this: we will copy-paste the *new* API implementation\n// from node, build our implementation of the *new* API on top of it, and implement the *old*\n// hooks API as a shim to the *new* API.\n\nexport interface NodeLoaderHooksAPI1 {\n  resolve: NodeLoaderHooksAPI1.ResolveHook;\n  getFormat: NodeLoaderHooksAPI1.GetFormatHook;\n  transformSource: NodeLoaderHooksAPI1.TransformSourceHook;\n}\nexport namespace NodeLoaderHooksAPI1 {\n  export type ResolveHook = NodeLoaderHooksAPI2.ResolveHook;\n  export type GetFormatHook = (\n    url: string,\n    context: {},\n    defaultGetFormat: GetFormatHook\n  ) => Promise<{ format: NodeLoaderHooksFormat }>;\n  export type TransformSourceHook = (\n    source: string | Buffer,\n    context: { url: string; format: NodeLoaderHooksFormat },\n    defaultTransformSource: NodeLoaderHooksAPI1.TransformSourceHook\n  ) => Promise<{ source: string | Buffer }>;\n}\n\nexport interface NodeLoaderHooksAPI2 {\n  resolve: NodeLoaderHooksAPI2.ResolveHook;\n  load: NodeLoaderHooksAPI2.LoadHook;\n  globalPreload?: NodeLoaderHooksAPI2.GlobalPreloadHook;\n}\nexport namespace NodeLoaderHooksAPI2 {\n  export type ResolveHook = (\n    specifier: string,\n    context: {\n      conditions?: NodeImportConditions;\n      importAssertions?: NodeImportAssertions;\n      parentURL: string;\n    },\n    defaultResolve: ResolveHook\n  ) => Promise<{\n    url: string;\n    format?: NodeLoaderHooksFormat;\n    shortCircuit?: boolean;\n  }>;\n  export type LoadHook = (\n    url: string,\n    context: {\n      format: NodeLoaderHooksFormat | null | undefined;\n      importAssertions?: NodeImportAssertions;\n    },\n    defaultLoad: NodeLoaderHooksAPI2['load']\n  ) => Promise<{\n    format: NodeLoaderHooksFormat;\n    source: string | Buffer | undefined;\n    shortCircuit?: boolean;\n  }>;\n  export type NodeImportConditions = unknown;\n  export interface NodeImportAssertions {\n    type?: 'json';\n  }\n  export type GlobalPreloadHook = (context?: { port: MessagePort }) => string;\n}\n\nexport interface NodeLoaderHooksAPI3 {\n  resolve: NodeLoaderHooksAPI2.ResolveHook;\n  load: NodeLoaderHooksAPI2.LoadHook;\n  initialize?: NodeLoaderHooksAPI3.InitializeHook;\n}\nexport namespace NodeLoaderHooksAPI3 {\n  // technically this can be anything that can be passed through a postMessage channel,\n  // but defined here based on how ts-node uses it.\n  export type InitializeHook = (data: any) => void | Promise<void>;\n}\n\nexport type NodeLoaderHooksFormat = 'builtin' | 'commonjs' | 'dynamic' | 'json' | 'module' | 'wasm';\n\nexport type NodeImportConditions = unknown;\nexport interface NodeImportAssertions {\n  type?: 'json';\n}\n\n// The hooks API changed in node version X so we need to check for backwards compatibility.\nconst hooksAPIVersion = versionGteLt(process.versions.node, '21.0.0')\n  ? 3\n  : versionGteLt(process.versions.node, '16.12.0')\n  ? 2\n  : 1;\n\n/** @internal */\nexport function filterHooksByAPIVersion(\n  hooks: NodeLoaderHooksAPI1 & NodeLoaderHooksAPI2 & NodeLoaderHooksAPI3\n): NodeLoaderHooksAPI1 | NodeLoaderHooksAPI2 | NodeLoaderHooksAPI3 {\n  const { getFormat, load, resolve, transformSource, globalPreload, initialize } = hooks;\n  // Explicit return type to avoid TS's non-ideal inferred type\n  const hooksAPI: NodeLoaderHooksAPI1 | NodeLoaderHooksAPI2 | NodeLoaderHooksAPI3 =\n    hooksAPIVersion === 3\n      ? { resolve, load, initialize, globalPreload: undefined, transformSource: undefined, getFormat: undefined }\n      : hooksAPIVersion === 2\n      ? { resolve, load, globalPreload, initialize: undefined, getFormat: undefined, transformSource: undefined }\n      : { resolve, getFormat, transformSource, initialize: undefined, globalPreload: undefined, load: undefined };\n  return hooksAPI;\n}\n\n/** @internal */\nexport function registerAndCreateEsmHooks(opts?: RegisterOptions) {\n  // Automatically performs registration just like `-r ts-node/register`\n  const tsNodeInstance = register(opts);\n\n  return createEsmHooks(tsNodeInstance);\n}\n\nexport function createEsmHooks(tsNodeService: Service) {\n  // Custom implementation that considers additional file extensions and automatically adds file extensions\n  const nodeResolveImplementation = tsNodeService.getNodeEsmResolver();\n  const nodeGetFormatImplementation = tsNodeService.getNodeEsmGetFormat();\n  const extensions = tsNodeService.extensions;\n  const useLoaderThread = versionGteLt(process.versions.node, '20.0.0');\n\n  const hooksAPI = filterHooksByAPIVersion({\n    resolve,\n    load,\n    getFormat,\n    transformSource,\n    globalPreload: useLoaderThread ? globalPreload : undefined,\n    initialize: undefined,\n  });\n\n  function globalPreload({ port }: { port?: MessagePort } = {}) {\n    // The loader thread doesn't get process.stderr.isTTY properly,\n    // so this signal lets us infer it based on the state of the main\n    // thread, but only relevant if options.pretty is unset.\n    let stderrTTYSignal: string;\n    if (port && tsNodeService.options.pretty === undefined) {\n      port.on('message', (data: { stderrIsTTY?: boolean }) => {\n        if (data.stderrIsTTY) {\n          tsNodeService.setPrettyErrors(true);\n        }\n      });\n      stderrTTYSignal = `\n        port.postMessage({\n          stderrIsTTY: !!process.stderr.isTTY\n        });\n      `;\n    } else {\n      stderrTTYSignal = '';\n    }\n    return `\n      const { createRequire } = getBuiltin('module');\n      const require = createRequire(${JSON.stringify(__filename)});\n      ${stderrTTYSignal}\n      require('./index').register();\n    `;\n  }\n\n  function isFileUrlOrNodeStyleSpecifier(parsed: UrlWithStringQuery) {\n    // We only understand file:// URLs, but in node, the specifier can be a node-style `./foo` or `foo`\n    const { protocol } = parsed;\n    return protocol === null || protocol === 'file:';\n  }\n\n  const runMainHackUrl = pathToFileURL(pathResolve(__dirname, '../dist-raw/runmain-hack.js')).toString();\n\n  /**\n   * Named \"probably\" as a reminder that this is a guess.\n   * node does not explicitly tell us if we're resolving the entrypoint or not.\n   */\n  function isProbablyEntrypoint(specifier: string, parentURL: string) {\n    return (parentURL === undefined || parentURL === runMainHackUrl) && specifier.startsWith('file://');\n  }\n  // Side-channel between `resolve()` and `load()` hooks\n  const rememberIsProbablyEntrypoint = new Set();\n  const rememberResolvedViaCommonjsFallback = new Set();\n\n  async function resolve(\n    specifier: string,\n    context: { parentURL: string },\n    defaultResolve: typeof resolve\n  ): Promise<{ url: string; format?: NodeLoaderHooksFormat }> {\n    const defer = async () => {\n      const r = await defaultResolve(specifier, context, defaultResolve);\n      return r;\n    };\n    // See: https://github.com/nodejs/node/discussions/41711\n    // nodejs will likely implement a similar fallback.  Till then, we can do our users a favor and fallback today.\n    async function entrypointFallback(\n      cb: () => ReturnType<typeof resolve> | Awaited<ReturnType<typeof resolve>>\n    ): ReturnType<typeof resolve> {\n      try {\n        const resolution = await cb();\n        if (resolution?.url && isProbablyEntrypoint(specifier, context.parentURL))\n          rememberIsProbablyEntrypoint.add(resolution.url);\n        return resolution;\n      } catch (esmResolverError) {\n        if (!isProbablyEntrypoint(specifier, context.parentURL)) throw esmResolverError;\n        try {\n          let cjsSpecifier = specifier;\n          // Attempt to convert from ESM file:// to CommonJS path\n          try {\n            if (specifier.startsWith('file://')) cjsSpecifier = fileURLToPath(specifier);\n          } catch {}\n          const resolution = pathToFileURL(createRequire(process.cwd()).resolve(cjsSpecifier)).toString();\n          rememberIsProbablyEntrypoint.add(resolution);\n          rememberResolvedViaCommonjsFallback.add(resolution);\n          return { url: resolution, format: 'commonjs' };\n        } catch (commonjsResolverError) {\n          throw esmResolverError;\n        }\n      }\n    }\n\n    return addShortCircuitFlag(async () => {\n      const parsed = parseUrl(specifier);\n      const { pathname, protocol, hostname } = parsed;\n\n      if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n        return entrypointFallback(defer);\n      }\n\n      if (protocol !== null && protocol !== 'file:') {\n        return entrypointFallback(defer);\n      }\n\n      // Malformed file:// URL?  We should always see `null` or `''`\n      if (hostname) {\n        // TODO file://./foo sets `hostname` to `'.'`.  Perhaps we should special-case this.\n        return entrypointFallback(defer);\n      }\n\n      // pathname is the path to be resolved\n\n      return entrypointFallback(() => nodeResolveImplementation.defaultResolve(specifier, context, defaultResolve));\n    });\n  }\n\n  // `load` from new loader hook API (See description at the top of this file)\n  async function load(\n    url: string,\n    context: {\n      format: NodeLoaderHooksFormat | null | undefined;\n      importAssertions?: NodeLoaderHooksAPI2.NodeImportAssertions;\n    },\n    defaultLoad: typeof load\n  ): Promise<{\n    format: NodeLoaderHooksFormat;\n    source: string | Buffer | undefined;\n  }> {\n    return await addShortCircuitFlag(async () => {\n      // If we get a format hint from resolve() on the context then use it\n      // otherwise call the old getFormat() hook using node's old built-in defaultGetFormat() that ships with ts-node\n      const format =\n        context.format ?? (await getFormat(url, context, nodeGetFormatImplementation.defaultGetFormat)).format;\n\n      let source = undefined;\n      if (format !== 'builtin' && format !== 'commonjs') {\n        // Call the new defaultLoad() to get the source\n        const { source: rawSource } = await defaultLoad(\n          url,\n          {\n            ...context,\n            format,\n          },\n          defaultLoad\n        );\n\n        if (rawSource === undefined || rawSource === null) {\n          throw new Error(`Failed to load raw source: Format was '${format}' and url was '${url}''.`);\n        }\n\n        // Emulate node's built-in old defaultTransformSource() so we can re-use the old transformSource() hook\n        const defaultTransformSource: typeof transformSource = async (source, _context, _defaultTransformSource) => ({\n          source,\n        });\n\n        // Call the old hook\n        try {\n          const { source: transformedSource } = await transformSource(\n            rawSource,\n            { url, format },\n            defaultTransformSource\n          );\n          source = transformedSource;\n        } catch (er) {\n          // throw an error that can make it through the loader thread\n          // comms channel intact.\n          const tsErr = er as TSError;\n          const err = new Error(tsErr.message.trimEnd());\n          const { diagnosticCodes } = tsErr;\n          Object.assign(err, { diagnosticCodes });\n          Error.captureStackTrace(err, load);\n          throw err;\n        }\n      }\n\n      return { format, source };\n    });\n  }\n\n  async function getFormat(\n    url: string,\n    context: {},\n    defaultGetFormat: typeof getFormat\n  ): Promise<{ format: NodeLoaderHooksFormat }> {\n    const defer = (overrideUrl: string = url) => defaultGetFormat(overrideUrl, context, defaultGetFormat);\n\n    // See: https://github.com/nodejs/node/discussions/41711\n    // nodejs will likely implement a similar fallback.  Till then, we can do our users a favor and fallback today.\n    async function entrypointFallback(cb: () => ReturnType<typeof getFormat>): ReturnType<typeof getFormat> {\n      try {\n        return await cb();\n      } catch (getFormatError) {\n        if (!rememberIsProbablyEntrypoint.has(url)) throw getFormatError;\n        return { format: 'commonjs' };\n      }\n    }\n\n    const parsed = parseUrl(url);\n\n    if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n      return entrypointFallback(defer);\n    }\n\n    const { pathname } = parsed;\n    assert(pathname !== null, 'ESM getFormat() hook: URL should never have null pathname');\n\n    const nativePath = fileURLToPath(url);\n\n    let nodeSays: { format: NodeLoaderHooksFormat };\n\n    // If file has extension not understood by node, then ask node how it would treat the emitted extension.\n    // E.g. .mts compiles to .mjs, so ask node how to classify an .mjs file.\n    const ext = extname(nativePath);\n    const tsNodeIgnored = tsNodeService.ignored(nativePath);\n    const nodeEquivalentExt = extensions.nodeEquivalents.get(ext);\n    if (nodeEquivalentExt && !tsNodeIgnored) {\n      nodeSays = await entrypointFallback(() => defer(formatUrl(pathToFileURL(nativePath + nodeEquivalentExt))));\n    } else {\n      try {\n        nodeSays = await entrypointFallback(defer);\n      } catch (e) {\n        if (e instanceof Error && tsNodeIgnored && extensions.nodeDoesNotUnderstand.includes(ext)) {\n          e.message +=\n            `\\n\\n` +\n            `Hint:\\n` +\n            `ts-node is configured to ignore this file.\\n` +\n            `If you want ts-node to handle this file, consider enabling the \"skipIgnore\" option or adjusting your \"ignore\" patterns.\\n` +\n            `https://typestrong.org/ts-node/docs/scope\\n`;\n        }\n        throw e;\n      }\n    }\n    // For files compiled by ts-node that node believes are either CJS or ESM, check if we should override that classification\n    if (!tsNodeService.ignored(nativePath) && (nodeSays.format === 'commonjs' || nodeSays.format === 'module')) {\n      const { moduleType } = tsNodeService.moduleTypeClassifier.classifyModuleByModuleTypeOverrides(\n        normalizeSlashes(nativePath)\n      );\n      if (moduleType === 'cjs') {\n        return { format: 'commonjs' };\n      } else if (moduleType === 'esm') {\n        return { format: 'module' };\n      }\n    }\n    return nodeSays;\n  }\n\n  async function transformSource(\n    source: string | Buffer,\n    context: { url: string; format: NodeLoaderHooksFormat },\n    defaultTransformSource: typeof transformSource\n  ): Promise<{ source: string | Buffer }> {\n    if (source === null || source === undefined) {\n      throw new Error('No source');\n    }\n\n    const defer = () => defaultTransformSource(source, context, defaultTransformSource);\n\n    const sourceAsString = typeof source === 'string' ? source : source.toString('utf8');\n\n    const { url } = context;\n    const parsed = parseUrl(url);\n\n    if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n      return defer();\n    }\n    const nativePath = fileURLToPath(url);\n\n    if (tsNodeService.ignored(nativePath)) {\n      return defer();\n    }\n\n    const emittedJs = tsNodeService.compile(sourceAsString, nativePath);\n\n    return { source: emittedJs };\n  }\n\n  return hooksAPI;\n}\n\nasync function addShortCircuitFlag<T>(fn: () => Promise<T>) {\n  return fn().then((ret) => {\n    // Not sure if this is necessary; being lazy.  Can revisit in the future.\n    if (ret == null) return ret;\n    return {\n      ...ret,\n      shortCircuit: true,\n    };\n  });\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/index.js":{"lineLengths":[13,62,263,31,35,29,29,43,33,51,69,61,59,79,55,63,99,31,115,44,3,45,3,68,16,26,3,12,3,58,3,23,3,62,16,27,80,22,27,20,18,23,44,25,10,5,20,3,30,3,53,3,71,13,12,3,20,60,51,53,44,53,55,43,77,58,41,66,64,69,81,70,62,68,60,100,39,2,3,32,3,46,68,68,47,30,55,31,27,34,11,52,31,27,31,11,5,7,16,7,32,35,5,1,26,62,34,46,32,50,36,48,5,56,43,49,31,110,77,38,49,61,19,1,28,3,39,2,18,3,34,81,56,1,24,16,55,122,106,59,74,78,71,100,5,89,36,117,57,44,46,119,9,33,124,9,5,57,63,88,113,31,39,29,40,56,5,27,61,49,5,59,31,9,36,34,33,21,22,22,58,23,138,21,26,53,26,10,6,85,34,90,92,51,123,155,28,41,39,79,99,6,70,90,5,57,44,25,31,101,95,96,73,81,44,92,69,36,76,44,30,32,33,38,53,26,50,22,55,39,41,19,13,9,5,61,91,40,35,72,47,19,9,74,34,32,37,37,60,87,49,25,62,21,31,43,21,17,58,60,14,45,95,253,14,11,5,31,26,38,40,50,77,35,5,92,41,78,63,73,5,50,58,31,63,54,9,14,47,24,9,5,39,36,44,71,7,47,44,7,37,51,32,49,26,27,27,33,28,28,60,28,28,34,28,28,34,13,9,21,5,7,82,12,7,18,20,97,91,55,38,7,89,67,25,39,56,87,43,36,35,101,49,57,57,71,17,36,14,58,33,64,68,49,63,61,18,45,89,62,66,49,60,51,35,54,61,41,21,66,18,41,52,107,88,110,119,49,82,47,61,86,61,39,14,235,34,37,19,20,23,42,24,27,15,64,77,68,88,94,76,63,101,88,89,59,48,83,37,17,72,68,69,52,68,57,71,37,17,14,44,45,50,59,56,112,17,63,97,127,58,194,47,89,42,50,41,56,17,63,54,108,92,99,71,17,87,14,57,82,60,90,84,88,41,14,9,14,25,26,34,41,69,52,45,62,33,61,36,18,52,107,88,110,98,119,14,79,41,182,21,20,23,19,37,42,24,27,15,57,81,62,53,40,21,60,60,15,50,133,57,63,68,70,38,57,17,85,49,89,59,48,48,17,52,62,193,17,14,45,33,32,50,74,32,76,60,82,89,42,50,100,48,38,21,26,39,21,37,70,61,41,56,17,79,37,78,132,21,108,92,99,71,17,48,14,57,82,60,84,32,76,74,77,65,28,53,77,99,24,43,88,53,108,18,14,62,61,42,58,64,19,13,9,5,10,29,89,10,5,91,54,45,56,87,77,70,32,40,43,14,24,36,23,35,59,29,19,13,41,50,29,77,13,18,51,29,36,44,47,19,13,98,38,46,68,10,5,85,69,100,39,97,83,83,56,7,25,39,7,104,85,96,111,106,39,137,74,49,54,74,108,23,27,31,24,77,82,9,87,109,82,9,109,77,9,31,75,113,32,44,74,50,73,50,78,54,77,83,9,92,65,22,5,22,89,35,20,24,50,48,65,9,20,6,42,32,22,100,11,5,126,19,43,87,8,195,125,19,43,46,8,12,38,11,31,15,16,20,16,16,16,23,29,24,28,32,22,34,27,28,25,19,24,6,1,62,3,43,3,46,26,70,59,48,6,1,3,59,3,83,37,110,75,75,63,96,79,28,35,9,5,31,29,59,5,23,91,51,48,81,43,64,9,5,1,3,35,3,59,59,54,38,36,95,36,48,60,59,57,10,32,6,1,3,46,3,74,99,108,131,104,43,39,64,59,57,86,90,6,87,62,50,125,7,93,94,5,161,98,90,91,5,48,1,3,54,3,51,48,30,35,32,37,1,3,22,3,50,139,54,1,3,30,2,135,3,55,29,25,62,47,33,22,39,34,32,31,13,9,23,5,1,3,55,2,28,78,31,2,77,61,2,23,3,89,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { relative, basename, extname, dirname, join } from 'path';\nimport { Module } from 'module';\nimport * as util from 'util';\nimport { fileURLToPath } from 'url';\n\nimport type * as _sourceMapSupport from '@cspotcode/source-map-support';\nimport { BaseError } from 'make-error';\nimport type * as _ts from 'typescript';\n\nimport type { Transpiler, TranspilerFactory } from './transpilers/types';\nimport {\n  cachedLookup,\n  createProjectLocalResolveHelper,\n  hasOwnProperty,\n  normalizeSlashes,\n  once,\n  parse,\n  ProjectLocalResolveHelper,\n  split,\n  versionGteLt,\n  yn,\n} from './util';\nimport { findAndReadConfig, loadCompiler } from './configuration';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport { createModuleTypeClassifier, ModuleTypeClassifier } from './module-type-classifier';\nimport { createResolverFunctions } from './resolver-functions';\nimport type { createEsmHooks as createEsmHooksFn } from './esm';\nimport { installCommonjsResolveHooksIfNecessary, ModuleConstructorWithInternals } from './cjs-resolve-hooks';\nimport { classifyModule } from './node-module-type-classifier';\nimport type * as _nodeInternalModulesEsmResolve from '../dist-raw/node-internal-modules-esm-resolve';\nimport type * as _nodeInternalModulesEsmGetFormat from '../dist-raw/node-internal-modules-esm-get_format';\nimport type * as _nodeInternalModulesCjsLoader from '../dist-raw/node-internal-modules-cjs-loader';\nimport { Extensions, getExtensions } from './file-extensions';\nimport { createTsTranspileModule } from './ts-transpile-module';\nimport { assertScriptCanLoadAsCJS } from '../dist-raw/node-internal-modules-cjs-loader';\n\nexport { TSCommon };\nexport { createRepl, CreateReplOptions, ReplService, EvalAwarePartialHost } from './repl';\nexport type {\n  TranspilerModule,\n  TranspilerFactory,\n  CreateTranspilerOptions,\n  TranspileOutput,\n  TranspileOptions,\n  Transpiler,\n} from './transpilers/types';\nexport type { NodeLoaderHooksAPI1, NodeLoaderHooksAPI2, NodeLoaderHooksFormat } from './esm';\n\nconst engineSupportsPackageTypeField = true;\n\n/**\n * Registered `ts-node` instance information.\n */\nexport const REGISTER_INSTANCE = Symbol.for('ts-node.register.instance');\n\n/**\n * Expose `REGISTER_INSTANCE` information on node.js `process`.\n */\ndeclare global {\n  namespace NodeJS {\n    interface Process {\n      [REGISTER_INSTANCE]?: Service;\n    }\n  }\n}\n\n/** @internal */\nexport const env = process.env as ProcessEnv;\n/**\n * Declare all env vars, to aid discoverability.\n * If an env var affects ts-node's behavior, it should not be buried somewhere in our codebase.\n * @internal\n */\nexport interface ProcessEnv {\n  TS_NODE_DEBUG?: string;\n  TS_NODE_CWD?: string;\n  /** @deprecated */\n  TS_NODE_DIR?: string;\n  TS_NODE_EMIT?: string;\n  TS_NODE_SCOPE?: string;\n  TS_NODE_SCOPE_DIR?: string;\n  TS_NODE_FILES?: string;\n  TS_NODE_PRETTY?: string;\n  TS_NODE_COMPILER?: string;\n  TS_NODE_COMPILER_OPTIONS?: string;\n  TS_NODE_IGNORE?: string;\n  TS_NODE_PROJECT?: string;\n  TS_NODE_SKIP_PROJECT?: string;\n  TS_NODE_SKIP_IGNORE?: string;\n  TS_NODE_PREFER_TS_EXTS?: string;\n  TS_NODE_IGNORE_DIAGNOSTICS?: string;\n  TS_NODE_TRANSPILE_ONLY?: string;\n  TS_NODE_TYPE_CHECK?: string;\n  TS_NODE_COMPILER_HOST?: string;\n  TS_NODE_LOG_ERROR?: string;\n  TS_NODE_HISTORY?: string;\n  TS_NODE_EXPERIMENTAL_REPL_AWAIT?: string;\n\n  NODE_NO_READLINE?: string;\n}\n\n/**\n * @internal\n */\nexport const INSPECT_CUSTOM = util.inspect.custom || 'inspect';\n\n/**\n * Debugging `ts-node`.\n */\nconst shouldDebug = yn(env.TS_NODE_DEBUG);\n/** @internal */\nexport const debug = shouldDebug\n  ? (...args: any) => console.log(`[ts-node ${new Date().toISOString()}]`, ...args)\n  : () => undefined;\nconst debugFn = shouldDebug\n  ? <T, U>(key: string, fn: (arg: T) => U) => {\n      let i = 0;\n      return (x: T) => {\n        debug(key, x, ++i);\n        return fn(x);\n      };\n    }\n  : <T, U>(_: string, fn: (arg: T) => U) => fn;\n\n/**\n * Export the current version.\n */\nexport const VERSION = require('../package.json').version;\n\n/**\n * Options for creating a new TypeScript compiler instance.\n\n * @category Basic\n */\nexport interface CreateOptions {\n  /**\n   * Behave as if invoked within this working directory.  Roughly equivalent to `cd $dir && ts-node ...`\n   *\n   * @default process.cwd()\n   */\n  cwd?: string;\n  /**\n   * Legacy alias for `cwd`\n   *\n   * @deprecated use `projectSearchDir` or `cwd`\n   */\n  dir?: string;\n  /**\n   * Emit output files into `.ts-node` directory.\n   *\n   * @default false\n   */\n  emit?: boolean;\n  /**\n   * Scope compiler to files within `scopeDir`.\n   *\n   * @default false\n   */\n  scope?: boolean;\n  /**\n   * @default First of: `tsconfig.json` \"rootDir\" if specified, directory containing `tsconfig.json`, or cwd if no `tsconfig.json` is loaded.\n   */\n  scopeDir?: string;\n  /**\n   * Use pretty diagnostic formatter.\n   *\n   * @default false\n   */\n  pretty?: boolean;\n  /**\n   * Use TypeScript's faster `transpileModule`.\n   *\n   * @default false\n   */\n  transpileOnly?: boolean;\n  /**\n   * **DEPRECATED** Specify type-check is enabled (e.g. `transpileOnly == false`).\n   *\n   * @default true\n   */\n  typeCheck?: boolean;\n  /**\n   * Use TypeScript's compiler host API instead of the language service API.\n   *\n   * @default false\n   */\n  compilerHost?: boolean;\n  /**\n   * Logs TypeScript errors to stderr instead of throwing exceptions.\n   *\n   * @default false\n   */\n  logError?: boolean;\n  /**\n   * Load \"files\" and \"include\" from `tsconfig.json` on startup.\n   *\n   * Default is to override `tsconfig.json` \"files\" and \"include\" to only include the entrypoint script.\n   *\n   * @default false\n   */\n  files?: boolean;\n  /**\n   * Specify a custom TypeScript compiler.\n   *\n   * @default \"typescript\"\n   */\n  compiler?: string;\n  /**\n   * Specify a custom transpiler for use with transpileOnly\n   */\n  transpiler?: string | [string, object];\n  /**\n   * Transpile with swc instead of the TypeScript compiler, and skip typechecking.\n   *\n   * Equivalent to setting both `transpileOnly: true` and `transpiler: 'ts-node/transpilers/swc'`\n   *\n   * For complete instructions: https://typestrong.org/ts-node/docs/transpilers\n   */\n  swc?: boolean;\n  /**\n   * Paths which should not be compiled.\n   *\n   * Each string in the array is converted to a regular expression via `new RegExp()` and tested against source paths prior to compilation.\n   *\n   * Source paths are normalized to posix-style separators, relative to the directory containing `tsconfig.json` or to cwd if no `tsconfig.json` is loaded.\n   *\n   * Default is to ignore all node_modules subdirectories.\n   *\n   * @default [\"(?:^|/)node_modules/\"]\n   */\n  ignore?: string[];\n  /**\n   * Path to TypeScript config file or directory containing a `tsconfig.json`.\n   * Similar to the `tsc --project` flag: https://www.typescriptlang.org/docs/handbook/compiler-options.html\n   */\n  project?: string;\n  /**\n   * Search for TypeScript config file (`tsconfig.json`) in this or parent directories.\n   */\n  projectSearchDir?: string;\n  /**\n   * Skip project config resolution and loading.\n   *\n   * @default false\n   */\n  skipProject?: boolean;\n  /**\n   * Skip ignore check, so that compilation will be attempted for all files with matching extensions.\n   *\n   * @default false\n   */\n  skipIgnore?: boolean;\n  /**\n   * JSON object to merge with TypeScript `compilerOptions`.\n   *\n   * @allOf [{\"$ref\": \"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json#definitions/compilerOptionsDefinition/properties/compilerOptions\"}]\n   */\n  compilerOptions?: object;\n  /**\n   * Ignore TypeScript warnings by diagnostic code.\n   */\n  ignoreDiagnostics?: Array<number | string>;\n  /**\n   * Modules to require, like node's `--require` flag.\n   *\n   * If specified in `tsconfig.json`, the modules will be resolved relative to the `tsconfig.json` file.\n   *\n   * If specified programmatically, each input string should be pre-resolved to an absolute path for\n   * best results.\n   */\n  require?: Array<string>;\n  readFile?: (path: string) => string | undefined;\n  fileExists?: (path: string) => boolean;\n  transformers?: _ts.CustomTransformers | ((p: _ts.Program) => _ts.CustomTransformers);\n  /**\n   * Allows the usage of top level await in REPL.\n   *\n   * Uses node's implementation which accomplishes this with an AST syntax transformation.\n   *\n   * Enabled by default when tsconfig target is es2018 or above. Set to false to disable.\n   *\n   * **Note**: setting to `true` when tsconfig target is too low will throw an Error.  Leave as `undefined`\n   * to get default, automatic behavior.\n   */\n  experimentalReplAwait?: boolean;\n  /**\n   * Override certain paths to be compiled and executed as CommonJS or ECMAScript modules.\n   * When overridden, the tsconfig \"module\" and package.json \"type\" fields are overridden, and\n   * the file extension is ignored.\n   * This is useful if you cannot use .mts, .cts, .mjs, or .cjs file extensions;\n   * it achieves the same effect.\n   *\n   * Each key is a glob pattern following the same rules as tsconfig's \"include\" array.\n   * When multiple patterns match the same file, the last pattern takes precedence.\n   *\n   * `cjs` overrides matches files to compile and execute as CommonJS.\n   * `esm` overrides matches files to compile and execute as native ECMAScript modules.\n   * `package` overrides either of the above to default behavior, which obeys package.json \"type\" and\n   * tsconfig.json \"module\" options.\n   */\n  moduleTypes?: ModuleTypes;\n  /**\n   * @internal\n   * Set by our configuration loader whenever a config file contains options that\n   * are relative to the config file they came from, *and* when other logic needs\n   * to know this.  Some options can be eagerly resolved to absolute paths by\n   * the configuration loader, so it is *not* necessary for their source to be set here.\n   */\n  optionBasePaths?: OptionBasePaths;\n  /**\n   * A function to collect trace messages from the TypeScript compiler, for example when `traceResolution` is enabled.\n   *\n   * @default console.log\n   */\n  tsTrace?: (str: string) => void;\n  /**\n   * Enable native ESM support.\n   *\n   * For details, see https://typestrong.org/ts-node/docs/imports#native-ecmascript-modules\n   */\n  esm?: boolean;\n  /**\n   * Re-order file extensions so that TypeScript imports are preferred.\n   *\n   * For example, when both `index.js` and `index.ts` exist, enabling this option causes `require('./index')` to resolve to `index.ts` instead of `index.js`\n   *\n   * @default false\n   */\n  preferTsExts?: boolean;\n  /**\n   * Like node's `--experimental-specifier-resolution`, , but can also be set in your `tsconfig.json` for convenience.\n   *\n   * For details, see https://nodejs.org/dist/latest-v18.x/docs/api/esm.html#customizing-esm-specifier-resolution-algorithm\n   */\n  experimentalSpecifierResolution?: 'node' | 'explicit';\n  /**\n   * Allow using voluntary `.ts` file extension in import specifiers.\n   *\n   * Typically, in ESM projects, import specifiers must have an emit extension, `.js`, `.cjs`, or `.mjs`,\n   * and we automatically map to the corresponding `.ts`, `.cts`, or `.mts` source file.  This is the\n   * recommended approach.\n   *\n   * However, if you really want to use `.ts` in import specifiers, and are aware that this may\n   * break tooling, you can enable this flag.\n   */\n  experimentalTsImportSpecifiers?: boolean;\n}\n\nexport type ModuleTypes = Record<string, ModuleTypeOverride>;\nexport type ModuleTypeOverride = 'cjs' | 'esm' | 'package';\n\n/** @internal */\nexport interface OptionBasePaths {\n  moduleTypes?: string;\n  transpiler?: string;\n  compiler?: string;\n  swc?: string;\n}\n\n/**\n * Options for registering a TypeScript compiler instance globally.\n\n * @category Basic\n */\nexport interface RegisterOptions extends CreateOptions {\n  /**\n   * Enable experimental features that re-map imports and require calls to support:\n   * `baseUrl`, `paths`, `rootDirs`, `.js` to `.ts` file extension mappings,\n   * `outDir` to `rootDir` mappings for composite projects and monorepos.\n   *\n   * For details, see https://github.com/TypeStrong/ts-node/issues/1514\n   */\n  experimentalResolver?: boolean;\n}\n\nexport type ExperimentalSpecifierResolution = 'node' | 'explicit';\n\n/**\n * Must be an interface to support `typescript-json-schema`.\n */\nexport interface TsConfigOptions\n  extends Omit<\n    RegisterOptions,\n    | 'transformers'\n    | 'readFile'\n    | 'fileExists'\n    | 'skipProject'\n    | 'project'\n    | 'dir'\n    | 'cwd'\n    | 'projectSearchDir'\n    | 'optionBasePaths'\n    | 'tsTrace'\n  > {}\n\n/**\n * Information retrieved from type info check.\n */\nexport interface TypeInfo {\n  name: string;\n  comment: string;\n}\n\n/**\n * Default register options, including values specified via environment\n * variables.\n * @internal\n */\nexport const DEFAULTS: RegisterOptions = {\n  cwd: env.TS_NODE_CWD ?? env.TS_NODE_DIR,\n  emit: yn(env.TS_NODE_EMIT),\n  scope: yn(env.TS_NODE_SCOPE),\n  scopeDir: env.TS_NODE_SCOPE_DIR,\n  files: yn(env.TS_NODE_FILES),\n  pretty: yn(env.TS_NODE_PRETTY),\n  compiler: env.TS_NODE_COMPILER,\n  compilerOptions: parse(env.TS_NODE_COMPILER_OPTIONS),\n  ignore: split(env.TS_NODE_IGNORE),\n  project: env.TS_NODE_PROJECT,\n  skipProject: yn(env.TS_NODE_SKIP_PROJECT),\n  skipIgnore: yn(env.TS_NODE_SKIP_IGNORE),\n  preferTsExts: yn(env.TS_NODE_PREFER_TS_EXTS),\n  ignoreDiagnostics: split(env.TS_NODE_IGNORE_DIAGNOSTICS),\n  transpileOnly: yn(env.TS_NODE_TRANSPILE_ONLY),\n  typeCheck: yn(env.TS_NODE_TYPE_CHECK),\n  compilerHost: yn(env.TS_NODE_COMPILER_HOST),\n  logError: yn(env.TS_NODE_LOG_ERROR),\n  experimentalReplAwait: yn(env.TS_NODE_EXPERIMENTAL_REPL_AWAIT) ?? undefined,\n  tsTrace: console.log.bind(console),\n};\n\n/**\n * TypeScript diagnostics error.\n */\nexport class TSError extends BaseError {\n  name = 'TSError';\n  diagnosticText!: string;\n  diagnostics!: ReadonlyArray<_ts.Diagnostic>;\n\n  constructor(\n    diagnosticText: string,\n    public diagnosticCodes: number[],\n    diagnostics: ReadonlyArray<_ts.Diagnostic> = []\n  ) {\n    super(`⨯ Unable to compile TypeScript:\\n${diagnosticText}`);\n    Object.defineProperty(this, 'diagnosticText', {\n      configurable: true,\n      writable: true,\n      value: diagnosticText,\n    });\n    Object.defineProperty(this, 'diagnostics', {\n      configurable: true,\n      writable: true,\n      value: diagnostics,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  [INSPECT_CUSTOM]() {\n    return this.diagnosticText;\n  }\n}\n\nconst TS_NODE_SERVICE_BRAND = Symbol('TS_NODE_SERVICE_BRAND');\n\n/**\n * Primary ts-node service, which wraps the TypeScript API and can compile TypeScript to JavaScript\n */\nexport interface Service {\n  /** @internal */\n  [TS_NODE_SERVICE_BRAND]: true;\n  ts: TSCommon;\n  /** @internal */\n  compilerPath: string;\n  config: _ts.ParsedCommandLine;\n  options: RegisterOptions;\n  enabled(enabled?: boolean): boolean;\n  ignored(fileName: string): boolean;\n  compile(code: string, fileName: string, lineOffset?: number): string;\n  getTypeInfo(code: string, fileName: string, position: number): TypeInfo;\n  setPrettyErrors(pretty: boolean): void;\n  /** @internal */\n  configFilePath: string | undefined;\n  /** @internal */\n  moduleTypeClassifier: ModuleTypeClassifier;\n  /** @internal */\n  readonly shouldReplAwait: boolean;\n  /** @internal */\n  addDiagnosticFilter(filter: DiagnosticFilter): void;\n  /** @internal */\n  installSourceMapSupport(): void;\n  /** @internal */\n  transpileOnly: boolean;\n  /** @internal */\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  /** @internal */\n  getNodeEsmResolver: () => ReturnType<typeof import('../dist-raw/node-internal-modules-esm-resolve').createResolve>;\n  /** @internal */\n  getNodeEsmGetFormat: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-get_format').createGetFormat\n  >;\n  /** @internal */\n  getNodeCjsLoader: () => ReturnType<typeof import('../dist-raw/node-internal-modules-cjs-loader').createCjsLoader>;\n  /** @internal */\n  extensions: Extensions;\n}\n\n/**\n * Re-export of `Service` interface for backwards-compatibility\n * @deprecated use `Service` instead\n * @see {Service}\n */\nexport type Register = Service;\n\n/** @internal */\nexport interface DiagnosticFilter {\n  /** if true, filter applies to all files */\n  appliesToAllFiles: boolean;\n  /** Filter applies onto to these filenames.  Only used if appliesToAllFiles is false */\n  filenamesAbsolute: string[];\n  /** these diagnostic codes are ignored */\n  diagnosticsIgnored: number[];\n}\n\n/**\n * Create a new TypeScript compiler instance and register it onto node.js\n *\n * @category Basic\n */\nexport function register(opts?: RegisterOptions): Service;\n/**\n * Register TypeScript compiler instance onto node.js\n\n * @category Basic\n */\nexport function register(service: Service): Service;\nexport function register(serviceOrOpts: Service | RegisterOptions | undefined): Service {\n  // Is this a Service or a RegisterOptions?\n  let service = serviceOrOpts as Service;\n  if (!(serviceOrOpts as Service)?.[TS_NODE_SERVICE_BRAND]) {\n    // Not a service; is options\n    service = create((serviceOrOpts ?? {}) as RegisterOptions);\n  }\n\n  const originalJsHandler = require.extensions['.js'];\n\n  // Expose registered instance globally.\n  process[REGISTER_INSTANCE] = service;\n\n  // Register the extensions.\n  registerExtensions(service.options.preferTsExts, service.extensions.compiled, service, originalJsHandler);\n\n  installCommonjsResolveHooksIfNecessary(service);\n\n  service.installSourceMapSupport();\n\n  // Require specified modules before start-up.\n  (Module as ModuleConstructorWithInternals)._preloadModules(service.options.require);\n\n  return service;\n}\n\n/**\n * Create TypeScript compiler instance.\n *\n * @category Basic\n */\nexport function create(rawOptions: CreateOptions = {}): Service {\n  const foundConfigResult = findAndReadConfig(rawOptions);\n  return createFromPreloadedConfig(foundConfigResult);\n}\n\n/** @internal */\nexport function createFromPreloadedConfig(foundConfigResult: ReturnType<typeof findAndReadConfig>): Service {\n  const { configFilePath, cwd, options, config, compiler, projectLocalResolveDir, optionBasePaths } = foundConfigResult;\n\n  const projectLocalResolveHelper = createProjectLocalResolveHelper(projectLocalResolveDir);\n\n  const ts = loadCompiler(compiler);\n\n  // Experimental REPL await is not compatible targets lower than ES2018\n  const targetSupportsTla = config.options.target! >= ts.ScriptTarget.ES2018;\n  if (options.experimentalReplAwait === true && !targetSupportsTla) {\n    throw new Error('Experimental REPL await is not compatible with targets lower than ES2018');\n  }\n\n  const shouldReplAwait = options.experimentalReplAwait !== false && targetSupportsTla;\n\n  // swc implies two other options\n  // typeCheck option was implemented specifically to allow overriding tsconfig transpileOnly from the command-line\n  // So we should allow using typeCheck to override swc\n  if (options.swc && !options.typeCheck) {\n    if (options.transpileOnly === false) {\n      throw new Error(\"Cannot enable 'swc' option with 'transpileOnly: false'.  'swc' implies 'transpileOnly'.\");\n    }\n    if (options.transpiler) {\n      throw new Error(\"Cannot specify both 'swc' and 'transpiler' options.  'swc' uses the built-in swc transpiler.\");\n    }\n  }\n\n  const readFile = options.readFile || ts.sys.readFile;\n  const fileExists = options.fileExists || ts.sys.fileExists;\n  // typeCheck can override transpileOnly, useful for CLI flag to override config file\n  const transpileOnly = (options.transpileOnly === true || options.swc === true) && options.typeCheck !== true;\n  let transpiler: RegisterOptions['transpiler'] | undefined = undefined;\n  let transpilerBasePath: string | undefined = undefined;\n  if (options.transpiler) {\n    transpiler = options.transpiler;\n    transpilerBasePath = optionBasePaths.transpiler;\n  } else if (options.swc) {\n    transpiler = require.resolve('./transpilers/swc.js');\n    transpilerBasePath = optionBasePaths.swc;\n  }\n  const transformers = options.transformers || undefined;\n  const diagnosticFilters: Array<DiagnosticFilter> = [\n    {\n      appliesToAllFiles: true,\n      filenamesAbsolute: [],\n      diagnosticsIgnored: [\n        6059, // \"'rootDir' is expected to contain all source files.\"\n        18002, // \"The 'files' list in config file is empty.\"\n        18003, // \"No inputs were found in config file.\"\n        ...(options.experimentalTsImportSpecifiers\n          ? [\n              2691, // \"An import path cannot end with a '.ts' extension. Consider importing '<specifier without ext>' instead.\"\n            ]\n          : []),\n        ...(options.ignoreDiagnostics || []),\n      ].map(Number),\n    },\n  ];\n\n  const configDiagnosticList = filterDiagnostics(config.errors, diagnosticFilters);\n  const outputCache = new Map<\n    string,\n    {\n      content: string;\n    }\n  >();\n\n  const configFileDirname = configFilePath ? dirname(configFilePath) : null;\n  const scopeDir = options.scopeDir ?? config.options.rootDir ?? configFileDirname ?? cwd;\n  const ignoreBaseDir = configFileDirname ?? cwd;\n  const isScoped = options.scope ? (fileName: string) => relative(scopeDir, fileName).charAt(0) !== '.' : () => true;\n  const shouldIgnore = createIgnore(\n    ignoreBaseDir,\n    options.skipIgnore ? [] : (options.ignore || ['(?:^|/)node_modules/']).map((str) => new RegExp(str))\n  );\n\n  const diagnosticHost: _ts.FormatDiagnosticsHost = {\n    getNewLine: () => ts.sys.newLine,\n    getCurrentDirectory: () => cwd,\n    // TODO switch to getCanonicalFileName we already create later in scope\n    getCanonicalFileName: ts.sys.useCaseSensitiveFileNames ? (x) => x : (x) => x.toLowerCase(),\n  };\n\n  if (options.transpileOnly && typeof transformers === 'function') {\n    throw new TypeError('Transformers function is unavailable in \"--transpile-only\"');\n  }\n  let createTranspiler = initializeTranspilerFactory();\n  function initializeTranspilerFactory() {\n    if (transpiler) {\n      if (!transpileOnly) throw new Error('Custom transpiler can only be used when transpileOnly is enabled.');\n      const transpilerName = typeof transpiler === 'string' ? transpiler : transpiler[0];\n      const transpilerOptions = typeof transpiler === 'string' ? {} : transpiler[1] ?? {};\n      const transpilerConfigLocalResolveHelper = transpilerBasePath\n        ? createProjectLocalResolveHelper(transpilerBasePath)\n        : projectLocalResolveHelper;\n      const transpilerPath = transpilerConfigLocalResolveHelper(transpilerName, true);\n      const transpilerFactory = require(transpilerPath).create as TranspilerFactory;\n      return createTranspiler;\n\n      function createTranspiler(compilerOptions: TSCommon.CompilerOptions, nodeModuleEmitKind?: NodeModuleEmitKind) {\n        return transpilerFactory?.({\n          service: {\n            options,\n            config: {\n              ...config,\n              options: compilerOptions,\n            },\n            projectLocalResolveHelper,\n          },\n          transpilerConfigLocalResolveHelper,\n          nodeModuleEmitKind,\n          ...transpilerOptions,\n        });\n      }\n    }\n  }\n\n  // Install source map support and read from memory cache.\n  const useBuiltInSourceMaps = versionGteLt(process.versions.node, '20.0.0');\n  function installSourceMapSupport() {\n    if (useBuiltInSourceMaps) {\n      //@ts-ignore added to node somewhat recently, not yet in DT.\n      process.setSourceMapsEnabled(true);\n      return;\n    }\n    const sourceMapSupport = require('@cspotcode/source-map-support') as typeof _sourceMapSupport;\n    sourceMapSupport.install({\n      environment: 'node',\n      retrieveFile(pathOrUrl: string) {\n        let path = pathOrUrl;\n        // If it's a file URL, convert to local path\n        // I could not find a way to handle non-URLs except to swallow an error\n        if (path.startsWith('file://')) {\n          try {\n            path = fileURLToPath(path);\n          } catch (e) {\n            /* swallow error */\n          }\n        }\n        path = normalizeSlashes(path);\n        return outputCache.get(path)?.content || '';\n      },\n      redirectConflictingLibrary: true,\n      onConflictingLibraryRedirect(request, parent, isMain, options, redirectedRequest) {\n        debug(\n          `Redirected an attempt to require source-map-support to instead receive @cspotcode/source-map-support.  \"${\n            (parent as NodeJS.Module).filename\n          }\" attempted to require or resolve \"${request}\" and was redirected to \"${redirectedRequest}\".`\n        );\n      },\n    });\n  }\n\n  let shouldHavePrettyErrors!: boolean;\n  let formatDiagnostics: (diagnostics: readonly _ts.Diagnostic[], host: _ts.FormatDiagnosticsHost) => string;\n\n  function setPrettyErrors(pretty: boolean) {\n    shouldHavePrettyErrors = pretty;\n    formatDiagnostics = shouldHavePrettyErrors\n      ? ts.formatDiagnosticsWithColorAndContext || ts.formatDiagnostics\n      : ts.formatDiagnostics;\n  }\n  setPrettyErrors(options.pretty !== undefined ? options.pretty : !!process.stderr.isTTY);\n\n  function createTSError(diagnostics: ReadonlyArray<_ts.Diagnostic>) {\n    const diagnosticText = formatDiagnostics(diagnostics, diagnosticHost);\n    const diagnosticCodes = diagnostics.map((x) => x.code);\n    return new TSError(diagnosticText, diagnosticCodes, diagnostics);\n  }\n\n  function reportTSError(configDiagnosticList: _ts.Diagnostic[]) {\n    const error = createTSError(configDiagnosticList);\n    if (options.logError) {\n      // Print error in red color and continue execution.\n      console.error('\\x1b[31m%s\\x1b[0m', error);\n    } else {\n      // Throw error and exit the script.\n      throw error;\n    }\n  }\n\n  // Render the configuration errors.\n  if (configDiagnosticList.length) reportTSError(configDiagnosticList);\n\n  const jsxEmitPreserve = config.options.jsx === ts.JsxEmit.Preserve;\n  /**\n   * Get the extension for a transpiled file.\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  function getEmitExtension(path: string) {\n    const lastDotIndex = path.lastIndexOf('.');\n    if (lastDotIndex >= 0) {\n      const ext = path.slice(lastDotIndex);\n      switch (ext) {\n        case '.js':\n        case '.ts':\n          return '.js';\n        case '.jsx':\n        case '.tsx':\n          return jsxEmitPreserve ? '.jsx' : '.js';\n        case '.mjs':\n        case '.mts':\n          return '.mjs';\n        case '.cjs':\n        case '.cts':\n          return '.cjs';\n      }\n    }\n    return '.js';\n  }\n\n  type GetOutputFunction = (code: string, fileName: string) => SourceOutput;\n  /**\n   * Get output from TS compiler w/typechecking.  `undefined` in `transpileOnly`\n   * mode.\n   */\n  let getOutput: GetOutputFunction | undefined;\n  let getTypeInfo: (_code: string, _fileName: string, _position: number) => TypeInfo;\n\n  const getCanonicalFileName = (ts as unknown as TSInternal).createGetCanonicalFileName(\n    ts.sys.useCaseSensitiveFileNames\n  );\n\n  const moduleTypeClassifier = createModuleTypeClassifier({\n    basePath: options.optionBasePaths?.moduleTypes,\n    patterns: options.moduleTypes,\n  });\n\n  const extensions = getExtensions(config, options, ts.version);\n\n  // Use full language services when the fast option is disabled.\n  if (!transpileOnly) {\n    const fileContents = new Map<string, string>();\n    const rootFileNames = new Set(config.fileNames);\n    const cachedReadFile = cachedLookup(debugFn('readFile', readFile));\n\n    // Use language services by default\n    if (!options.compilerHost) {\n      let projectVersion = 1;\n      const fileVersions = new Map(Array.from(rootFileNames).map((fileName) => [fileName, 0]));\n\n      const getCustomTransformers = () => {\n        if (typeof transformers === 'function') {\n          const program = service.getProgram();\n          return program ? transformers(program) : undefined;\n        }\n\n        return transformers;\n      };\n\n      // Create the compiler host for type checking.\n      const serviceHost: _ts.LanguageServiceHost & Required<Pick<_ts.LanguageServiceHost, 'fileExists' | 'readFile'>> =\n        {\n          getProjectVersion: () => String(projectVersion),\n          getScriptFileNames: () => Array.from(rootFileNames),\n          getScriptVersion: (fileName: string) => {\n            const version = fileVersions.get(fileName);\n            return version ? version.toString() : '';\n          },\n          getScriptSnapshot(fileName: string) {\n            // TODO ordering of this with getScriptVersion?  Should they sync up?\n            let contents = fileContents.get(fileName);\n\n            // Read contents into TypeScript memory cache.\n            if (contents === undefined) {\n              contents = cachedReadFile(fileName);\n              if (contents === undefined) return;\n\n              fileVersions.set(fileName, 1);\n              fileContents.set(fileName, contents);\n              projectVersion++;\n            }\n\n            return ts.ScriptSnapshot.fromString(contents);\n          },\n          readFile: cachedReadFile,\n          readDirectory: ts.sys.readDirectory,\n          getDirectories: cachedLookup(debugFn('getDirectories', ts.sys.getDirectories)),\n          fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n          directoryExists: cachedLookup(debugFn('directoryExists', ts.sys.directoryExists)),\n          realpath: ts.sys.realpath ? cachedLookup(debugFn('realpath', ts.sys.realpath)) : undefined,\n          getNewLine: () => ts.sys.newLine,\n          useCaseSensitiveFileNames: () => ts.sys.useCaseSensitiveFileNames,\n          getCurrentDirectory: () => cwd,\n          getCompilationSettings: () => config.options,\n          getDefaultLibFileName: () => ts.getDefaultLibFilePath(config.options),\n          getCustomTransformers: getCustomTransformers,\n          trace: options.tsTrace,\n        };\n      const {\n        resolveModuleNames,\n        getResolvedModuleWithFailedLookupLocationsFromCache,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host: serviceHost,\n        getCanonicalFileName,\n        ts,\n        cwd,\n        config,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      serviceHost.resolveModuleNames = resolveModuleNames;\n      serviceHost.getResolvedModuleWithFailedLookupLocationsFromCache =\n        getResolvedModuleWithFailedLookupLocationsFromCache;\n      serviceHost.resolveTypeReferenceDirectives = resolveTypeReferenceDirectives;\n\n      const registry = ts.createDocumentRegistry(ts.sys.useCaseSensitiveFileNames, cwd);\n      const service = ts.createLanguageService(serviceHost, registry);\n\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        // Add to `rootFiles` as necessary, either to make TS include a file it has not seen,\n        // or to trigger a re-classification of files from external to internal.\n        if (!rootFileNames.has(fileName) && !isFileKnownToBeInternal(fileName)) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          // Increment project version for every change to rootFileNames.\n          projectVersion++;\n        }\n\n        const previousVersion = fileVersions.get(fileName) || 0;\n        const previousContents = fileContents.get(fileName);\n        // Avoid incrementing cache when nothing has changed.\n        if (contents !== previousContents) {\n          fileVersions.set(fileName, previousVersion + 1);\n          fileContents.set(fileName, contents);\n          // Increment project version for every file change.\n          projectVersion++;\n        }\n      };\n\n      let previousProgram: _ts.Program | undefined = undefined;\n\n      getOutput = (code: string, fileName: string) => {\n        updateMemoryCache(code, fileName);\n\n        const programBefore = service.getProgram();\n        if (programBefore !== previousProgram) {\n          debug(`compiler rebuilt Program instance when getting output for ${fileName}`);\n        }\n\n        const output = service.getEmitOutput(fileName);\n\n        // Get the relevant diagnostics - this is 3x faster than `getPreEmitDiagnostics`.\n        const diagnostics = service.getSemanticDiagnostics(fileName).concat(service.getSyntacticDiagnostics(fileName));\n\n        const programAfter = service.getProgram();\n\n        debug(\n          'invariant: Is service.getProject() identical before and after getting emit output and diagnostics? (should always be true) ',\n          programBefore === programAfter\n        );\n\n        previousProgram = programAfter;\n\n        const diagnosticList = filterDiagnostics(diagnostics, diagnosticFilters);\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        if (output.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring `.d.ts` files.\n        if (output.outputFiles.length === 0) {\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [output.outputFiles[1].text, output.outputFiles[0].text, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const info = service.getQuickInfoAtPosition(normalizedFileName, position);\n        const name = ts.displayPartsToString(info ? info.displayParts : []);\n        const comment = ts.displayPartsToString(info ? info.documentation : []);\n\n        return { name, comment };\n      };\n    } else {\n      const sys: _ts.System & _ts.FormatDiagnosticsHost = {\n        ...ts.sys,\n        ...diagnosticHost,\n        readFile: (fileName: string) => {\n          const cacheContents = fileContents.get(fileName);\n          if (cacheContents !== undefined) return cacheContents;\n          const contents = cachedReadFile(fileName);\n          if (contents) fileContents.set(fileName, contents);\n          return contents;\n        },\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(debugFn('getDirectories', ts.sys.getDirectories)),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(debugFn('directoryExists', ts.sys.directoryExists)),\n        resolvePath: cachedLookup(debugFn('resolvePath', ts.sys.resolvePath)),\n        realpath: ts.sys.realpath ? cachedLookup(debugFn('realpath', ts.sys.realpath)) : undefined,\n      };\n\n      const host: _ts.CompilerHost = ts.createIncrementalCompilerHost(config.options, sys);\n      host.trace = options.tsTrace;\n      const {\n        resolveModuleNames,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host,\n        cwd,\n        config,\n        ts,\n        getCanonicalFileName,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      host.resolveModuleNames = resolveModuleNames;\n      host.resolveTypeReferenceDirectives = resolveTypeReferenceDirectives;\n\n      let builderProgram = ts.createIncrementalProgram({\n        rootNames: Array.from(rootFileNames),\n        options: config.options,\n        host,\n        configFileParsingDiagnostics: config.errors,\n        projectReferences: config.projectReferences,\n      });\n\n      // Read and cache custom transformers.\n      const customTransformers =\n        typeof transformers === 'function' ? transformers(builderProgram.getProgram()) : transformers;\n\n      // Set the file contents into cache manually.\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        const previousContents = fileContents.get(fileName);\n        const contentsChanged = previousContents !== contents;\n        if (contentsChanged) {\n          fileContents.set(fileName, contents);\n        }\n\n        // Add to `rootFiles` when discovered by compiler for the first time.\n        let addedToRootFileNames = false;\n        if (!rootFileNames.has(fileName) && !isFileKnownToBeInternal(fileName)) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          addedToRootFileNames = true;\n        }\n\n        // Update program when file changes.\n        if (addedToRootFileNames || contentsChanged) {\n          builderProgram = ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            builderProgram,\n            config.errors,\n            config.projectReferences\n          );\n        }\n      };\n\n      getOutput = (code: string, fileName: string) => {\n        let outText = '';\n        let outMap = '';\n\n        updateMemoryCache(code, fileName);\n\n        const sourceFile = builderProgram.getSourceFile(fileName);\n        if (!sourceFile) throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const program = builderProgram.getProgram();\n        const diagnostics = ts.getPreEmitDiagnostics(program, sourceFile);\n        const diagnosticList = filterDiagnostics(diagnostics, diagnosticFilters);\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        const result = builderProgram.emit(\n          sourceFile,\n          (path, file, writeByteOrderMark) => {\n            if (path.endsWith('.map')) {\n              outMap = file;\n            } else {\n              outText = file;\n            }\n\n            if (options.emit) sys.writeFile(path, file, writeByteOrderMark);\n          },\n          undefined,\n          undefined,\n          customTransformers\n        );\n\n        if (result.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring files that cannot be compiled.\n        if (outText === '') {\n          if (program.isSourceFileFromExternalLibrary(sourceFile)) {\n            throw new TypeError(`Unable to compile file from external library: ${relative(cwd, fileName)}`);\n          }\n\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [outText, outMap, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const sourceFile = builderProgram.getSourceFile(normalizedFileName);\n        if (!sourceFile) throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const node = getTokenAtPosition(ts, sourceFile, position);\n        const checker = builderProgram.getProgram().getTypeChecker();\n        const symbol = checker.getSymbolAtLocation(node);\n\n        if (!symbol) return { name: '', comment: '' };\n\n        const type = checker.getTypeOfSymbolAtLocation(symbol, node);\n        const signatures = [...type.getConstructSignatures(), ...type.getCallSignatures()];\n\n        return {\n          name: signatures.length\n            ? signatures.map((x) => checker.signatureToString(x)).join('\\n')\n            : checker.typeToString(type),\n          comment: ts.displayPartsToString(symbol ? symbol.getDocumentationComment(checker) : []),\n        };\n      };\n\n      // Write `.tsbuildinfo` when `--build` is enabled.\n      if (options.emit && config.options.incremental) {\n        process.on('exit', () => {\n          // Emits `.tsbuildinfo` to filesystem.\n          (builderProgram.getProgram() as any).emitBuildInfo();\n        });\n      }\n    }\n  } else {\n    getTypeInfo = () => {\n      throw new TypeError('Type information is unavailable in \"--transpile-only\"');\n    };\n  }\n\n  function createTranspileOnlyGetOutputFunction(\n    overrideModuleType?: _ts.ModuleKind,\n    nodeModuleEmitKind?: NodeModuleEmitKind\n  ): GetOutputFunction {\n    const compilerOptions = { ...config.options };\n    if (overrideModuleType !== undefined) compilerOptions.module = overrideModuleType;\n    let customTranspiler = createTranspiler?.(compilerOptions, nodeModuleEmitKind);\n    let tsTranspileModule = versionGteLt(ts.version, '4.7.0')\n      ? createTsTranspileModule(ts, {\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        })\n      : undefined;\n    return (code: string, fileName: string): SourceOutput => {\n      let result: _ts.TranspileOutput;\n      if (customTranspiler) {\n        result = customTranspiler.transpile(code, {\n          fileName,\n        });\n      } else if (tsTranspileModule) {\n        result = tsTranspileModule(\n          code,\n          {\n            fileName,\n          },\n          nodeModuleEmitKind === 'nodeesm' ? 'module' : 'commonjs'\n        );\n      } else {\n        result = ts.transpileModule(code, {\n          fileName,\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        });\n      }\n\n      const diagnosticList = filterDiagnostics(result.diagnostics || [], diagnosticFilters);\n      if (diagnosticList.length) reportTSError(diagnosticList);\n\n      return [result.outputText, result.sourceMapText as string, false];\n    };\n  }\n\n  // When true, these mean that a `moduleType` override will cause a different emit\n  // than the TypeScript compiler, so we *must* overwrite the emit.\n  const shouldOverwriteEmitWhenForcingCommonJS = config.options.module !== ts.ModuleKind.CommonJS;\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const shouldOverwriteEmitWhenForcingEsm = !(\n    config.options.module === ts.ModuleKind.ES2015 ||\n    (ts.ModuleKind.ES2020 && config.options.module === ts.ModuleKind.ES2020) ||\n    (ts.ModuleKind.ES2022 && config.options.module === ts.ModuleKind.ES2022) ||\n    config.options.module === ts.ModuleKind.ESNext\n  );\n  /**\n   * node16 or nodenext\n   * [MUST_UPDATE_FOR_NEW_MODULEKIND]\n   */\n  const isNodeModuleType =\n    (ts.ModuleKind.Node16 && config.options.module === ts.ModuleKind.Node16) ||\n    (ts.ModuleKind.NodeNext && config.options.module === ts.ModuleKind.NodeNext);\n  const getOutputForceCommonJS = createTranspileOnlyGetOutputFunction(ts.ModuleKind.CommonJS);\n  const getOutputForceNodeCommonJS = createTranspileOnlyGetOutputFunction(ts.ModuleKind.NodeNext, 'nodecjs');\n  const getOutputForceNodeESM = createTranspileOnlyGetOutputFunction(ts.ModuleKind.NodeNext, 'nodeesm');\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const getOutputForceESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.ES2022 || ts.ModuleKind.ES2020 || ts.ModuleKind.ES2015\n  );\n  const getOutputTranspileOnly = createTranspileOnlyGetOutputFunction();\n\n  // Create a simple TypeScript compiler proxy.\n  function compile(code: string, fileName: string, lineOffset = 0) {\n    const normalizedFileName = normalizeSlashes(fileName);\n    const classification = moduleTypeClassifier.classifyModuleByModuleTypeOverrides(normalizedFileName);\n    let value: string | undefined = '';\n    let sourceMap: string | undefined = '';\n    let emitSkipped = true;\n    if (getOutput) {\n      // Must always call normal getOutput to throw typechecking errors\n      [value, sourceMap, emitSkipped] = getOutput(code, normalizedFileName);\n    }\n    // If module classification contradicts the above, call the relevant transpiler\n    if (classification.moduleType === 'cjs' && (shouldOverwriteEmitWhenForcingCommonJS || emitSkipped)) {\n      [value, sourceMap] = getOutputForceCommonJS(code, normalizedFileName);\n    } else if (classification.moduleType === 'esm' && (shouldOverwriteEmitWhenForcingEsm || emitSkipped)) {\n      [value, sourceMap] = getOutputForceESM(code, normalizedFileName);\n    } else if (emitSkipped) {\n      // Happens when ts compiler skips emit or in transpileOnly mode\n      const classification = classifyModule(fileName, isNodeModuleType);\n      [value, sourceMap] =\n        classification === 'nodecjs'\n          ? getOutputForceNodeCommonJS(code, normalizedFileName)\n          : classification === 'nodeesm'\n          ? getOutputForceNodeESM(code, normalizedFileName)\n          : classification === 'cjs'\n          ? getOutputForceCommonJS(code, normalizedFileName)\n          : classification === 'esm'\n          ? getOutputForceESM(code, normalizedFileName)\n          : getOutputTranspileOnly(code, normalizedFileName);\n    }\n    const output = updateOutput(value!, normalizedFileName, sourceMap!, getEmitExtension);\n    outputCache.set(normalizedFileName, { content: output });\n    return output;\n  }\n\n  let active = true;\n  const enabled = (enabled?: boolean) => (enabled === undefined ? active : (active = !!enabled));\n  const ignored = (fileName: string) => {\n    if (!active) return true;\n    const ext = extname(fileName);\n    if (extensions.compiled.includes(ext)) {\n      return !isScoped(fileName) || shouldIgnore(fileName);\n    }\n    return true;\n  };\n\n  function addDiagnosticFilter(filter: DiagnosticFilter) {\n    diagnosticFilters.push({\n      ...filter,\n      filenamesAbsolute: filter.filenamesAbsolute.map((f) => normalizeSlashes(f)),\n    });\n  }\n\n  const getNodeEsmResolver = once(() =>\n    (require('../dist-raw/node-internal-modules-esm-resolve') as typeof _nodeInternalModulesEsmResolve).createResolve({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      tsNodeExperimentalSpecifierResolution: options.experimentalSpecifierResolution,\n    })\n  );\n  const getNodeEsmGetFormat = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-get_format') as typeof _nodeInternalModulesEsmGetFormat\n    ).createGetFormat(options.experimentalSpecifierResolution, getNodeEsmResolver())\n  );\n  const getNodeCjsLoader = once(() =>\n    (require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader).createCjsLoader({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      nodeEsmResolver: getNodeEsmResolver(),\n    })\n  );\n\n  return {\n    [TS_NODE_SERVICE_BRAND]: true,\n    ts,\n    compilerPath: compiler,\n    config,\n    compile,\n    getTypeInfo,\n    ignored,\n    enabled,\n    options,\n    configFilePath,\n    moduleTypeClassifier,\n    shouldReplAwait,\n    addDiagnosticFilter,\n    installSourceMapSupport,\n    transpileOnly,\n    projectLocalResolveHelper,\n    getNodeEsmResolver,\n    getNodeEsmGetFormat,\n    getNodeCjsLoader,\n    extensions,\n    setPrettyErrors,\n  };\n}\n\n/**\n * Check if the filename should be ignored.\n */\nfunction createIgnore(ignoreBaseDir: string, ignore: RegExp[]) {\n  return (fileName: string) => {\n    const relname = relative(ignoreBaseDir, fileName);\n    const path = normalizeSlashes(relname);\n\n    return ignore.some((x) => x.test(path));\n  };\n}\n\n/**\n * Register the extensions to support when importing files.\n */\nfunction registerExtensions(\n  preferTsExts: boolean | null | undefined,\n  extensions: string[],\n  service: Service,\n  originalJsHandler: (m: NodeModule, filename: string) => any\n) {\n  const exts = new Set(extensions);\n  // Can't add these extensions cuz would allow omitting file extension; node requires ext for .cjs and .mjs\n  // Unless they're already registered by something else (nyc does this):\n  // then we *must* hook them or else our transformer will not be called.\n  for (const cannotAdd of ['.mts', '.cts', '.mjs', '.cjs']) {\n    if (exts.has(cannotAdd) && !hasOwnProperty(require.extensions, cannotAdd)) {\n      // Unrecognized file exts can be transformed via the `.js` handler.\n      exts.add('.js');\n      exts.delete(cannotAdd);\n    }\n  }\n\n  // Register new extensions.\n  for (const ext of exts) {\n    registerExtension(ext, service, originalJsHandler);\n  }\n\n  if (preferTsExts) {\n    const preferredExtensions = new Set([...exts, ...Object.keys(require.extensions)]);\n\n    // Re-sort iteration order of Object.keys()\n    for (const ext of preferredExtensions) {\n      const old = Object.getOwnPropertyDescriptor(require.extensions, ext);\n      delete require.extensions[ext];\n      Object.defineProperty(require.extensions, ext, old!);\n    }\n  }\n}\n\n/**\n * Register the extension for node.\n */\nfunction registerExtension(ext: string, service: Service, originalHandler: (m: NodeModule, filename: string) => any) {\n  const old = require.extensions[ext] || originalHandler;\n\n  require.extensions[ext] = function (m: any, filename) {\n    if (service.ignored(filename)) return old(m, filename);\n\n    assertScriptCanLoadAsCJS(service, m, filename);\n\n    const _compile = m._compile;\n\n    m._compile = function (code: string, fileName: string) {\n      debug('module._compile', fileName);\n\n      const result = service.compile(code, fileName);\n      return _compile.call(this, result, fileName);\n    };\n\n    return old(m, filename);\n  };\n}\n\n/**\n * Internal source output.\n */\ntype SourceOutput = [string, string, false] | [undefined, undefined, true];\n\n/**\n * Update the output remapping the source map.\n */\nfunction updateOutput(\n  outputText: string,\n  fileName: string,\n  sourceMap: string,\n  getEmitExtension: (fileName: string) => string\n) {\n  const base64Map = Buffer.from(updateSourceMap(sourceMap, fileName), 'utf8').toString('base64');\n  const sourceMapContent = `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64Map}`;\n  // Expected form: `//# sourceMappingURL=foo bar.js.map` or `//# sourceMappingURL=foo%20bar.js.map` for input file \"foo bar.tsx\"\n  // Percent-encoding behavior added in TS 4.1.1: https://github.com/microsoft/TypeScript/issues/40951\n  const prefix = '//# sourceMappingURL=';\n  const prefixLength = prefix.length;\n  const baseName = /*foo.tsx*/ basename(fileName);\n  const extName = /*.tsx*/ extname(fileName);\n  const extension = /*.js*/ getEmitExtension(fileName);\n  const sourcemapFilename = baseName.slice(0, -extName.length) + extension + '.map';\n  const sourceMapLengthWithoutPercentEncoding = prefixLength + sourcemapFilename.length;\n  /*\n   * Only rewrite if existing directive exists at the location we expect, to support:\n   *   a) compilers that do not append a sourcemap directive\n   *   b) situations where we did the math wrong\n   *     Not ideal, but appending our sourcemap *after* a pre-existing sourcemap still overrides, so the end-user is happy.\n   */\n  if (outputText.substr(-sourceMapLengthWithoutPercentEncoding, prefixLength) === prefix) {\n    return outputText.slice(0, -sourceMapLengthWithoutPercentEncoding) + sourceMapContent;\n  }\n  // If anyone asks why we're not using URL, the URL equivalent is: `u = new URL('http://d'); u.pathname = \"/\" + sourcemapFilename; return u.pathname.slice(1);\n  const sourceMapLengthWithPercentEncoding = prefixLength + encodeURI(sourcemapFilename).length;\n  if (outputText.substr(-sourceMapLengthWithPercentEncoding, prefixLength) === prefix) {\n    return outputText.slice(0, -sourceMapLengthWithPercentEncoding) + sourceMapContent;\n  }\n\n  return `${outputText}\\n${sourceMapContent}`;\n}\n\n/**\n * Update the source map contents for improved output.\n */\nfunction updateSourceMap(sourceMapText: string, fileName: string) {\n  const sourceMap = JSON.parse(sourceMapText);\n  sourceMap.file = fileName;\n  sourceMap.sources = [fileName];\n  delete sourceMap.sourceRoot;\n  return JSON.stringify(sourceMap);\n}\n\n/**\n * Filter diagnostics.\n */\nfunction filterDiagnostics(diagnostics: readonly _ts.Diagnostic[], filters: DiagnosticFilter[]) {\n  return diagnostics.filter((d) =>\n    filters.every(\n      (f) =>\n        (!f.appliesToAllFiles && f.filenamesAbsolute.indexOf(d.file?.fileName!) === -1) ||\n        f.diagnosticsIgnored.indexOf(d.code) === -1\n    )\n  );\n}\n\n/**\n * Get token at file position.\n *\n * Reference: https://github.com/microsoft/TypeScript/blob/fcd9334f57d85b73dd66ad2d21c02e84822f4841/src/services/utilities.ts#L705-L731\n */\nfunction getTokenAtPosition(ts: TSCommon, sourceFile: _ts.SourceFile, position: number): _ts.Node {\n  let current: _ts.Node = sourceFile;\n\n  outer: while (true) {\n    for (const child of current.getChildren(sourceFile)) {\n      const start = child.getFullStart();\n      if (start > position) break;\n\n      const end = child.getEnd();\n      if (position <= end) {\n        current = child;\n        continue outer;\n      }\n    }\n\n    return current;\n  }\n}\n\n/**\n * Create an implementation of node's ESM loader hooks.\n *\n * This may be useful if you\n * want to wrap or compose the loader hooks to add additional functionality or\n * combine with another loader.\n *\n * Node changed the hooks API, so there are two possible APIs.  This function\n * detects your node version and returns the appropriate API.\n *\n * @category ESM Loader\n */\nexport const createEsmHooks: typeof createEsmHooksFn = (tsNodeService: Service) =>\n  (require('./esm') as typeof import('./esm')).createEsmHooks(tsNodeService);\n\n/**\n * When using `module: nodenext` or `module: node12`, there are two possible styles of emit depending in file extension or package.json \"type\":\n *\n * - CommonJS with dynamic imports preserved (not transformed into `require()` calls)\n * - ECMAScript modules with `import foo = require()` transformed into `require = createRequire(); const foo = require()`\n */\nexport type NodeModuleEmitKind = 'nodeesm' | 'nodecjs';\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/util.js":{"lineLengths":[13,62,324,31,3,12,50,68,77,72,3,20,33,44,20,5,44,21,5,1,16,3,60,2,12,3,43,35,48,38,36,42,9,5,24,1,24,3,33,53,12,3,23,97,1,22,3,26,12,3,23,69,1,22,31,30,3,44,12,3,34,62,1,44,3,24,12,3,43,66,1,40,3,31,3,27,28,21,30,30,30,21,9,30,6,1,36,3,12,89,106,3,65,9,63,13,40,9,17,30,9,5,15,36,5,1,76,3,75,78,80,55,12,3,58,84,43,93,11,6,1,74,3,120,32,12,3,123,31,51,64,83,98,62,1,104,16,19,14,20,30,16,25,28,19,21,5,18,1,20,16,63,56,65,126,20,24,65,117,5,25,33,70,5,1,36,32],"data":{"version":3,"file":"util.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { dirname } from 'path';\n\n/**\n * @internal\n * Copied from https://unpkg.com/yn@3.1.1/index.js\n * Because people get weird when they see you have dependencies. /jk\n * This is a lazy way to make the dep number go down, we haven't touched this\n * dep in ages, and we didn't use all its features, so we stripped them.\n */\nexport function yn(input: string | undefined) {\n  input = String(input).trim();\n\n  if (/^(?:y|yes|true|1)$/i.test(input)) {\n    return true;\n  }\n\n  if (/^(?:n|no|false|0)$/i.test(input)) {\n    return false;\n  }\n}\n\n/**\n * Like `Object.assign`, but ignores `undefined` properties.\n *\n * @internal\n */\nexport function assign<T extends object>(initialValue: T, ...sources: Array<T>): T {\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      const value = (source as any)[key];\n      if (value !== undefined) (initialValue as any)[key] = value;\n    }\n  }\n  return initialValue;\n}\n\n/**\n * Split a string array of values\n * and remove empty strings from the resulting array.\n * @internal\n */\nexport function split(value: string | undefined) {\n  return typeof value === 'string' ? value.split(/ *, */g).filter((v) => v !== '') : undefined;\n}\n\n/**\n * Parse a string as JSON.\n * @internal\n */\nexport function parse(value: string | undefined): object | undefined {\n  return typeof value === 'string' ? JSON.parse(value) : undefined;\n}\n\nconst directorySeparator = '/';\nconst backslashRegExp = /\\\\/g;\n/**\n * Replace backslashes with forward slashes.\n * @internal\n */\nexport function normalizeSlashes(value: string): string {\n  return value.replace(backslashRegExp, directorySeparator);\n}\n\n/**\n * Safe `hasOwnProperty`\n * @internal\n */\nexport function hasOwnProperty(object: any, property: string): boolean {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * Cached fs operation wrapper.\n */\nexport function cachedLookup<T, R>(fn: (arg: T) => R): (arg: T) => R {\n  const cache = new Map<T, R>();\n\n  return (arg: T): R => {\n    if (!cache.has(arg)) {\n      const v = fn(arg);\n      cache.set(arg, v);\n      return v;\n    }\n    return cache.get(arg)!;\n  };\n}\n\n/**\n * @internal\n * Require something with v8-compile-cache, which should make subsequent requires faster.\n * Do lots of error-handling so that, worst case, we require without the cache, and users are not blocked.\n */\nexport function attemptRequireWithV8CompileCache(requireFn: typeof require, specifier: string) {\n  try {\n    const v8CC = (require('v8-compile-cache-lib') as typeof import('v8-compile-cache-lib')).install();\n    try {\n      return requireFn(specifier);\n    } finally {\n      v8CC?.uninstall();\n    }\n  } catch (e) {\n    return requireFn(specifier);\n  }\n}\n\n/**\n * Helper to discover dependencies relative to a user's project, optionally\n * falling back to relative to ts-node.  This supports global installations of\n * ts-node, for example where someone does `#!/usr/bin/env -S ts-node --swc` and\n * we need to fallback to a global install of @swc/core\n * @internal\n */\nexport function createProjectLocalResolveHelper(localDirectory: string) {\n  return function projectLocalResolveHelper(specifier: string, fallbackToTsNodeRelative: boolean) {\n    return require.resolve(specifier, {\n      paths: fallbackToTsNodeRelative ? [localDirectory, __dirname] : [localDirectory],\n    });\n  };\n}\n/** @internal */\nexport type ProjectLocalResolveHelper = ReturnType<typeof createProjectLocalResolveHelper>;\n\n/**\n * Used as a reminder of all the factors we must consider when finding project-local dependencies and when a config file\n * on disk may or may not exist.\n * @internal\n */\nexport function getBasePathForProjectLocalDependencyResolution(\n  configFilePath: string | undefined,\n  projectSearchDirOption: string | undefined,\n  projectOption: string | undefined,\n  cwdOption: string\n) {\n  if (configFilePath != null) return dirname(configFilePath);\n  return projectSearchDirOption ?? projectOption ?? cwdOption;\n  // TODO technically breaks if projectOption is path to a file, not a directory,\n  // and we attempt to resolve relative specifiers.  By the time we resolve relative specifiers,\n  // should have configFilePath, so not reach this codepath.\n}\n\n/** @internal */\nexport function once<Fn extends (...args: any[]) => any>(fn: Fn) {\n  let value: ReturnType<Fn>;\n  let ran = false;\n  function onceFn(...args: Parameters<Fn>): ReturnType<Fn> {\n    if (ran) return value;\n    value = fn(...args);\n    ran = true;\n    return value;\n  }\n  return onceFn;\n}\n\n/** @internal */\nexport function versionGteLt(version: string, gteRequirement: string, ltRequirement?: string) {\n  const [major, minor, patch, extra] = parse(version);\n  const [gteMajor, gteMinor, gtePatch] = parse(gteRequirement);\n  const isGte =\n    major > gteMajor || (major === gteMajor && (minor > gteMinor || (minor === gteMinor && patch >= gtePatch)));\n  let isLt = true;\n  if (ltRequirement) {\n    const [ltMajor, ltMinor, ltPatch] = parse(ltRequirement);\n    isLt = major < ltMajor || (major === ltMajor && (minor < ltMinor || (minor === ltMinor && patch < ltPatch)));\n  }\n  return isGte && isLt;\n\n  function parse(requirement: string) {\n    return requirement.split(/[\\.-]/).map((s) => parseInt(s, 10));\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/configuration.js":{"lineLengths":[13,62,179,31,35,49,43,33,3,86,3,34,20,27,24,23,18,23,2,2,61,3,32,58,30,34,36,41,41,46,53,46,52,5,105,46,55,5,18,1,16,40,111,74,55,157,88,74,115,127,100,54,97,78,25,162,111,5,12,16,15,31,24,23,12,17,6,1,46,3,74,54,2,79,73,2,12,3,45,59,27,41,23,35,93,206,49,23,22,63,71,68,9,14,77,9,29,99,33,47,74,30,40,100,64,71,38,35,28,55,87,54,44,22,17,40,59,34,30,33,43,19,38,29,88,47,92,35,60,33,84,39,64,40,32,59,75,58,48,26,21,61,107,39,48,95,21,17,13,52,9,5,68,41,31,55,64,92,100,30,84,122,99,9,31,79,9,69,34,51,9,41,50,9,39,48,9,34,43,9,63,5,36,99,97,62,75,19,11,89,28,10,45,47,57,42,38,28,19,38,49,47,30,35,55,30,77,19,17,63,70,63,68,45,12,39,28,34,24,6,1,32,3,78,59,12,3,55,63,38,28,1,56,48,98,75,24,1,16,33,75,1,36,3,96,26,3,60,27,52,365,37,17,21,24,13,30,14,15,26,17,21,15,16,19,22,18,19,14,17,20,12,29,12,40,39,6,93,38,35,65,1,16,46,3,98,68,12,3,76,49,41,26,22,31,91,12,57,5,48,70,72,43,31,75,132,132,27,67,1,50,41],"data":{"version":3,"file":"configuration.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/configuration.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve, dirname, join } from 'path';\nimport type * as _ts from 'typescript';\nimport { CreateOptions, DEFAULTS, OptionBasePaths, RegisterOptions, TSCommon, TsConfigOptions } from './index';\nimport type { TSInternal } from './ts-compiler-types';\nimport { createTsInternals } from './ts-internals';\nimport { getDefaultTsconfigJsonForNodeVersion } from './tsconfigs';\nimport {\n  assign,\n  attemptRequireWithV8CompileCache,\n  createProjectLocalResolveHelper,\n  getBasePathForProjectLocalDependencyResolution,\n} from './util';\n\n/**\n * TypeScript compiler option values required by `ts-node` which cannot be overridden.\n */\nconst TS_NODE_COMPILER_OPTIONS = {\n  sourceMap: true,\n  inlineSourceMap: false,\n  inlineSources: true,\n  declaration: false,\n  noEmit: false,\n  outDir: '.ts-node',\n};\n\n/*\n * Do post-processing on config options to support `ts-node`.\n */\nfunction fixConfig(ts: TSCommon, config: _ts.ParsedCommandLine) {\n  // Delete options that *should not* be passed through.\n  delete config.options.out;\n  delete config.options.outFile;\n  delete config.options.composite;\n  delete config.options.declarationDir;\n  delete config.options.declarationMap;\n  delete config.options.emitDeclarationOnly;\n\n  // Target ES5 output by default (instead of ES3).\n  if (config.options.target === undefined) {\n    config.options.target = ts.ScriptTarget.ES5;\n  }\n\n  // Target CommonJS modules by default (instead of magically switching to ES6 when the target is ES6).\n  if (config.options.module === undefined) {\n    config.options.module = ts.ModuleKind.CommonJS;\n  }\n\n  return config;\n}\n\n/** @internal */\nexport function findAndReadConfig(rawOptions: CreateOptions) {\n  const cwd = resolve(rawOptions.cwd ?? rawOptions.dir ?? DEFAULTS.cwd ?? process.cwd());\n  const compilerName = rawOptions.compiler ?? DEFAULTS.compiler;\n\n  // Compute minimum options to read the config file.\n  let projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n    undefined,\n    rawOptions.projectSearchDir,\n    rawOptions.project,\n    cwd\n  );\n  let { compiler, ts } = resolveAndLoadCompiler(compilerName, projectLocalResolveDir);\n\n  // Read config file and merge new options between env and CLI options.\n  const { configFilePath, config, tsNodeOptionsFromTsconfig, optionBasePaths } = readConfig(cwd, ts, rawOptions);\n\n  const options = assign<RegisterOptions>(\n    {},\n    DEFAULTS,\n    tsNodeOptionsFromTsconfig || {},\n    { optionBasePaths },\n    rawOptions\n  );\n  options.require = [...(tsNodeOptionsFromTsconfig.require || []), ...(rawOptions.require || [])];\n\n  // Re-resolve the compiler in case it has changed.\n  // Compiler is loaded relative to tsconfig.json, so tsconfig discovery may cause us to load a\n  // different compiler than we did above, even if the name has not changed.\n  if (configFilePath) {\n    projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n      configFilePath,\n      rawOptions.projectSearchDir,\n      rawOptions.project,\n      cwd\n    );\n    ({ compiler } = resolveCompiler(options.compiler, optionBasePaths.compiler ?? projectLocalResolveDir));\n  }\n\n  return {\n    options,\n    config,\n    projectLocalResolveDir,\n    optionBasePaths,\n    configFilePath,\n    cwd,\n    compiler,\n  };\n}\n\n/**\n * Load TypeScript configuration. Returns the parsed TypeScript config and\n * any `ts-node` options specified in the config file.\n *\n * Even when a tsconfig.json is not loaded, this function still handles merging\n * compilerOptions from various sources: API, environment variables, etc.\n *\n * @internal\n */\nexport function readConfig(\n  cwd: string,\n  ts: TSCommon,\n  rawApiOptions: CreateOptions\n): {\n  /**\n   * Path of tsconfig file if one was loaded\n   */\n  configFilePath: string | undefined;\n  /**\n   * Parsed TypeScript configuration with compilerOptions merged from all other sources (env vars, etc)\n   */\n  config: _ts.ParsedCommandLine;\n  /**\n   * ts-node options pulled from `tsconfig.json`, NOT merged with any other sources.  Merging must happen outside\n   * this function.\n   */\n  tsNodeOptionsFromTsconfig: TsConfigOptions;\n  optionBasePaths: OptionBasePaths;\n} {\n  // Ordered [a, b, c] where config a extends b extends c\n  const configChain: Array<{\n    config: any;\n    basePath: string;\n    configPath: string;\n  }> = [];\n  let config: any = { compilerOptions: {} };\n  let basePath = cwd;\n  let rootConfigPath: string | undefined = undefined;\n  const projectSearchDir = resolve(cwd, rawApiOptions.projectSearchDir ?? cwd);\n\n  const {\n    fileExists = ts.sys.fileExists,\n    readFile = ts.sys.readFile,\n    skipProject = DEFAULTS.skipProject,\n    project = DEFAULTS.project,\n    tsTrace = DEFAULTS.tsTrace,\n  } = rawApiOptions;\n\n  // Read project configuration when available.\n  if (!skipProject) {\n    if (project) {\n      const resolved = resolve(cwd, project);\n      const nested = join(resolved, 'tsconfig.json');\n      rootConfigPath = fileExists(nested) ? nested : resolved;\n    } else {\n      rootConfigPath = ts.findConfigFile(projectSearchDir, fileExists);\n    }\n\n    if (rootConfigPath) {\n      // If root extends [a, c] and a extends b, c extends d, then this array will look like:\n      // [root, c, d, a, b]\n      let configPaths = [rootConfigPath];\n      const tsInternals = createTsInternals(ts);\n      const errors: Array<_ts.Diagnostic> = [];\n\n      // Follow chain of \"extends\"\n      for (let configPathIndex = 0; configPathIndex < configPaths.length; configPathIndex++) {\n        const configPath = configPaths[configPathIndex];\n        const result = ts.readConfigFile(configPath, readFile);\n\n        // Return diagnostics.\n        if (result.error) {\n          return {\n            configFilePath: rootConfigPath,\n            config: { errors: [result.error], fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n\n        const c = result.config;\n        const bp = dirname(configPath);\n        configChain.push({\n          config: c,\n          basePath: bp,\n          configPath: configPath,\n        });\n\n        if (c.extends == null) continue;\n        const extendsArray = Array.isArray(c.extends) ? c.extends : [c.extends];\n        for (const e of extendsArray) {\n          const resolvedExtendedConfigPath = tsInternals.getExtendsConfigPath(\n            e,\n            {\n              fileExists,\n              readDirectory: ts.sys.readDirectory,\n              readFile,\n              useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n              trace: tsTrace,\n            },\n            bp,\n            errors,\n            (ts as unknown as TSInternal).createCompilerDiagnostic\n          );\n          if (errors.length) {\n            return {\n              configFilePath: rootConfigPath,\n              config: { errors, fileNames: [], options: {} },\n              tsNodeOptionsFromTsconfig: {},\n              optionBasePaths: {},\n            };\n          }\n          if (resolvedExtendedConfigPath != null) {\n            // Tricky! If \"extends\" array is [a, c] then this will splice them into this order:\n            // [root, c, a]\n            // This is what we want.\n            configPaths.splice(configPathIndex + 1, 0, resolvedExtendedConfigPath);\n          }\n        }\n      }\n\n      ({ config, basePath } = configChain[0]);\n    }\n  }\n\n  // Merge and fix ts-node options that come from tsconfig.json(s)\n  const tsNodeOptionsFromTsconfig: TsConfigOptions = {};\n  const optionBasePaths: OptionBasePaths = {};\n  for (let i = configChain.length - 1; i >= 0; i--) {\n    const { config, basePath, configPath } = configChain[i];\n    const options = filterRecognizedTsConfigTsNodeOptions(config['ts-node']).recognized;\n\n    // Some options are relative to the config file, so must be converted to absolute paths here\n    if (options.require) {\n      // Modules are found relative to the tsconfig file, not the `dir` option\n      const tsconfigRelativeResolver = createProjectLocalResolveHelper(dirname(configPath));\n      options.require = options.require.map((path: string) => tsconfigRelativeResolver(path, false));\n    }\n    if (options.scopeDir) {\n      options.scopeDir = resolve(basePath, options.scopeDir!);\n    }\n\n    // Downstream code uses the basePath; we do not do that here.\n    if (options.moduleTypes) {\n      optionBasePaths.moduleTypes = basePath;\n    }\n    if (options.transpiler != null) {\n      optionBasePaths.transpiler = basePath;\n    }\n    if (options.compiler != null) {\n      optionBasePaths.compiler = basePath;\n    }\n    if (options.swc != null) {\n      optionBasePaths.swc = basePath;\n    }\n\n    assign(tsNodeOptionsFromTsconfig, options);\n  }\n\n  // Remove resolution of \"files\".\n  const files = rawApiOptions.files ?? tsNodeOptionsFromTsconfig.files ?? DEFAULTS.files;\n\n  // Only if a config file is *not* loaded, load an implicit configuration from @tsconfig/bases\n  const skipDefaultCompilerOptions = rootConfigPath != null;\n  const defaultCompilerOptionsForNodeVersion = skipDefaultCompilerOptions\n    ? undefined\n    : {\n        ...getDefaultTsconfigJsonForNodeVersion(ts).compilerOptions,\n        types: ['node'],\n      };\n\n  // Merge compilerOptions from all sources\n  config.compilerOptions = Object.assign(\n    {},\n    // automatically-applied options from @tsconfig/bases\n    defaultCompilerOptionsForNodeVersion,\n    // tsconfig.json \"compilerOptions\"\n    config.compilerOptions,\n    // from env var\n    DEFAULTS.compilerOptions,\n    // tsconfig.json \"ts-node\": \"compilerOptions\"\n    tsNodeOptionsFromTsconfig.compilerOptions,\n    // passed programmatically\n    rawApiOptions.compilerOptions,\n    // overrides required by ts-node, cannot be changed\n    TS_NODE_COMPILER_OPTIONS\n  );\n\n  const fixedConfig = fixConfig(\n    ts,\n    ts.parseJsonConfigFileContent(\n      config,\n      {\n        fileExists,\n        readFile,\n        // Only used for globbing \"files\", \"include\", \"exclude\"\n        // When `files` option disabled, we want to avoid the fs calls\n        readDirectory: files ? ts.sys.readDirectory : () => [],\n        useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n      },\n      basePath,\n      undefined,\n      rootConfigPath\n    )\n  );\n\n  return {\n    configFilePath: rootConfigPath,\n    config: fixedConfig,\n    tsNodeOptionsFromTsconfig,\n    optionBasePaths,\n  };\n}\n\n/**\n * Load the typescript compiler. It is required to load the tsconfig but might\n * be changed by the tsconfig, so we have to do this twice.\n * @internal\n */\nexport function resolveAndLoadCompiler(name: string | undefined, relativeToPath: string) {\n  const { compiler } = resolveCompiler(name, relativeToPath);\n  const ts = loadCompiler(compiler);\n  return { compiler, ts };\n}\n\nfunction resolveCompiler(name: string | undefined, relativeToPath: string) {\n  const projectLocalResolveHelper = createProjectLocalResolveHelper(relativeToPath);\n  const compiler = projectLocalResolveHelper(name || 'typescript', true);\n  return { compiler };\n}\n\n/** @internal */\nexport function loadCompiler(compiler: string): TSCommon {\n  return attemptRequireWithV8CompileCache(require, compiler);\n}\n\n/**\n * Given the raw \"ts-node\" sub-object from a tsconfig, return an object with only the properties\n * recognized by \"ts-node\"\n */\nfunction filterRecognizedTsConfigTsNodeOptions(jsonObject: any): {\n  recognized: TsConfigOptions;\n  unrecognized: any;\n} {\n  if (jsonObject == null) return { recognized: {}, unrecognized: {} };\n  const {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    experimentalReplAwait,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n    ...unrecognized\n  } = jsonObject as TsConfigOptions;\n  const filteredTsConfigOptions = {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    experimentalReplAwait,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n  };\n  // Use the typechecker to make sure this implementation has the correct set of properties\n  const catchExtraneousProps: keyof TsConfigOptions = null as any as keyof typeof filteredTsConfigOptions;\n  const catchMissingProps: keyof typeof filteredTsConfigOptions = null as any as keyof TsConfigOptions;\n  return { recognized: filteredTsConfigOptions, unrecognized };\n}\n\n/** @internal */\nexport const ComputeAsCommonRootOfFiles = Symbol();\n\n/**\n * Some TS compiler options have defaults which are not provided by TS's config parsing functions.\n * This function centralizes the logic for computing those defaults.\n * @internal\n */\nexport function getTsConfigDefaults(\n  config: _ts.ParsedCommandLine,\n  basePath: string,\n  _files: string[] | undefined,\n  _include: string[] | undefined,\n  _exclude: string[] | undefined\n) {\n  const { composite = false } = config.options;\n  let rootDir: string | typeof ComputeAsCommonRootOfFiles = config.options.rootDir!;\n  if (rootDir == null) {\n    if (composite) rootDir = basePath;\n    // Return this symbol to avoid computing from `files`, which would require fs calls\n    else rootDir = ComputeAsCommonRootOfFiles;\n  }\n  const { outDir = rootDir } = config.options;\n  // Docs are wrong: https://www.typescriptlang.org/tsconfig#include\n  // Docs say **, but it's actually **/*; compiler throws error for **\n  const include = _files ? [] : ['**/*'];\n  const files = _files ?? [];\n  // Docs are misleading: https://www.typescriptlang.org/tsconfig#exclude\n  // Docs say it excludes node_modules, bower_components, jspm_packages, but actually those are excluded via behavior of \"include\"\n  const exclude = _exclude ?? [outDir]; // TODO technically, outDir is absolute path, but exclude should be relative glob pattern?\n\n  // TODO compute baseUrl\n\n  return { rootDir, outDir, include, files, exclude, composite };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/ts-internals.js":{"lineLengths":[13,62,64,31,33,16,80,3,82,57,73,2,79,79,36,3,41,19,7,19,104,7,93,70,120,89,107,66,59,99,37,17,13,38,9,77,73,168,29,35,70,58,38,60,9,87,25,5,36,1,84,33,40,1,39,100,1,64,148,1,34,44,1,32,51,80,1,93,94,9,46,3,12,85,3,45,82,48,1,48,136,24,36,67,43,81,55,68,40,35,5,26,39,33,54,9,14,38,49,13,96,9,35,5,31,27,24,5,22,1,28,41,7,92,88,7,51,121,2,24,41,43,117,2,62,75,1,57,48,53,1,43,26,18,36,49,40,23,21,30,21,33,37,59,34,29,17,13,32,25,9,32,5,19,1,30,50,53,1,37,14,17,35,19,93,39,59,119,19,64,57,5,10,89,39,95,44,30,50,5,10,55,27,69,78,34,70,82,89,97,52,71,36,66,71,96,48,96,112,57,21,61,108,67,51,21,17,13,82,9,69,5,15,13,1,49,47,41,5,16,1,46,88,1,44,104,1,49,46,47,5,16,1,31,35,33,38,96,90,1,51,38,46,25,110,46,83,29,5,14,1,33,16,24,36,35,32,17,13,9,14,36,9,5,17,1,43,47,70,46,19,27,1,33,68,1,22,40,35,1,71,95,1,3,120,51,3,44,44,1,40],"data":{"version":3,"file":"ts-internals.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/ts-internals.ts"],"names":[],"mappings":"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","sourcesContent":["import { isAbsolute, resolve } from 'path';\nimport { cachedLookup, normalizeSlashes, versionGteLt } from './util';\nimport type * as _ts from 'typescript';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\n\n/** @internal */\nexport const createTsInternals = cachedLookup(createTsInternalsUncached);\n/**\n * Given a reference to the TS compiler, return some TS internal functions that we\n * could not or did not want to grab off the `ts` object.\n * These have been copy-pasted from TS's source and tweaked as necessary.\n *\n * NOTE: This factory returns *only* functions which need a reference to the TS\n * compiler.  Other functions do not need a reference to the TS compiler so are\n * exported directly from this file.\n */\nfunction createTsInternalsUncached(_ts: TSCommon) {\n  const ts = _ts as TSCommon & TSInternal;\n  /**\n   * Copied from:\n   * https://github.com/microsoft/TypeScript/blob/v4.3.2/src/compiler/commandLineParser.ts#L2821-L2846\n   */\n  function getExtendsConfigPath(\n    extendedConfig: string,\n    host: _ts.ParseConfigHost,\n    basePath: string,\n    errors: _ts.Push<_ts.Diagnostic>,\n    createDiagnostic: (message: _ts.DiagnosticMessage, arg1?: string) => _ts.Diagnostic\n  ) {\n    extendedConfig = normalizeSlashes(extendedConfig);\n    if (isRootedDiskPath(extendedConfig) || startsWith(extendedConfig, './') || startsWith(extendedConfig, '../')) {\n      let extendedConfigPath = getNormalizedAbsolutePath(extendedConfig, basePath);\n      if (!host.fileExists(extendedConfigPath) && !endsWith(extendedConfigPath, ts.Extension.Json)) {\n        extendedConfigPath = `${extendedConfigPath}.json`;\n        if (!host.fileExists(extendedConfigPath)) {\n          errors.push(createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig));\n          return undefined;\n        }\n      }\n      return extendedConfigPath;\n    }\n    // If the path isn't a rooted or relative path, resolve like a module\n    const tsGte5_3_0 = versionGteLt(ts.version, '5.3.0');\n    const resolved = ts.nodeModuleNameResolver(\n      extendedConfig,\n      combinePaths(basePath, 'tsconfig.json'),\n      { moduleResolution: ts.ModuleResolutionKind.NodeJs },\n      host,\n      /*cache*/ undefined,\n      /*projectRefs*/ undefined,\n      /*conditionsOrIsConfigLookup*/ tsGte5_3_0 ? undefined : true,\n      /*isConfigLookup*/ tsGte5_3_0 ? true : undefined\n    );\n    if (resolved.resolvedModule) {\n      return resolved.resolvedModule.resolvedFileName;\n    }\n    errors.push(createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig));\n    return undefined;\n  }\n\n  return { getExtendsConfigPath };\n}\n\n// These functions have alternative implementation to avoid copying too much from TS\nfunction isRootedDiskPath(path: string) {\n  return isAbsolute(path);\n}\nfunction combinePaths(path: string, ...paths: (string | undefined)[]): string {\n  return normalizeSlashes(resolve(path, ...(paths.filter((path) => path) as string[])));\n}\nfunction getNormalizedAbsolutePath(fileName: string, currentDirectory: string | undefined) {\n  return normalizeSlashes(currentDirectory != null ? resolve(currentDirectory!, fileName) : resolve(fileName));\n}\n\nfunction startsWith(str: string, prefix: string): boolean {\n  return str.lastIndexOf(prefix, 0) === 0;\n}\n\nfunction endsWith(str: string, suffix: string): boolean {\n  const expectedPos = str.length - suffix.length;\n  return expectedPos >= 0 && str.indexOf(suffix, expectedPos) === expectedPos;\n}\n// Reserved characters, forces escaping of any non-word (or digit), non-whitespace character.\n// It may be inefficient (we could just match (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g), but this is future\n// proof.\nconst reservedCharacterPattern = /[^\\w\\s\\/]/g;\n\n/**\n * @internal\n * See also: getRegularExpressionForWildcard, which seems to do almost the same thing\n */\nexport function getPatternFromSpec(spec: string, basePath: string) {\n  const pattern = spec && getSubPatternFromSpec(spec, basePath, excludeMatcher);\n  return pattern && `^(${pattern})${'($|/)'}`;\n}\nfunction getSubPatternFromSpec(\n  spec: string,\n  basePath: string,\n  { singleAsteriskRegexFragment, doubleAsteriskRegexFragment, replaceWildcardCharacter }: WildcardMatcher\n): string {\n  let subpattern = '';\n  let hasWrittenComponent = false;\n  const components = getNormalizedPathComponents(spec, basePath);\n  const lastComponent = last(components);\n\n  // getNormalizedPathComponents includes the separator for the root component.\n  // We need to remove to create our regex correctly.\n  components[0] = removeTrailingDirectorySeparator(components[0]);\n\n  if (isImplicitGlob(lastComponent)) {\n    components.push('**', '*');\n  }\n\n  let optionalCount = 0;\n  for (let component of components) {\n    if (component === '**') {\n      subpattern += doubleAsteriskRegexFragment;\n    } else {\n      if (hasWrittenComponent) {\n        subpattern += directorySeparator;\n      }\n      subpattern += component.replace(reservedCharacterPattern, replaceWildcardCharacter);\n    }\n\n    hasWrittenComponent = true;\n  }\n\n  while (optionalCount > 0) {\n    subpattern += ')?';\n    optionalCount--;\n  }\n\n  return subpattern;\n}\ninterface WildcardMatcher {\n  singleAsteriskRegexFragment: string;\n  doubleAsteriskRegexFragment: string;\n  replaceWildcardCharacter: (match: string) => string;\n}\nconst directoriesMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  /**\n   * Regex for the ** wildcard. Matches any num of subdirectories. When used for including\n   * files or directories, does not match subdirectories that start with a . character\n   */\n  doubleAsteriskRegexFragment: `(/[^/.][^/]*)*?`,\n  replaceWildcardCharacter: (match) => replaceWildcardCharacter(match, directoriesMatcher.singleAsteriskRegexFragment),\n};\nconst excludeMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  doubleAsteriskRegexFragment: '(/.+?)?',\n  replaceWildcardCharacter: (match) => replaceWildcardCharacter(match, excludeMatcher.singleAsteriskRegexFragment),\n};\nfunction getNormalizedPathComponents(path: string, currentDirectory: string | undefined) {\n  return reducePathComponents(getPathComponents(path, currentDirectory));\n}\nfunction getPathComponents(path: string, currentDirectory = '') {\n  path = combinePaths(currentDirectory, path);\n  return pathComponents(path, getRootLength(path));\n}\nfunction reducePathComponents(components: readonly string[]) {\n  if (!some(components)) return [];\n  const reduced = [components[0]];\n  for (let i = 1; i < components.length; i++) {\n    const component = components[i];\n    if (!component) continue;\n    if (component === '.') continue;\n    if (component === '..') {\n      if (reduced.length > 1) {\n        if (reduced[reduced.length - 1] !== '..') {\n          reduced.pop();\n          continue;\n        }\n      } else if (reduced[0]) continue;\n    }\n    reduced.push(component);\n  }\n  return reduced;\n}\nfunction getRootLength(path: string) {\n  const rootLength = getEncodedRootLength(path);\n  return rootLength < 0 ? ~rootLength : rootLength;\n}\nfunction getEncodedRootLength(path: string): number {\n  if (!path) return 0;\n  const ch0 = path.charCodeAt(0);\n\n  // POSIX or UNC\n  if (ch0 === CharacterCodes.slash || ch0 === CharacterCodes.backslash) {\n    if (path.charCodeAt(1) !== ch0) return 1; // POSIX: \"/\" (or non-normalized \"\\\")\n\n    const p1 = path.indexOf(ch0 === CharacterCodes.slash ? directorySeparator : altDirectorySeparator, 2);\n    if (p1 < 0) return path.length; // UNC: \"//server\" or \"\\\\server\"\n\n    return p1 + 1; // UNC: \"//server/\" or \"\\\\server\\\"\n  }\n\n  // DOS\n  if (isVolumeCharacter(ch0) && path.charCodeAt(1) === CharacterCodes.colon) {\n    const ch2 = path.charCodeAt(2);\n    if (ch2 === CharacterCodes.slash || ch2 === CharacterCodes.backslash) return 3; // DOS: \"c:/\" or \"c:\\\"\n    if (path.length === 2) return 2; // DOS: \"c:\" (but not \"c:d\")\n  }\n\n  // URL\n  const schemeEnd = path.indexOf(urlSchemeSeparator);\n  if (schemeEnd !== -1) {\n    const authorityStart = schemeEnd + urlSchemeSeparator.length;\n    const authorityEnd = path.indexOf(directorySeparator, authorityStart);\n    if (authorityEnd !== -1) {\n      // URL: \"file:///\", \"file://server/\", \"file://server/path\"\n      // For local \"file\" URLs, include the leading DOS volume (if present).\n      // Per https://www.ietf.org/rfc/rfc1738.txt, a host of \"\" or \"localhost\" is a\n      // special case interpreted as \"the machine from which the URL is being interpreted\".\n      const scheme = path.slice(0, schemeEnd);\n      const authority = path.slice(authorityStart, authorityEnd);\n      if (\n        scheme === 'file' &&\n        (authority === '' || authority === 'localhost') &&\n        isVolumeCharacter(path.charCodeAt(authorityEnd + 1))\n      ) {\n        const volumeSeparatorEnd = getFileUrlVolumeSeparatorEnd(path, authorityEnd + 2);\n        if (volumeSeparatorEnd !== -1) {\n          if (path.charCodeAt(volumeSeparatorEnd) === CharacterCodes.slash) {\n            // URL: \"file:///c:/\", \"file://localhost/c:/\", \"file:///c%3a/\", \"file://localhost/c%3a/\"\n            return ~(volumeSeparatorEnd + 1);\n          }\n          if (volumeSeparatorEnd === path.length) {\n            // URL: \"file:///c:\", \"file://localhost/c:\", \"file:///c$3a\", \"file://localhost/c%3a\"\n            // but not \"file:///c:d\" or \"file:///c%3ad\"\n            return ~volumeSeparatorEnd;\n          }\n        }\n      }\n      return ~(authorityEnd + 1); // URL: \"file://server/\", \"http://server/\"\n    }\n    return ~path.length; // URL: \"file://server\", \"http://server\"\n  }\n\n  // relative\n  return 0;\n}\nfunction ensureTrailingDirectorySeparator(path: string) {\n  if (!hasTrailingDirectorySeparator(path)) {\n    return path + directorySeparator;\n  }\n\n  return path;\n}\nfunction hasTrailingDirectorySeparator(path: string) {\n  return path.length > 0 && isAnyDirectorySeparator(path.charCodeAt(path.length - 1));\n}\nfunction isAnyDirectorySeparator(charCode: number): boolean {\n  return charCode === CharacterCodes.slash || charCode === CharacterCodes.backslash;\n}\nfunction removeTrailingDirectorySeparator(path: string) {\n  if (hasTrailingDirectorySeparator(path)) {\n    return path.substr(0, path.length - 1);\n  }\n\n  return path;\n}\nconst directorySeparator = '/';\nconst altDirectorySeparator = '\\\\';\nconst urlSchemeSeparator = '://';\nfunction isVolumeCharacter(charCode: number) {\n  return (\n    (charCode >= CharacterCodes.a && charCode <= CharacterCodes.z) ||\n    (charCode >= CharacterCodes.A && charCode <= CharacterCodes.Z)\n  );\n}\nfunction getFileUrlVolumeSeparatorEnd(url: string, start: number) {\n  const ch0 = url.charCodeAt(start);\n  if (ch0 === CharacterCodes.colon) return start + 1;\n  if (ch0 === CharacterCodes.percent && url.charCodeAt(start + 1) === CharacterCodes._3) {\n    const ch2 = url.charCodeAt(start + 2);\n    if (ch2 === CharacterCodes.a || ch2 === CharacterCodes.A) return start + 3;\n  }\n  return -1;\n}\nfunction some<T>(array: readonly T[] | undefined): array is readonly T[];\nfunction some<T>(array: readonly T[] | undefined, predicate: (value: T) => boolean): boolean;\nfunction some<T>(array: readonly T[] | undefined, predicate?: (value: T) => boolean): boolean {\n  if (array) {\n    if (predicate) {\n      for (const v of array) {\n        if (predicate(v)) {\n          return true;\n        }\n      }\n    } else {\n      return array.length > 0;\n    }\n  }\n  return false;\n}\n/* @internal */\nconst enum CharacterCodes {\n  _3 = 0x33,\n  a = 0x61,\n  z = 0x7a,\n  A = 0x41,\n  Z = 0x5a,\n  asterisk = 0x2a, // *\n  backslash = 0x5c, // \\\n  colon = 0x3a, // :\n  percent = 0x25, // %\n  question = 0x3f, // ?\n  slash = 0x2f, // /\n}\nfunction pathComponents(path: string, rootLength: number) {\n  const root = path.substring(0, rootLength);\n  const rest = path.substring(rootLength).split(directorySeparator);\n  if (rest.length && !lastOrUndefined(rest)) rest.pop();\n  return [root, ...rest];\n}\nfunction lastOrUndefined<T>(array: readonly T[]): T | undefined {\n  return array.length === 0 ? undefined : array[array.length - 1];\n}\nfunction last<T>(array: readonly T[]): T {\n  // Debug.assert(array.length !== 0);\n  return array[array.length - 1];\n}\nfunction replaceWildcardCharacter(match: string, singleAsteriskRegexFragment: string) {\n  return match === '*' ? singleAsteriskRegexFragment : match === '?' ? '[^/]' : '\\\\' + match;\n}\n/**\n * An \"includes\" path \"foo\" is implicitly a glob \"foo/** /*\" (without the space) if its last component has no extension,\n * and does not contain any glob characters itself.\n */\nfunction isImplicitGlob(lastPathComponent: string): boolean {\n  return !/[.*?]/.test(lastPathComponent);\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/tsconfigs.js":{"lineLengths":[13,62,54,68,3,79,28,12,3,51,26,26,65,37,26,5,26,65,37,26,5,26,65,37,26,5,53,90,39,99,30,86,5,1,84,37],"data":{"version":3,"file":"tsconfigs.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/tsconfigs.ts"],"names":[],"mappings":";;;AAEA,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACpE;;;;GAIG;AACH,SAAgB,oCAAoC,CAAC,EAAY;IAC/D,MAAM,UAAU,GAAG,EAAuB,CAAC;IAC3C,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,IAAI,SAAS,IAAI,EAAE,EAAE;QACnB,MAAM,MAAM,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACzD,IAAI,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;KAC7C;IACD,OAAO,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAEjD,sFAAsF;IACtF,SAAS,gBAAgB,CAAC,MAKzB;QACC,OAAO,CACL,OAAQ,EAAE,CAAC,YAAoB,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,QAAQ;YACzF,UAAU,CAAC,IAAI;YACf,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,IAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC1E,CAAC;IACJ,CAAC;AACH,CAAC;AA7BD,oFA6BC","sourcesContent":["import type { TSCommon, TSInternal } from './ts-compiler-types';\n\nconst nodeMajor = parseInt(process.versions.node.split('.')[0], 10);\n/**\n * return parsed JSON of the bundled @tsconfig/bases config appropriate for the\n * running version of nodejs\n * @internal\n */\nexport function getDefaultTsconfigJsonForNodeVersion(ts: TSCommon): any {\n  const tsInternal = ts as any as TSInternal;\n  if (nodeMajor >= 20) {\n    const config = require('@tsconfig/node20/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 18) {\n    const config = require('@tsconfig/node18/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 16) {\n    const config = require('@tsconfig/node16/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  return require('@tsconfig/node14/tsconfig.json');\n\n  // Verify that tsconfig target and lib options are compatible with TypeScript compiler\n  function configCompatible(config: {\n    compilerOptions: {\n      lib: string[];\n      target: string;\n    };\n  }) {\n    return (\n      typeof (ts.ScriptTarget as any)[config.compilerOptions.target.toUpperCase()] === 'number' &&\n      tsInternal.libs &&\n      config.compilerOptions.lib.every((lib) => tsInternal.libs!.includes(lib))\n    );\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/module-type-classifier.js":{"lineLengths":[13,62,44,49,33,3,12,89,14,69,3,46,54,118,87,63,66,7,29,18,31,10,14,30,10,14,30,10,6,41,38,44,80,20,49,20,5,77,39,20,5,12,107,6,1,64,48,84,64,1,56,51,34,43,39,26,9,5,1,50],"data":{"version":3,"file":"module-type-classifier.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/module-type-classifier.ts"],"names":[],"mappings":";;;AACA,iDAAoD;AACpD,iCAAwD;AAsBxD;;;;;GAKG;AACH,SAAgB,0BAA0B,CAAC,OAAoC;IAC7E,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAClD,MAAM,QAAQ,GAAG,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,IAAA,uBAAgB,EAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAEtG,MAAM,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE;QAC/E,MAAM,OAAO,GAAG,IAAA,uBAAgB,EAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO,EAAE,OAAO,EAAE,YAAY,CAAC,QAAS,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,MAAM,eAAe,GAAyD;QAC5E,OAAO,EAAE;YACP,UAAU,EAAE,MAAM;SACnB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,KAAK;SAClB;QACD,GAAG,EAAE;YACH,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IACF,MAAM,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC;IAErC,kCAAkC;IAClC,SAAS,uBAAuB,CAAC,IAAY;QAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxE,IAAI,OAAO;YAAE,OAAO,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,cAAc,GAAG,IAAA,mBAAY,EAAC,uBAAuB,CAAC,CAAC;IAE7D,SAAS,kBAAkB,CAAC,IAAY;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,mCAAmC,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,kBAAkB;KACnG,CAAC;AACJ,CAAC;AAtCD,gEAsCC;AAED,SAAS,YAAY,CAAC,QAAgB,EAAE,aAAqB;IAC3D,MAAM,OAAO,GAAG,IAAA,iCAAkB,EAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC5D,OAAO,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC9D,CAAC;AAED,SAAS,aAAa,CAAI,OAAY,EAAE,UAA4B,EAAE,SAAiB;IACrF,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5C,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnC,IAAI,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;YAC5B,OAAO,MAAM,CAAC;SACf;KACF;AACH,CAAC","sourcesContent":["import type { ModuleTypeOverride, ModuleTypes } from '.';\nimport { getPatternFromSpec } from './ts-internals';\nimport { cachedLookup, normalizeSlashes } from './util';\n\n// Logic to support our `moduleTypes` option, which allows overriding node's default ESM / CJS\n// classification of `.js` files based on package.json `type` field.\n\n/**\n * Seperate internal type because `auto` is clearer than `package`, but changing\n * the public API is a breaking change.\n * @internal\n */\nexport type InternalModuleTypeOverride = 'cjs' | 'esm' | 'auto';\n/** @internal */\nexport interface ModuleTypeClassification {\n  moduleType: InternalModuleTypeOverride;\n}\n/** @internal */\nexport interface ModuleTypeClassifierOptions {\n  basePath?: string;\n  patterns?: ModuleTypes;\n}\n/** @internal */\nexport type ModuleTypeClassifier = ReturnType<typeof createModuleTypeClassifier>;\n/**\n * @internal\n * May receive non-normalized options -- basePath and patterns -- and will normalize them\n * internally.\n * However, calls to `classifyModule` must pass pre-normalized paths!\n */\nexport function createModuleTypeClassifier(options: ModuleTypeClassifierOptions) {\n  const { patterns, basePath: _basePath } = options;\n  const basePath = _basePath !== undefined ? normalizeSlashes(_basePath).replace(/\\/$/, '') : undefined;\n\n  const patternTypePairs = Object.entries(patterns ?? []).map(([_pattern, type]) => {\n    const pattern = normalizeSlashes(_pattern);\n    return { pattern: parsePattern(basePath!, pattern), type };\n  });\n\n  const classifications: Record<ModuleTypeOverride, ModuleTypeClassification> = {\n    package: {\n      moduleType: 'auto',\n    },\n    cjs: {\n      moduleType: 'cjs',\n    },\n    esm: {\n      moduleType: 'esm',\n    },\n  };\n  const auto = classifications.package;\n\n  // Passed path must be normalized!\n  function classifyModuleNonCached(path: string): ModuleTypeClassification {\n    const matched = matchPatterns(patternTypePairs, (_) => _.pattern, path);\n    if (matched) return classifications[matched.type];\n    return auto;\n  }\n\n  const classifyModule = cachedLookup(classifyModuleNonCached);\n\n  function classifyModuleAuto(path: String) {\n    return auto;\n  }\n\n  return {\n    classifyModuleByModuleTypeOverrides: patternTypePairs.length ? classifyModule : classifyModuleAuto,\n  };\n}\n\nfunction parsePattern(basePath: string, patternString: string): RegExp {\n  const pattern = getPatternFromSpec(patternString, basePath);\n  return pattern !== undefined ? new RegExp(pattern) : /(?:)/;\n}\n\nfunction matchPatterns<T>(objects: T[], getPattern: (t: T) => RegExp, candidate: string): T | undefined {\n  for (let i = objects.length - 1; i >= 0; i--) {\n    const object = objects[i];\n    const pattern = getPattern(object);\n\n    if (pattern?.test(candidate)) {\n      return object;\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/resolver-functions.js":{"lineLengths":[13,62,41,31,3,12,95,3,42,115,108,45,84,38,96,124,138,70,40,51,17,27,18,5,78,53,55,5,47,62,5,48,52,5,7,77,7,53,52,43,19,48,55,36,53,89,94,94,60,60,59,9,54,57,9,6,6,12,73,123,7,153,51,45,75,28,158,76,65,84,26,83,70,207,43,34,21,17,13,33,52,13,34,11,6,84,113,117,40,52,9,19,6,181,10,86,62,62,42,71,37,27,84,104,171,82,142,45,21,107,17,99,47,95,127,42,34,51,17,13,49,68,13,50,11,6,12,27,60,39,32,37,6,1,58,46],"data":{"version":3,"file":"resolver-functions.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/resolver-functions.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve } from 'path';\nimport type { CreateOptions } from '.';\nimport type { Extensions } from './file-extensions';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport type { ProjectLocalResolveHelper } from './util';\n\n/**\n * @internal\n * In a factory because these are shared across both CompilerHost and LanguageService codepaths\n */\nexport function createResolverFunctions(kwargs: {\n  ts: TSCommon;\n  host: TSCommon.ModuleResolutionHost;\n  cwd: string;\n  getCanonicalFileName: (filename: string) => string;\n  config: TSCommon.ParsedCommandLine;\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  options: CreateOptions;\n  extensions: Extensions;\n}) {\n  const { host, ts, config, cwd, getCanonicalFileName, projectLocalResolveHelper, options, extensions } = kwargs;\n  const moduleResolutionCache = ts.createModuleResolutionCache(cwd, getCanonicalFileName, config.options);\n  const knownInternalFilenames = new Set<string>();\n  /** \"Buckets\" (module directories) whose contents should be marked \"internal\" */\n  const internalBuckets = new Set<string>();\n\n  // Get bucket for a source filename.  Bucket is the containing `./node_modules/*/` directory\n  // For '/project/node_modules/foo/node_modules/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/bar/'\n  // For '/project/node_modules/foo/node_modules/@scope/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/@scope/bar/'\n  const moduleBucketRe = /.*\\/node_modules\\/(?:@[^\\/]+\\/)?[^\\/]+\\//;\n  function getModuleBucket(filename: string) {\n    const find = moduleBucketRe.exec(filename);\n    if (find) return find[0];\n    return '';\n  }\n\n  // Mark that this file and all siblings in its bucket should be \"internal\"\n  function markBucketOfFilenameInternal(filename: string) {\n    internalBuckets.add(getModuleBucket(filename));\n  }\n\n  function isFileInInternalBucket(filename: string) {\n    return internalBuckets.has(getModuleBucket(filename));\n  }\n\n  function isFileKnownToBeInternal(filename: string) {\n    return knownInternalFilenames.has(filename);\n  }\n\n  /**\n   * If we need to emit JS for a file, force TS to consider it non-external\n   */\n  const fixupResolvedModule = (resolvedModule: TSCommon.ResolvedModule | TSCommon.ResolvedTypeReferenceDirective) => {\n    const { resolvedFileName } = resolvedModule;\n    if (resolvedFileName === undefined) return;\n    // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n    // .ts,.mts,.cts is always switched to internal\n    // .js is switched on-demand\n    if (\n      resolvedModule.isExternalLibraryImport &&\n      ((resolvedFileName.endsWith('.ts') && !resolvedFileName.endsWith('.d.ts')) ||\n        (resolvedFileName.endsWith('.cts') && !resolvedFileName.endsWith('.d.cts')) ||\n        (resolvedFileName.endsWith('.mts') && !resolvedFileName.endsWith('.d.mts')) ||\n        isFileKnownToBeInternal(resolvedFileName) ||\n        isFileInInternalBucket(resolvedFileName))\n    ) {\n      resolvedModule.isExternalLibraryImport = false;\n    }\n    if (!resolvedModule.isExternalLibraryImport) {\n      knownInternalFilenames.add(resolvedFileName);\n    }\n  };\n  /*\n   * NOTE:\n   * Older ts versions do not pass `redirectedReference` nor `options`.\n   * We must pass `redirectedReference` to newer ts versions, but cannot rely on `options`, hence the weird argument name\n   */\n  const resolveModuleNames: TSCommon.LanguageServiceHost['resolveModuleNames'] = (\n    moduleNames: string[],\n    containingFile: string,\n    reusedNames: string[] | undefined,\n    redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n    optionsOnlyWithNewerTsVersions: TSCommon.CompilerOptions,\n    containingSourceFile?: TSCommon.SourceFile\n  ): (TSCommon.ResolvedModule | undefined)[] => {\n    return moduleNames.map((moduleName, i) => {\n      const mode = containingSourceFile\n        ? (ts as any as TSInternal).getModeForResolutionAtIndex?.(containingSourceFile, i)\n        : undefined;\n      let { resolvedModule } = ts.resolveModuleName(\n        moduleName,\n        containingFile,\n        config.options,\n        host,\n        moduleResolutionCache,\n        redirectedReference,\n        mode\n      );\n      if (!resolvedModule && options.experimentalTsImportSpecifiers) {\n        const lastDotIndex = moduleName.lastIndexOf('.');\n        const ext = lastDotIndex >= 0 ? moduleName.slice(lastDotIndex) : '';\n        if (ext) {\n          const replacements = extensions.tsResolverEquivalents.get(ext);\n          for (const replacementExt of replacements ?? []) {\n            ({ resolvedModule } = ts.resolveModuleName(\n              moduleName.slice(0, -ext.length) + replacementExt,\n              containingFile,\n              config.options,\n              host,\n              moduleResolutionCache,\n              redirectedReference,\n              mode\n            ));\n            if (resolvedModule) break;\n          }\n        }\n      }\n      if (resolvedModule) {\n        fixupResolvedModule(resolvedModule);\n      }\n      return resolvedModule;\n    });\n  };\n\n  // language service never calls this, but TS docs recommend that we implement it\n  const getResolvedModuleWithFailedLookupLocationsFromCache: TSCommon.LanguageServiceHost['getResolvedModuleWithFailedLookupLocationsFromCache'] =\n    (\n      moduleName,\n      containingFile,\n      resolutionMode?: TSCommon.ModuleKind.CommonJS | TSCommon.ModuleKind.ESNext\n    ): TSCommon.ResolvedModuleWithFailedLookupLocations | undefined => {\n      const ret = ts.resolveModuleNameFromCache(moduleName, containingFile, moduleResolutionCache, resolutionMode);\n      if (ret && ret.resolvedModule) {\n        fixupResolvedModule(ret.resolvedModule);\n      }\n      return ret;\n    };\n\n  const resolveTypeReferenceDirectives: TSCommon.LanguageServiceHost['resolveTypeReferenceDirectives'] = (\n    typeDirectiveNames: string[] | readonly TSCommon.FileReference[],\n    containingFile: string,\n    redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n    options: TSCommon.CompilerOptions,\n    containingFileMode?: TSCommon.SourceFile['impliedNodeFormat'] | undefined // new impliedNodeFormat is accepted by compilerHost\n  ): (TSCommon.ResolvedTypeReferenceDirective | undefined)[] => {\n    // Note: seems to be called with empty typeDirectiveNames array for all files.\n    // TODO consider using `ts.loadWithTypeDirectiveCache`\n    return typeDirectiveNames.map((typeDirectiveName) => {\n      // Copy-pasted from TS source:\n      const nameIsString = typeof typeDirectiveName === 'string';\n      const mode = nameIsString\n        ? undefined\n        : (ts as any as TSInternal).getModeForFileReference!(typeDirectiveName, containingFileMode);\n      const strName = nameIsString ? typeDirectiveName : typeDirectiveName.fileName.toLowerCase();\n      let { resolvedTypeReferenceDirective } = ts.resolveTypeReferenceDirective(\n        strName,\n        containingFile,\n        config.options,\n        host,\n        redirectedReference,\n        undefined,\n        mode\n      );\n      if (typeDirectiveName === 'node' && !resolvedTypeReferenceDirective) {\n        // Resolve @types/node relative to project first, then __dirname (copy logic from elsewhere / refactor into reusable function)\n        let typesNodePackageJsonPath: string | undefined;\n        try {\n          typesNodePackageJsonPath = projectLocalResolveHelper('@types/node/package.json', true);\n        } catch {} // gracefully do nothing when @types/node is not installed for any reason\n        if (typesNodePackageJsonPath) {\n          const typeRoots = [resolve(typesNodePackageJsonPath, '../..')];\n          ({ resolvedTypeReferenceDirective } = ts.resolveTypeReferenceDirective(\n            typeDirectiveName,\n            containingFile,\n            {\n              ...config.options,\n              typeRoots,\n            },\n            host,\n            redirectedReference\n          ));\n        }\n      }\n      if (resolvedTypeReferenceDirective) {\n        fixupResolvedModule(resolvedTypeReferenceDirective);\n      }\n      return resolvedTypeReferenceDirective;\n    });\n  };\n\n  return {\n    resolveModuleNames,\n    getResolvedModuleWithFailedLookupLocationsFromCache,\n    resolveTypeReferenceDirectives,\n    isFileKnownToBeInternal,\n    markBucketOfFilenameInternal,\n  };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/cjs-resolve-hooks.js":{"lineLengths":[13,62,56,3,12,3,64,37,60,46,73,28,93,51,37,78,41,101,96,9,30,41,63,58,9,5,1,88,45],"data":{"version":3,"file":"cjs-resolve-hooks.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/cjs-resolve-hooks.ts"],"names":[],"mappings":";;;AAoBA;;GAEG;AACH,SAAgB,sCAAsC,CAAC,aAAsB;IAC3E,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAmC,CAAC;IACnE,MAAM,uBAAuB,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACxD,MAAM,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC;IAC1C,MAAM,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,oBAAoB,CAAC;IACrE,IAAI,iBAAiB,EAAE;QACrB,MAAM,EAAE,eAAe,EAAE,sBAAsB,EAAE,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC;QACrF,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAC3C,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,SAAS,gBAAgB,CAEvB,OAAe,EACf,MAAe,EACf,MAAgB,EAChB,OAAsC,EACtC,GAAG,IAAQ;YAEX,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAC1B,OAAO,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;YAEvF,OAAO,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACtF,CAAC;QACD,SAAS,SAAS;YAChB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAAE,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAgB,CAAC,CAAC;YACpF,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,SAAgB,CAAC,CAAC;QACvD,CAAC;KACF;AACH,CAAC;AA3BD,wFA2BC","sourcesContent":["import type Module = require('module');\nimport type { Service } from '.';\n\n/** @internal */\nexport type ModuleConstructorWithInternals = typeof Module & {\n  _resolveFilename(\n    request: string,\n    parent?: Module,\n    isMain?: boolean,\n    options?: ModuleResolveFilenameOptions,\n    ...rest: any[]\n  ): string;\n  _preloadModules(requests?: string[]): void;\n  _findPath(request: string, paths: string[], isMain: boolean): string;\n};\n\ninterface ModuleResolveFilenameOptions {\n  paths?: Array<string>;\n}\n\n/**\n * @internal\n */\nexport function installCommonjsResolveHooksIfNecessary(tsNodeService: Service) {\n  const Module = require('module') as ModuleConstructorWithInternals;\n  const originalResolveFilename = Module._resolveFilename;\n  const originalFindPath = Module._findPath;\n  const shouldInstallHook = tsNodeService.options.experimentalResolver;\n  if (shouldInstallHook) {\n    const { Module_findPath, Module_resolveFilename } = tsNodeService.getNodeCjsLoader();\n    Module._resolveFilename = _resolveFilename;\n    Module._findPath = _findPath;\n    function _resolveFilename(\n      this: any,\n      request: string,\n      parent?: Module,\n      isMain?: boolean,\n      options?: ModuleResolveFilenameOptions,\n      ...rest: []\n    ): string {\n      if (!tsNodeService.enabled())\n        return originalResolveFilename.call(this, request, parent, isMain, options, ...rest);\n\n      return Module_resolveFilename.call(this, request, parent, isMain, options, ...rest);\n    }\n    function _findPath(this: any): string {\n      if (!tsNodeService.enabled()) return originalFindPath.apply(this, arguments as any);\n      return Module_findPath.apply(this, arguments as any);\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/node-module-type-classifier.js":{"lineLengths":[13,62,32,99,3,84,2,78,53,2,26,8,8,94,78,12,3,59,44,57,76,18,20,20,56,20,20,56,5,27,102,64,29,25,5,21,1,40,55],"data":{"version":3,"file":"node-module-type-classifier.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/node-module-type-classifier.ts"],"names":[],"mappings":";;;AAAA,mGAAgF;AAEhF;;;;;;;;;;;;GAYG;AACH,SAAgB,cAAc,CAC5B,cAAsB,EACtB,gBAAyB;IAEzB,wCAAwC;IACxC,MAAM,YAAY,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,GAAG,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACxE,QAAQ,GAAG,EAAE;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9C,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACT,OAAO,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;KAC/C;IACD,IAAI,gBAAgB,EAAE;QACpB,MAAM,YAAY,GAAG,IAAA,mDAAgB,EAAC,cAAc,CAAC,CAAC;QACtD,IAAI,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ;YAAE,OAAO,SAAS,CAAC;QAC1E,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AArBD,wCAqBC","sourcesContent":["import { readPackageScope } from '../dist-raw/node-internal-modules-cjs-loader';\n\n/**\n * Determine how to emit a module based on tsconfig \"module\" and package.json \"type\"\n *\n * Supports module=nodenext/node16 with transpileOnly, where we cannot ask the\n * TS typechecker to tell us if a file is CJS or ESM.\n *\n * Return values indicate:\n * - cjs\n * - esm\n * - nodecjs == node-flavored cjs where dynamic imports are *not* transformed into `require()`\n * - undefined == emit according to tsconfig `module` config, whatever that is\n * @internal\n */\nexport function classifyModule(\n  nativeFilename: string,\n  isNodeModuleType: boolean\n): 'nodecjs' | 'cjs' | 'esm' | 'nodeesm' | undefined {\n  // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n  const lastDotIndex = nativeFilename.lastIndexOf('.');\n  const ext = lastDotIndex >= 0 ? nativeFilename.slice(lastDotIndex) : '';\n  switch (ext) {\n    case '.cjs':\n    case '.cts':\n      return isNodeModuleType ? 'nodecjs' : 'cjs';\n    case '.mjs':\n    case '.mts':\n      return isNodeModuleType ? 'nodeesm' : 'esm';\n  }\n  if (isNodeModuleType) {\n    const packageScope = readPackageScope(nativeFilename);\n    if (packageScope && packageScope.data.type === 'module') return 'nodeesm';\n    return 'nodecjs';\n  }\n  return undefined;\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/file-extensions.js":{"lineLengths":[13,62,62,33,33,19,20,20,21,21,3,39,21,30,23,23,3,44,72,65,17,98,22,73,28,70,42,56,1,52,3,40,12,3,52,82,62,47,30,77,72,63,33,33,8,39,35,27,41,26,48,33,39,31,45,30,52,5,77,109,104,7,109,67,72,51,44,7,146,94,81,81,81,115,102,68,124,64,105,12,107,17,95,30,64,38,11,80,44,11,24,11,79,64,10,85,84,39,10,83,84,41,11,30,11,88,35,11,40,11,78,11,53,11,76,11,39,27,27,27,26,6,1,38,43],"data":{"version":3,"file":"file-extensions.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/file-extensions.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as _ts from 'typescript';\nimport type { RegisterOptions } from '.';\nimport { versionGteLt } from './util';\n\n/**\n * Centralized specification of how we deal with file extensions based on\n * project options:\n * which ones we do/don't support, in what situations, etc.  These rules drive\n * logic elsewhere.\n * @internal\n * */\nexport type Extensions = ReturnType<typeof getExtensions>;\n\nconst nodeEquivalents = new Map<string, string>([\n  ['.ts', '.js'],\n  ['.tsx', '.js'],\n  ['.jsx', '.js'],\n  ['.mts', '.mjs'],\n  ['.cts', '.cjs'],\n]);\n\nconst tsResolverEquivalents = new Map<string, readonly string[]>([\n  ['.ts', ['.js']],\n  ['.tsx', ['.js', '.jsx']],\n  ['.mts', ['.mjs']],\n  ['.cts', ['.cjs']],\n]);\n\n// All extensions understood by vanilla node\nconst vanillaNodeExtensions: readonly string[] = ['.js', '.json', '.node', '.mjs', '.cjs'];\n\n// Extensions added by vanilla node's require() if you omit them:\n// js, json, node\n// Extensions added by vanilla node if you omit them with --experimental-specifier-resolution=node\n// js, json, node, mjs\n// Extensions added by ESM codepath's legacy package.json \"main\" resolver\n// js, json, node (not mjs!)\n\nconst nodeDoesNotUnderstand: readonly string[] = ['.ts', '.tsx', '.jsx', '.cts', '.mts'];\n\nexport function tsSupportsMtsCtsExts(tsVersion: string) {\n  return versionGteLt(tsVersion, '4.5.0');\n}\n\n/**\n * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n * @internal\n */\nexport function getExtensions(config: _ts.ParsedCommandLine, options: RegisterOptions, tsVersion: string) {\n  // TS 4.5 is first version to understand .cts, .mts, .cjs, and .mjs extensions\n  const supportMtsCtsExts = tsSupportsMtsCtsExts(tsVersion);\n\n  const requiresHigherTypescriptVersion: string[] = [];\n  if (!tsSupportsMtsCtsExts) requiresHigherTypescriptVersion.push('.cts', '.cjs', '.mts', '.mjs');\n\n  const allPossibleExtensionsSortedByPreference = Array.from(\n    new Set([\n      ...(options.preferTsExts ? nodeDoesNotUnderstand : []),\n      ...vanillaNodeExtensions,\n      ...nodeDoesNotUnderstand,\n    ])\n  );\n\n  const compiledJsUnsorted: string[] = ['.ts'];\n  const compiledJsxUnsorted: string[] = [];\n\n  if (config.options.jsx) compiledJsxUnsorted.push('.tsx');\n  if (supportMtsCtsExts) compiledJsUnsorted.push('.mts', '.cts');\n  if (config.options.allowJs) {\n    compiledJsUnsorted.push('.js');\n    if (config.options.jsx) compiledJsxUnsorted.push('.jsx');\n    if (supportMtsCtsExts) compiledJsUnsorted.push('.mjs', '.cjs');\n  }\n\n  const compiledUnsorted = [...compiledJsUnsorted, ...compiledJsxUnsorted];\n  const compiled = allPossibleExtensionsSortedByPreference.filter((ext) => compiledUnsorted.includes(ext));\n\n  const compiledNodeDoesNotUnderstand = nodeDoesNotUnderstand.filter((ext) => compiled.includes(ext));\n\n  /**\n   * TS's resolver can resolve foo.js to foo.ts, by replacing .js extension with several source extensions.\n   * IMPORTANT: Must preserve ordering according to preferTsExts!\n   *            Must include the .js/.mjs/.cjs extension in the array!\n   *            This affects resolution behavior!\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  const r = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    [...compiledUnsorted, '.js', '.mjs', '.cjs', '.mts', '.cts'].includes(ext)\n  );\n  const replacementsForJs = r.filter((ext) => ['.js', '.jsx', '.ts', '.tsx'].includes(ext));\n  const replacementsForJsx = r.filter((ext) => ['.jsx', '.tsx'].includes(ext));\n  const replacementsForMjs = r.filter((ext) => ['.mjs', '.mts'].includes(ext));\n  const replacementsForCjs = r.filter((ext) => ['.cjs', '.cts'].includes(ext));\n  const replacementsForJsOrMjs = r.filter((ext) => ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.mts'].includes(ext));\n\n  // Node allows omitting .js or .mjs extension in certain situations (CJS, ESM w/experimental flag)\n  // So anything that compiles to .js or .mjs can also be omitted.\n  const experimentalSpecifierResolutionAddsIfOmitted = Array.from(\n    new Set([...replacementsForJsOrMjs, '.json', '.node'])\n  );\n  // Same as above, except node curiuosly doesn't do .mjs here\n  const legacyMainResolveAddsIfOmitted = Array.from(new Set([...replacementsForJs, '.json', '.node']));\n\n  return {\n    /** All file extensions we transform, ordered by resolution preference according to preferTsExts */\n    compiled,\n    /** Resolved extensions that vanilla node will not understand; we should handle them */\n    nodeDoesNotUnderstand,\n    /** Like the above, but only the ones we're compiling */\n    compiledNodeDoesNotUnderstand,\n    /**\n     * Mapping from extensions understood by tsc to the equivalent for node,\n     * as far as getFormat is concerned.\n     */\n    nodeEquivalents,\n    /**\n     * Mapping from extensions rejected by TSC in import specifiers, to the\n     * possible alternatives that TS's resolver will accept.\n     *\n     * When we allow users to opt-in to .ts extensions in import specifiers, TS's\n     * resolver requires us to replace the .ts extensions with .js alternatives.\n     * Otherwise, resolution fails.\n     *\n     * Note TS's resolver is only used by, and only required for, typechecking.\n     * This is separate from node's resolver, which we hook separately and which\n     * does not require this mapping.\n     */\n    tsResolverEquivalents,\n    /**\n     * Extensions that we can support if the user upgrades their typescript version.\n     * Used when raising hints.\n     */\n    requiresHigherTypescriptVersion,\n    /**\n     * --experimental-specifier-resolution=node will add these extensions.\n     */\n    experimentalSpecifierResolutionAddsIfOmitted,\n    /**\n     * ESM loader will add these extensions to package.json \"main\" field\n     */\n    legacyMainResolveAddsIfOmitted,\n    replacementsForMjs,\n    replacementsForCjs,\n    replacementsForJsx,\n    replacementsForJs,\n  };\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/ts-transpile-module.js":{"lineLengths":[13,15,114,62,41,58,22,27,29,3,16,56,328,42,52,92,13,29,55,39,77,47,9,5,63,86,104,21,9,59,5,144,43,35,40,49,81,26,106,36,48,115,37,13,18,101,34,13,10,48,46,53,38,34,97,108,36,33,6,22,28,25,19,19,22,27,6,101,83,85,31,36,21,25,7,86,54,23,41,120,80,43,61,58,121,56,79,11,43,65,9,52,108,9,17,31,34,78,63,49,95,83,9,15,21,40,33,41,71,37,58,58,5,1,58,47],"data":{"version":3,"file":"ts-transpile-module.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/ts-transpile-module.ts"],"names":[],"mappings":"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","sourcesContent":["// Derived from\n// https://github.com/microsoft/TypeScript/blob/ae1b3db8ceaae7e93bddffa1eed26309068249d7/src/services/transpile.ts\n\nimport type {\n  CompilerHost,\n  CompilerOptions,\n  Diagnostic,\n  SourceFile,\n  TranspileOptions,\n  TranspileOutput,\n} from 'typescript';\nimport type { TSCommon } from './ts-compiler-types';\n\nconst optionsRedundantWithVerbatimModuleSyntax = new Set([\n  'isolatedModules',\n  'preserveValueImports',\n  'importsNotUsedAsValues',\n]);\n\n/** @internal */\nexport function createTsTranspileModule(\n  ts: TSCommon,\n  transpileOptions: Pick<TranspileOptions, 'compilerOptions' | 'reportDiagnostics' | 'transformers'>\n) {\n  const {\n    createProgram,\n    createSourceFile,\n    getDefaultCompilerOptions,\n    getImpliedNodeFormatForFile,\n    fixupCompilerOptions,\n    transpileOptionValueCompilerOptions,\n    getNewLineCharacter,\n    fileExtensionIs,\n    normalizePath,\n    Debug,\n    toPath,\n    getSetExternalModuleIndicator,\n    addRange,\n    hasProperty,\n    getEmitScriptTarget,\n    getDirectoryPath,\n  } = ts as any;\n\n  const compilerOptionsDiagnostics: Diagnostic[] = [];\n\n  const options: CompilerOptions = transpileOptions.compilerOptions\n    ? fixupCompilerOptions(transpileOptions.compilerOptions, compilerOptionsDiagnostics)\n    : {};\n\n  // mix in default options\n  const defaultOptions = getDefaultCompilerOptions();\n  for (const key in defaultOptions) {\n    if (hasProperty(defaultOptions, key) && options[key] === undefined) {\n      options[key] = defaultOptions[key];\n    }\n  }\n\n  for (const option of transpileOptionValueCompilerOptions) {\n    // Do not set redundant config options if `verbatimModuleSyntax` was supplied.\n    if (options.verbatimModuleSyntax && optionsRedundantWithVerbatimModuleSyntax.has(option.name)) {\n      continue;\n    }\n\n    options[option.name] = option.transpileOptionValue;\n  }\n\n  // transpileModule does not write anything to disk so there is no need to verify that there are no conflicts between input and output paths.\n  options.suppressOutputPathCheck = true;\n\n  // Filename can be non-ts file.\n  options.allowNonTsExtensions = true;\n\n  const newLine = getNewLineCharacter(options);\n  // Create a compilerHost object to allow the compiler to read and write files\n  const compilerHost: CompilerHost = {\n    getSourceFile: (fileName) => (fileName === normalizePath(inputFileName) ? sourceFile : undefined),\n    writeFile: (name, text) => {\n      if (fileExtensionIs(name, '.map')) {\n        Debug.assertEqual(sourceMapText, undefined, 'Unexpected multiple source map outputs, file:', name);\n        sourceMapText = text;\n      } else {\n        Debug.assertEqual(outputText, undefined, 'Unexpected multiple outputs, file:', name);\n        outputText = text;\n      }\n    },\n    getDefaultLibFileName: () => 'lib.d.ts',\n    useCaseSensitiveFileNames: () => true,\n    getCanonicalFileName: (fileName) => fileName,\n    getCurrentDirectory: () => '',\n    getNewLine: () => newLine,\n    fileExists: (fileName): boolean => fileName === inputFileName || fileName === packageJsonFileName,\n    readFile: (fileName) => (fileName === packageJsonFileName ? `{\"type\": \"${_packageJsonType}\"}` : ''),\n    directoryExists: () => true,\n    getDirectories: () => [],\n  };\n\n  let inputFileName: string;\n  let packageJsonFileName: string;\n  let _packageJsonType: 'module' | 'commonjs';\n  let sourceFile: SourceFile;\n  let outputText: string | undefined;\n  let sourceMapText: string | undefined;\n\n  return transpileModule;\n\n  /*\n   * This function will compile source text from 'input' argument using specified compiler options.\n   * If not options are provided - it will use a set of default compiler options.\n   * Extra compiler options that will unconditionally be used by this function are:\n   * - isolatedModules = true\n   * - allowNonTsExtensions = true\n   * - noLib = true\n   * - noResolve = true\n   */\n  function transpileModule(\n    input: string,\n    transpileOptions2: TranspileOptions,\n    packageJsonType: 'module' | 'commonjs' = 'commonjs'\n  ): TranspileOutput {\n    // if jsx is specified then treat file as .tsx\n    inputFileName =\n      transpileOptions2.fileName ||\n      (transpileOptions.compilerOptions && transpileOptions.compilerOptions.jsx ? 'module.tsx' : 'module.ts');\n    packageJsonFileName = getDirectoryPath(inputFileName) + '/package.json';\n    _packageJsonType = packageJsonType;\n\n    sourceFile = createSourceFile(inputFileName, input, {\n      languageVersion: getEmitScriptTarget(options),\n      impliedNodeFormat: getImpliedNodeFormatForFile(\n        toPath(inputFileName, '', compilerHost.getCanonicalFileName),\n        /*cache*/ undefined,\n        compilerHost,\n        options\n      ),\n      setExternalModuleIndicator: getSetExternalModuleIndicator(options),\n    });\n    if (transpileOptions2.moduleName) {\n      sourceFile.moduleName = transpileOptions2.moduleName;\n    }\n\n    if (transpileOptions2.renamedDependencies) {\n      (sourceFile as any).renamedDependencies = new Map(Object.entries(transpileOptions2.renamedDependencies));\n    }\n\n    // Output\n    outputText = undefined;\n    sourceMapText = undefined;\n\n    const program = createProgram([inputFileName], options, compilerHost);\n\n    const diagnostics = compilerOptionsDiagnostics.slice();\n\n    if (transpileOptions.reportDiagnostics) {\n      addRange(/*to*/ diagnostics, /*from*/ program.getSyntacticDiagnostics(sourceFile));\n      addRange(/*to*/ diagnostics, /*from*/ program.getOptionsDiagnostics());\n    }\n    // Emit\n    program.emit(\n      /*targetSourceFile*/ undefined,\n      /*writeFile*/ undefined,\n      /*cancellationToken*/ undefined,\n      /*emitOnlyDtsFiles*/ undefined,\n      transpileOptions.transformers\n    );\n\n    if (outputText === undefined) return Debug.fail('Output generation failed');\n\n    return { outputText, diagnostics, sourceMapText };\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/dist/repl.js":{"lineLengths":[13,62,242,27,31,27,35,27,37,33,35,55,15,26,36,46,108,5,33,1,9,25,29,31,5,26,1,72,52,46,13,24,33,35,5,20,1,16,36,16,29,16,38,16,31,16,35,95,1,38,16,29,3,34,2,81,82,14,2,17,2,40,69,32,20,2,17,3,35,81,23,76,95,16,14,33,24,30,5,10,33,34,32,5,16,24,36,108,49,52,52,126,38,25,102,19,17,25,17,29,14,22,14,15,15,26,6,23,35,27,29,92,64,41,41,48,37,25,25,25,85,18,15,9,5,77,31,41,19,108,37,5,29,25,50,29,18,24,20,40,11,55,28,5,40,63,25,42,29,18,24,32,20,11,5,59,58,32,27,19,9,13,49,21,42,24,15,51,30,25,70,21,42,50,21,21,13,18,49,13,9,23,31,9,84,53,73,37,87,120,51,68,54,58,53,27,17,22,42,50,104,63,21,35,17,13,18,35,46,52,70,25,82,74,130,21,29,17,33,13,9,41,236,9,5,42,26,32,5,42,37,83,87,53,27,19,17,38,13,25,36,103,32,13,9,72,66,69,41,42,25,37,39,158,82,27,28,31,11,30,31,67,55,26,24,29,34,53,13,37,66,38,35,52,111,62,113,42,72,135,81,35,13,9,16,32,36,62,43,34,41,27,17,66,107,23,25,57,28,60,37,14,11,73,32,126,53,25,27,36,32,15,9,20,5,1,32,3,57,3,17,23,25,24,24,24,25,24,25,24,23,5,1,30,57,29,32,31,34,46,13,56,9,21,25,9,5,31,32,24,36,48,13,51,52,9,21,25,9,5,36,1,64,67,3,29,2,115,34,3,45,111,28,75,68,68,114,27,69,38,26,5,30,68,49,15,114,36,76,75,71,5,9,66,5,17,15,25,84,101,26,13,35,46,27,32,15,9,23,29,18,5,37,46,79,81,81,40,85,81,90,57,100,23,15,5,10,30,93,60,107,96,97,33,51,23,11,5,22,38,85,35,27,103,71,65,80,45,49,35,40,92,23,29,17,13,27,83,15,9,5,82,29,32,16,34,40,26,49,52,60,17,29,17,10,5,10,16,41,73,10,5,1,3,44,3,48,55,54,41,5,10,44,5,1,3,59,3,42,34,38,36,34,25,36,20,24,32,34,36,32,6,1,3,29,3,27,18,31,28,20,9,5,17,1,3,109,108,123,22,3,32,17,17,17,17,5,13,121,6,17,17,17,17,5,13,110,6,3,3,54,56,89,3,38,9,9,9,168,2,3,46,3,31,50,46,95,7,1,3,12,71,3,60,29,32,55,5,28,37,50,1,36,32],"data":{"version":3,"file":"repl.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@isaacs/ts-node-temp-fork-for-pr-2009/src/repl.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as _diff from 'diff';\nimport { homedir } from 'os';\nimport { join } from 'path';\nimport type * as _nodeRepl from 'repl';\nimport type { REPLServer, ReplOptions } from 'repl';\nimport { Context, createContext, Script } from 'vm';\nimport { Service, CreateOptions, TSError, env } from './index';\nimport { readFileSync, statSync } from 'fs';\nimport { Console } from 'console';\nimport * as assert from 'assert';\nimport type * as tty from 'tty';\nimport type * as Module from 'module';\nimport { builtinModules } from 'module';\nimport { tsSupportsMtsCtsExts } from './file-extensions';\n\n// Lazy-loaded.\nlet _processTopLevelAwait: (src: string) => string | null;\nfunction getProcessTopLevelAwait() {\n  if (_processTopLevelAwait === undefined) {\n    ({ processTopLevelAwait: _processTopLevelAwait } = require('../dist-raw/node-internal-repl-await'));\n  }\n  return _processTopLevelAwait;\n}\nlet diff: typeof _diff;\nfunction getDiffLines() {\n  if (diff === undefined) {\n    diff = require('diff');\n  }\n  return diff.diffLines;\n}\n\n// Lazy-loaded to prevent repl's require('domain') from causing problems\n// https://github.com/TypeStrong/ts-node/issues/2024\n// https://github.com/nodejs/node/issues/48131\nlet nodeRepl: typeof _nodeRepl;\nfunction getNodeRepl() {\n  if (nodeRepl === undefined) {\n    nodeRepl = require('repl');\n  }\n  return nodeRepl;\n}\n\n/** @internal */\nexport const EVAL_FILENAME = `[eval].ts`;\n/** @internal */\nexport const EVAL_NAME = `[eval]`;\n/** @internal */\nexport const STDIN_FILENAME = `[stdin].ts`;\n/** @internal */\nexport const STDIN_NAME = `[stdin]`;\n/** @internal */\nexport function REPL_FILENAME(tsVersion: string) {\n  return tsSupportsMtsCtsExts(tsVersion) ? '<repl>.cts' : '<repl>.ts';\n}\n/** @internal */\nexport const REPL_NAME = '<repl>';\n\nexport interface ReplService {\n  readonly state: EvalState;\n  /**\n   * Bind this REPL to a ts-node compiler service.  A compiler service must be bound before `eval`-ing code or starting the REPL\n   */\n  setService(service: Service): void;\n  /**\n   * Append code to the virtual <repl> source file, compile it to JavaScript, throw semantic errors if the typechecker is enabled,\n   * and execute it.\n   *\n   * Note: typically, you will want to call `start()` instead of using this method.\n   *\n   * @param code string of TypeScript.\n   */\n  evalCode(code: string): any;\n  /** @internal */\n  evalCodeInternal(opts: { code: string; enableTopLevelAwait?: boolean; context?: Context }):\n    | {\n        containsTopLevelAwait: true;\n        valuePromise: Promise<any>;\n      }\n    | {\n        containsTopLevelAwait: false;\n        value: any;\n      };\n  /**\n   * `eval` implementation compatible with node's REPL API\n   *\n   * Can be used in advanced scenarios if you want to manually create your own\n   * node REPL instance and delegate eval to this `ReplService`.\n   *\n   * Example:\n   *\n   *     import {start} from 'repl';\n   *     const replService: tsNode.ReplService = ...; // assuming you have already created a ts-node ReplService\n   *     const nodeRepl = start({eval: replService.eval});\n   */\n  nodeEval(code: string, context: Context, _filename: string, callback: (err: Error | null, result?: any) => any): void;\n  evalAwarePartialHost: EvalAwarePartialHost;\n  /** Start a node REPL */\n  start(): void;\n  /**\n   * Start a node REPL, evaling a string of TypeScript before it starts.\n   * @deprecated\n   */\n  start(code: string): void;\n  /** @internal */\n  startInternal(opts?: ReplOptions): REPLServer;\n  /** @internal */\n  readonly stdin: NodeJS.ReadableStream;\n  /** @internal */\n  readonly stdout: NodeJS.WritableStream;\n  /** @internal */\n  readonly stderr: NodeJS.WritableStream;\n  /** @internal */\n  readonly console: Console;\n}\n\n/** @category REPL */\nexport interface CreateReplOptions {\n  service?: Service;\n  state?: EvalState;\n  stdin?: NodeJS.ReadableStream;\n  stdout?: NodeJS.WritableStream;\n  stderr?: NodeJS.WritableStream;\n  /** @internal */\n  composeWithEvalAwarePartialHost?: EvalAwarePartialHost;\n  /**\n   * @internal\n   * Ignore diagnostics that are annoying when interactively entering input line-by-line.\n   */\n  ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl?: boolean;\n}\n\ninterface StartReplInternalOptions extends ReplOptions {\n  code?: string;\n  forceToBeModule?: boolean;\n}\n\n/**\n * Create a ts-node REPL instance.\n *\n * Pay close attention to the example below.  Today, the API requires a few lines\n * of boilerplate to correctly bind the `ReplService` to the ts-node `Service` and\n * vice-versa.\n *\n * Usage example:\n *\n *     const repl = tsNode.createRepl();\n *     const service = tsNode.create({...repl.evalAwarePartialHost});\n *     repl.setService(service);\n *     repl.start();\n *\n * @category REPL\n */\nexport function createRepl(options: CreateReplOptions = {}) {\n  const { ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl = true } = options;\n  let nodeReplServer: REPLServer;\n  // If `useGlobal` is not true, then REPL creates a context when started.\n  // This stores a reference to it or to `global`, whichever is used, after REPL has started.\n  let context: Context | undefined;\n  let state: EvalState;\n  let mustSetStatePath = false;\n  if (options.state) {\n    state = options.state;\n  } else {\n    // Correct path set later\n    state = new EvalState('');\n    mustSetStatePath = true;\n  }\n  let service: Service;\n  if (options.service) setService(options.service);\n  const evalAwarePartialHost = createEvalAwarePartialHost(state, options.composeWithEvalAwarePartialHost);\n  const stdin = options.stdin ?? process.stdin;\n  const stdout = options.stdout ?? process.stdout;\n  const stderr = options.stderr ?? process.stderr;\n  const _console = stdout === process.stdout && stderr === process.stderr ? console : new Console(stdout, stderr);\n\n  const declaredExports = new Set();\n\n  const replService: ReplService = {\n    state: options.state ?? new EvalState(join(process.cwd(), EVAL_FILENAME)),\n    setService,\n    evalCode,\n    evalCodeInternal,\n    nodeEval,\n    evalAwarePartialHost,\n    start,\n    startInternal,\n    stdin,\n    stdout,\n    stderr,\n    console: _console,\n  };\n\n  return replService;\n\n  function setService(_service: Service) {\n    service = _service;\n    if (mustSetStatePath) state.path = join(process.cwd(), REPL_FILENAME(service.ts.version));\n    if (ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl) {\n      service.addDiagnosticFilter({\n        appliesToAllFiles: false,\n        filenamesAbsolute: [state.path],\n        diagnosticsIgnored: [\n          2393, // Duplicate function implementation: https://github.com/TypeStrong/ts-node/issues/729\n          6133, // <identifier> is declared but its value is never read. https://github.com/TypeStrong/ts-node/issues/850\n          7027, // Unreachable code detected. https://github.com/TypeStrong/ts-node/issues/469\n          ...(service.shouldReplAwait ? topLevelAwaitDiagnosticCodes : []),\n        ],\n      });\n    }\n  }\n\n  // Hard fix for TypeScript forcing `Object.defineProperty(exports, ...)`.\n  function declareExports() {\n    if (declaredExports.has(context)) return;\n    runInContext('exports = typeof module === \"undefined\" ? {} : module.exports;', state.path, context);\n    declaredExports.add(context);\n  }\n\n  function evalCode(code: string) {\n    declareExports();\n    const result = appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      context,\n      overrideIsCompletion: false,\n    });\n    assert(result.containsTopLevelAwait === false);\n    return result.value;\n  }\n\n  function evalCodeInternal(options: { code: string; enableTopLevelAwait?: boolean; context: Context }) {\n    const { code, enableTopLevelAwait, context } = options;\n    declareExports();\n    return appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      enableTopLevelAwait,\n      context,\n    });\n  }\n\n  function nodeEval(\n    code: string,\n    context: Context,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ) {\n    // TODO: Figure out how to handle completion here.\n    if (code === '.scope') {\n      callback(null);\n      return;\n    }\n\n    try {\n      const evalResult = evalCodeInternal({\n        code,\n        enableTopLevelAwait: true,\n        context,\n      });\n\n      if (evalResult.containsTopLevelAwait) {\n        (async () => {\n          try {\n            callback(null, await evalResult.valuePromise);\n          } catch (promiseError) {\n            handleError(promiseError);\n          }\n        })();\n      } else {\n        callback(null, evalResult.value);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n\n    // Log TSErrors, check if they're recoverable, log helpful hints for certain\n    // well-known errors, and invoke `callback()`\n    // TODO should evalCode API get the same error-handling benefits?\n    function handleError(error: unknown) {\n      // Don't show TLA hint if the user explicitly disabled repl top level await\n      const canLogTopLevelAwaitHint = service!.options.experimentalReplAwait !== false && !service!.shouldReplAwait;\n      if (error instanceof TSError) {\n        // Support recoverable compilations using >= node 6.\n        const { Recoverable } = getNodeRepl();\n        if (Recoverable && isRecoverable(error)) {\n          callback(new Recoverable(error));\n          return;\n        } else {\n          _console.error(error);\n\n          if (\n            canLogTopLevelAwaitHint &&\n            error.diagnosticCodes.some((dC) => topLevelAwaitDiagnosticCodes.includes(dC))\n          ) {\n            _console.error(getTopLevelAwaitHint());\n          }\n          callback(null);\n        }\n      } else {\n        let _error = error as Error | undefined;\n        if (\n          canLogTopLevelAwaitHint &&\n          _error instanceof SyntaxError &&\n          _error.message?.includes('await is only valid')\n        ) {\n          try {\n            // Only way I know to make our hint appear after the error\n            _error.message += `\\n\\n${getTopLevelAwaitHint()}`;\n            _error.stack = _error.stack?.replace(/(SyntaxError:.*)/, (_, $1) => `${$1}\\n\\n${getTopLevelAwaitHint()}`);\n          } catch {}\n        }\n        callback(_error as Error);\n      }\n    }\n    function getTopLevelAwaitHint() {\n      return `Hint: REPL top-level await requires TypeScript version 3.8 or higher and target ES2018 or higher. You are using TypeScript ${\n        service!.ts.version\n      } and target ${service!.ts.ScriptTarget[service!.config.options.target!]}.`;\n    }\n  }\n\n  // Note: `code` argument is deprecated\n  function start(code?: string) {\n    startInternal({ code });\n  }\n\n  // Note: `code` argument is deprecated\n  function startInternal(options?: StartReplInternalOptions) {\n    const { code, forceToBeModule = true, ...optionsOverride } = options ?? {};\n    // TODO assert that `service` is set; remove all `service!` non-null assertions\n\n    // Eval incoming code before the REPL starts.\n    // Note: deprecated\n    if (code) {\n      try {\n        evalCode(`${code}\\n`);\n      } catch (err) {\n        _console.error(err);\n        // Note: should not be killing the process here, but this codepath is deprecated anyway\n        process.exit(1);\n      }\n    }\n\n    // In case the typescript compiler hasn't compiled anything yet,\n    // make it run though compilation at least one time before\n    // the REPL starts for a snappier user experience on startup.\n    service?.compile('', state.path);\n\n    const repl = getNodeRepl().start({\n      prompt: '> ',\n      input: replService.stdin,\n      output: replService.stdout,\n      // Mimicking node's REPL implementation: https://github.com/nodejs/node/blob/168b22ba073ee1cbf8d0bcb4ded7ff3099335d04/lib/internal/repl.js#L28-L30\n      terminal: (stdout as tty.WriteStream).isTTY && !parseInt(env.NODE_NO_READLINE!, 10),\n      eval: nodeEval,\n      useGlobal: true,\n      ...optionsOverride,\n    });\n\n    nodeReplServer = repl;\n    context = repl.context;\n\n    // Bookmark the point where we should reset the REPL state.\n    const resetEval = appendToEvalState(state, '');\n    function reset() {\n      resetEval();\n\n      declareExports();\n\n      if (forceToBeModule) {\n        state.input += 'export {};void 0;\\n';\n      }\n\n      // Declare node builtins.\n      // Skip the same builtins as `addBuiltinLibsToObject`:\n      //   those starting with _\n      //   those containing /\n      //   those that already exist as globals\n      // Intentionally suppress type errors in case @types/node does not declare any of them, and because\n      // `declare import` is technically invalid syntax.\n      // Avoid this when in transpileOnly, because third-party transpilers may not handle `declare import`.\n      if (!service?.transpileOnly) {\n        state.input += `// @ts-ignore\\n${builtinModules\n          .filter(\n            (name) => !name.startsWith('_') && !name.includes('/') && !['console', 'module', 'process'].includes(name)\n          )\n          .map((name) => `declare import ${name} = require('${name}')`)\n          .join(';')}\\n`;\n      }\n    }\n\n    reset();\n    repl.on('reset', reset);\n\n    repl.defineCommand('type', {\n      help: 'Check the type of a TypeScript identifier',\n      action: function (identifier: string) {\n        if (!identifier) {\n          repl.displayPrompt();\n          return;\n        }\n\n        const undo = appendToEvalState(state, identifier);\n        const { name, comment } = service!.getTypeInfo(state.input, state.path, state.input.length);\n\n        undo();\n\n        if (name) repl.outputStream.write(`${name}\\n`);\n        if (comment) repl.outputStream.write(`${comment}\\n`);\n        repl.displayPrompt();\n      },\n    });\n\n    // Set up REPL history when available natively via node.js >= 11.\n    if (repl.setupHistory) {\n      const historyPath = env.TS_NODE_HISTORY || join(homedir(), '.ts_node_repl_history');\n\n      repl.setupHistory(historyPath, (err) => {\n        if (!err) return;\n\n        _console.error(err);\n        process.exit(1);\n      });\n    }\n\n    return repl;\n  }\n}\n\n/**\n * Eval state management. Stores virtual `[eval].ts` file\n */\nexport class EvalState {\n  /** @internal */\n  input = '';\n  /** @internal */\n  output = '';\n  /** @internal */\n  version = 0;\n  /** @internal */\n  lines = 0;\n\n  __tsNodeEvalStateBrand: unknown;\n\n  constructor(public path: string) {}\n}\n\n/**\n * Filesystem host functions which are aware of the \"virtual\" `[eval].ts`, `<repl>`, or `[stdin].ts` file used to compile REPL inputs.\n * Must be passed to `create()` to create a ts-node compiler service which can compile REPL inputs.\n */\nexport type EvalAwarePartialHost = Pick<CreateOptions, 'readFile' | 'fileExists'>;\n\nexport function createEvalAwarePartialHost(state: EvalState, composeWith?: EvalAwarePartialHost): EvalAwarePartialHost {\n  function readFile(path: string) {\n    if (path === state.path) return state.input;\n\n    if (composeWith?.readFile) return composeWith.readFile(path);\n\n    try {\n      return readFileSync(path, 'utf8');\n    } catch (err) {\n      /* Ignore. */\n    }\n  }\n  function fileExists(path: string) {\n    if (path === state.path) return true;\n\n    if (composeWith?.fileExists) return composeWith.fileExists(path);\n\n    try {\n      const stats = statSync(path);\n      return stats.isFile() || stats.isFIFO();\n    } catch (err) {\n      return false;\n    }\n  }\n  return { readFile, fileExists };\n}\n\nconst sourcemapCommentRe = /\\/\\/# ?sourceMappingURL=\\S+[\\s\\r\\n]*$/;\n\ntype AppendCompileAndEvalInputResult =\n  | { containsTopLevelAwait: true; valuePromise: Promise<any> }\n  | { containsTopLevelAwait: false; value: any };\n/**\n * Evaluate the code snippet.\n *\n * Append it to virtual .ts file, compile, handle compiler errors, compute a diff of the JS, and eval any code that\n * appears as \"added\" in the diff.\n */\nfunction appendCompileAndEvalInput(options: {\n  service: Service;\n  state: EvalState;\n  input: string;\n  wrappedErr?: unknown;\n  /** Enable top-level await but only if the TSNode service allows it. */\n  enableTopLevelAwait?: boolean;\n  context: Context | undefined;\n  /**\n   * Added so that `evalCode` can be guaranteed *not* to trigger the `isCompletion`\n   * codepath.  However, the `isCompletion` logic is ancient and maybe should be removed entirely.\n   * Nobody's looked at it in a long time.\n   */\n  overrideIsCompletion?: boolean;\n}): AppendCompileAndEvalInputResult {\n  const { service, state, wrappedErr, enableTopLevelAwait = false, context, overrideIsCompletion } = options;\n  let { input } = options;\n\n  // It's confusing for `{ a: 1 }` to be interpreted as a block statement\n  // rather than an object literal. So, we first try to wrap it in\n  // parentheses, so that it will be interpreted as an expression.\n  // Based on https://github.com/nodejs/node/blob/c2e6822153bad023ab7ebd30a6117dcc049e475c/lib/repl.js#L413-L422\n  let wrappedCmd = false;\n  if (!wrappedErr && /^\\s*{/.test(input) && !/;\\s*$/.test(input)) {\n    input = `(${input.trim()})\\n`;\n    wrappedCmd = true;\n  }\n\n  const lines = state.lines;\n  const isCompletion = overrideIsCompletion ?? !/\\n$/.test(input);\n  const undo = appendToEvalState(state, input);\n  let output: string;\n\n  // Based on https://github.com/nodejs/node/blob/92573721c7cff104ccb82b6ed3e8aa69c4b27510/lib/repl.js#L457-L461\n  function adjustUseStrict(code: string) {\n    // \"void 0\" keeps the repl from returning \"use strict\" as the result\n    // value for statements and declarations that don't return a value.\n    return code.replace(/^\"use strict\";/, '\"use strict\"; void 0;');\n  }\n\n  try {\n    output = service.compile(state.input, state.path, -lines);\n  } catch (err) {\n    undo();\n\n    if (wrappedCmd) {\n      if (err instanceof TSError && err.diagnosticCodes[0] === 2339) {\n        // Ensure consistent and more sane behavior between { a: 1 }['b'] and ({ a: 1 }['b'])\n        throw err;\n      }\n      // Unwrap and try again\n      return appendCompileAndEvalInput({\n        ...options,\n        wrappedErr: err,\n      });\n    }\n\n    if (wrappedErr) throw wrappedErr;\n    throw err;\n  }\n\n  output = adjustUseStrict(output);\n\n  // Note: REPL does not respect sourcemaps!\n  // To properly do that, we'd need to prefix the code we eval -- which comes\n  // from `diffLines` -- with newlines so that it's at the proper line numbers.\n  // Then we'd need to ensure each bit of eval-ed code, if there are multiples,\n  // has the sourcemap appended to it.\n  // We might also need to integrate with our sourcemap hooks' cache; I'm not sure.\n  const outputWithoutSourcemapComment = output.replace(sourcemapCommentRe, '');\n  const oldOutputWithoutSourcemapComment = state.output.replace(sourcemapCommentRe, '');\n\n  // Use `diff` to check for new JavaScript to execute.\n  const changes = getDiffLines()(oldOutputWithoutSourcemapComment, outputWithoutSourcemapComment);\n\n  if (isCompletion) {\n    undo();\n  } else {\n    state.output = output;\n\n    // Insert a semicolon to make sure that the code doesn't interact with the next line,\n    // for example to prevent `2\\n+ 2` from producing 4.\n    // This is safe since the output will not change since we can only get here with successful inputs,\n    // and adding a semicolon to the end of a successful input won't ever change the output.\n    state.input = state.input.replace(/([^\\n\\s])([\\n\\s]*)$/, (all, lastChar, whitespace) => {\n      if (lastChar !== ';') return `${lastChar};${whitespace}`;\n      return all;\n    });\n  }\n\n  let commands: Array<{ mustAwait?: true; execCommand: () => any }> = [];\n  let containsTopLevelAwait = false;\n\n  // Build a list of \"commands\": bits of JS code in the diff that must be executed.\n  for (const change of changes) {\n    if (change.added) {\n      if (enableTopLevelAwait && service.shouldReplAwait && change.value.indexOf('await') > -1) {\n        const processTopLevelAwait = getProcessTopLevelAwait();\n\n        // Newline prevents comments to mess with wrapper\n        const wrappedResult = processTopLevelAwait(change.value + '\\n');\n        if (wrappedResult !== null) {\n          containsTopLevelAwait = true;\n          commands.push({\n            mustAwait: true,\n            execCommand: () => runInContext(wrappedResult, state.path, context),\n          });\n          continue;\n        }\n      }\n      commands.push({\n        execCommand: () => runInContext(change.value, state.path, context),\n      });\n    }\n  }\n\n  // Execute all commands asynchronously if necessary, returning the result or a\n  // promise of the result.\n  if (containsTopLevelAwait) {\n    return {\n      containsTopLevelAwait,\n      valuePromise: (async () => {\n        let value;\n        for (const command of commands) {\n          const r = command.execCommand();\n          value = command.mustAwait ? await r : r;\n        }\n        return value;\n      })(),\n    };\n  } else {\n    return {\n      containsTopLevelAwait: false,\n      value: commands.reduce<any>((_, c) => c.execCommand(), undefined),\n    };\n  }\n}\n\n/**\n * Low-level execution of JS code in context\n */\nfunction runInContext(code: string, filename: string, context?: Context) {\n  const script = new Script(code, { filename });\n\n  if (context === undefined || context === global) {\n    return script.runInThisContext();\n  } else {\n    return script.runInContext(context);\n  }\n}\n\n/**\n * Append to the eval instance and return an undo function.\n */\nfunction appendToEvalState(state: EvalState, input: string) {\n  const undoInput = state.input;\n  const undoVersion = state.version;\n  const undoOutput = state.output;\n  const undoLines = state.lines;\n\n  state.input += input;\n  state.lines += lineCount(input);\n  state.version++;\n\n  return function () {\n    state.input = undoInput;\n    state.output = undoOutput;\n    state.version = undoVersion;\n    state.lines = undoLines;\n  };\n}\n\n/**\n * Count the number of lines.\n */\nfunction lineCount(value: string) {\n  let count = 0;\n\n  for (const char of value) {\n    if (char === '\\n') {\n      count++;\n    }\n  }\n\n  return count;\n}\n\n/**\n * TS diagnostic codes which are recoverable, meaning that the user likely entered an incomplete line of code\n * and should be prompted for the next.  For example, starting a multi-line for() loop and not finishing it.\n * null value means code is always recoverable.  `Set` means code is only recoverable when occurring alongside at least one\n * of the other codes.\n */\nconst RECOVERY_CODES: Map<number, Set<number> | null> = new Map([\n  [1003, null], // \"Identifier expected.\"\n  [1005, null], // \"')' expected.\", \"'}' expected.\"\n  [1109, null], // \"Expression expected.\"\n  [1126, null], // \"Unexpected end of text.\"\n  [\n    1136, // \"Property assignment expected.\"\n    new Set([1005]), // happens when typing out an object literal or block scope across multiple lines: '{ foo: 123,'\n  ],\n  [1160, null], // \"Unterminated template literal.\"\n  [1161, null], // \"Unterminated regular expression literal.\"\n  [2355, null], // \"A function whose declared type is neither 'void' nor 'any' must return a value.\"\n  [2391, null], // \"Function implementation is missing or not immediately following the declaration.\"\n  [\n    7010, // \"Function, which lacks return-type annotation, implicitly has an 'any' return type.\"\n    new Set([1005]), // happens when fn signature spread across multiple lines: 'function a(\\nb: any\\n) {'\n  ],\n]);\n\n/**\n * Diagnostic codes raised when using top-level await.\n * These are suppressed when top-level await is enabled.\n * When it is *not* enabled, these trigger a helpful hint about enabling top-level await.\n */\nconst topLevelAwaitDiagnosticCodes = [\n  1375, // 'await' expressions are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1378, // Top-level 'await' expressions are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n  1431, // 'for await' loops are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1432, // Top-level 'for await' loops are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n];\n\n/**\n * Check if a function can recover gracefully.\n */\nfunction isRecoverable(error: TSError) {\n  return error.diagnosticCodes.every((code) => {\n    const deps = RECOVERY_CODES.get(code);\n    return deps === null || (deps && error.diagnosticCodes.some((code) => deps.has(code)));\n  });\n}\n\n/**\n * @internal\n * Set properties on `context` before eval-ing [stdin] or [eval] input.\n */\nexport function setupContext(context: any, module: Module, filenameAndDirname: 'eval' | 'stdin' | null) {\n  if (filenameAndDirname) {\n    context.__dirname = '.';\n    context.__filename = `[${filenameAndDirname}]`;\n  }\n  context.module = module;\n  context.exports = module.exports;\n  context.require = module.require.bind(module);\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/loader.mjs":{"lineLengths":[47,35],"data":{"version":3,"file":"loader.mjs","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/loader.mts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA","sourcesContent":["export { initialize, load } from './hooks.mjs'\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/hooks.mjs":{"lineLengths":[49,44,34,41,46,60,42,102,52,57,37,21,65,60,43,63,47,69,35,16,12,34,48,45,56,61,58,63,33,44,38,27,45,36,38,36,3,14,1,2,2,41,16,2,54,74,33,15,5,39,15,5,24,35,63,72,70,24,74,5,48,15,26,21,20,36,11,5,10,50,46,43,20,36,5,2,55,36,44,40,71,72,74,35,77,21,19,30,20,27,35,35,14,9,5,41,68,40,45,48,15,2,28,28,21,55,2,34],"data":{"version":3,"file":"hooks.mjs","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/hooks.mts"],"names":[],"mappings":"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","sourcesContent":["// hooks used by loader-legacy.mjs and loader.mjs\n\nimport { readFile } from 'node:fs/promises'\nimport { parse } from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport type { MessagePort } from 'node:worker_threads'\nimport { getExclude } from './get-exclude.js'\nimport { getImportMetaURL } from './get-import-meta-url.js'\nimport { fakeMains } from './get-main.js'\nimport {\n  getProcessInfo as _getProcessInfo,\n  reset as processInfoReset,\n} from './get-process-info.js'\nimport { saveLineLengths } from './line-lengths.js'\nimport { likelyHasSourceMap } from './lookup-sources.js'\n\nlet getProcessInfo = _getProcessInfo\nlet PORT: undefined | MessagePort = undefined\n\nconst exclude = getExclude('_TAPJS_PROCESSINFO_EXCLUDE_', false)\nconst smMagicComment = /\\/[*\\/]#\\s+sourceMappingURL=[^\\s]+/\n\nexport const globalPreload = (context: { port?: MessagePort }) => {\n  // this will be something like path/to/dist/esm/lib/esm.mjs\n  // but we need path/to/dist/commonjs/cjs.js\n  const base = getImportMetaURL('../commonjs/[global preload].js')\n  const { port } = context || {}\n  PORT = port\n  return `\nif (typeof port !== 'undefined') {\n  const { createRequire } = getBuiltin('module')\n  const { fileURLToPath } = getBuiltin('url')\n  const require = createRequire(${JSON.stringify(base)})\n  const { getProcessInfo } = require('./get-process-info.js')\n  const { saveLineLengths } = require('./line-lengths.js')\n  const { likelyHasSourceMap } = require('./lookup-sources.js')\n  // must be called eagerly here.\n  // this does all the registration as well.\n  const processInfo = getProcessInfo()\n  port.onmessage = (e) => {\n    const { filename, content, url } = e.data\n    processInfo.files.push(filename)\n    saveLineLengths(filename, content)\n    if (url) likelyHasSourceMap(url)\n  }\n  port.unref()\n}\n`\n}\n\nexport const initialize = ({ port }: { port: MessagePort }) => {\n  PORT = port\n}\n\nconst record = async (\n  url: string,\n  content?: string,\n  originSource?: string\n) => {\n  const filename = url.startsWith('file://') ? fileURLToPath(url) : url\n  if (exclude.test(filename)) {\n    return\n  }\n  if (fakeMains.includes(filename)) {\n    return\n  }\n\n  let maybeSM = false\n  if (\n    originSource !== content ||\n    (content === undefined && url.startsWith('file://'))\n  ) {\n    // try to read the file, fall back to the content we have, or ''\n    // if any source maps anywhere, flag it as possibly having one\n    originSource ??=\n      (await readFile(filename, 'utf8').catch(() => content)) ?? ''\n  }\n  maybeSM = smMagicComment.test(originSource as string)\n\n  if (PORT) {\n    PORT.postMessage({\n      filename,\n      content,\n      ...(maybeSM && { url }),\n    })\n  } else {\n    // call lazily so we don't double-register\n    getProcessInfo().files.push(filename)\n    saveLineLengths(filename, content)\n    if (maybeSM) likelyHasSourceMap(url)\n  }\n}\n\nexport const load = async (\n  url: string,\n  context: any,\n  nextLoad: Function\n) => {\n  if (url.startsWith('file://')) {\n    const filename = fileURLToPath(url)\n    const { ext } = parse(filename)\n    // Package bins will sometimes have an extensionless bin script\n    // instead of just naming their extensioned file and letting npm\n    // symlink it for them. Don't blow up when this happens, just tell\n    // node that it's commonjs.\n    // TODO: should we just let this fail? It fails *without* the loader,\n    // after all.\n    if (!ext) {\n      await record(url)\n      return {\n        ...context,\n        format: 'commonjs',\n        shortCircuit: true,\n      }\n    }\n  }\n\n  // get line lengths from final source\n  // if origin source doesn't match, check for possible source map\n  const originSource = context.source\n  const ret = await nextLoad(url, context)\n  await record(url, ret.source, originSource)\n  return ret\n}\n\n// just for testing purposes\nexport const reset = () => {\n  PORT = undefined\n  getProcessInfo = processInfoReset().getProcessInfo\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-exclude.js":{"lineLengths":[159,31,13,15,51,17,13,52,9,21,5,2,21,53,28,78,34,19,2,39],"data":{"version":3,"file":"get-exclude.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/get-exclude.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,cAAc,GACzB,gIAAgI,CAAA;AAElI,MAAM,YAAY,GAAG,CAAC,GAAuB,EAAsB,EAAE;IACnE,IAAI,CAAC,GAAG;QAAE,OAAM;IAChB,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,oBAAoB,CAEjB,CAAA;IAC5B,IAAI,MAAM,EAAE;QACV,IAAI;YACF,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;SACxC;QAAC,OAAO,CAAC,EAAE,GAAE;KACf;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,OAAO,CAAA;AAEpB,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,CAAS,EAAE,UAAU,GAAG,IAAI,EAAE,EAAE;IACzD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACvB,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IACzE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;IAC7B,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA","sourcesContent":["export const defaultExclude =\n  /(^|[\\\\\\/])(node_modules|\\.tap|tap-testdir-.*?|tap-snapshots|tests?|[^\\\\\\/]+\\.test\\.([cm]?[jt]s|[jt]sx?)|__tests?__)([\\\\\\/]|$)/i\n\nconst parseExclude = (src: string | undefined): RegExp | undefined => {\n  if (!src) return\n  const parsed = src.match(/^\\/(.*)\\/([a-z]*)$/) as\n    | null\n    | [string, string, string]\n  if (parsed) {\n    try {\n      return new RegExp(parsed[1], parsed[2])\n    } catch (e) {}\n  }\n}\n\nconst proc = process\n\nexport const getExclude = (k: string, useDefault = true) => {\n  const src = proc.env[k]\n  const exclude = parseExclude(src) || (useDefault ? defaultExclude : /$./)\n  proc.env[k] = String(exclude)\n  return exclude\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-main.js":{"lineLengths":[36,18,59,30,28,39,30,35,19,21,26,69,30,34,2,36],"data":{"version":3,"file":"get-main.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/get-main.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,CAAC,GAAG,OAET,CAAA;AAED,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;AAE1D,MAAM,CAAC,MAAM,OAAO,GAAG,GAAG,EAAE;IAC1B,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACvB,OAAO,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC;QACjC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ;YAC3B,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,CAAC,CAAC,KAAK;gBACT,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAU,EAAE,MAAM,CAAC;oBACrD,CAAC,CAAC,QAAQ;oBACV,CAAC,CAAC,WAAW,CAAA;AACjB,CAAC,CAAA","sourcesContent":["import { fileURLToPath } from 'url'\n\nconst p = process as NodeJS.Process & {\n  _eval?: string\n}\n\nexport const fakeMains = ['<eval>', '<repl>', '<unknown>']\n\nexport const getMain = () => {\n  const argv1 = p.argv[1]\n  return argv1?.startsWith('file://')\n    ? fileURLToPath(argv1)\n    : typeof argv1 === 'string'\n    ? argv1\n    : p._eval\n    ? '<eval>'\n    : Object.getOwnPropertyDescriptor(globalThis, 'repl')\n    ? '<repl>'\n    : '<unknown>'\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-import-meta-url.js":{"lineLengths":[3,39,52,2,14,3,44,12,41,47],"data":{"version":3,"file":"get-import-meta-url.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/get-import-meta-url.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,MAAc,EAAE,EAAE;AACjD,YAAY;AACZ,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA","sourcesContent":["/**\n * Get the import.meta.url for a module\n * abstracted to be able to do CJS and ESM versions.\n *\n * ESM version\n */\nexport const getImportMetaURL = (target: string) =>\n  //@ts-ignore\n  String(new URL(target, import.meta.url))\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/line-lengths.js":{"lineLengths":[72,36,63,17,35,16,49,55,30,15,36,34,39,43,39,74,59,53,67,15,68,28,2,45,39,43,31,2,40],"data":{"version":3,"file":"line-lengths.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/line-lengths.ts"],"names":[],"mappings":"AAAA,wEAAwE;AAExE,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAA;AAC9D,MAAM,CAAC,GAAG,MAET,CAAA;AACD,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,EAAoB,CAAA;AACpD,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAA;AAEf,MAAM,gBAAgB,GAAG,uBAAuB,CAAA;AAChD,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,QAAgB,EAChB,OAAyB,EACzB,EAAE;IACF,IAAI,OAAO,KAAK,SAAS;QAAE,OAAM;IACjC,IAAI,OAAO,OAAO,KAAK,QAAQ;QAAE,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;IAC1D,IAAI,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC;QAAE,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAA;IACtE,mCAAmC;IACnC,sEAAsE;IACtE,uDAAuD;IACvD,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA;IAChD,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,gBAAgB,CAAC;QAAE,OAAM;IACtE,MAAM,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;IAE/D,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;AACzB,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,QAAgB,EAAE,EAAE;IACjD,IAAI,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC;QAAE,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAA;IACtE,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AAC5B,CAAC,CAAA","sourcesContent":["// TODO: Refactor once https://github.com/nodejs/node/issues/48460 fixed\n\nimport { fileURLToPath } from 'url'\n\nconst kLLC = Symbol.for('@tapjs/processinfo lineLength cache')\nconst g = global as {\n  [kLLC]?: Map<string, number[]>\n}\nconst cache = g[kLLC] || new Map<string, number[]>()\ng[kLLC] = cache\n\nconst sourceMapComment = '//# sourceMappingURL='\nexport const saveLineLengths = (\n  filename: string,\n  content?: string | Buffer\n) => {\n  if (content === undefined) return\n  if (typeof content === 'object') content = String(content)\n  if (filename.startsWith('file://')) filename = fileURLToPath(filename)\n  // no need if it's not sourcemapped\n  // don't cache an empty array, though, because ts-node files will show\n  // up first as source, and then as their built content.\n  const last = content.trimEnd().split('\\n').pop()\n  if (cache.has(filename) || !last?.startsWith(sourceMapComment)) return\n  const ll = content.split(/\\n|\\u2028|\\u2029/).map(l => l.length)\n\n  cache.set(filename, ll)\n}\n\nexport const getLineLengths = (filename: string) => {\n  if (filename.startsWith('file://')) filename = fileURLToPath(filename)\n  return cache.get(filename)\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/get-process-info.js":{"lineLengths":[22,18,29,34,40,63,39,48,46,70,60,75,68,77,73,78,48,2,76,67,2,75,74,17,60,28,32,30,2,37,24,31,23,28,39,21,29,41,21,19,21,41,21,27,37,6,34,52,45,5,10,46,5,56,43,45,21,48,72,30,5,54,69,42,25,65,30,26,22,27,29,5,24,27,2,44],"data":{"version":3,"file":"get-process-info.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/get-process-info.ts"],"names":[],"mappings":"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","sourcesContent":["// we always want this\nconst p = process as NodeJS.Process & {\n  setSourceMapsEnabled(v: boolean): void\n  _eval?: string\n}\np.setSourceMapsEnabled(true)\n\nimport { v4 as uuid } from 'uuid'\nimport { getMain } from './get-main.js'\nimport { ProcessInfoNodeData } from './process-info-node.js'\n\nconst envKey = (k: string) => `_TAPJS_PROCESSINFO_${k.toUpperCase()}_`\nconst getEnv = (k: string) => p.env[envKey(k)]\nconst setEnv = (k: string, v: string) => (p.env[envKey(k)] = v)\nconst delEnv = (k: string) => delete p.env[envKey(k)]\n\nimport { register as registerCoverage } from './register-coverage.js'\nimport { register as registerEnv } from './register-env.js'\nimport { register as registerProcessEnd } from './register-process-end.js'\nimport { register as registerRequire } from './register-require.js'\n\n// this module is hybridized.  In node v20.0 - v20.6, it's the *commonjs* one\n// that gets loaded, because the esm loader context can't modify the main\n// thread except via communication over the port to the globalPreload env. So,\n// we have to store our singleton on the global.\n//\n// If it later loads the esm form of this module, that's fine, because it'll\n// see the global processInfo object, and not re-register anything.\n//\n// CJS registration can be removed once node < 20.6 is no longer supported.\n\nconst kProcessInfo = Symbol.for('@tapjs/processinfo.ProcessInfoNodeData')\nconst g = global as typeof globalThis & {\n  [kProcessInfo]?: ProcessInfoNodeData\n}\n\n// only used for tests so we can simulate multiple processes\nexport const reset = () => {\n  g[kProcessInfo] = undefined\n  return { getProcessInfo }\n}\n\nexport const getProcessInfo = (): ProcessInfoNodeData => {\n  if (g[kProcessInfo]) return g[kProcessInfo]\n\n  g[kProcessInfo] = {\n    hrstart: p.hrtime(),\n    date: new Date().toISOString(),\n    argv: p.argv,\n    execArgv: p.execArgv,\n    NODE_OPTIONS: p.env.NODE_OPTIONS,\n    cwd: p.cwd(),\n    pid: p.pid,\n    ppid: p.ppid,\n    parent: getEnv('parent') || null,\n    uuid: uuid(),\n    files: [getMain()],\n    sources: Object.create(null),\n  }\n\n  if (!g[kProcessInfo].parent) {\n    g[kProcessInfo].root = g[kProcessInfo].uuid\n    setEnv('root', g[kProcessInfo].uuid)\n  } else {\n    g[kProcessInfo].root = getEnv('root')\n  }\n  // this is the parent of any further child processes\n  setEnv('parent', g[kProcessInfo].uuid)\n  const externalID = getEnv('external_id')\n  if (externalID) {\n    g[kProcessInfo].externalID = externalID\n    // externalID only applies to ONE process, not all its children.\n    delEnv('external_id')\n  }\n\n  // switch to turn off registration for some tests.\n  // excluded from coverage because that's the reason why it's here\n  // in the first place, it confuses c8.\n  /* c8 ignore start */\n  if (\n    process.env.__TAPJS_PROCESSINFO_TESTING_NO_REGISTER__ !==\n    String(process.pid)\n  ) {\n    registerRequire()\n    registerEnv()\n    registerCoverage()\n    registerProcessEnd()\n  }\n  /* c8 ignore stop */\n\n  return g[kProcessInfo]\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/lookup-sources.js":{"lineLengths":[74,75,73,22,2,71,71,64,2,68,70,72,69,71,74,52,62,51,26,38,44,32,42,36,29,27,82,79,63,32,9,14,32,49,26,47,36,13,9,5,2,82,34,51,66,23,41,32,5,24,2,44,31,25,28,2,42],"data":{"version":3,"file":"lookup-sources.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/lookup-sources.ts"],"names":[],"mappings":"AAAA,0EAA0E;AAC1E,2EAA2E;AAC3E,yEAAyE;AACzE,sBAAsB;AACtB,EAAE;AACF,uEAAuE;AACvE,uEAAuE;AACvE,gEAAgE;AAChE,EAAE;AACF,oEAAoE;AACpE,sEAAsE;AACtE,wEAAwE;AACxE,qEAAqE;AACrE,uEAAuE;AACvE,0EAA0E;AAC1E,oDAAoD;AAEpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAA;AAE7D,mDAAmD;AACnD,MAAM,OAAO,GAAG,IAAI,GAAG,EAAU,CAAA;AACjC,MAAM,CAAC,MAAM,YAAY,GAAG,IAAI,GAAG,EAAoB,CAAA;AAEvD,MAAM,CAAC,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;QACzB,MAAM,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAA;QACjC,4BAA4B;QAC5B,qBAAqB;QACrB,IAAI,EAAE,KAAK,KAAK,EAAE;YAChB,sEAAsE;YACtE,mEAAmE;YACnE,mDAAmD;YACnD,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;SACpB;aAAM;YACL,oBAAoB;YACpB,MAAM,OAAO,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,CAAA;YACpC,IAAI,OAAO,EAAE;gBACX,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;gBAC9B,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;aACpB;SACF;KACF;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,GAAW,EAAE,UAAoB,EAAE,EAAE,CACjE,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;AAEjC,IAAI,qBAAqB,GAAG,KAAK,CAAA;AACjC,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,aAAsB,KAAK,EAAE,EAAE;IACxD,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,qBAAqB,CAAC,EAAE;QAC3D,IAAI,UAAU;YAAE,qBAAqB,GAAG,IAAI,CAAA;QAC5C,qBAAqB,EAAE,CAAA;KACxB;IACD,OAAO,YAAY,CAAA;AACrB,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,GAAW,EAAE,EAAE;IAChD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC;QAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC5C,qBAAqB,EAAE,CAAA;AACzB,CAAC,CAAA","sourcesContent":["// For some reason that is very mysterious as of the time of writing this,\n// node sporadically will in rare cases hang and fail to gracefully exit if\n// a sufficiently large number of findSourceMap calls are made during the\n// process exit event.\n//\n// However, we cannot look up source maps until *after* the module load\n// event is completely finished and the module is about to be executed,\n// because that is when the source map is added to node's cache.\n//\n// To work around this, every time a module is loaded, we attempt to\n// determine whether it likely has the magic sourceMappingURL comment.\n// If so, then we put it in a list, and at each message, attempt to load\n// the sources for all modules in the list. Then, on process exit, if\n// there's anything still pending that likely has a source map, we only\n// have to look up at most one module (ie, if the last module loaded had a\n// source map), which seems to not trigger the hang.\n\nimport { findSourceMapSafe } from './find-source-map-safe.js'\n\n// the list of modules that likely have source maps\nconst maybeSM = new Set<string>()\nexport const sourcesCache = new Map<string, string[]>()\n\nexport const loadPendingSourceMaps = () => {\n  for (const url of maybeSM) {\n    const sm = findSourceMapSafe(url)\n    // only possible on node 19+\n    /* c8 ignore start */\n    if (sm === false) {\n      // can only happen if node found the SM comment, and tried to load it,\n      // but got an error creating the sourcemap, because it's invalid or\n      // the file is not present. No need to keep trying.\n      maybeSM.delete(url)\n    } else {\n      /* c8 ignore stop */\n      const sources = sm?.payload?.sources\n      if (sources) {\n        sourcesCache.set(url, sources)\n        maybeSM.delete(url)\n      }\n    }\n  }\n}\n\nexport const lookupSources = (url: string, processEnd?: boolean) =>\n  getSources(processEnd).get(url)\n\nlet didFinalLookupAttempt = false\nexport const getSources = (processEnd: boolean = false) => {\n  if (maybeSM.size && (!processEnd || !didFinalLookupAttempt)) {\n    if (processEnd) didFinalLookupAttempt = true\n    loadPendingSourceMaps()\n  }\n  return sourcesCache\n}\n\nexport const likelyHasSourceMap = (url: string) => {\n  if (!sourcesCache.has(url)) maybeSM.add(url)\n  loadPendingSourceMaps()\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-process-end.js":{"lineLengths":[37,55,46,62,46,21,59,39,45,31,30,45,32,36,57,35,60,64,67,69,32,66,78,34,52,9,69,66,78,47,29,2,48],"data":{"version":3,"file":"register-process-end.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/register-process-end.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AACpC,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAA;AAEtD,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,IAAI,CAAA;AAC7C,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAA;AAC7D,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAA;AAE7C,MAAM,IAAI,GAAG,OAAO,CAAA;AAEpB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,IAAI,IAAI,CAAC,GAAG,EAAE,CAAA;AAC1D,IAAI,CAAC,GAAG,CAAC,uBAAuB,GAAG,GAAG,CAAA;AACtC,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;AAE5C,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE;IAC3B,MAAM,CACJ,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;QACf,MAAM,WAAW,GAAG,cAAc,EAAE,CAAA;QACpC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAA;QACvB,WAAW,CAAC,MAAM,GAAG,MAAM,CAAA;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QAChD,OAAO,WAAW,CAAC,OAAO,CAAA;QAC1B,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAA;QACnD,wDAAwD;QACxD,2DAA2D;QAC3D,6DAA6D;QAC7D,UAAU,CAAC,WAAW,CAAC,CAAA;QACvB,WAAW,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;QACzD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACrE,IAAI,YAAY,CAAC,MAAM,EAAE;YACvB,WAAW,CAAC,YAAY,GAAG,YAAY,CAAA;SACxC;QAED,MAAM,CAAC,GAAG,GAAG,GAAG,qBAAqB,WAAW,CAAC,IAAI,OAAO,CAAA;QAC5D,SAAS,CAAC,GAAG,GAAG,mBAAmB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;QACzD,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC,CAAA;QACrE,oBAAoB,CAAC,GAAG,EAAE,WAAW,CAAC,CAAA;IACxC,CAAC,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { onExit } from 'signal-exit'\nimport { getProcessInfo } from './get-process-info.js'\n\nimport { mkdirSync, writeFileSync } from 'fs'\nimport { coverageOnProcessEnd } from './register-coverage.js'\nimport { setSources } from './set-sources.js'\n\nconst proc = process\n\nconst cwd = proc.env._TAPJS_PROCESSINFO_CWD_ || proc.cwd()\nproc.env._TAPJS_PROCESSINFO_CWD_ = cwd\nconst globals = new Set(Object.keys(global))\n\nexport const register = () => {\n  onExit(\n    (code, signal) => {\n      const processInfo = getProcessInfo()\n      processInfo.code = code\n      processInfo.signal = signal\n      const runtime = proc.hrtime(processInfo.hrstart)\n      delete processInfo.hrstart\n      processInfo.files = [...new Set(processInfo.files)]\n      // try to find the actual sources of the files we loaded\n      // This can't be done up front, because the sourcemap isn't\n      // present during the load phase, since it's in the contents.\n      setSources(processInfo)\n      processInfo.runtime = runtime[0] * 1e3 + runtime[1] / 1e6\n      const globalsAdded = Object.keys(global).filter(k => !globals.has(k))\n      if (globalsAdded.length) {\n        processInfo.globalsAdded = globalsAdded\n      }\n\n      const f = `${cwd}/.tap/processinfo/${processInfo.uuid}.json`\n      mkdirSync(`${cwd}/.tap/processinfo`, { recursive: true })\n      writeFileSync(f, JSON.stringify(processInfo, null, 2) + '\\n', 'utf8')\n      coverageOnProcessEnd(cwd, processInfo)\n    },\n    { alwaysLast: true }\n  )\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-coverage.js":{"lineLengths":[54,62,18,59,51,41,36,41,56,62,46,51,52,31,60,64,67,62,56,26,11,16,22,55,52,53,64,28,11,16,22,53,58,33,64,54,26,38,86,5,59,50,80,36,33,29,13,9,67,69,22,5,71,45,30,61,5,67,31,80,2,63,66,64,66,41,67,70,21,31,17,15,45,28,22,36,35,51,24,23,7,2,20,59,67,67,60,25,17,15,28,62,59,63,53,28,50,29,17,21,9,28,70,34,28,47,11,47,42,29,13,47,45,41,76,78,57,62,29,13,81,81,79,49,55,26,78,41,73,32,69,40,27,35,79,22,19,13,24,11,70,29,7,2,20,45],"data":{"version":3,"file":"register-coverage.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/register-coverage.ts"],"names":[],"mappings":"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","sourcesContent":["// start tracking coverage, unless disabled explicltly\n// export so that we know to collect at the end of the process\nconst p = process\nconst enabled = p.env._TAPJS_PROCESSINFO_COVERAGE_ !== '0'\nimport { mkdirSync, writeFileSync } from 'node:fs'\nimport { Session } from 'node:inspector'\nimport { SourceMapPayload } from 'node:module'\nimport { resolve } from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport { canonicalSource } from './canonical-source.js'\nimport { findSourceMapSafe } from './find-source-map-safe.js'\nimport { getExclude } from './get-exclude.js'\nimport { getLineLengths } from './line-lengths.js'\nimport { lookupSources } from './lookup-sources.js'\nimport { ProcessInfoNodeData } from './process-info-node.js'\n\nexport let SESSION: Session | undefined = undefined\n\n// This is a \\n delimited list of files to show coverage for\n// If not set, or empty, then coverage is included for all files\n// that pass the exclusion RegExp filter. If included in this list,\n// then coverage will be recorded, even if it matches exclude.\nconst cfEnv = p.env._TAPJS_PROCESSINFO_COV_FILES_ || ''\nconst coveredFiles: string[] = cfEnv\n  .trim()\n  .split('\\n')\n  .filter(f => !!f)\n\n// NB: coverage exclusion is in addition to processinfo\n// exclusion.  Only show coverage for a file we care\n// about at least somewhat, but coverage is a subset.\nconst cxEnv = p.env._TAPJS_PROCESSINFO_COV_EXCLUDE_FILES_ || ''\nconst uncoveredFiles: string[] = cxEnv\n  .trim()\n  .split('\\n')\n  .filter(f => !!f)\n\nconst exclude = p.env._TAPJS_PROCESSINFO_COV_EXCLUDE_\n  ? getExclude('_TAPJS_PROCESSINFO_COV_EXCLUDE_', false)\n  : /[\\\\\\/]node_modules[\\\\\\/]/\nconst fileEx = getExclude('_TAPJS_PROCESSINFO_EXCLUDE_', false)\n\nconst fileCovered = (\n  f: string,\n  sources: string[] = [],\n  files: string[] = []\n) => {\n  const testFiles = [f]\n  for (const src of sources || []) {\n    testFiles.push(\n      resolve(src.startsWith('file://') ? fileURLToPath(src) : src)\n    )\n  }\n\n  // never include coverage if the file is fully ignored.\n  if (!testFiles.some(f => files.includes(f))) {\n    // just in case it was missed somehow, make sure it *should* be excluded\n    for (const f of testFiles) {\n      if (fileEx.test(f)) {\n        return false\n      }\n    }\n    // otherwise, it was missed by the loader recording somehow\n    // this can happen with commonjs transpilations in some cases\n    files.push(f)\n  }\n\n  // if at least one of them are explicitly covered, then include it,\n  // otherwise omit if we explicitly listed\n  if (coveredFiles.length) {\n    return testFiles.some(f => coveredFiles.includes(f))\n  }\n\n  // if any of the filenames are explicitly excluded, no coverage\n  // otherwise, it is covered\n  return !testFiles.some(\n    f => uncoveredFiles.includes(f) || exclude?.test(f)\n  )\n}\n\n// C8 can't see that this function runs, best theory is that it\n// collides with what it's doing with the coverage it's collecting\n// This ignore can possibly be removed once this is being tested\n// with a version of tap that uses this library, but it might just\n// be an unresolveable bootstrap problem.\n// The test does verify that it ran, because otherwise, there would\n// be no coverage, and it verifies that it gets the expected coverage.\n/* c8 ignore start */\nexport const register = () => {\n  if (!enabled) return\n  p.env._TAPJS_PROCESSINFO_COVERAGE_ = '1'\n\n  SESSION = new Session()\n  SESSION.connect()\n  SESSION.post('Profiler.enable')\n  SESSION.post('Runtime.enable')\n  SESSION.post('Profiler.startPreciseCoverage', {\n    callCount: true,\n    detailed: true,\n  })\n}\n/* c8 ignore stop */\n\nexport const coverageOnProcessEnd = (\n  cwd: string,\n  processInfo: ProcessInfoNodeData\n) => {\n  // Similar to the coverage tracking bootstrap problem above, c8\n  // doesn't see that this function runs, even though it DOES see\n  // that the function defined below runs, which is weird.\n  /* c8 ignore start */\n  if (!SESSION) return\n  const session = SESSION\n\n  const f = `${cwd}/.tap/coverage/${processInfo.uuid}.json`\n  mkdirSync(`${cwd}/.tap/coverage`, { recursive: true })\n\n  session.post('Profiler.takePreciseCoverage', (er, cov) => {\n    session.post('Profiler.stopPreciseCoverage')\n    /* c8 ignore stop */\n\n    // something very strange and bad happened\n    /* c8 ignore start */\n    if (er) {\n      throw er\n    }\n    /* c8 ignore stop */\n\n    // Create a source-map-cache that c8 uses in report generation\n    const sourceMapCache: {\n      [k: string]: {\n        lineLengths: number[]\n        data: SourceMapPayload\n      }\n    } = {}\n    Object.assign(cov, {\n      'source-map-cache': sourceMapCache,\n    })\n\n    cov.result = cov.result.filter(obj => {\n      if (!/^file:/.test(obj.url)) {\n        return false\n      }\n      obj.url = canonicalSource(obj.url)\n      const f = fileURLToPath(obj.url)\n      // see if it has a source map\n      // need to look up via the url, not the file path, because mocks\n      // attach a tapmock search param, which is in node's internal key.\n      const sources = lookupSources(obj.url, true)\n      if (!fileCovered(f, sources, processInfo.files)) {\n        return false\n      }\n      // Most of the time this will be cached at the time of recording, but\n      // if it's the last module loaded, or transpiled in-place by ts-node,\n      // the sourcemap won't be pre-loaded and will have to be looked up.\n      const s = findSourceMapSafe(obj.url)\n      const { payload } = s || { payload: null }\n      if (payload) {\n        sourceMapCache[obj.url] = Object.assign(Object.create(null), {\n          /* c8 ignore start */\n          // node's SourceMap objects provide this as of 20.5.0\n          //@ts-ignore\n          lineLengths: s?.lineLengths || getLineLengths(f),\n          /* c8 ignore stop */\n          data: {\n            ...payload,\n            sources: payload.sources?.map(s => canonicalSource(s)),\n          },\n        })\n      }\n      return true\n    })\n\n    writeFileSync(f, JSON.stringify(cov, null, 2) + '\\n', 'utf8')\n    /* c8 ignore start */\n  })\n}\n/* c8 ignore stop */\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-env.js":{"lineLengths":[46,55,18,37,44,37,70,29,70,51,80,17,80,8,2,31,39,19,34,42,10,19,7,2,40],"data":{"version":3,"file":"register-env.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/register-env.ts"],"names":[],"mappings":"AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAA;AAC7C,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAA;AAEtD,MAAM,CAAC,GAAG,OAAO,CAAA;AACjB,MAAM,KAAK,GAAG,sBAAsB,CAAA;AACpC,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,CAAC,SAAS,CAAA;AAE3C,MAAM,OAAO,GAAG,CAAC,GAAuB,EAAE,OAA0B,EAAE,EAAE,EAAE;IACxE,kEAAkE;IAClE,yBAAyB;IACzB,kEAAkE;IAClE,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;SAClB,MAAM,CACL,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAChE;SACA,MAAM,CAAC;QACN,CAAC,cAAc,EAAE,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxE,CAAC,CACL,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE;IAC3B,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;QAC/B,GAAG,CAAC,GAAG,GAAG;YACR,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC;YACrB,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;SAC9B,CAAA;QACD,OAAO,GAAG,CAAA;IACZ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA","sourcesContent":["import processOnSpawn from 'process-on-spawn'\nimport { nodeOptionsEnv } from './node-options-env.js'\n\nconst p = process\nconst envRE = /^_TAPJS_PROCESSINFO_/\nconst { hasOwnProperty } = Object.prototype\n\nconst getEnvs = (env?: NodeJS.ProcessEnv, args: readonly string[] = []) => {\n  // load it here so that it isn't cached before the loader attaches\n  // in self-test scenario.\n  // copy all of OUR envs, if not specifically set on the env object\n  return Object.fromEntries(\n    Object.entries(p.env)\n      .filter(\n        ([k]) => !(env && hasOwnProperty.call(env, k)) && envRE.test(k)\n      )\n      .concat([\n        ['NODE_OPTIONS', nodeOptionsEnv(env?.NODE_OPTIONS ? env : p.env, args)],\n      ])\n  )\n}\n\nexport const register = () => {\n  processOnSpawn.addListener(obj => {\n    obj.env = {\n      ...(obj.env || p.env),\n      ...getEnvs(obj.env, obj.args),\n    }\n    return obj\n  })\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/register-require.js":{"lineLengths":[59,34,46,55,52,74,17,31,28,15,31,60,69,33,46,40,20,8,61,53,7,2,44],"data":{"version":3,"file":"register-require.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/register-require.ts"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAA;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAA;AAC7C,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAA;AACtD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AAEnD,MAAM,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAA;AACzE,MAAM,CAAC,GAAG,MAET,CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE;IAC3B,IAAI,CAAC,CAAC,gBAAgB,CAAC;QAAE,OAAM;IAC/B,CAAC,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAA;IAC1B,wDAAwD;IACxD,MAAM,OAAO,GAAG,UAAU,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAA;IAChE,OAAO,CACL,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE;QACjB,cAAc,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACrC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;QAC/B,OAAO,IAAI,CAAA;IACb,CAAC,EACD;QACE,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;QACpD,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;KAC7C,CACF,CAAA;AACH,CAAC,CAAA","sourcesContent":["// commonjs style loader hook, modifying require.extensions\nimport { addHook } from 'pirates'\nimport { getExclude } from './get-exclude.js'\nimport { getProcessInfo } from './get-process-info.js'\nimport { saveLineLengths } from './line-lengths.js'\n\nconst kRegisterRequire = Symbol.for('@tapjs/processinfo.registerRequire')\nconst g = global as typeof globalThis & {\n  [kRegisterRequire]?: boolean\n}\n\nexport const register = () => {\n  if (g[kRegisterRequire]) return\n  g[kRegisterRequire] = true\n  // by default we include everything in processInfo.files\n  const exclude = getExclude('_TAPJS_PROCESSINFO_EXCLUDE_', false)\n  addHook(\n    (code, filename) => {\n      getProcessInfo().files.push(filename)\n      saveLineLengths(filename, code)\n      return code\n    },\n    {\n      exts: ['.js', '.cjs', '.ts', '.cts', '.jsx', '.tsx'],\n      matcher: filename => !exclude.test(filename),\n    }\n  )\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/find-source-map-safe.js":{"lineLengths":[39,45,29,41,68,71,29,34,10,17,72,9,38,15,36,18,33,29,5,11,21,5,24,2,48],"data":{"version":3,"file":"find-source-map-safe.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/find-source-map-safe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAa,MAAM,QAAQ,CAAA;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAA;AAE5C,MAAM,UAAU,GAAG,IAAI,GAAG,EAAqB,CAAA;AAE/C,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,CAAe,EACgB,EAAE;IACjC,gEAAgE;IAChE,mEAAmE;IACnE,MAAM,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IACxB,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC7B,IAAI,CAAC;QAAE,OAAO,CAAC,CAAA;IAEf,oEAAoE;IACpE,IAAI;QACF,MAAM,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,CAAA;QAC7B,IAAI,EAAE;YAAE,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAA;QAC/B,OAAO,EAAE,CAAA;QACT,yBAAyB;QACzB,qBAAqB;KACtB;IAAC,MAAM;QACN,OAAO,KAAK,CAAA;KACb;IACD,oBAAoB;AACtB,CAAC,CAAA","sourcesContent":["import { findSourceMap, SourceMap } from 'module'\nimport { pathToURL } from './path-to-url.js'\n\nconst sourceMaps = new Map<string, SourceMap>()\n\nexport const findSourceMapSafe = (\n  s: string | URL\n): false | undefined | SourceMap => {\n  // Have to look up by URL, because the ?tapmock param will be in\n  // the internal key used by node, as those are \"different\" modules.\n  const mod = pathToURL(s)\n  const c = sourceMaps.get(mod)\n  if (c) return c\n\n  // this can throw in some cases, eg if the sourcemap file is missing\n  try {\n    const sm = findSourceMap(mod)\n    if (sm) sourceMaps.set(mod, sm)\n    return sm\n    // only throws on node 20\n    /* c8 ignore start */\n  } catch {\n    return false\n  }\n  /* c8 ignore stop */\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/node_modules/signal-exit/dist/mjs/index.js":{"lineLengths":[65,63,53,60,39,19,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,36,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,36,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,32,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,15,3,67,39,2,68,29,2,61,3,8,3,66,66,45,2,12,3,6,3,68,66,45,2,12,3,100,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/set-sources.js":{"lineLengths":[36,49,45,17,66,57,70,35,34,58,40,41,50,43,5,2,39],"data":{"version":3,"file":"set-sources.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/set-sources.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAA;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAA;AAE5C,IAAI,YAAmC,CAAA;AAEvC,kEAAkE;AAClE,yDAAyD;AACzD,sEAAsE;AACtE,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,EAAuB,EAAE,EAAE;IACpD,YAAY,KAAK,UAAU,EAAE,CAAA;IAC7B,KAAK,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,YAAY,CAAC,OAAO,EAAE,EAAE;QACnD,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAA;QAC/B,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAA;QAChC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACzC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACnC;AACH,CAAC,CAAA","sourcesContent":["import { fileURLToPath } from 'url'\nimport { ProcessInfoNodeData } from './index.js'\nimport { getSources } from './lookup-sources.js'\nimport { urlToPath } from './url-to-path.js'\n\nlet sourcesCache: Map<string, string[]>\n\n// set the processInfo.sources for a given file, but don't clobber\n// if called multiple times, or create duplicate entries.\n// Should only be called *after* the file in question has been loaded.\nexport const setSources = (pi: ProcessInfoNodeData) => {\n  sourcesCache ??= getSources()\n  for (const [url, sources] of sourcesCache.entries()) {\n    const file = fileURLToPath(url)\n    const s = pi.sources[file] || []\n    s.push(...sources.map(s => urlToPath(s)))\n    pi.sources[file] = [...new Set(s)]\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/canonical-source.js":{"lineLengths":[52,54,58,38,41,51,26,39,24,34,29,28,32,71,26,5,40,26,51,2,37,33,26,31,26,55,27,31,70,5,13,2,44],"data":{"version":3,"file":"canonical-source.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/canonical-source.ts"],"names":[],"mappings":"AAAA,oDAAoD;AACpD,sDAAsD;AACtD,0DAA0D;AAC1D,sCAAsC;AAEtC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,MAAM,CAAA;AACxC,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAClD,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAA;AAEzB,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,CAAS,EAAU,EAAE;IACnD,oBAAoB;IACpB,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC3B,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAA;QACpB,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAA;QACnB,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;QACvB,OAAO,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,GAAG,MAAM,CAAA;KAChB;IACD,oCAAoC;IACpC,sBAAsB;IACtB,OAAO,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAChD,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,CAAS,EAAU,EAAE;IACjD,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IAC5B,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;IACrB,2BAA2B;IAC3B,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IACrE,uBAAuB;IACvB,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QACxB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAA;KAC9D;IACD,OAAO,CAAC,CAAA;AACV,CAAC,CAAA","sourcesContent":["// The sources reported in sourcemaps can be fickle,\n// and istanbul's reporting doesn't handle it so well.\n// So, we canonicalize all entries in sources to a file://\n// url with consistent capitalization.\n\nimport { relative, resolve } from 'path'\nimport { fileURLToPath, pathToFileURL } from 'url'\nconst cwd = process.cwd()\n\nexport const canonicalSource = (s: string): string => {\n  // convert to a path\n  if (s.startsWith('file://')) {\n    const u = new URL(s)\n    const hash = u.hash\n    const search = u.search\n    return String(pathToFileURL(canonicalPath(fileURLToPath(s)))) +\n      hash + search\n  }\n  // re-resolve it relative to the cwd\n  // back to a file: url\n  return String(pathToFileURL(canonicalPath(s)))\n}\n\nexport const canonicalPath = (s: string): string => {\n  const rel = relative(cwd, s)\n  s = resolve(cwd, rel)\n  // capitalize drive letters\n  if (/^[a-z]:/.test(s)) s = s.charAt(0).toUpperCase() + s.substring(1)\n  // capitalize UNC paths\n  if (s.startsWith('\\\\\\\\')) {\n    s = s.replace(/\\\\\\\\[^\\\\]+\\\\[^\\\\]+\\\\/, _0 => _0.toUpperCase())\n  }\n  return s\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/node-options-env.js":{"lineLengths":[62,90,62,33,34,24,25,32,39,24,28,44,41,5,35,41,5,10,39,5,2,26,14,59,74,29,43,28,29,36,43,28,50,18,48,17,38,21,9,16,16,66,29,24,9,47,24,5,17,2,28,76,22,27,43,28,29,36,43,28,50,29,21,9,27,29,30,21,9,48,17,38,29,21,9,16,16,78,35,21,9,29,25,29,44,30,17,5,18,2,29,55,61,27,32,44,6,55,22,27,22,43,28,29,36,43,28,50,29,21,9,27,29,30,21,9,48,17,38,29,21,9,16,16,78,54,21,9,38,67,22,25,25,29,33,48,34,9,14,23,29,33,48,34,21,9,5,15,45,65,2,75,53,10,35,46,71,51,77,2,44],"data":{"version":3,"file":"node-options-env.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/node-options-env.ts"],"names":[],"mappings":"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","sourcesContent":["import { argvToNodeOptions } from './argv-to-node-options.js'\nimport {\n  importLoader,\n  importMatch,\n  legacyLoader,\n  legacyMatch,\n} from './loader-paths.js'\nimport { nodeOptionsToArgv } from './node-options-to-argv.js'\n\nimport Module from 'node:module'\n\nconst getKeyValue = (\n  args: readonly string[],\n  i: number\n): [boolean, string, string | undefined] => {\n  const arg = args[i]\n  /* c8 ignore start */\n  if (typeof arg !== 'string') throw new Error('invalid arg')\n  /* c8 ignore stop */\n  if (arg.includes('=')) {\n    const [k, ...rest] = arg.split('=') as [string, ...string[]]\n    return [true, k, rest.join('=')]\n  } else if (i < args.length - 1) {\n    return [false, arg, args[i + 1]]\n  } else {\n    return [false, arg, undefined]\n  }\n}\n\nconst useImport = !!(Module as { register?: (...a: any[]) => any })\n  .register\n\n// JUST test if we need to do anything at all with the env.\n// if the loader is set already in the args, even incorrectly, return true\nconst hasLoader = (args: readonly string[]): boolean => {\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i]\n    /* c8 ignore start */\n    if (typeof arg !== 'string') throw new Error('invalid arg')\n    /* c8 ignore stop */\n    if (!arg.startsWith('--') || arg === '--') break\n    const [eq, k, v] = getKeyValue(args, i)\n    if (!v) {\n      // wasn't a key-value pair\n      continue\n    }\n    if (!eq) i++\n    if (\n      (k === '--experimental-loader' || k === '--loader') &&\n      legacyMatch(v)\n    ) {\n      return true\n    }\n    if (k === '--import' && importMatch(v)) return true\n  }\n  return false\n}\n\nconst rmLoader = (args: string[]) => {\n  const doNotWantKeys = ['--experimental-loader', '--loader', '--import']\n\n  const result: string[] = []\n\n  let doubledash = false\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i]\n    /* c8 ignore start */\n    if (typeof arg !== 'string') throw new Error('invalid arg')\n    /* c8 ignore stop */\n    if (!arg.startsWith('--') || doubledash) {\n      result.push(arg)\n      continue\n    }\n    if (arg === '--') {\n      result.push(arg)\n      doubledash = true\n      continue\n    }\n\n    const [eq, k, v] = getKeyValue(args, i)\n    if (!v) {\n      // wasn't a key-value pair\n      result.push(arg)\n      continue\n    }\n    if (!eq) i++\n    if (doNotWantKeys.includes(k) && (importMatch(v) || legacyMatch(v))) {\n      // it's ours, remove it\n      continue\n    }\n    // not ours, leave it\n    result.push(arg)\n    const next = args[i]\n    if (!eq && typeof next === 'string') result.push(next)\n    continue\n  }\n  return result\n}\n\nconst addLoader = (args: string[]) => {\n  const addKey = useImport ? '--import' : '--loader'\n  const addValue = useImport ? importLoader : legacyLoader\n  const doNotWantKeys = [\n    '--experimental-loader',\n    useImport ? '--loader' : '--import',\n  ]\n  const test = useImport ? importMatch : legacyMatch\n\n  const result: string[] = []\n\n  let doubledash = false\n  let found = false\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i]\n    /* c8 ignore start */\n    if (typeof arg !== 'string') throw new Error('invalid arg')\n    /* c8 ignore stop */\n    if (!arg.startsWith('--') || doubledash) {\n      result.push(arg)\n      continue\n    }\n    if (arg === '--') {\n      result.push(arg)\n      doubledash = true\n      continue\n    }\n\n    const [eq, k, v] = getKeyValue(args, i)\n    if (!v) {\n      // wasn't a key-value pair\n      result.push(arg)\n      continue\n    }\n    if (!eq) i++\n    if (doNotWantKeys.includes(k) && (importMatch(v) || legacyMatch(v))) {\n      // it's ours, but not how we want it, omit\n      continue\n    }\n\n    if (k === addKey && test(v)) {\n      // already present, don't let it be set multiple times.\n      if (found) continue\n      found = true\n      result.push(arg)\n      const next = args[i]\n      if (!eq && typeof next === 'string') result.push(next)\n    } else {\n      // not ours\n      result.push(arg)\n      const next = args[i]\n      if (!eq && typeof next === 'string') result.push(next)\n      continue\n    }\n  }\n  if (!found) result.push(`${addKey}=${addValue}`)\n  return !useImport ? addIgnoreLoadersWarning(result) : result\n}\n\nconst addIgnoreLoadersWarning = (args: readonly string[]) =>\n  args.includes('--no-warnings') ||\n  args.includes('--no-warnings=ExperimentalLoader')\n    ? args\n    : args.concat('--no-warnings')\n\nexport const nodeOptionsEnv = (\n  env: NodeJS.ProcessEnv,\n  args: readonly string[]\n) => {\n  // if we already have the loader in args, don't add to NODE_OPTIONS\n  const no = nodeOptionsToArgv(env.NODE_OPTIONS)\n  return argvToNodeOptions(hasLoader(args) ? rmLoader(no) : addLoader(no))\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/path-to-url.js":{"lineLengths":[36,53,15,29,11,35,39],"data":{"version":3,"file":"path-to-url.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/path-to-url.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,CAAe,EAAU,EAAE,CACnD,OAAO,CAAC,KAAK,QAAQ;IACnB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAA","sourcesContent":["import { pathToFileURL } from 'url'\n\nexport const pathToURL = (s: string | URL): string =>\n  typeof s === 'object'\n    ? String(s)\n    : s.startsWith('file://')\n    ? s\n    : String(pathToFileURL(s))\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/node_modules/signal-exit/dist/mjs/signals.js":{"lineLengths":[3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,26,44,35,125,61,14,16,6,1,35,60,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,CAAC,MAAM,OAAO,GAAqB,EAAE,CAAA;AAC3C,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/url-to-path.js":{"lineLengths":[36,104,39],"data":{"version":3,"file":"url-to-path.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/url-to-path.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,CAAe,EAAE,EAAE,CAC3C,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA","sourcesContent":["import { fileURLToPath } from 'url'\n\nexport const urlToPath = (s: string | URL) =>\n  typeof s === 'object' || s.startsWith('file://') ? fileURLToPath(s) : s\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/argv-to-node-options.js":{"lineLengths":[98,48],"data":{"version":3,"file":"argv-to-node-options.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/argv-to-node-options.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAuB,EAAE,EAAE,CAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA","sourcesContent":["export const argvToNodeOptions = (argv: readonly string[]) =>\n  argv.map(o => `\"${o.replace(/\"/g, '\\\\\"')}\"`).join(' ')\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/loader-paths.js":{"lineLengths":[31,60,36,73,66,53,53,35,37,26,32,48,29,41,2,35,37,26,32,48,29,41,2,40],"data":{"version":3,"file":"loader-paths.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/loader-paths.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAA;AAC9B,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAA;AAE3D,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,CAAC,MAAM,YAAY,GAAG,gBAAgB,CAAC,0BAA0B,CAAC,CAAA;AACxE,MAAM,CAAC,MAAM,YAAY,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,CAAA;AACjE,MAAM,gBAAgB,GAAG,aAAa,CAAC,YAAY,CAAC,CAAA;AACpD,MAAM,gBAAgB,GAAG,aAAa,CAAC,YAAY,CAAC,CAAA;AAEpD,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,CAAS,EAAW,EAAE;IAChD,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;QAC/B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;IACzB,OAAO,CACL,CAAC,KAAK,2BAA2B;QACjC,CAAC,KAAK,YAAY;QAClB,OAAO,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAChC,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,CAAS,EAAW,EAAE;IAChD,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;QAC/B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAA;IACzB,OAAO,CACL,CAAC,KAAK,2BAA2B;QACjC,CAAC,KAAK,YAAY;QAClB,OAAO,CAAC,CAAC,CAAC,KAAK,gBAAgB,CAChC,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { resolve } from 'path'\nimport { getImportMetaURL } from './get-import-meta-url.js'\n\nimport { fileURLToPath } from 'url'\n\nexport const legacyLoader = getImportMetaURL('../esm/loader-legacy.mjs')\nexport const importLoader = getImportMetaURL('../esm/import.mjs')\nconst legacyLoaderPath = fileURLToPath(legacyLoader)\nconst importLoaderPath = fileURLToPath(importLoader)\n\nexport const legacyMatch = (p: string): boolean => {\n  const d = p.startsWith('file://')\n    ? fileURLToPath(p)\n    : decodeURIComponent(p)\n  return (\n    d === '@tapjs/processinfo/loader' ||\n    p === legacyLoader ||\n    resolve(d) === legacyLoaderPath\n  )\n}\n\nexport const importMatch = (p: string): boolean => {\n  const d = p.startsWith('file://')\n    ? fileURLToPath(p)\n    : decodeURIComponent(p)\n  return (\n    d === '@tapjs/processinfo/import' ||\n    p === importLoader ||\n    resolve(d) === importLoaderPath\n  )\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/dist/esm/node-options-to-argv.js":{"lineLengths":[42,12,18,20,25,24,21,17,41,31,20,21,31,59,37,37,17,35,49,37,36,17,22,35,49,37,17,25,22,30,36,17,25,21,28,29,45,33,31,25,25,20,33,25,9,5,18,18,5,30,19,16,2,48],"data":{"version":3,"file":"node-options-to-argv.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/processinfo/src/node-options-to-argv.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAAsB,EAAY,EAAE;IACpE,IAAI,CAAC,EAAE;QAAE,OAAO,EAAE,CAAA;IAClB,MAAM,IAAI,GAAG,EAAE,CAAA;IACf,IAAI,QAAQ,GAAG,KAAK,CAAA;IACpB,IAAI,OAAO,GAAG,KAAK,CAAA;IACnB,IAAI,QAAQ,GAAG,CAAC,CAAA;IAChB,IAAI,GAAG,GAAG,EAAE,CAAA;IACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACtB,QAAQ,CAAC,EAAE;YACT,KAAK,GAAG;gBACN,IAAI,QAAQ,EAAE;oBACZ,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAA;oBACtC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAA;oBAChB,QAAQ,GAAG,KAAK,CAAA;iBACjB;qBAAM,IAAI,OAAO,EAAE;oBAClB,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;oBAC5B,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAA;oBAChB,OAAO,GAAG,KAAK,CAAA;iBAChB;qBAAM;oBACL,OAAO,GAAG,IAAI,CAAA;oBACd,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;oBAC5B,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAA;iBACjB;gBACD,SAAQ;YAEV,KAAK,IAAI;gBACP,IAAI,OAAO,EAAE;oBACX,QAAQ,GAAG,IAAI,CAAA;iBAChB;gBACD,SAAQ;YAEV,KAAK,GAAG;gBACN,IAAI,OAAO;oBAAE,SAAQ;gBACrB,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;gBAC5B,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAA;gBAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACd,GAAG,GAAG,EAAE,CAAA;gBACR,SAAQ;YAEV;gBACE,QAAQ,GAAG,KAAK,CAAA;gBAChB,SAAQ;SACX;KACF;IACD,IAAI,OAAO,EAAE;QACX,OAAO,EAAE,CAAA;KACV;IACD,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACd,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["export const nodeOptionsToArgv = (no: string | undefined): string[] => {\n  if (!no) return []\n  const argv = []\n  let escaping = false\n  let inquote = false\n  let tokStart = 0\n  let tok = ''\n  for (let i = 0; i < no.length; i++) {\n    const c = no.charAt(i)\n    switch (c) {\n      case '\"':\n        if (escaping) {\n          tok += no.slice(tokStart, i - 1) + '\"'\n          tokStart = i + 1\n          escaping = false\n        } else if (inquote) {\n          tok += no.slice(tokStart, i)\n          tokStart = i + 1\n          inquote = false\n        } else {\n          inquote = true\n          tok += no.slice(tokStart, i)\n          tokStart = i + 1\n        }\n        continue\n\n      case '\\\\':\n        if (inquote) {\n          escaping = true\n        }\n        continue\n\n      case ' ':\n        if (inquote) continue\n        tok += no.slice(tokStart, i)\n        tokStart = i + 1\n        argv.push(tok)\n        tok = ''\n        continue\n\n      default:\n        escaping = false\n        continue\n    }\n  }\n  if (inquote) {\n    return []\n  }\n  tok += no.slice(tokStart)\n  argv.push(tok)\n  return argv\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/loader.mjs":{"lineLengths":[56,35],"data":{"version":3,"file":"loader.mjs","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/loader.mts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,aAAa,CAAA","sourcesContent":["export { initialize, load, resolve } from './hooks.mjs'\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/hooks.mjs":{"lineLengths":[43,41,61,11,44,36,41,116,64,12,56,46,38,43,52,24,12,2,2,41,41,2,55,18,81,73,39,5,42,19,9,29,32,31,9,33,2,61,18,81,76,39,5,66,58,9,26,29,31,9,48,2,34],"data":{"version":3,"file":"hooks.mjs","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/hooks.mts"],"names":[],"mappings":"AAAA,2CAA2C;AAG3C,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAA;AAExC,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAA;AAE5D,IAAI,MAAyB,CAAA;AAE7B,MAAM,CAAC,MAAM,aAAa,GAAsB,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3D,gCAAgC;IAChC,MAAM,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAA;IACpC,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CACrC,aAAa,CACX,IAAI,GAAG,CAAC,6BAA6B,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CACxD,CACF,CAAA;IACD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC3D,OAAO;;;gCAGuB,IAAI;;kCAEF,gBAAgB;;;CAGjD,CAAA;AACD,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,EAAE,IAAI,EAAyB,EAAQ,EAAE;IAClE,MAAM,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAA;AACtC,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,IAAI,GAAa,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE;IAC7D,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,MAAM,IAAI,KAAK,CACb,uDAAuD;YACrD,2DAA2D;YAC3D,yBAAyB,CAC5B,CAAA;IACH,CAAC;IACD,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACrC,OAAO,MAAM,CAAC,CAAC;QACX;YACE,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,GAAG,MAAM,EAAE;YACnB,YAAY,EAAE,IAAI;SACnB;QACH,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;AAC5B,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,OAAO,GAAgB,KAAK,EACvC,GAAG,EACH,OAAO,EACP,WAAW,EACX,EAAE;IACF,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,MAAM,IAAI,KAAK,CACb,uDAAuD;YACrD,8DAA8D;YAC9D,yBAAyB,CAC5B,CAAA;IACH,CAAC;IACD,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,CAAA;IAC7D,OAAO,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;QAClD;YACE,GAAG,EAAE,QAAQ;YACb,MAAM,EAAE,QAAQ;YAChB,YAAY,EAAE,IAAI;SACnB;QACH,CAAC,CAAC,WAAW,CAAC,QAAQ,IAAI,GAAG,EAAE,OAAO,CAAC,CAAA;AAC3C,CAAC,CAAA","sourcesContent":["// hooks for legacy-loader.ts and loader.ts\n\nimport { GlobalPreloadHook, LoadHook, ResolveHook } from 'node:module'\nimport { fileURLToPath } from 'node:url'\nimport { MessagePort } from 'node:worker_threads'\nimport { MockServiceClient } from './mock-service-client.js'\n\nlet client: MockServiceClient\n\nexport const globalPreload: GlobalPreloadHook = ({ port }) => {\n  // loader thread. connect client\n  client = new MockServiceClient(port)\n  const serviceModuleCJS = JSON.stringify(\n    fileURLToPath(\n      new URL('../commonjs/mock-service.js', import.meta.url),\n    ),\n  )\n  const base = JSON.stringify(fileURLToPath(import.meta.url))\n  return `\n// main thread, start service and listen for connections\nconst { createRequire } = getBuiltin('module')\nconst require = createRequire(${base})\nconst { fileURLToPath } = getBuiltin('url')\nconst { MockService } = require(${serviceModuleCJS})\nMockService.listen(port)\nport.unref()\n`\n}\n\nexport const initialize = ({ port }: { port: MessagePort }): void => {\n  client = new MockServiceClient(port)\n}\n\nexport const load: LoadHook = async (url, context, nextLoad) => {\n  if (!client) {\n    throw new Error(\n      'initialize() or globalPreload() must be run prior to ' +\n        'running the load() hook. Did you --loader when you meant ' +\n        '--import or vice versa?',\n    )\n  }\n  const source = await client.load(url)\n  return source ?\n      {\n        format: 'module',\n        source: `${source}`,\n        shortCircuit: true,\n      }\n    : nextLoad(url, context)\n}\n\nexport const resolve: ResolveHook = async (\n  url,\n  context,\n  nextResolve,\n) => {\n  if (!client) {\n    throw new Error(\n      'initialize() or globalPreload() must be run prior to ' +\n        'running the resolve() hook. Did you --loader when you meant ' +\n        '--import or vice versa?',\n    )\n  }\n  const response = await client.resolve(url, context.parentURL)\n  return response && response.startsWith('tapmock://') ?\n      {\n        url: response,\n        format: 'module',\n        shortCircuit: true,\n      }\n    : nextResolve(response || url, context)\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/mock-service-client.js":{"lineLengths":[72,20,37,59,51,32,10,21,26,23,26,60,27,5,19,29,20,38,33,33,19,9,40,19,51,21,29,21,19,28,38,40,31,9,21,5,23,27,38,39,48,29,40,11,5,21,35,27,16,24,21,5,35,30,32,34,20,26,28,26,5,1,47],"data":{"version":3,"file":"mock-service-client.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/mock-service-client.ts"],"names":[],"mappings":"AAAA,wEAAwE;AACxE,oBAAoB;AACpB,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;AAEpC,OAAO,EACL,qBAAqB,GAGtB,MAAM,mBAAmB,CAAA;AAE1B,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;AAElD,MAAM,OAAO,iBAAiB;IAC5B,KAAK,CAAa;IAClB,QAAQ,GAAY,KAAK,CAAA;IACzB,SAAS,GACP,IAAI,GAAG,EAAE,CAAA;IAEX,YAAY,IAAiB;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;QACnD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;IACpB,CAAC;IAED,QAAQ,CAAC,GAAQ;QACf,IACE,CAAC,IAAI,CAAC,QAAQ;YACd,CAAC,CAAC,GAAG;YACL,OAAO,GAAG,KAAK,QAAQ;YACvB,GAAG,CAAC,KAAK,KAAK,IAAI,EAClB,CAAC;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACpB,OAAM;QACR,CAAC;QACD,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC;YAAE,OAAM;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QAC1C,aAAa;QACb,qBAAqB;QACrB,IAAI,CAAC,OAAO;YAAE,OAAM;QACpB,oBAAoB;QACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QACpB,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,GAAuB;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAA;QAE7C,OAAO,IAAI,OAAO,CAAsB,OAAO,CAAC,EAAE;YAChD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;YACnC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;YAChB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,GAAW;QACpB,OAAO,CACL,MAAM,IAAI,CAAC,MAAM,CAAC;YAChB,MAAM,EAAE,MAAM;YACd,GAAG;YACH,EAAE,EAAE,KAAK,EAAE;SACZ,CAAC,CACH,CAAC,QAAQ,CAAA;IACZ,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAAW,EAAE,SAAkB;QAC3C,OAAO,CACL,CAAC,CAAC,SAAS;YACX,CACE,MAAM,IAAI,CAAC,MAAM,CAAC;gBAChB,MAAM,EAAE,SAAS;gBACjB,GAAG;gBACH,SAAS;gBACT,EAAE,EAAE,KAAK,EAAE;aACZ,CAAC,CACH,CAAC,QAAQ,CACX,CAAA;IACH,CAAC;CACF","sourcesContent":["// Created in the loader thread to communicate with the MockService over\n// the message port.\nimport { randomBytes } from 'crypto'\nimport { MessagePort } from 'worker_threads'\nimport {\n  isMockServiceResponse,\n  MockServiceRequest,\n  MockServiceResponse,\n} from './mock-service.js'\n\nconst getId = () => randomBytes(8).toString('hex')\n\nexport class MockServiceClient {\n  #port: MessagePort\n  #started: boolean = false\n  #requests: Map<string, (res: MockServiceResponse) => void> =\n    new Map()\n\n  constructor(port: MessagePort) {\n    this.#port = port\n    this.#port.on('message', msg => this.#receive(msg))\n    this.#port.unref()\n  }\n\n  #receive(msg: any) {\n    if (\n      !this.#started &&\n      !!msg &&\n      typeof msg === 'object' &&\n      msg.start === true\n    ) {\n      this.#started = true\n      return\n    }\n    if (!isMockServiceResponse(msg)) return\n    const resolve = this.#requests.get(msg.id)\n    // unpossible\n    /* c8 ignore start */\n    if (!resolve) return\n    /* c8 ignore stop */\n    this.#requests.delete(msg.id)\n    if (this.#requests.size === 0) {\n      this.#port.unref()\n    }\n    resolve(msg)\n  }\n\n  async #fetch(msg: MockServiceRequest) {\n    if (!this.#started) return { response: null }\n\n    return new Promise<MockServiceResponse>(resolve => {\n      this.#requests.set(msg.id, resolve)\n      this.#port.ref()\n      this.#port.postMessage(msg)\n    })\n  }\n\n  async load(url: string) {\n    return (\n      await this.#fetch({\n        action: 'load',\n        url,\n        id: getId(),\n      })\n    ).response\n  }\n\n  async resolve(url: string, parentURL?: string) {\n    return (\n      !!parentURL &&\n      (\n        await this.#fetch({\n          action: 'resolve',\n          url,\n          parentURL,\n          id: getId(),\n        })\n      ).response\n    )\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/mock-service.js":{"lineLengths":[63,61,14,53,2,74,24,73,35,2,74,65,40,2,71,51,2,77,68,74,49,38,37,43,47,71,36,46,46,70,46,44,51,52,3,45,3,30,33,25,14,15,24,22,51,70,67,49,43,26,5,42,72,2,70,42,38,43,49,28,67,62,32,29,67,66,57,21,60,65,21,45,20,26,48,26,17,19,11,10,11,23,45,73,9,38,5,70,46,25,31,26,43,32,33,43,23,32,74,48,61,45,34,33,11,21,5,24,30,39,19,41,29,29,5,31,34,37,73,36,19,40,5,39,57,70,62,26,47,78,76,72,48,14,83,81,79,77,85,83,83,81,35,78,63,71,54,23,76,34,9,72,53,31,5,28,28,56,19,29,31,28,43,29,17,19,28,39,5,25,42,19,31,27,50,60,19,39,5,74,58,29,36,33,32,26,46,36,26,49,42,20,63,9,28,75,49,34,40,88,44,42,21,17,16,16,15,47,10,67,29,66,5,14,69,29,22,35,31,5,21,37,17,67,9,17,5,1,40],"data":{"version":3,"file":"mock-service.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/mock-service.ts"],"names":[],"mappings":"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","sourcesContent":["// This is the machinery that supports the load() and resolve()\n// methods used by the loader, returning the appropriate urls\n// and source.\n// It runs on the main thread, not the loader thread.\n//\n// The globalPreload/initialize inits the port and grabs a reference to it\n// in the loader thread.\n// Then the loader asks the service over that port for the mocked url and\n// source code, which is sent back.\n//\n// The mock-import module creates a MockService instance when t.mockImport\n// is called, giving it a key and setting up its mocks, and calls\n// import(startURL) as the return value.\n//\n// There should be at most 1 MockService instance for a given tap test,\n// with its own unique key that's used for loading.\n//\n// There are some weird lines ignored for coverage in this file, owing to the\n// fact that it is loaded as part of tap's initial startup, prior to\n// instrumenting coverage, and loaded very differently in node 20 vs prior\n// versions that ran loaders on the main thread..\n\nimport type { CallSiteLike, CallSiteLikeJSON } from '@tapjs/stack'\nimport * as stack from '@tapjs/stack'\nimport { randomBytes } from 'crypto'\nimport { dirname, isAbsolute } from 'path'\nimport { resolveImport } from 'resolve-import'\nimport { isRelativeRequire } from 'resolve-import/is-relative-require'\nimport { pathToFileURL } from 'url'\nimport { MessagePort } from 'worker_threads'\nimport { exportLine } from './export-line.js'\nimport { mungeMocks } from './munge-mocks.js'\nimport { resolveMockEntryPoint } from './resolve-mock-entry-point.js'\nimport { serviceKey } from './service-key.js'\n\nconst { hasOwnProperty } = Object.prototype\nconst hasOwn = (o: any, k: PropertyKey) => hasOwnProperty.call(o, k)\nconst getKey = () => randomBytes(8).toString('hex')\n\n/**\n * Build the source code for a mocked module.\n */\nconst buildSrc = (m: MockService, url: string) => {\n  const mock = m?.mocks?.[url]\n  /* c8 ignore start */\n  if (!mock) return\n  /* c8 ignore stop */\n\n  const { key } = m\n\n  const keySrc = `__tapmock${serviceKey}$${key}`\n  const mockSrc = `global[${keySrc}].mocks[${JSON.stringify(url)}]`\n  const src = Object.keys(mock).map(k => exportLine(k, mockSrc))\n  if (!Object.keys(mock).includes('default')) {\n    src.push(`const defExp = ${mockSrc}\nexport default defExp\\n`)\n  }\n  const symFor = JSON.stringify(keySrc)\n  return `const ${keySrc} = Symbol.for(${symFor})\\n${src.join('\\n')}`\n}\n\nexport type MockServiceLoadRequest = {\n  action: 'load'\n  url: string\n  id: string\n}\nexport type MockServiceResolveRequest = {\n  action: 'resolve'\n  url: string\n  parentURL: string\n  id: string\n}\n\nexport type MockServiceRequest =\n  | MockServiceLoadRequest\n  | MockServiceResolveRequest\n\nexport type MockServiceResponse = MockServiceRequest & {\n  // a false response means \"not a mocked module\"\n  response: string | undefined\n}\n\nexport const isMockServiceResponse = (\n  m: any,\n): m is MockServiceResponse =>\n  isMockServiceRequest(m) &&\n  Object.keys(m).includes('response') &&\n  (typeof (m as MockServiceResponse).response === 'string' ||\n    typeof (m as MockServiceResponse).response === 'undefined')\n\nexport const isMockServiceRequest = (\n  m: any,\n): m is MockServiceRequest =>\n  !!m &&\n  typeof m === 'object' &&\n  ((m.action === 'resolve' && typeof m.parentURL === 'string') ||\n    (m.action === 'load' && m.parentURL === undefined)) &&\n  typeof m.url === 'string' &&\n  typeof m.id === 'string'\n\n// keys and instances across dialects, so we get the right one when\n// it's loaded from the commonjs globalPreload, or just a cjs test\nconst kInstances = Symbol.for(`${serviceKey}.instances`)\nconst g = globalThis as typeof globalThis & {\n  [kInstances]?: Map<string, MockService>\n}\n\n// this gets called at startup before coverage is initiated,\n// so it never covers the second case where it isn't already set.\n/* c8 ignore start */\nconst instances = g[kInstances] || new Map<string, MockService>()\n/* c8 ignore stop */\ng[kInstances] = instances\n\nconst mockServiceCtorSymbol = Symbol('private')\nexport class MockService {\n  static #port?: MessagePort\n  key: string = getKey()\n  module?: string | Promise<string>\n  mocks?: Record<string, Record<string, any>>\n  caller?: {\n    path: string\n    dir: string\n    url: URL\n    at: CallSiteLike | CallSiteLikeJSON\n    stack?: string\n  }\n\n  constructor(priv: typeof mockServiceCtorSymbol) {\n    if (priv !== mockServiceCtorSymbol) {\n      throw new Error('create MockService with MockService.get()')\n    }\n    instances.set(this.key, this)\n  }\n\n  // pass in the main-thread end of the loader port set, and respond\n  // appropriately to messages we can handle\n  /* c8 ignore start */\n  static async listen(port: MessagePort) {\n    this.#port = port\n    port.on('message', async msg => {\n      /* c8 ignore stop */\n      /* c8 ignore start */\n      if (!isMockServiceRequest(msg)) return\n      /* c8 ignore stop */\n      const r = await this.handle(msg).catch(e => console.error(e))\n      // typescript handles 'void' weirdly\n      const response = r === undefined ? undefined : r\n      const msr: MockServiceResponse = { ...msg, response }\n      port.postMessage(msr)\n      /* c8 ignore start */\n    })\n    port.unref()\n  }\n  /* c8 ignore stop */\n\n  static async handle(msg: any) {\n    if (!isMockServiceRequest(msg)) return\n    return msg.action === 'resolve' ?\n        this.resolve(msg)\n      : this.load(msg)\n  }\n\n  static async resolve(req: MockServiceResolveRequest) {\n    const { parentURL } = req\n    const p = new URL(parentURL)\n    const [sk, k] = (p.searchParams.get('tapmock') || '').split('.')\n    if (sk !== serviceKey || !k) return\n    return this.get(k).resolve(req)\n  }\n  async resolve({ url, parentURL }: MockServiceResolveRequest) {\n    const resolvedURL =\n      hasOwn(this.mocks, url) ? url\n      : isRelativeRequire(url) ? String(new URL(url, parentURL))\n      : isAbsolute(url) ? String(pathToFileURL(url))\n      : url\n\n    if (!hasOwn(this.mocks, resolvedURL)) {\n      // parent is mocked, but this module isn't, so the things IT loads\n      // should be loaded from the mock, even though it isn't. Need to\n      // resolveImport() here so that it doesn't get confused when\n      // loading deps out of node_modules.\n      //\n      // If a node builtin is mocked, and another builtin references it, then\n      // the builtin will get the original builtin, not the mock. This is a\n      // shortcoming owing to the fact that there's no way here to tack a\n      // search param on the \"url\" for an internal module. If it causes\n      // problems, then the solution could be to swap out internal modules with\n      // a known url type like tapmockBuiltin://node:fs or something, and use\n      // that as the indicator that its builtin deps might need to be mocked.\n      // For now, it's just a known design limitation, because that's a bit\n      // tricky to get right.\n      let mocker = await resolveImport(url, parentURL).catch(() => {})\n      // we can't resolve it, but maybe someone else can.\n      // if RI gives us a string, then it's a builtin, do nothing\n      if (!mocker || typeof mocker !== 'object') return\n      mocker.searchParams.set('tapmock', `${serviceKey}.${this.key}`)\n      return String(mocker)\n    }\n\n    const mockRes = new URL(`tapmock://${serviceKey}.${this.key}/`)\n    mockRes.searchParams.set('url', resolvedURL)\n    return String(mockRes)\n  }\n\n  static async load(req: MockServiceLoadRequest) {\n    const { url } = req\n    if (!url.startsWith(`tapmock://${serviceKey}.`)) return\n    /* c8 ignore start */\n    const u = new URL(url)\n    /* c8 ignore stop */\n    const [_, key] = u.host.split('.')\n    /* c8 ignore start */\n    if (!key) return\n    /* c8 ignore stop */\n    return this.get(key).load(req)\n  }\n  async load({ url }: MockServiceLoadRequest) {\n    if (!url.startsWith('tapmock://')) return\n    const u = new URL(url)\n    const key = u.host\n    const mockURL = u.searchParams.get('url')\n    if (key !== `${serviceKey}.${this.key}` || !mockURL) return\n    return buildSrc(this, mockURL)\n  }\n\n  static async create(\n    module: string,\n    mocks: Record<string, any> = {},\n    caller: Function | ((...a: any[]) => any) = MockService.create,\n  ): Promise<MockService & { module: string | Promise<string> }> {\n    const ms = new MockService(mockServiceCtorSymbol)\n\n    /* c8 ignore start */\n    const needIgnoreTap = !stack\n      .getIgnoredPackages()\n      .includes('@tapjs')\n    if (needIgnoreTap) stack.addIgnoredPackage('@tapjs')\n    const at = stack.at(caller)\n    if (needIgnoreTap) stack.removeIgnoredPackage('@tapjs')\n\n    const path = at?.absoluteFileName\n    if (!path) {\n      throw new Error('could not get current call site')\n    }\n    /* c8 ignore stop */\n\n    // tell the loader hooks thread that it's ok to start using it now.\n    this.#port?.postMessage({ start: true })\n\n    const dir = dirname(path)\n    const url = pathToFileURL(path)\n\n    const resolved = resolveMockEntryPoint(\n      url,\n      module,\n      serviceKey,\n      ms.key,\n      caller,\n    )\n    resolved.then(s => (ms.module = s))\n\n    ms.mocks = mungeMocks(mocks, dir)\n    ms.caller = {\n      path,\n      dir,\n      url,\n      at,\n      stack: stack.captureString(caller),\n    }\n    const sym = Symbol.for(`__tapmock${serviceKey}$${ms.key}`)\n    const g = globalThis as typeof globalThis & {\n      [sym]?: MockService\n    }\n    return (g[sym] = Object.assign(ms, { module: resolved }))\n  }\n\n  unmock() {\n    const sym = Symbol.for(`__tapmock${serviceKey}$${this.key}`)\n    const g = globalThis as typeof globalThis & {\n      [sym]?: MockService\n    }\n    delete g[sym]\n    instances.delete(this.key)\n    this.mocks = undefined\n  }\n\n  static get(key: string) {\n    const i = instances.get(key)\n    if (!i) {\n      throw new Error('mock service instance key not found')\n    }\n    return i\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/index.js":{"lineLengths":[45,36,51,54,51,74,37,21,41,14,40,17,16,20,3,65,50,3,39,3,65,61,3,32,31,3,68,35,3,64,3,53,3,71,65,68,21,25,13,44,14,20,36,18,24,2,18,3,65,21,3,41,41,19,32,21,5,2,3,70,21,3,44,41,19,37,21,5,2,3,67,21,3,80,32,44,55,25,11,18,24,45,2,36,58,25,32,25,24,66,63,65,71,68,68,48,56,50,26,13,58,26,2,3,69,3,118,47,33,3,57,33,3,75,3,57,33,3,68,54,38,28,30,27,33,31,26,28,62,25,27,29,32,30,23,25,55,25,11,20,24,41,51,22,5,36,66,65,2,22,38,41,25,28,35,24,9,5,20,2,22,50,65,70,57,25,18,18,24,21,38,19,18,5,57,61,16,69,65,43,5,30,37,26,65,28,22,49,1,3,67,46,2,66,32,3,32,34,16,2,69,38,19,18,5,37,56,35,18,1,3,74,38,2,73,58,2,72,79,73,76,76,3,36,45,48,61,64,85,55,70,54,60,20,27,18,20,25,49,70,38,77,2,3,77,19,2,71,75,17,3,56,31,14,3,67,2,70,76,9,3,40,14,16,28,48,35,11,18,30,42,19,42,18,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { builtinModules } from 'node:module'\nimport { resolve } from 'node:path'\nimport { CallSiteLike } from './call-site-like.js'\nimport { requireResolve } from './require-resolve.js'\nexport { CallSiteLike, CallSiteLikeJSON } from './call-site-like.js'\nexport type { GeneratedResult } from './call-site-like.js'\nexport type { Compiled, LineRef } from './parse.js'\n\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// platform portability accommodation\n/* c8 ignore start */\nlet cwd =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.cwd === 'function'\n  ) ?\n    process.cwd()\n  : undefined\n/* c8 ignore stop */\n\n/**\n * Set the effective cwd for shortening filenames in stack traces\n * Set to `undefined` to show full absolute paths.\n */\nexport const setCwd = (c: string | undefined) => (cwd = c)\n\n/**\n * Get the effective cwd for shortening filenames in stack traces\n * If set to `undefined`, then will show full absolute paths.\n */\nexport const getCwd = () => cwd\n\nlet filterNodeInternals = true\n/**\n * Get the current value indicating whether node internals should be\n * filtered out. (Defaults to true)\n */\nexport const getFilterNodeInternals = () => filterNodeInternals\n/**\n * Set whether node internals should be filtered out.\n */\nexport const setFilterNodeInternals = (s: boolean) =>\n  (filterNodeInternals = s)\n\n// these are packages that function somewhat like node internals,\n// for tap's purposes, and `@tapjs` packages themselves, when loaded\n// from node_modules.\nconst ignoredPackages: string[] = [\n  '@tapjs',\n  '@isaacs/ts-node-temp-fork-for-pr-2009',\n  'pirates',\n  'function-loop',\n  '@cspotcode/source-map-support',\n  'signal-exit',\n  'async-hook-domain',\n]\nlet dirty: boolean = false\n\n/**\n * Add a package name to the list of deps that should be excluded\n * from stack traces.\n */\nexport const addIgnoredPackage = (s: string) => {\n  const i = ignoredPackages.indexOf(s)\n  if (i === -1) {\n    ignoredPackages.push(s)\n    dirty = true\n  }\n}\n\n/**\n * Remove a package name from the list of deps that should be excluded\n * from stack traces.\n */\nexport const removeIgnoredPackage = (s: string) => {\n  const i = ignoredPackages.indexOf(s)\n  if (i !== -1) {\n    ignoredPackages.splice(i, 1)\n    dirty = true\n  }\n}\n\n/**\n * Get a read-only copy of the list of deps that should be excluded\n * from stack traces.\n */\nexport const getIgnoredPackages = () =>\n  Object.freeze(ignoredPackages.slice(0))\n\nconst getTestBuiltPath = () => {\n  const p = requireResolve('@tapjs/test')\n  // we'll always find the test class in this project\n  /* c8 ignore start */\n  if (!p) return ''\n  /* c8 ignore stop */\n  return resolve(p, '../../../test-built')\n}\n\nconst buildIgnoredPackages = () => {\n  // just a safety precaution, no reason to ever do this\n  /* c8 ignore start */\n  if (!ignoredPackages.length) return undefined\n  /* c8 ignore stop */\n  const p = ignoredPackages.map(s => regExpEscape(s)).join('|')\n  const nm = `[/\\\\\\\\]node_modules[/\\\\\\\\](?:${p})([/\\\\\\\\]|$)`\n  // if we are ignoring @tapjs/test, then also ignore its built\n  // plugged-in implementation. This is only relevant when developing\n  // this project, or other cases where @tapjs/test may be linked,\n  // because when it's loaded from node_modules, it'll be excluded\n  // by virtue of being in that folder anyhow.\n  const built =\n    (\n      ignoredPackages.includes('@tapjs') ||\n      ignoredPackages.includes('@tapjs/test')\n    ) ?\n      getTestBuiltPath()\n    : ''\n  const re = built ? `${built}([/\\\\\\\\].*|$)|${nm}` : nm\n  return new RegExp(re)\n}\n\n/**\n * exported for testing, no real purpose, but also no harm in looking\n */\nexport const getIgnoredPackagesRE = () =>\n  !dirty ? ignoredPackagesRE : (\n    (ignoredPackagesRE = buildIgnoredPackages())\n  )\n\nlet ignoredPackagesRE: RegExp | undefined = buildIgnoredPackages()\nlet filterIgnoredPackages = true\n\n/**\n * Set whether or not the list of ignored packages should\n * be excluded from stack traces.\n */\nexport const setFilterIgnoredPackages = (s: boolean) =>\n  (filterIgnoredPackages = s)\n\n/**\n * Get whether or not the list of ignored packages should\n * be excluded from stack traces.\n */\nexport const getFilterIgnoredPackages = () => filterIgnoredPackages\n\n// detect the first line of Error.stack, 'Error: blah'\nconst isErrorStackHead = (c?: CallSiteLike): boolean =>\n  !!c &&\n  c.lineNumber === null &&\n  c.columnNumber === null &&\n  c.this === undefined &&\n  c.evalOrigin === undefined &&\n  c.function === undefined &&\n  c.typeName === null &&\n  c.methodName === null &&\n  (typeof c.functionName === 'string' || !c.functionName) &&\n  c.isEval === false &&\n  c.isNative === false &&\n  c.isToplevel === false &&\n  c.isConstructor === false &&\n  c.generated === undefined\n\nconst filter = (c: CallSiteLike): boolean => {\n  const s = c.fileName\n  // technically this is possible, but super unlikely\n  /* c8 ignore start */\n  if (!s) return true\n  /* c8 ignore stop */\n  if (dirty && filterIgnoredPackages) {\n    ignoredPackagesRE = buildIgnoredPackages()\n    dirty = false\n  }\n  return (\n    (!filterNodeInternals ||\n      !(s.startsWith('node:') || builtinModules.includes(s))) &&\n    (!filterIgnoredPackages || !ignoredPackagesRE?.test(s))\n  )\n}\n\nconst clean = (c: CallSiteLike[]): CallSiteLike[] => {\n  const filtered = c.filter(filter)\n  while (isErrorStackHead(filtered[0])) filtered.shift()\n  if (cwd !== undefined) {\n    for (const c of filtered) {\n      c.cwd = cwd\n    }\n  }\n  return filtered\n}\n\nlet capturing = false\n/**\n * Get an array of {@link @tapjs/stack!call-site-like.CallSiteLike} objects for\n * the current location, from the call to the `fn` argument supplied, limited\n * to the number of frames specified by `limit`.\n *\n * If the `limit` argument is 0, then the current `Error.stackTraceLimit`\n * value will be used.\n *\n * This method is not re-entry safe, due to the fact that it relies on\n * temporarily overriding the global Error.prepareStackTrace. As a result,\n * if a capture() is triggered in any of the methods used by the\n * CallSiteLike constructor (for example, if `@tapjs/intercept` is used to\n * capture the process.cwd() method, which is used by path.resolve()),\n * then that will cause problems. To work around this, if a re-entry is\n * detected, then an empty stack of [] is returned.\n *\n * Even if it was made re-entry safe, it would be easy to accidentally\n * trigger an infinite recursion and stack overflow in such a scenario, so\n * returning an empty stack in the case of re-entry is the best workaround.\n */\nexport function capture(\n  limit: number,\n  fn: Function | ((...a: any[]) => any),\n): CallSiteLike[]\nexport function capture(limit: number): CallSiteLike[]\nexport function capture(\n  fn: Function | ((...a: any[]) => any),\n): CallSiteLike[]\nexport function capture(): CallSiteLike[]\nexport function capture(\n  limit: number | Function | ((...a: any[]) => any) = 0,\n  fn: Function | ((...a: any[]) => any) = capture,\n): CallSiteLike[] {\n  // should be impossible to hit, but can if we have to look up\n  // a sourcemap for a file we haven't seen before, and the filename\n  // happens to come through as a url or relative path.\n  /* c8 ignore start */\n  if (capturing) return []\n  /* c8 ignore stop */\n  capturing = true\n  if (typeof limit === 'function') {\n    fn = limit\n    limit = 0\n  }\n  const { prepareStackTrace, stackTraceLimit } = Error\n  Error.prepareStackTrace = CallSiteLike.prepareStackTrace\n  if (limit) {\n    // we always get an extra few frames to account for internals\n    // or proxy frames that might be filtered out of the top.\n    Error.stackTraceLimit = limit + 10\n  }\n  const obj: { stack: CallSiteLike[] } = { stack: [] }\n  Error.captureStackTrace(obj, fn)\n  const { stack } = obj\n  Object.assign(Error, { prepareStackTrace, stackTraceLimit })\n  const st = clean(stack)\n  capturing = false\n  return limit === 0 ? st : st.slice(0, limit)\n}\n\n/**\n * Get the call site in the stack either where `at()` is called, or\n * where the supplied `fn` function is called.\n *\n * If `fn` is provided, and is not in the current call stack, then\n * `undefined` will be returned.\n */\nexport const at: (\n  fn?: Function | ((...a: any[]) => any),\n) => CallSiteLike | undefined = (fn = at) => {\n  const [site] = capture(1, fn)\n  return site\n}\n\n/**\n * Same as {@link @tapjs/stack!index.capture}, but return the `toString()`\n * values of the {@link @tapjs/stack!call-site-like.CallSiteLike} objects\n */\nexport function captureString(\n  limit: number,\n  fn: Function | ((...a: any[]) => any),\n): string\nexport function captureString(limit: number): string\nexport function captureString(\n  fn?: Function | ((...a: any[]) => any),\n): string\nexport function captureString(): string\nexport function captureString(\n  limit: number | Function | ((...a: any[]) => any) = Infinity,\n  fn: Function | ((...a: any[]) => any) = captureString,\n): string {\n  if (typeof limit === 'function') {\n    fn = limit\n    limit = 0\n  }\n  const stack = capture(limit, fn)\n  return (limit === 0 ? stack : stack.slice(0, limit))\n    .map(c => String(c) + '\\n')\n    .join('')\n}\n\n/**\n * Get an array of {@link CallSiteLike} objects corresponding to the stack\n * trace of the Error object provided.\n *\n * This does _not_ actually look at the current call site, or do anything\n * magical with the V8 engine. It's just parsing a string.\n *\n * While some effort is made to interpret stacks correctly when an Error\n * contains a `name` and `message`, remember that the `Error.stack` property in\n * JavaScript is remarkably sloppy. In some cases, if the `Error.message`\n * contains `\\n` and some lines after the first look like stack trace lines,\n * incorrect data may result. It's only as good as the stack you pass to it.\n */\nexport const captureError = (\n  e: Error | NodeJS.ErrnoException,\n): CallSiteLike[] => {\n  // errors almost always have these fields\n  const { message = '', name = '', code } = e as NodeJS.ErrnoException\n  const stack = typeof e.stack === 'string' ? e.stack : ''\n  const head = name && message ? `${name}: ${message}\\n` : ''\n  const errnoHead =\n    name && message && code ? `${name} [${code}]: ${message}` : ''\n  const cleanHead = !!head && stack.startsWith(head)\n  const cleanErrnoHead = !!errnoHead && stack.startsWith(errnoHead)\n\n  const s =\n    cleanHead ? stack.substring(head.length)\n    : cleanErrnoHead ? stack.substring(errnoHead.length)\n    : stack\n  const cleaned = clean(\n    s\n      .trimEnd()\n      .split('\\n')\n      .filter(l => !!l)\n      .map(line => new CallSiteLike(e, line)),\n  )\n\n  // if we didn't clean the header cleanly, then sweep the stack for\n  // any weird junk it might contain\n  return cleanHead ? cleaned : (\n      cleaned.filter(c => !isErrorStackHead(c))\n    )\n}\n\n/**\n * Get a processed string stack corresponding to the stack trace of the Error\n * object provided.\n *\n * This method has all the same caveats as {@link captureError}. If the\n * object provided has a weird looking `stack` property, then you might get\n * weird results.\n */\nexport const captureErrorString = (e: Error): string =>\n  captureError(e)\n    .map(c => String(c) + '\\n')\n    .join('')\n\n/**\n * Parse a stack string and return an array of CallSiteLike objects\n *\n * We use this to get the `at` diagnostic callsite when all we have is\n * a stack, either from a native Error object, or a stringified CallSiteLike\n * stack.\n */\nexport const parseStack = (s: string): CallSiteLike[] =>\n  clean(\n    s\n      .trimEnd()\n      .split('\\n')\n      .filter(l => !!l.trim())\n      .map(line => new CallSiteLike(null, line)),\n  )\n\nexport const expandStack = (s?: string | CallSiteLike[]): string => {\n  if (!s) return ''\n  if (typeof s === 'string') return expandStack(parseStack(s))\n  return clean(s)\n    .map(c => c.toString(true) + '\\n')\n    .join('')\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/index.js":{"lineLengths":[48,40,47,41,41,47,47,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/index.ts"],"names":[],"mappings":"AAAA,cAAc,iCAAiC,CAAA;AAC/C,cAAc,yBAAyB,CAAA;AACvC,cAAc,gCAAgC,CAAA;AAC9C,cAAc,0BAA0B,CAAA;AACxC,cAAc,0BAA0B,CAAA;AACxC,cAAc,gCAAgC,CAAA;AAC9C,cAAc,gCAAgC,CAAA;AAC9C,cAAc,qBAAqB,CAAA","sourcesContent":["export * from './get-all-conditional-values.js'\nexport * from './get-all-conditions.js'\nexport * from './get-unique-condition-sets.js'\nexport * from './is-relative-require.js'\nexport * from './resolve-all-exports.js'\nexport * from './resolve-all-local-imports.js'\nexport * from './resolve-conditional-value.js'\nexport * from './resolve-import.js'\n\nexport interface ResolveImportOpts {\n  /**\n   * Used when resolves take multiple steps through dependencies.\n   *\n   * @internal\n   */\n  originalParent?: string\n\n  /**\n   * List of conditions to resolve. Defaults to ['import', 'node'].\n   *\n   * If set to ['require', 'node'], then this is functionally equivalent to\n   * `require.resolve()`.\n   *\n   * 'default' is always allowed.\n   */\n  conditions?: string[]\n}\n\nexport type ConditionalValueObject = {\n  [k: string]: ConditionalValue\n}\nexport type ConditionalValue =\n  | null\n  | string\n  | ConditionalValueObject\n  | ConditionalValue[]\n\nexport type ExportsSubpaths = {\n  [path: string]: ConditionalValue\n}\n\nexport type Exports = Exclude<ConditionalValue, null> | ExportsSubpaths\n\nexport type Imports = {\n  [path: string]: ConditionalValue\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/is-relative-require.js":{"lineLengths":[3,53,10,3,44,102,47],"data":{"version":3,"file":"is-relative-require.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/is-relative-require.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAC3C,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,GAAW,EAAE,EAAE,CAC/C,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA","sourcesContent":["/**\n * Exported as `'resolve-import/is-relative-require'`\n * @module\n */\nimport { isWindows } from './is-windows.js'\nexport const isRelativeRequire = (url: string) =>\n  /^\\.\\.?\\//.test(url) || (isWindows && /^\\.\\.?\\\\/.test(url))\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/export-line.js":{"lineLengths":[3,64,10,3,30,3,59,3,43,26,49,21,2,5,35,44,36,47,29,2,2,39],"data":{"version":3,"file":"export-line.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/export-line.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,MAAM,WAAW,GAAG,IAAI,GAAG,EAAkB,CAAA;AAE7C;;GAEG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,CAAS,EAAE,OAAe,EAAU,EAAE;IAC/D,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;QACpB,OAAO,kBAAkB,OAAO;;CAEnC,CAAA;IACC,CAAC;IACD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IAE9B,MAAM,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACvC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;IAC/B,OAAO,YAAY,CAAC,MAAM,OAAO,IAAI,IAAI;cAC7B,CAAC,OAAO,IAAI;CACzB,CAAA;AACD,CAAC,CAAA","sourcesContent":["/**\n * utility used in creating the source of a mocked import module\n * @module\n */\n\nconst exportIndex = new Map<string, number>()\n\n/**\n * Create the `export` lines in the generated module source\n */\nexport const exportLine = (k: string, mockSrc: string): string => {\n  if (k === 'default') {\n    return `const defExp = ${mockSrc}.default\nexport default defExp\n`\n  }\n  const kSrc = JSON.stringify(k)\n\n  const i = exportIndex.get(mockSrc) || 0\n  exportIndex.set(mockSrc, i + 1)\n  return `const exp${i} = ${mockSrc}[${kSrc}]\nexport { exp${i} as ${kSrc} }\n`\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/munge-mocks.js":{"lineLengths":[35,43,71,36,62,56,48,38,54,67,13,29,27,25,33,40,36,57,44,36,17,13,18,45,48,40,17,13,9,56,25,9,57,62,9,14,36,25,9,5,17,2,39],"data":{"version":3,"file":"munge-mocks.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/munge-mocks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAA;AAClC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,MAAM,CAAA;AAC1C,OAAO,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAA;AACtE,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,8DAA8D;AAC9D,wDAAwD;AAExD,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,UAA+B,EAC/B,GAAW,EAC4B,EAAE;IACzC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IACjC,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QAChD,MAAM,CAAC,GACL,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC;YACH,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAA;QAClB,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;YACjB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;YACZ,qBAAqB;YACrB,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC1B,oBAAoB;gBACpB,MAAM,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;gBACxC,IAAI,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE,CAAC;oBAC1B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACjB,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,MAAM,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAA;gBAC5B,IAAI,CAAC,CAAC,QAAQ,IAAI,UAAU,CAAC,EAAE,CAAC;oBAC9B,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;gBACrB,CAAC;YACH,CAAC;QACH,CAAC;aAAM,IAAI,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAChD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACd,CAAC;aAAM,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YACjD,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACnD,CAAC;aAAM,CAAC;YACN,wBAAwB;YACxB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACd,CAAC;IACH,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA","sourcesContent":["import { isBuiltin } from 'module'\nimport { isAbsolute, resolve } from 'path'\nimport { isRelativeRequire } from 'resolve-import/is-relative-require'\nimport { pathToFileURL } from 'url'\n\n// turn all the mocks we get into either the exports provided,\n// if it's an object, or { default: <value> } otherwise.\n\nexport const mungeMocks = (\n  mocksInput: Record<string, any>,\n  dir: string,\n): { [k: string]: { [j: string]: any } } => {\n  const mocks = Object.create(null)\n  for (const [k, v] of Object.entries(mocksInput)) {\n    const m =\n      v && typeof v === 'object' && !Array.isArray(v) ?\n        v\n      : { default: v }\n    if (isBuiltin(k)) {\n      mocks[k] = m\n      /* c8 ignore start */\n      if (k.startsWith('node:')) {\n        /* c8 ignore stop */\n        const bare = k.substring('node:'.length)\n        if (!(bare in mocksInput)) {\n          mocks[bare] = m\n        }\n      } else {\n        const prefixed = `node:${k}`\n        if (!(prefixed in mocksInput)) {\n          mocks[prefixed] = m\n        }\n      }\n    } else if (/^(file:\\/\\/\\/|https?:\\/\\/)/.test(k)) {\n      mocks[k] = m\n    } else if (isRelativeRequire(k) || isAbsolute(k)) {\n      mocks[String(pathToFileURL(resolve(dir, k)))] = m\n    } else {\n      // absolute package name\n      mocks[k] = m\n    }\n  }\n  return mocks\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/resolve-mock-entry-point.js":{"lineLengths":[47,86,24,62,47,5,10,55,59,61,29,38,78,48,21,9,28,30,5,72,35,2,52],"data":{"version":3,"file":"resolve-mock-entry-point.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/resolve-mock-entry-point.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAE9C,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EACxC,GAAQ,EACR,MAAc,EACd,UAAkB,EAClB,GAAW,EACX,MAAyC,EACxB,EAAE;IACnB,IAAI,eAAoB,CAAA;IACxB,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;QACxD,eAAe,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;IACxC,CAAC;SAAM,CAAC;QACN,MAAM,GAAG,GAAG,CAAC,MAAM,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAQ,CAAA;QACrD,mDAAmD;QACnD,qDAAqD;QACrD,qBAAqB;QACrB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC5B,MAAM,EAAE,GAAG,IAAI,SAAS,CACtB,uCAAuC,CACxC,CAAA;YACD,KAAK,CAAC,iBAAiB,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;YACnC,MAAM,EAAE,CAAA;QACV,CAAC;QACD,oBAAoB;QACpB,eAAe,GAAG,GAAG,CAAA;IACvB,CAAC;IACD,eAAe,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,UAAU,IAAI,GAAG,EAAE,CAAC,CAAA;IACnE,OAAO,MAAM,CAAC,eAAe,CAAC,CAAA;AAChC,CAAC,CAAA","sourcesContent":["import { resolveImport } from 'resolve-import'\n\nexport const resolveMockEntryPoint = async (\n  url: URL,\n  module: string,\n  serviceKey: string,\n  key: string,\n  caller: Function | ((...a: any[]) => any),\n): Promise<string> => {\n  let mockedModuleURL: URL\n  if (module.startsWith('./') || module.startsWith('../')) {\n    mockedModuleURL = new URL(module, url)\n  } else {\n    const res = (await resolveImport(module, url)) as URL\n    // caught at the exposed API, defense in depth only\n    // but the experience if it throws here is unhelpful.\n    /* c8 ignore start */\n    if (typeof res === 'string') {\n      const er = new TypeError(\n        'node builtins cannot be mock imported',\n      )\n      Error.captureStackTrace(er, caller)\n      throw er\n    }\n    /* c8 ignore stop */\n    mockedModuleURL = res\n  }\n  mockedModuleURL.searchParams.set('tapmock', `${serviceKey}.${key}`)\n  return String(mockedModuleURL)\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/esm/service-key.js":{"lineLengths":[12,55,44,39],"data":{"version":3,"file":"service-key.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/service-key.ts"],"names":[],"mappings":"AAAA,YAAY;AACZ,OAAO,aAAa,MAAM,4BAA4B,CAAA;AACtD,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,aAAuC,CAAA","sourcesContent":["//@ts-ignore\nimport serviceKeyCJS from '../commonjs/service-key.js'\nexport const { serviceKey } = serviceKeyCJS as { serviceKey: string }\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/call-site-like.js":{"lineLengths":[39,53,36,72,40,93,27,36,50,5,14,9,15,17,9,15,13,13,15,17,11,13,15,18,14,15,54,20,48,5,28,28,34,56,49,9,14,34,9,5,15,25,5,18,32,33,87,13,9,45,32,33,85,13,9,28,38,5,23,36,37,9,28,45,76,48,52,36,49,29,66,13,44,44,48,52,37,41,45,51,9,45,46,37,36,31,68,13,29,65,31,69,40,76,36,28,43,79,13,40,30,41,24,47,46,66,17,22,47,17,39,58,34,43,44,17,46,37,38,66,50,62,71,21,42,76,41,17,22,45,41,17,36,13,18,43,37,41,39,13,9,14,70,9,81,80,28,32,59,72,9,57,35,9,75,76,67,78,42,29,28,31,50,69,55,33,64,32,65,73,78,82,78,58,75,77,81,34,58,71,64,37,93,30,36,64,45,75,44,22,74,78,73,38,45,72,44,52,56,22,60,51,55,17,13,9,5,27,25,15,21,34,21,36,33,36,21,12,38,13,47,51,9,15,21,9,5,29,25,15,21,34,21,36,33,36,21,13,41,9,15,21,9,5,31,71,65,33,39,28,56,74,92,13,70,54,58,37,13,23,17,64,48,52,41,17,23,70,47,30,28,29,54,55,13,9,44,20,23,23,28,56,42,49,49,9,27,23,9,35,20,17,17,27,30,30,35,9,42,35,9,20,50,38,57,30,64,24,56,70,62,53,77,50,17,32,13,56,33,41,32,35,9,28,24,37,45,36,65,13,9,23,28,41,33,9,14,22,9,28,19,54,73,25,33,19,23,32,35,23,20,53,55,58,17,34,34,17,13,9,41,32,9,45,48,5,14,165,24,30,37,43,41,47,45,23,50,32,37,9,32,41,34,45,19,33,21,37,23,41,26,47,46,59,20,40,63,31,33,41,58,43,62,50,41,17,13,9,20,5,1,42],"data":{"version":3,"file":"call-site-like.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/src/call-site-like.ts"],"names":[],"mappings":"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","sourcesContent":["import { findSourceMap, SourceMap } from 'module'\nimport { isAbsolute, relative, resolve } from 'path'\nimport { fileURLToPath } from 'url'\nimport {\n  Compiled,\n  isCompiledCallSiteLine,\n  parseCallSiteLine,\n} from './parse.js'\n\nconst methodRe = /^(.*?) \\[as (.*?)\\]$/\n\nexport interface CallSiteLikeJSON {\n  fileName?: string\n  lineNumber?: number\n  columnNumber?: number\n  evalOrigin?: CallSiteLikeJSON\n  typeName?: string\n  methodName?: string\n  functionName?: string\n  isEval?: true\n  isNative?: true\n  isToplevel?: true\n  isConstructor?: true\n  generated?: {\n    fileName?: string\n    lineNumber?: number\n    columnNumber?: number\n  }\n}\n\nexport interface GeneratedResult {\n  fileName?: string | null\n  lineNumber?: number | null\n  columnNumber?: number | null\n}\n\nconst isCallSite = (c: any): c is NodeJS.CallSite =>\n  !!c && typeof c === 'object' && c.constructor?.name === 'CallSite'\n\nexport class CallSiteLike {\n  static prepareStackTrace(e: Error, c: NodeJS.CallSite[]) {\n    return c.map(c => new CallSiteLike(e, c))\n  }\n\n  #fileName?: string | null\n  #cwd?: string\n  lineNumber: ReturnType<NodeJS.CallSite['getLineNumber']>\n  columnNumber: ReturnType<NodeJS.CallSite['getColumnNumber']>\n  this: ReturnType<NodeJS.CallSite['getThis']>\n  evalOrigin?: CallSiteLike\n  function: ReturnType<NodeJS.CallSite['getFunction']>\n  typeName: ReturnType<NodeJS.CallSite['getTypeName']>\n  methodName: ReturnType<NodeJS.CallSite['getMethodName']>\n  functionName: ReturnType<NodeJS.CallSite['getFunctionName']>\n  isEval: ReturnType<NodeJS.CallSite['isEval']>\n  isNative: ReturnType<NodeJS.CallSite['isNative']>\n  isToplevel: ReturnType<NodeJS.CallSite['isToplevel']>\n  isConstructor: ReturnType<NodeJS.CallSite['isConstructor']>\n  generated?: GeneratedResult\n  #sourceMap?: SourceMap\n\n  // normalize and relativize filename if cwd is set\n  get fileName() {\n    return this.#relativize(this.#fileName)\n  }\n\n  get absoluteFileName() {\n    if (!this.#fileName) return this.#fileName\n    else if (this.#fileName.startsWith('file://')) {\n      return fileURLToPath(this.#fileName)\n    } else {\n      return this.#fileName\n    }\n  }\n\n  get cwd(): string | undefined {\n    return this.#cwd\n  }\n\n  set cwd(cwd: string | undefined) {\n    if (cwd === undefined) {\n      if (this.generated) {\n        this.generated.fileName = this.#derelativize(\n          this.generated?.fileName,\n        )\n      }\n    }\n    this.#cwd = cwd?.replace(/\\\\/g, '/')\n    if (cwd !== undefined) {\n      if (this.generated) {\n        this.generated.fileName = this.#relativize(\n          this.generated?.fileName,\n        )\n      }\n    }\n    if (this.evalOrigin) this.evalOrigin.cwd = cwd\n  }\n\n  constructor(\n    e: Error | null,\n    c: NodeJS.CallSite | string | Compiled,\n  ) {\n    if (typeof c === 'string') {\n      c = parseCallSiteLine(c)\n    }\n\n    if (isCallSite(c)) {\n      const fileName = c.getFileName()\n      this.#fileName = typeof fileName === 'string' ? fileName : null\n      this.lineNumber = c.getLineNumber()\n      this.columnNumber = c.getColumnNumber()\n      this.this = c.getThis()\n      const evalOrigin = c.getEvalOrigin()\n      if (evalOrigin) {\n        this.evalOrigin = new CallSiteLike(e, evalOrigin)\n      }\n      this.function = c.getFunction()\n      this.typeName = c.getTypeName()\n      this.methodName = c.getMethodName()\n      this.functionName = c.getFunctionName()\n      this.isEval = c.isEval()\n      this.isNative = c.isNative()\n      this.isToplevel = c.isToplevel()\n      this.isConstructor = c.isConstructor()\n    } else if (isCompiledCallSiteLine(c)) {\n      // compiled object from stack line\n      this.isEval = !!c.isEval\n      this.isToplevel = false\n      if (c.evalOrigin) {\n        this.evalOrigin = new CallSiteLike(e, c.evalOrigin)\n      }\n\n      this.lineNumber =\n        c.lineNumber === undefined ? null : c.lineNumber\n      this.columnNumber =\n        c.columnNumber === undefined ? null : c.columnNumber\n      const fileName = c.fileName\n      this.#fileName = typeof fileName === 'string' ? fileName : null\n      const { generated } = c\n      if (generated) {\n        this.generated = generated\n        this.generated.fileName = this.#relativize(generated.fileName)\n      }\n      let fname = c.fname?.trim()\n      let method: null | string = null\n      this.isNative = !!c.isNative\n\n      if (fname) {\n        if (fname.startsWith('new ')) {\n          this.isConstructor = true\n          fname = fname.substring('new '.length).trim()\n        } else {\n          this.isConstructor = false\n        }\n        this.methodName = null\n        const methodMatch = fname.match(methodRe) as [\n          string,\n          string,\n          string,\n        ]\n        if (methodMatch) {\n          fname = methodMatch[1]\n          method = methodMatch[2]\n        }\n        const dots = fname.split('.')\n        const m = dots.pop()\n        if (m !== undefined) {\n          this.typeName = dots.join('.').trim() || null\n          this.methodName = method || m\n          if (this.methodName.match(/^get |set /)) {\n            this.methodName = this.methodName.substring(4)\n          }\n          this.functionName = m\n          // we know it's not undefined, but TS is afraid of pop()\n          /* c8 ignore start */\n        } else {\n          this.functionName = null\n          this.typeName = null\n        }\n        /* c8 ignore stop */\n      } else {\n        this.isConstructor = false\n        this.typeName = null\n        this.functionName = null\n        this.methodName = null\n      }\n    } else {\n      throw new Error('invalid call site information provided')\n    }\n\n    // This is a slight deviation from the CallSite API, but it's very useful\n    // to have a field that's the actual function with type and method name.\n    if (\n      this.typeName &&\n      this.functionName &&\n      !this.functionName.startsWith(this.typeName)\n    ) {\n      this.functionName = `${this.typeName}.${this.functionName}`\n    } else if (this.functionName === this.methodName) {\n      this.methodName = null\n    }\n\n    // We only do the sourcemap lookup if we're parsing from a CallSite\n    // If we get it from an Error stack line, then Node has already done\n    // the mapping for us, and when ts-node (and other in-place\n    // transpilers) create JavaScript, they use the same filename, leading\n    // to an incorrect double offset,.\n    if (\n      this.#fileName &&\n      isCallSite(c) &&\n      !this.#sourceMap &&\n      !this.#fileName.startsWith('node:')\n    ) {\n      // Passing an object that isn't an actual Error object to\n      // findSourceMap causes problems in node 16\n      /* c8 ignore start */\n      const sme = e && e instanceof Error ? e : undefined\n      /* c8 ignore stop */\n      this.#sourceMap = findSourceMap(this.#fileName, sme)\n      if (this.#sourceMap && typeof this.lineNumber === 'number') {\n        // SourceMap.findEntry doesn't actually return the line/column\n        // number, despite the property names, but rather the zero-indexed\n        // line/column start of a mapping range, and must be looked up\n        // using the zero-indexed line and column.\n        // To find the mapping, we look it up with the zero-indexed\n        // line/col, then figure out how far our line/col is from the\n        // mapping, and apply that same offset to the start of the origin\n        // in the mapping.\n        const payload = this.#sourceMap.findEntry(\n          // safety bounds around numbers here, impossible to hit\n          // if we're looking up actual call sites though.\n          /* c8 ignore start */\n          Math.max(0, this.lineNumber - 1),\n          Math.max(0, (this.columnNumber || 0) - 1),\n          /* c8 ignore stop */\n        )\n        if (payload) {\n          const offset: [number, number] = [\n            this.lineNumber - payload.generatedLine,\n            /* c8 ignore start */\n            (this.columnNumber || 1) - payload.generatedColumn,\n            /* c8 ignore stop */\n          ]\n          const originalLine = payload.originalLine + offset[0]\n          const originalColumn = payload.originalColumn + offset[1]\n          const genFilename = this.#relativize(this.#fileName)\n          this.generated = {\n            /* c8 ignore start */\n            fileName: this.#relativize(genFilename || null),\n            /* c8 ignore stop */\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n          }\n\n          this.#fileName = payload.originalSource\n          this.lineNumber = originalLine\n          this.columnNumber = originalColumn\n        }\n      }\n    }\n  }\n\n  #relativize(fileName?: string | null) {\n    let f = fileName\n    if (!f) return f\n    if (f.startsWith('node:')) return f\n    if (f.startsWith('file://')) f = fileURLToPath(f)\n    if (this.#cwd === undefined) return f\n    else f = f.replace(/\\\\/g, '/')\n    try {\n      const rel = relative(this.#cwd, f)\n      return rel.length < f.length ? rel : f\n    } catch {\n      return f\n    }\n  }\n  #derelativize(fileName?: string | null) {\n    let f = fileName\n    if (!f) return f\n    if (f.startsWith('node:')) return f\n    if (f.startsWith('file://')) f = fileURLToPath(f)\n    if (this.#cwd === undefined) return f\n    try {\n      return resolve(this.#cwd, f)\n    } catch {\n      return f\n    }\n  }\n\n  toString(jsStyle = false): string {\n    // in js style mode, use the origin source file if it is within\n    // our cwd. Otherwise, use the generated source location.\n    const useGen =\n      jsStyle &&\n      this.generated?.fileName &&\n      this.fileName &&\n      this.generated.fileName !== this.fileName &&\n      (isAbsolute(this.fileName) || this.fileName.startsWith('..'))\n    const { fileName, lineNumber, columnNumber, generated } =\n      useGen && this.generated ?\n        {\n          fileName: this.#derelativize(this.generated.fileName),\n          lineNumber: this.generated.lineNumber,\n          columnNumber: this.generated.columnNumber,\n          generated: undefined,\n        }\n      : jsStyle ?\n        {\n          fileName: this.#derelativize(this.fileName),\n          lineNumber: this.lineNumber,\n          columnNumber: this.columnNumber,\n          generated: undefined,\n        }\n      : this\n    const loc = { fileName, lineNumber, columnNumber, generated }\n    for (const l of [loc, loc.generated]) {\n      if (l?.fileName) {\n        l.fileName =\n          jsStyle ?\n            this.#derelativize(l.fileName)\n          : this.#relativize(l.fileName)\n      }\n    }\n\n    let fname = this.functionName || ''\n    let tn = ''\n    let tnGet = ''\n    let tnSet = ''\n    if (this.typeName) {\n      const mn = this.methodName || '<anonymous>'\n      tn = this.typeName + '.' + mn\n      tnGet = this.typeName + '.get ' + mn\n      tnSet = this.typeName + '.set ' + mn\n    }\n    if (!fname && tn) {\n      fname = tn\n    }\n    const mn = this.methodName\n    if (\n      fname &&\n      tn &&\n      mn &&\n      fname !== tn &&\n      fname !== tnGet &&\n      fname !== tnSet\n    ) {\n      fname += ` [as ${mn}]`\n    }\n    if (this.isConstructor && fname) {\n      fname = `new ${fname}`\n    }\n    let ev = ''\n    const nat = this.isNative ? 'native' : ''\n    let file = loc.fileName || ''\n    const hasLC = loc.lineNumber && loc.columnNumber\n    if (this.evalOrigin) {\n      ev = `eval at ${this.evalOrigin.toString(jsStyle)}`\n      if (hasLC) {\n        const f = loc.fileName || '<anonymous>'\n        let lr = `${f}:${loc.lineNumber}:${loc.columnNumber}`\n        if (loc.generated && loc.generated.fileName) {\n          const f = loc.generated.fileName\n          const { lineNumber: l, columnNumber: c } = loc.generated\n          lr = `${f}:${l}:${c} (${lr})`\n        }\n        ev += `, ${lr}`\n      }\n      // should always have an fname at this point\n      /* c8 ignore start */\n      ev = fname ? ` (${ev})` : ev\n      /* c8 ignore stop */\n      return `${fname}${ev}`\n    }\n\n    if (file || hasLC) {\n      if (hasLC) {\n        /* c8 ignore start */\n        file = file || '<anonymous>'\n        /* c8 ignore stop */\n        file += `:${loc.lineNumber}:${loc.columnNumber}`\n      }\n    } else if (nat) {\n      file = 'native'\n      // impossible in normal cases\n      /* c8 ignore start */\n    } else {\n      file = ''\n    }\n    /* c8 ignore stop */\n    let g = ''\n    if (loc.generated && loc.generated.fileName) {\n      const { fileName, lineNumber, columnNumber } = loc.generated\n      g = fileName\n      /* c8 ignore start */\n      if (!g) g = ''\n      /* c8 ignore stop */\n      if (g === loc.fileName) g = ''\n      if (g) {\n        if (\n          typeof lineNumber === 'number' &&\n          typeof columnNumber === 'number'\n        ) {\n          g += `:${lineNumber}:${columnNumber}`\n        }\n        if (ev || fname) {\n          g = ` (${g})`\n        }\n      }\n    }\n    if (file && (ev || fname || g)) {\n      file = ` (${file})`\n    }\n    const pre = jsStyle ? '    at ' : ''\n    return `${pre}${fname}${ev}${g}${file}`\n  }\n\n  toJSON(): CallSiteLikeJSON {\n    const {\n      fileName,\n      lineNumber,\n      columnNumber,\n      evalOrigin,\n      typeName,\n      methodName,\n      functionName,\n      isEval,\n      isNative,\n      isToplevel,\n      isConstructor,\n      generated,\n    } = this\n    const json: CallSiteLikeJSON = {}\n    if (fileName !== null) json.fileName = fileName\n    if (lineNumber || lineNumber === 0) json.lineNumber = lineNumber\n    if (columnNumber || columnNumber === 0)\n      json.columnNumber = columnNumber\n    if (evalOrigin) json.evalOrigin = evalOrigin.toJSON()\n\n    if (typeName !== null) {\n      json.typeName = typeName\n    }\n\n    if (methodName !== null) json.methodName = methodName\n    if (functionName !== null) json.functionName = functionName\n    if (isEval) json.isEval = isEval\n    if (isNative) json.isNative = isNative\n    if (isToplevel) json.isToplevel = isToplevel\n    if (isConstructor) json.isConstructor = isConstructor\n    if (generated && generated.fileName) {\n      const f = this.#relativize(generated.fileName)\n      if (\n        f &&\n        typeof f === 'string' &&\n        (f !== json.fileName || f === '<anonymous>')\n      ) {\n        const gen: Record<string, string | number> = {}\n        gen.fileName = f\n        if (generated.lineNumber)\n          gen.lineNumber = generated.lineNumber\n        if (generated.columnNumber)\n          gen.columnNumber = generated.columnNumber\n        if (Object.keys(gen).length > 0) {\n          json.generated = gen\n        }\n      }\n    }\n    return json\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/require-resolve.js":{"lineLengths":[43,39,12,51,38,9,26,5,11,20,5,2,43],"data":{"version":3,"file":"require-resolve.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/src/require-resolve.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAA;AACtC,YAAY;AACZ,MAAM,EAAE,OAAO,EAAE,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAClD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,CAAS,EAAE,EAAE;IAC1C,IAAI,CAAC;QACH,OAAO,OAAO,CAAC,CAAC,CAAC,CAAA;IACnB,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,IAAI,CAAA;IACb,CAAC;AACH,CAAC,CAAA","sourcesContent":["// esm style, create a require and use that\nimport { createRequire } from 'module'\n//@ts-ignore\nconst { resolve } = createRequire(import.meta.url)\nexport const requireResolve = (s: string) => {\n  try {\n    return resolve(s)\n  } catch {\n    return null\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-all-conditions.js":{"lineLengths":[3,75,38,2,70,24,2,68,76,77,70,23,2,78,19,3,53,27,45,41,29,30,62,33,19,25,32,37,77,68,17,35,13,16,46,66,52,69,142,13,60,9,40,5,52,2,44,42,18,30,30,31,44,22,60,9,40,5,26,48,67,74,9,50,56,28,18,12,31,5,36,2,46],"data":{"version":3,"file":"get-all-conditions.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/get-all-conditions.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Exported as `'resolve-import/get-all-conditions'`\n * @module\n */\nimport { ConditionalValue, Exports, Imports } from './index.js'\n\n/**\n * Given an `exports` or `imports` value from a package, return the list of\n * conditions that it is sensitive to.\n *\n * `default` is not included in the returned list, since that's always\n * effectively relevant.\n *\n * Note that a condition being returned by this method does not mean\n * that the export/import object actually has a *target* for that condition,\n * since it may map to `null`, be nested under another condition, etc. But it\n * does potentially have some kind of conditional behavior for all the\n * conditions returned.\n *\n * Ordering of returned conditions is arbitrary, and does not imply precedence\n * or object shape.\n */\nexport const getAllConditions = (\n  importsExports: Imports | Exports\n): string[] => {\n  if (\n    !!importsExports &&\n    typeof importsExports === 'object' &&\n    !Array.isArray(importsExports)\n  ) {\n    let subs: string | undefined = undefined\n    const conditions: string[] = []\n    for (const [k, v] of Object.entries(importsExports)) {\n      /* c8 ignore start */\n      if (!k) continue\n      /* c8 ignore stop */\n      if (subs === undefined) {\n        if (!k.startsWith('#') && k !== '.' && !k.startsWith('./')) {\n          return getAllConditionsFromCond(\n            importsExports as ConditionalValue\n          )\n        }\n        subs = k.charAt(0)\n      }\n      if (\n        // imports have to be #<something>\n        (subs === '#' && (k === '#' || !k.startsWith('#'))) ||\n        // exports can be ./<something> or .\n        (subs === '.' && k !== '.' && !k.startsWith('./'))\n      ) {\n        throw new Error(\n          `invalid ${\n            subs === '.' ? 'exports' : 'imports'\n          } object, all keys ` + `must start with ${subs}. Found ${k}.`\n        )\n      }\n      conditions.push(...getAllConditionsFromCond(v))\n    }\n    return [...new Set(conditions)]\n  }\n\n  return getAllConditionsFromCond(importsExports as ConditionalValue)\n}\n\nconst getAllConditionsFromCond = (cond?: ConditionalValue): string[] => {\n  if (!cond || typeof cond === 'string') return []\n  if (Array.isArray(cond)) {\n    const conditions: string[] = []\n    for (const e of cond) {\n      if (!e || typeof e === 'string') break\n      conditions.push(...getAllConditionsFromCond(e))\n    }\n    return [...new Set(conditions)]\n  }\n  const conditions: string[] = []\n  for (const [k, v] of Object.entries(cond)) {\n    if (k.startsWith('#') || k === '.' || k.startsWith('./')) {\n      throw new Error(`Expected valid import condition, got: ${k}`)\n    }\n    // anything after 'default' isn't relevant\n    conditions.push(...getAllConditionsFromCond(v))\n    if (k === 'default') break\n    else conditions.push(k)\n  }\n  return [...new Set(conditions)]\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-all-conditional-values.js":{"lineLengths":[3,60,10,3,76,3,79,76,37,2,79,71,24,2,15,2,10,4,36,47,4,6,2,77,79,13,2,78,54,2,69,28,3,60,55,31,27,2,54],"data":{"version":3,"file":"get-all-conditional-values.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/get-all-conditional-values.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,EAAE,wBAAwB,EAAE,MAAM,kCAAkC,CAAA;AAG3E;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,cAAiC,EACvB,EAAE,CAAC;IACb,GAAG,IAAI,GAAG,CACR,wBAAwB,CAAC,cAAc,CAAC;SACrC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACtB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAa,CAChC;CACF,CAAA","sourcesContent":["/**\n * Exported as `'resolve-import/get-all-conditional-values'`\n * @module\n */\nimport { getConditionalValuesList } from './get-conditional-values-list.js'\nimport { Exports, Imports } from './index.js'\n\n/**\n * Given an `exports` or `imports` value from a package, return the list of all\n * possible conditional values that it might potentially resolve to, for any\n * possible set of import conditions.\n *\n * Filters out cases that are unreachable, such as conditions that appear after\n * a `default` value, or after a set of conditions that would have been\n * satisfied previously.\n *\n * For example:\n *\n * ```json\n * {\n *   \"import\": { \"node\": \"./x.js\" },\n *   \"node\": { \"import\": { \"blah\": \"./y.js\" } }\n * }\n * ```\n *\n * Will return `['./x.js']`, omitting the unreachable `'./y.js'`, because the\n * conditions ['import','node','blah'] would have been satisfied by the earlier\n * condition.\n *\n * Note that this does *not* mean that the target actually can be imported, as\n * it may not exist, be an incorrect module type, etc.\n *\n * Star values are not expanded. For that, use `resolveAllExports` or\n * `resolveAllLocalImports`.\n */\nexport const getAllConditionalValues = (\n  importsExports: Imports | Exports\n): string[] => [\n  ...new Set(\n    getConditionalValuesList(importsExports)\n      .map(([_, __, c]) => c)\n      .filter(c => !!c) as string[]\n  ),\n]\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-unique-condition-sets.js":{"lineLengths":[76,3,75,73,12,2,15,2,10,4,69,45,33,44,4,6,2,16,8,4,24,16,17,17,28,4,6,2,76,39,2,71,3,59,58,21,41,71,42,9,5,19,2,41,32,21,26,24,25,5,16,2,53],"data":{"version":3,"file":"get-unique-condition-sets.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/get-unique-condition-sets.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,MAAM,kCAAkC,CAAA;AAG3E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,cAAiC,EACrB,EAAE;IACd,MAAM,IAAI,GAAG,wBAAwB,CAAC,cAAc,CAAC,CAAA;IACrD,IAAI,OAAO,GAAe,EAAE,CAAA;IAC5B,KAAK,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,IAAI,EAAE;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE;YAC5D,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAA;SAC9B;KACF;IACD,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA;AAED,MAAM,iBAAiB,GAAG,CAAC,GAAa,EAAE,GAAgB,EAAE,EAAE;IAC5D,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI;QAAE,OAAO,KAAK,CAAA;IACzC,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;KAC9B;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["import { getConditionalValuesList } from './get-conditional-values-list.js'\nimport { Exports, Imports } from './index.js'\n\n/**\n * Get the minimal set of conditions that can potentially produce different\n * resolution values for a given imports or exports object from a package\n * manifest.\n *\n * For example:\n *\n * ```json\n * {\n *   \".\": [{\"import\":[{\"types\":\"x.d.ts\"},\"x.mjs\"], \"require\":\"y.js\"}]\n *   \"./a\": {\"browser\":{\"require\":\"./a.js\"}},\n *   \"./b\": {\"browser\":\"./b.js\"},\n *   \"./c\": {\"require\":{\"browser\":\"./c.js\"}}\n * }\n * ```\n *\n * would return:\n * ```js\n * [\n *   ['import','types'],\n *   ['import'],\n *   ['require'],\n *   ['browser'],\n *   ['browser', 'require'],\n * ]\n * ```\n *\n * With the `['require', 'browser']` condition set omitted, as it is already\n * covered by `['browser', 'require']`.\n *\n * Condition ordering is arbitrary and not guaranteed to be consistent.\n */\nexport const getUniqueConditionSets = (\n  importsExports: Imports | Exports\n): string[][] => {\n  const list = getConditionalValuesList(importsExports)\n  let results: string[][] = []\n  for (const [_, conditions] of list) {\n    if (!results.some(arr => arrayIsEquivalent(arr, conditions))) {\n      results.push([...conditions])\n    }\n  }\n  return results\n}\n\nconst arrayIsEquivalent = (arr: string[], sup: Set<string>) => {\n  if (arr.length !== sup.size) return false\n  for (const c of arr) {\n    if (!sup.has(c)) return false\n  }\n  return true\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-all-exports.js":{"lineLengths":[3,53,10,3,40,36,45,66,40,52,42,38,3,79,75,2,77,24,2,73,79,68,3,75,43,34,38,15,65,5,23,28,53,16,72,48,29,13,71,9,17,17,21,28,52,61,48,36,36,53,70,73,13,9,14,62,9,5,19,2,47],"data":{"version":3,"file":"resolve-all-exports.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-all-exports.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AACnC,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAA;AAC5C,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAA;AAEjE,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAA;AACnD,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AAErC;;;;;;;;;;GAUG;AACH,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EACpC,eAA6B,EAC7B,UAA6B,EAAE,EACQ,EAAE;IACzC,MAAM,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,CAAA;IACtC,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;IAE7B,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,CAAA;IACjC,IAAI,CAAC,GAAG,EAAE;QACR,MAAM,cAAc,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAA;KACzD;IAED,MAAM,OAAO,GAAiC,EAAE,CAAA;IAEhD,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAA;IACvB,KAAK,MAAM,GAAG,IAAI,mBAAmB,CAAC,OAAO,CAAC,EAAE;QAC9C,IAAI,GAAG,CAAA;QAEP,gEAAgE;QAChE,wCAAwC;QACxC,qBAAqB;QACrB,IAAI;YACF,GAAG,GAAG,aAAa,CAAC,GAAG,EAAE,OAAkB,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;SACtE;QAAC,MAAM,GAAE;QACV,IAAI,CAAC,GAAG;YAAE,SAAQ;QAClB,oBAAoB;QAEpB,4CAA4C;QAC5C,qDAAqD;QACrD,wCAAwC;QACxC,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC3B,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAC3B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1C,KAAK,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,MAAM,QAAQ,CACxC,IAAwB,EACxB,KAAK,CACN,EAAE;gBACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,CAAA;aACzD;SACF;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;SAClD;KACF;IAED,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA","sourcesContent":["/**\n * Exported as `'resolve-import/resolve-all-exports'`\n * @module\n */\nimport { dirname, resolve } from 'path'\nimport { pathToFileURL } from 'url'\nimport { invalidPackage } from './errors.js'\nimport { getNamedExportsList } from './get-named-exports-list.js'\nimport { Exports, ResolveImportOpts } from './index.js'\nimport { readPkg } from './read-pkg.js'\nimport { resolveExport } from './resolve-export.js'\nimport { starGlob } from './star-glob.js'\nimport { toPath } from './to-path.js'\n\n/**\n * Given a path or file URL to a package.json file, return an object where each\n * possible export path is mapped to the file URL that it would resolve to.\n *\n * Invalid exports are omitted. No errors are raised as long as the file is a\n * valid `package.json`.\n *\n * Note: in cases like `\"./x/*\": \"./file.js\"`, where the list of possible\n * import paths is unbounded, the returned object will contain `\"./x/*\"` as the\n * key, since there's no way to expand that to every possible match.\n */\nexport const resolveAllExports = async (\n  packageJsonPath: string | URL,\n  options: ResolveImportOpts = {}\n): Promise<Record<string, string | URL>> => {\n  const pjPath = toPath(packageJsonPath)\n  const pjDir = dirname(pjPath)\n\n  const pkg = await readPkg(pjPath)\n  if (!pkg) {\n    throw invalidPackage(packageJsonPath, resolveAllExports)\n  }\n\n  const results: Record<string, string | URL> = {}\n\n  const { exports } = pkg\n  for (const sub of getNamedExportsList(exports)) {\n    let res\n\n    // this can't shouldn't be able to actually throw, because we're\n    // pulling the list from the set itself.\n    /* c8 ignore start */\n    try {\n      res = resolveExport(sub, exports as Exports, pjPath, pjPath, options)\n    } catch {}\n    if (!res) continue\n    /* c8 ignore stop */\n\n    // if it contains a *, then we have to glob,\n    // in package.json exports * is actually **, but only\n    // relevant if there is exactly ONE star\n    const sres = res.split('*')\n    const ssub = sub.split('*')\n    if (sres.length === 2 && ssub.length === 2) {\n      for (const [rep, target] of await starGlob(\n        sres as [string, string],\n        pjDir\n      )) {\n        results[ssub[0] + rep + ssub[1]] = pathToFileURL(target)\n      }\n    } else {\n      results[sub] = pathToFileURL(resolve(pjDir, res))\n    }\n  }\n\n  return results\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-all-local-imports.js":{"lineLengths":[3,59,10,3,40,36,45,46,55,40,61,73,52,42,45,38,3,79,77,6,2,49,3,80,43,34,45,38,15,70,5,23,68,50,61,69,54,64,64,30,43,29,19,21,28,36,42,63,20,44,42,73,46,17,66,13,21,21,9,80,43,24,73,73,13,21,9,44,63,56,69,19,21,50,38,21,9,55,58,40,25,43,69,35,82,28,80,79,37,21,63,17,25,36,13,9,5,19,2,3,52,2,26,3,47,23,28,48,23,51,54,36,33,5,19,2,53],"data":{"version":3,"file":"resolve-all-local-imports.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-all-local-imports.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Exported as `'resolve-import/resolve-all-local-imports'`\n * @module\n */\nimport { dirname, resolve } from 'path'\nimport { pathToFileURL } from 'url'\nimport { invalidPackage } from './errors.js'\nimport { fileExists } from './file-exists.js'\nimport { findDepPackage } from './find-dep-package.js'\nimport { ResolveImportOpts } from './index.js'\nimport { Pkg, readPkg } from './read-pkg.js'\nimport { resolveAllExports } from './resolve-all-exports.js'\nimport { resolveConditionalValue } from './resolve-conditional-value.js'\nimport { resolveImport } from './resolve-import.js'\nimport { starGlob } from './star-glob.js'\nimport { toFileURL } from './to-file-url.js'\nimport { toPath } from './to-path.js'\n\n/**\n * Given a path or file URL to a package.json file, return an object where each\n * possible local import path is mapped to the file URL that it would resolve\n * to.\n *\n * Invalid and non-resolving imports are omitted.\n */\nexport const resolveAllLocalImports = async (\n  packageJsonPath: string | URL,\n  options: ResolveImportOpts = {}\n): Promise<Record<string, string | URL>> => {\n  const pjPath = toPath(packageJsonPath)\n  const pjDir = dirname(pjPath)\n  const pjURL = toFileURL(packageJsonPath)\n\n  const pkg = await readPkg(pjPath)\n  if (!pkg) {\n    throw invalidPackage(packageJsonPath, resolveAllLocalImports)\n  }\n  const results: Record<string, URL | string> = {}\n\n  for (const [sub, target] of getNamedImportsList(pkg, options)) {\n    // if the import is local, then look it up\n    // if it's another package, then look up that package\n    // if it's another package with a *, then look up all exports\n    // of that package, and filter by the matches.\n    const parts = target.match(/^(@[^\\/]+\\/[^\\/]+|[^\\/]+)/)\n    // make internal package named modules consistently `./`\n    const name = pkg.name\n\n    // non-matches already filtered out\n    /* c8 ignore start */\n    if (!parts) continue\n    /* c8 ignore stop */\n\n    const ssub = sub.split('*')\n    const starget = target.split('*') as [string, string]\n    const star = ssub.length === 2 && starget.length === 2\n    if (!star) {\n      // simple case, no * replacement\n      // if not found, just omit it.\n      // do a full resolve, because the target can be anything like\n      // './foo/bar' or 'dep/blah', etc.\n      try {\n        results[sub] = await resolveImport(target, pjURL)\n      } catch {}\n      continue\n    }\n\n    // has a star, have to glob if it's localPath, or look up exports if not\n    const localPath = parts[1] === '.'\n    if (localPath) {\n      for (const [rep, target] of await starGlob(starget, pjDir)) {\n        results[ssub[0] + rep + ssub[1]] = pathToFileURL(target)\n      }\n      continue\n    }\n\n    const localName = parts[1] === name\n    const dep = !localPath && !localName ? parts[1] : null\n\n    // if we can't find the package, it's not valid.\n    const ppath = dep ? await findDepPackage(dep, pjDir) : pjDir\n    if (!ppath) continue\n\n    const pj = resolve(ppath, 'package.json')\n    if (!(await fileExists(pj))) {\n      continue\n    }\n\n    const allExports = await resolveAllExports(pj)\n    for (const [k, v] of Object.entries(allExports)) {\n      if (k === '.' || k === './') continue\n      const i = dep + k.substring(1)\n      if (i.startsWith(starget[0]) && i.endsWith(starget[1])) {\n        const s =\n          ssub[0] +\n          i.substring(starget[0].length, i.length - starget[1].length) +\n          ssub[1]\n        // should be impossible to throw, because we're pulling the list\n        // from the package itself, and it gets resolved at that point.\n        /* c8 ignore start */\n        try {\n          results[s] = await resolveImport(v, pjURL)\n        } catch {}\n        /* c8 ignore stop */\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Get the condition-resolved targets of all imports\n *\n * Stars are not expanded.\n */\nconst getNamedImportsList = (\n  pkg: Pkg,\n  options: ResolveImportOpts\n): [string, string][] => {\n  const results: [string, string][] = []\n  const { imports } = pkg\n  if (!imports || typeof imports !== 'object') return results\n  for (const [k, v] of Object.entries(imports)) {\n    const r = resolveConditionalValue(v, options)\n    if (r && !r.startsWith('#')) results.push([k, r])\n  }\n  return results\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-conditional-value.js":{"lineLengths":[3,60,60,3,58,56,48,19,29,30,58,18,25,9,20,5,47,56,55,9,5,16,2,53],"data":{"version":3,"file":"resolve-conditional-value.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-conditional-value.ts"],"names":[],"mappings":"AAMA;;;GAGG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,GAAqB,EACrB,OAA0B,EACX,EAAE;IACjB,MAAM,EAAE,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,GAAG,OAAO,CAAA;IACnD,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ;QAAE,OAAO,GAAG,CAAA;IACvD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;YACnB,MAAM,CAAC,GAAG,uBAAuB,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;YAC7C,IAAI,CAAC;gBAAE,OAAO,CAAC,CAAA;SAChB;QACD,OAAO,IAAI,CAAA;KACZ;IACD,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACxC,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;YAC7C,OAAO,uBAAuB,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;SAC3C;KACF;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["/**\n * Exported as `'resolve-import/resolve-conditional-value'`\n * @module\n */\nimport { ConditionalValue, ResolveImportOpts } from './index.js'\n\n/**\n * find the first match for string, import, node, or default\n * at this point, we know we're on the right subpath already\n */\nexport const resolveConditionalValue = (\n  exp: ConditionalValue,\n  options: ResolveImportOpts\n): string | null => {\n  const { conditions = ['import', 'node'] } = options\n  if (exp === null || typeof exp === 'string') return exp\n  if (Array.isArray(exp)) {\n    for (const e of exp) {\n      const r = resolveConditionalValue(e, options)\n      if (r) return r\n    }\n    return null\n  }\n  for (const [k, v] of Object.entries(exp)) {\n    if (conditions.includes(k) || k === 'default') {\n      return resolveConditionalValue(v, options)\n    }\n  }\n  return null\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-import.js":{"lineLengths":[3,48,10,3,39,35,62,51,78,46,61,74,67,45,38,76,77,79,41,43,24,66,2,3,64,23,2,63,40,2,71,70,10,3,36,31,5,3,69,11,3,41,50,63,27,5,34,39,65,9,47,67,5,24,55,20,33,18,65,9,35,37,57,9,63,5,26,39,57,9,50,5,33,27,5,63,76,88,18,19,69,6,14,59,5,10,63,5,2,42],"data":{"version":3,"file":"resolve-import.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-import.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Exported as `'resolve-import/resolve-import'`\n * @module\n */\nimport { realpath } from 'fs/promises'\nimport { isBuiltin } from 'module'\nimport { basename, dirname, isAbsolute, resolve } from 'path'\nimport { fileURLToPath, pathToFileURL } from 'url'\nimport {\n  moduleNotFound,\n  relativeImportWithoutParentURL,\n} from './errors.js'\nimport { fileExists } from './file-exists.js'\nimport { ResolveImportOpts } from './index.js'\nimport { isRelativeRequire } from './is-relative-require.js'\nimport { resolveDependencyExports } from './resolve-dependency-export.js'\nimport { resolvePackageImport } from './resolve-package-import.js'\nimport { toFileURL } from './to-file-url.js'\nimport { toPath } from './to-path.js'\n\n// It's pretty common to resolve against, eg, cwd + '/x', since we might not\n// know the actual file that it's being loaded from, and want to resolve what\n// a dep WOULD be from a given path. This allows us to realpath that directory,\n// without requiring that the file exist.\nconst realpathParentDir = async (path: string | URL) => {\n  path = toPath(path)\n  return resolve(await realpath(dirname(path)), basename(path))\n}\n\n/**\n * Resolve an import URL or string as if it were coming from the\n * module at parentURL.\n *\n * Returns a string for node builtin modules, and a file:// URL\n * object for anything resolved on disk.\n *\n * If the resolution is impossible, then an error will be raised, which\n * closely matches the errors raised by Node when failing for the same\n * reason.\n */\nexport const resolveImport = async (\n  /** the thing being imported */\n  url: string | URL,\n  /**\n   * the place the import() would be coming from. Required for relative\n   * imports.\n   */\n  parentURL: string | URL | undefined = undefined,\n  options: ResolveImportOpts = {}\n): Promise<URL | string> => {\n  // already resolved, just check that it exists\n  if (typeof url === 'string' && url.startsWith('file://')) {\n    url = new URL(url)\n  }\n  if (typeof url === 'object') {\n    if (!(await fileExists(url))) {\n      throw moduleNotFound(String(url), String(parentURL))\n    }\n    const rp = await realpath(toPath(url))\n    return rp !== fileURLToPath(url) ? pathToFileURL(rp) : url\n  }\n\n  const pu = parentURL\n    ? toFileURL(await realpathParentDir(parentURL))\n    : undefined\n\n  if (isRelativeRequire(url)) {\n    if (!pu) {\n      throw relativeImportWithoutParentURL(url, parentURL)\n    }\n    const u = new URL(url, pu)\n    if (!(await fileExists(u))) {\n      throw moduleNotFound(url, String(parentURL))\n    }\n    return pathToFileURL(await realpath(new URL(url, pu)))\n  }\n\n  if (isAbsolute(url)) {\n    if (!(await fileExists(url))) {\n      throw moduleNotFound(url, String(parentURL))\n    }\n    return pathToFileURL(await realpath(url))\n  }\n\n  if (isBuiltin(String(url))) {\n    return String(url)\n  }\n\n  // ok, we have to resolve it. some kind of bare dep import,\n  // either a package name resolving to module or main, or a named export.\n  const parentPath: string = toPath(\n    parentURL || resolve(await realpath(process.cwd()), 'x')\n  )\n  const opts = {\n    ...options,\n    originalParent: String(options.originalParent || parentPath),\n  }\n  if (url) {\n    return resolvePackageImport(url, parentPath, opts)\n  } else {\n    return resolveDependencyExports(url, parentPath, opts)\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/is-windows.js":{"lineLengths":[96,38],"data":{"version":3,"file":"is-windows.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/is-windows.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,SAAS,GACpB,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAA","sourcesContent":["export const isWindows =\n  typeof process === 'object' && process && process.platform === 'win32'\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/dist/esm/parse.js":{"lineLengths":[66,53,40,40,40,100,83,60,39,46,45,56,40,55,59,58,52,56,24,40,33,48,100,41,52,54,52,72,36,69,34,2,66,72,44,39,48,46,49,50,28,23,5,81,69,53,17,32,31,34,36,9,14,58,21,32,35,38,40,13,9,5,13,2,38,39,36,41,52,55,5,13,16,28,31,33,31,10,5,32,44,13,78,53,16,36,25,10,5,45,14,53,16,37,26,25,23,31,10,5,74,72,24,77,19,31,2,57,29,54,59,29,5,21,55,27,5,35,16,27,30,31,31,10,5,10,51,5,2,77,33,46,14,45,19,59,50,5,24,22,42,10,46,67,5,73,32,44,44,45,23,30,32,35,37,35,15,9,5,71,48,34,25,49,16,51,24,37,69,66,25,19,34,63,35,47,21,18,24,15,19,64,18,27,6,13,2,33],"data":{"version":3,"file":"parse.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/stack/src/parse.ts"],"names":[],"mappings":"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","sourcesContent":["// Take a line from a stack trace and pull out its relevant parts.\n\nconst isCompiled = Symbol('compiled call site line')\n\nexport interface LineRef {\n  fileName: string\n  lineNumber: number\n  columnNumber: number\n  [isCompiled]: true\n}\n\nexport interface NativeLineRef {\n  isNative: true\n  [isCompiled]: true\n}\n\nexport const isLineRef = (lr?: Compiled | undefined): lr is LineRef =>\n  !!lr &&\n  typeof (lr as LineRef).lineNumber === 'number' &&\n  typeof (lr as LineRef).columnNumber === 'number'\n\nexport interface Compiled {\n  fname?: string\n  fileName?: string\n  lineNumber?: number\n  columnNumber?: number\n  generated?: LineRef\n  evalOrigin?: Compiled\n  isEval?: boolean\n  isNative?: boolean\n  [isCompiled]: true\n}\n\nexport const isCompiledCallSiteLine = (c: any) =>\n  !!c && typeof c === 'object' && c[isCompiled] === true\n\nconst lineRef =\n  '(?:((?:node:|file:)?[^:]+):([1-9][0-9]*):([1-9][0-9]*)|(native))'\nconst lineRefLoose = '(?:(.+):([1-9][0-9]*):([1-9][0-9]*))'\nconst bareLineRef = `^(?:${lineRef})$`\nconst bareLineRefRe = new RegExp(bareLineRef)\nconst bareLineRefLoose = `^${lineRefLoose}$`\nconst bareLineRefLooseRe = new RegExp(bareLineRefLoose)\nconst parenLineRef = `\\\\(${lineRef}\\\\)`\nconst parenLineRefExec = new RegExp(parenLineRef, 'g')\nconst parenLineRefLoose = `([^(]+) \\\\(${lineRefLoose}\\\\)$`\nconst parenLineRefLooseRe = new RegExp(parenLineRefLoose)\nconst trailingLineRefs = `((?: ${parenLineRef})+)$`\nconst trailingLineRefsRe = new RegExp(trailingLineRefs)\n// $1 - evalOrigin fname\n// $2 - evalOrigin linerefs (origin src)\n// $3 - lineref (generated if $4)\n// $4 - src lineref ($3 is generated if present)\nconst evalOrigin = `eval at(.*?)((?: ${parenLineRef})+)(?:, (${lineRef}(?: \\\\((${lineRef})\\\\))?))?`\nconst bareEvalOrigin = `^${evalOrigin}$`\nconst bareEvalOriginRe = new RegExp(bareEvalOrigin)\nconst withEvalOrigin = `(.*?) \\\\((${evalOrigin})\\\\)$`\nconst withEvalOriginRe = new RegExp(withEvalOrigin)\n\n// this is the first-phase parse, which might be confused by a line like\n// Cls.[foo (parens) bar] (file:1:2)\n// If we get a filename containing (, then chop off the bit from that\n// point and put it back on fname.\n//\n// This heuristic assumes that parens are more likely to appear in\n// method names than filenames, which has been a safe assumption so far.\nexport const parseCallSiteLine = (line: string): Compiled => {\n  const c = parseCallSiteLine_(line)\n  const paren = c.fileName?.lastIndexOf(' (')\n  if (c.fileName && paren && paren !== -1) {\n    const s = c.fileName.substring(0, paren)\n    const f = c.fileName.substring(paren + 2)\n    c.fname += ` (${s}`\n    c.fileName = f\n  }\n  // if we ended up with an fname and nothing else, try a more liberal approach\n  if (c.fname && !c.fileName && !c.columnNumber && !c.lineNumber) {\n    const bl = c.fname.match(bareLineRefLooseRe) as\n      | null\n      | [string, string, string, string]\n    if (bl) {\n      c.fname = undefined\n      c.fileName = bl[1]\n      c.lineNumber = +bl[2]\n      c.columnNumber = +bl[3]\n    } else {\n      const pl = c.fname.match(parenLineRefLooseRe) as\n        | null\n        | [string, string, string, string, string]\n      if (pl) {\n        c.fname = pl[1]\n        c.fileName = pl[2]\n        c.lineNumber = +pl[3]\n        c.columnNumber = +pl[4]\n      }\n    }\n  }\n  return c\n}\n\nconst parseCallSiteLine_ = (line: string): Compiled => {\n  line = line.replace(/^\\s+at /, '')\n\n  // just a lineref, nothing else:\n  const bm = line.match(bareLineRefRe) as\n    | null\n    | [string, string, string, string, string]\n  if (bm && bm[4] && !bm[1] && !bm[2] && !bm[3]) {\n    return { fileName: bm[4], [isCompiled]: true }\n  }\n  if (bm) {\n    return {\n      fileName: bm[1],\n      lineNumber: +bm[2],\n      columnNumber: +bm[3],\n      [isCompiled]: true,\n    }\n  }\n\n  // an eval origin subsection\n  const em = line.match(bareEvalOriginRe) as\n    | null\n    | [string, string, string]\n  if (em) {\n    // we ignore the part that comes after the `,` because that is part of\n    // the parent's call site, not the evalOrigin\n    return {\n      ...parseLineRefs(em[2]),\n      fname: em[1],\n    }\n  }\n\n  const wem = line.match(withEvalOriginRe) as\n    | null\n    | [\n        string,\n        string,\n        string,\n        string,\n        string,\n        string,\n        string,\n        string,\n        string,\n        string,\n      ]\n  if (wem) {\n    const evalOrigin = parseCallSiteLine(wem[2])\n    return {\n      ...parseLineRefs(wem[9]),\n      fname: wem[1],\n      isEval: true,\n      evalOrigin,\n      [isCompiled]: true,\n    }\n  }\n\n  // now we know it is either a lineref with fname, or multiple linerefs\n  // if we have two linerefs, that meaks it's a toString of a callsite\n  // with a sourcemap.\n  // if it's one, it might be either a fname, or a fname-less callsite with\n  // a sourcemap.\n  return parseLineRefs(line)\n}\n\nconst compileLineRefParse = (\n  file: string | undefined,\n  line: string | undefined,\n  col: string | undefined,\n  other: string | undefined,\n): LineRef | NativeLineRef | Compiled => {\n  if (other === 'native') {\n    return { isNative: true, [isCompiled]: true }\n    // no other types defined, but could be eventually?\n    /* c8 ignore start */\n  } else if (other) {\n    return { fileName: other, [isCompiled]: true }\n    /* c8 igore stop */\n  } else if (file && line && col) {\n    return {\n      fileName: file,\n      lineNumber: +line,\n      columnNumber: +col,\n      [isCompiled]: true,\n    }\n  } else {\n    return { fname: file, [isCompiled]: true }\n  }\n}\n\n// parse a set of trailing line refs or a bare lineref and 1 or more trailing\nconst parseLineRefs = (line: string): Compiled => {\n  const tm = line.match(trailingLineRefsRe)\n  if (!tm) {\n    const bm = line.match(bareLineRefRe)\n    return bm ?\n        compileLineRefParse(bm[1], bm[2], bm[3], bm[4])\n      : { fname: line, [isCompiled]: true }\n  }\n\n  const lineRefs: Compiled[] = []\n  const tms = tm[0]\n  let pre = line.substring(0, tm.index)\n  let m: RegExpExecArray | null\n  while ((m = parenLineRefExec.exec(tms))) {\n    lineRefs.push(compileLineRefParse(m[1], m[2], m[3], m[4]))\n  }\n  // figure out if the bit before the paren linerefs was also a lineref\n  if (lineRefs.length === 1) {\n    const bm = pre.match(bareLineRefRe)\n    if (bm && bm[1] && bm[2] && bm[3]) {\n      pre = pre.substring(0, bm.index)\n      // pre = ''\n      lineRefs.unshift({\n        fileName: bm[1],\n        lineNumber: +bm[2],\n        columnNumber: +bm[3],\n        [isCompiled]: true,\n      })\n    }\n  }\n  // at this point the LAST lineref is the one we care about, and any\n  // that preceed it are the generated result.\n  const lastLR = lineRefs.pop()\n  /* c8 ignore start */\n  // very impossible, but TS is afraid of pop()\n  if (!lastLR) return { fname: line, [isCompiled]: true }\n  /* c8 ignore stop */\n  const generated = lineRefs.pop()\n  // shouldn't be any left, but possible if you had a function name\n  // that looked like a line ref, though V8 puts [] around those\n  /* c8 ignore start */\n  pre += lineRefs\n    .map(lr =>\n      isLineRef(lr) ?\n        ` (${lr.fileName}:${lr.lineNumber}:${lr.columnNumber})`\n      : lr.isNative ? ` (native)`\n      : lr.fileName ? ` (${lr.fileName})`\n      : '',\n    )\n    .join('')\n  /* c8 ignore stop */\n\n  const r = {\n    fname: pre,\n    generated: isLineRef(generated) ? generated : undefined,\n    ...lastLR,\n    [isCompiled]: true,\n  } as Compiled\n  return r\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-conditional-values-list.js":{"lineLengths":[3,79,76,69,66,2,79,78,3,61,27,45,41,29,30,62,33,19,25,32,37,77,98,17,35,13,16,46,66,52,69,142,13,88,9,26,5,82,2,37,33,21,31,24,25,5,16,2,65,78,94,15,25,27,20,24,52,38,60,41,20,5,30,31,60,51,44,22,9,20,5,29,48,67,74,9,58,42,30,57,20,57,9,28,18,5,16,2,55],"data":{"version":3,"file":"get-conditional-values-list.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/get-conditional-values-list.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Exported as `'resolve-import/get-conditional-values-list'`\n * @module\n */\nimport { ConditionalValue, Exports, Imports } from './index.js'\n\nexport type ConditionalValuesList = [\n  submodulePath: string,\n  conditions: Set<string>,\n  resolvedValue: string | null\n][]\n\n/**\n * Given an `exports` or `imports` value from a package, return the list of all\n * possible conditional values that it might potentially resolve to, for any\n * possible set of import conditions, along with the `Set<string>` of\n * conditions, any superset of which will result in the condition.\n *\n * The list includes null results, since while these are not a valid resolution\n * per se, they do *prevent* valid resolutions that match the same conditions.\n */\nexport const getConditionalValuesList = (\n  importsExports: Imports | Exports\n): ConditionalValuesList => {\n  if (\n    !!importsExports &&\n    typeof importsExports === 'object' &&\n    !Array.isArray(importsExports)\n  ) {\n    let subs: string | undefined = undefined\n    const conditions: ConditionalValuesList = []\n    for (const [k, v] of Object.entries(importsExports)) {\n      /* c8 ignore start */\n      if (!k) continue\n      /* c8 ignore stop */\n      if (subs === undefined) {\n        if (!k.startsWith('#') && k !== '.' && !k.startsWith('./')) {\n          return getConditionalValuesListFromCond(\n            importsExports as ConditionalValue\n          ).map(s => ['.', ...s])\n        }\n        subs = k.charAt(0)\n      }\n      if (\n        // imports have to be #<something>\n        (subs === '#' && (k === '#' || !k.startsWith('#'))) ||\n        // exports can be ./<something> or .\n        (subs === '.' && k !== '.' && !k.startsWith('./'))\n      ) {\n        throw new Error(\n          `invalid ${\n            subs === '.' ? 'exports' : 'imports'\n          } object, all keys ` + `must start with ${subs}. Found ${k}.`\n        )\n      }\n      conditions.push(\n        ...getConditionalValuesListFromCond(v).map(\n          s => [k, ...s] as [string, Set<string>, string | null]\n        )\n      )\n    }\n    return conditions\n  }\n  return getConditionalValuesListFromCond(\n    importsExports as ConditionalValue\n  ).map(s => ['.', ...s])\n}\n\nconst isSubset = (maybeSub: Set<string>, sup: Set<string>) => {\n  if (maybeSub.size > sup.size) return false\n  for (const c of maybeSub) {\n    if (!sup.has(c)) return false\n  }\n  return true\n}\n\n// walk down the tree, creating a list of [Set<Condition>, value]\n// if a subset of the current set is already present in the list, then omit it\nconst getConditionalValuesListFromCond = (\n  cond?: ConditionalValue,\n  path: string[] = [], // path of conditions that got here\n  list: [Set<string>, string | null][] = []\n): [Set<string>, string | null][] => {\n  /* c8 ignore start */\n  if (cond === undefined) return list\n  /* c8 ignore stop */\n  if (cond === null || typeof cond === 'string') {\n    // reached a resolution value.\n    // if we got here, we know it has not yet been seen.\n    list.push([new Set(path), cond])\n    return list\n  }\n  if (Array.isArray(cond)) {\n    for (const c of cond) {\n      getConditionalValuesListFromCond(c, path, list)\n      // if we hit a default condition, break\n      if (!c || typeof c === 'string') break\n    }\n    return list\n  }\n  // ConditionalValueObject\n  for (const [k, v] of Object.entries(cond)) {\n    if (k.startsWith('#') || k === '.' || k.startsWith('./')) {\n      throw new Error(`Expected valid import condition, got: ${k}`)\n    }\n    const p = k === 'default' ? path : path.concat(k)\n    // if no subset seen, then recurse\n    const ps = new Set(p)\n    const seen = list.some(([s]) => isSubset(s, ps))\n    if (!seen) {\n      getConditionalValuesListFromCond(v, p, list)\n    }\n    if (k === 'default') break\n  }\n  return list\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/read-pkg.js":{"lineLengths":[42,81,26,56,21,24,31,25,5,16,2,27,28,68,68,72,65,63,37,33,33,2,36],"data":{"version":3,"file":"read-pkg.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/read-pkg.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AAWzC,MAAM,SAAS,GAAG,CAAC,CAAM,EAAgB,EAAE,CACzC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAA;AAEzD,MAAM,SAAS,GAAG,CAAC,CAAM,EAAgB,EAAE;IACzC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAAE,OAAO,KAAK,CAAA;IACjE,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;QACjB,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC;YAAE,OAAO,KAAK,CAAA;KACrC;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,CAAM,EAAY,EAAE,CACjC,CAAC,CAAC,CAAC;IACH,OAAO,CAAC,KAAK,QAAQ;IACrB,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;IAC7D,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;IAC7D,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,CAAC;IACjE,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,WAAW,IAAI,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,WAAW,IAAI,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA;AAE5D,MAAM,CAAC,MAAM,OAAO,GAAG,KAAK,EAAE,CAAS,EAAuB,EAAE;IAC9D,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC5B,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;AAC9B,CAAC,CAAA","sourcesContent":["import { Exports, Imports } from './index.js'\nimport { readJSON } from './read-json.js'\n\nexport type Pkg = {\n  name?: string\n  main?: string\n  type?: string\n  module?: string\n  exports?: Exports\n  imports?: Imports\n}\n\nconst isExports = (e: any): e is Exports =>\n  !!e && (typeof e === 'object' || typeof e === 'string')\n\nconst isImports = (e: any): e is Exports => {\n  if (!e || typeof e !== 'object' || Array.isArray(e)) return false\n  for (const p in e) {\n    if (!p.startsWith('#')) return false\n  }\n  return true\n}\n\nconst isPkg = (o: any): o is Pkg =>\n  !!o &&\n  typeof o === 'object' &&\n  (typeof o.name === 'string' || typeof o.name === 'undefined') &&\n  (typeof o.main === 'string' || typeof o.main === 'undefined') &&\n  (typeof o.module === 'string' || typeof o.module === 'undefined') &&\n  (typeof o.exports === 'undefined' || isExports(o.exports)) &&\n  (typeof o.imports === 'undefined' || isImports(o.imports))\n\nexport const readPkg = async (f: string): Promise<Pkg | null> => {\n  const pj = await readJSON(f)\n  return isPkg(pj) ? pj : null\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/errors.js":{"lineLengths":[3,37,10,3,52,77,69,75,22,72,63,40,14,2,63,55,40,14,2,91,78,12,18,7,40,14,2,78,25,37,65,80,46,7,40,14,2,72,96,37,7,40,14,2,71,95,37,7,40,14,2,84,104,84,40,14,2,34],"data":{"version":3,"file":"errors.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/errors.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Errors raised by resolve failures.\n * @module\n */\n\nimport { resolveImport } from './resolve-import.js'\n\n// TODO: move \"caller\" to an options object. Then the same options object can\n// be used that handles conditions, parentURL, etc., and the relevant\n// top-level function can set it explicitly at the start of the process and\n// just pass it along.\n\nexport const invalidImportSpecifier = (\n  url: string,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const er = new Error('invalid import() specifier: ' + url)\n  Error.captureStackTrace(er, caller)\n  return er\n}\n\nexport const invalidPackage = (\n  pj: string | URL,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const er = new Error(`Not a valid package: ${pj}`)\n  Error.captureStackTrace(er, caller)\n  return er\n}\n\nexport const relativeImportWithoutParentURL = (\n  url: string,\n  parentURL: any,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const er = Object.assign(\n    new Error('relative import without parentURL'),\n    {\n      url,\n      parentURL,\n    }\n  )\n  Error.captureStackTrace(er, caller)\n  return er\n}\n\nexport const subpathNotExported = (\n  sub: string,\n  pj: string,\n  from: string,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const p =\n    sub === '.'\n      ? 'No \"exports\" main defined'\n      : `Package subpath '${sub}' is not defined by \"exports\"`\n  const er = Object.assign(\n    new Error(`${p} in ${pj} imported from ${from}`),\n    {\n      code: 'ERR_PACKAGE_PATH_NOT_EXPORTED',\n    }\n  )\n  Error.captureStackTrace(er, caller)\n  return er\n}\n\nexport const packageNotFound = (\n  path: string | null,\n  from: string,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const er = Object.assign(\n    new Error(`Cannot find package '${path}' imported from ${from}`),\n    {\n      code: 'ERR_MODULE_NOT_FOUND',\n    }\n  )\n  Error.captureStackTrace(er, caller)\n  return er\n}\n\nexport const moduleNotFound = (\n  path: string,\n  from: string,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const er = Object.assign(\n    new Error(`Cannot find module '${path}' imported from ${from}`),\n    {\n      code: 'ERR_MODULE_NOT_FOUND',\n    }\n  )\n  Error.captureStackTrace(er, caller)\n  return er\n}\n\nexport const packageImportNotDefined = (\n  path: string,\n  pj: string,\n  from: string,\n  caller: (...a: any[]) => any = resolveImport\n) => {\n  const er = Object.assign(\n    new Error(\n      `Package import specifier \"${path}\" is not defined in package ` +\n        `${pj} imported from ${from}`\n    ),\n    { code: 'ERR_PACKAGE_IMPORT_NOT_DEFINED' }\n  )\n  Error.captureStackTrace(er, caller)\n  return er\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-export.js":{"lineLengths":[49,53,73,3,75,56,3,63,18,13,45,17,25,56,71,17,50,19,5,70,64,20,58,16,23,5,55,19,42,20,26,56,17,50,19,5,36,13,30,62,17,50,39,5,27,42,2,42],"data":{"version":3,"file":"resolve-export.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-export.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAA;AAChD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAA;AAOpD,OAAO,EAAE,uBAAuB,EAAE,MAAM,gCAAgC,CAAA;AAExE;;;GAGG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,GAAW,EACX,GAAY,EACZ,EAAU,EACV,IAAY,EACZ,OAA0B,EAClB,EAAE;IACV,MAAM,CAAC,GAAG,CAAC,GAAG;QACZ,CAAC,CAAC,GAAG;QACL,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;YACrC,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,KAAK,GAAG,EAAE,CAAA;IAEd,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACjD,MAAM,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,uBAAuB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;QAC9D,IAAI,CAAC,GAAG;YAAE,MAAM,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;QAC/C,OAAO,GAAG,CAAA;KACX;IAED,kEAAkE;IAClE,4DAA4D;IAC5D,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,MAAM,GAAG,GAAG,uBAAuB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;QACjD,IAAI,GAAG;YAAE,OAAO,GAAG,CAAA;KACpB;IAED,mDAAmD;IACnD,MAAM,EAAE,GAAG,GAAsB,CAAA;IAEjC,sCAAsC;IACtC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACf,IAAI,CAAC,KAAK,SAAS,EAAE;QACnB,MAAM,GAAG,GAAG,uBAAuB,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;QAC/C,IAAI,CAAC,GAAG;YAAE,MAAM,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;QAC/C,OAAO,GAAG,CAAA;KACX;IAED,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;IAC/B,IAAI,EAAE,EAAE;QACN,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;QACrB,MAAM,GAAG,GAAG,uBAAuB,CACjC,EAAE,CAAC,GAAG,CAAqB,EAC3B,OAAO,CACR,CAAA;QACD,IAAI,CAAC,GAAG;YAAE,MAAM,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;QAC/C,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;KAC/B;IAED,uBAAuB;IACvB,MAAM,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;AACvC,CAAC,CAAA","sourcesContent":["import { subpathNotExported } from './errors.js'\nimport { findStarMatch } from './find-star-match.js'\nimport {\n  ConditionalValue,\n  Exports,\n  ExportsSubpaths,\n  ResolveImportOpts,\n} from './index.js'\nimport { resolveConditionalValue } from './resolve-conditional-value.js'\n\n/**\n * Resolve an export that might be a string, subpath exports, exports value\n * object, or array of strings and exports value objects\n */\nexport const resolveExport = (\n  sub: string,\n  exp: Exports,\n  pj: string,\n  from: string,\n  options: ResolveImportOpts\n): string => {\n  const s = !sub\n    ? '.'\n    : sub === '.' || sub.startsWith('./')\n    ? sub\n    : `./${sub}`\n\n  if (typeof exp === 'string' || Array.isArray(exp)) {\n    const res = s === '.' && resolveConditionalValue(exp, options)\n    if (!res) throw subpathNotExported(s, pj, from)\n    return res\n  }\n\n  // now it must be a set of named exports or an export value object\n  // first try to resolve as a value object, if that's allowed\n  if (s === '.') {\n    const res = resolveConditionalValue(exp, options)\n    if (res) return res\n  }\n\n  // otherwise the only way to match is with subpaths\n  const es = exp as ExportsSubpaths\n\n  // if we have an exact match, use that\n  const e = es[s]\n  if (e !== undefined) {\n    const res = resolveConditionalValue(e, options)\n    if (!res) throw subpathNotExported(s, pj, from)\n    return res\n  }\n\n  const sm = findStarMatch(s, es)\n  if (sm) {\n    const [key, mid] = sm\n    const res = resolveConditionalValue(\n      es[key] as ConditionalValue,\n      options\n    )\n    if (!res) throw subpathNotExported(s, pj, from)\n    return res.replace(/\\*/g, mid)\n  }\n\n  // did not find a match\n  throw subpathNotExported(s, pj, from)\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/get-named-exports-list.js":{"lineLengths":[3,52,2,26,3,49,17,18,35,21,77,2,33,56,21,24,45,25,5,16,2,50],"data":{"version":3,"file":"get-named-exports-list.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/get-named-exports-list.ts"],"names":[],"mappings":"AACA;;;;GAIG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,OAAiB,EAAY,EAAE;IACjE,IAAI,CAAC,OAAO;QAAE,OAAO,EAAE,CAAA;IACvB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;QAAE,OAAO,CAAC,GAAG,CAAC,CAAA;IAC5C,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;AAC1E,CAAC,CAAA;AAED,MAAM,gBAAgB,GAAG,CAAC,CAAU,EAAwB,EAAE;IAC5D,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAAE,OAAO,KAAK,CAAA;IACjE,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;YAAE,OAAO,KAAK,CAAA;KACnD;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["import { Exports, ExportsSubpaths } from './index.js'\n/**\n * Get the condition-resolved targets of all exports\n *\n * Stars are not expanded.\n */\nexport const getNamedExportsList = (exports?: Exports): string[] => {\n  if (!exports) return []\n  if (!isExportSubpaths(exports)) return ['.']\n  return Object.keys(exports).filter(e => e === '.' || e.startsWith('./'))\n}\n\nconst isExportSubpaths = (e: Exports): e is ExportsSubpaths => {\n  if (!e || typeof e !== 'object' || Array.isArray(e)) return false\n  for (const p in e) {\n    if (p !== '.' && !p.startsWith('./')) return false\n  }\n  return true\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/star-glob.js":{"lineLengths":[36,31,64,9,37,45,14,47,24,41,20,24,20,17,26,7,33,83,42,7,2,37],"data":{"version":3,"file":"star-glob.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/star-glob.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AACnC,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAA;AAE9B,MAAM,CAAC,MAAM,QAAQ,GAAG,KAAK,EAC3B,IAAsB,EAAE,2BAA2B;AACnD,GAAW,EACkB,EAAE;IAC/B,MAAM,OAAO,GACX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACnC,IAAI;QACJ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;IACjB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE;QAClC,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,IAAI;QACX,GAAG,EAAE,GAAG;QACR,WAAW,EAAE,IAAI;KAClB,CAAC,CAAA;IACF,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACzB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,CACzB,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EACd,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAC9B,CAAA;QACD,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAA;IACnC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA","sourcesContent":["import { escape, glob } from 'glob'\nimport { resolve } from 'path'\n\nexport const starGlob = async (\n  star: [string, string], // actually [string,string]\n  dir: string\n): Promise<[string, string][]> => {\n  const pattern =\n    escape(star[0]) +\n    (star[0].endsWith('/') ? '' : '*/') +\n    '**' +\n    (star[1].startsWith('/') ? '' : '/*') +\n    escape(star[1])\n  const matches = await glob(pattern, {\n    posix: true,\n    absolute: false,\n    nodir: true,\n    cwd: dir,\n    dotRelative: true,\n  })\n  return matches.map(match => {\n    const rep = match.substring(\n      star[0].length,\n      match.length - star[1].length\n    )\n    return [rep, resolve(dir, match)]\n  })\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/to-path.js":{"lineLengths":[36,101,35],"data":{"version":3,"file":"to-path.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/to-path.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,CAAe,EAAU,EAAE,CAChD,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA","sourcesContent":["import { fileURLToPath } from 'url'\n\nexport const toPath = (p: string | URL): string =>\n  typeof p === 'object' || p.startsWith('file://') ? fileURLToPath(p) : p\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/file-exists.js":{"lineLengths":[35,84,39],"data":{"version":3,"file":"file-exists.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/file-exists.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAClC,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAAE,CAAe,EAAoB,EAAE,CACpE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CACV,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,EACjB,GAAG,EAAE,CAAC,KAAK,CACZ,CAAA","sourcesContent":["import { stat } from 'fs/promises'\nexport const fileExists = async (f: string | URL): Promise<boolean> =>\n  stat(f).then(\n    st => st.isFile(),\n    () => false\n  )\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/find-dep-package.js":{"lineLengths":[45,45,38,81,62,70,52,54,61,68,72,73,91,37,17,53,77,48,37,13,21,32,9,5,2,44],"data":{"version":3,"file":"find-dep-package.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/find-dep-package.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAC5C,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,MAAM,CAAA;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AAErC,MAAM,SAAS,GAAG,KAAK,EAAE,CAAS,EAAoB,EAAE,CACtD,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CACV,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,EACtB,GAAG,EAAE,CAAC,KAAK,CACZ,CAAA;AAEH,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EACjC,OAAsB,EACtB,UAAkB,EAClB,EAAE;IACF,kEAAkE;IAClE,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;QAC7C,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,GAAG,GAAG,CAAA;QAC7C,qDAAqD;QACrD,4DAA4D;QAC5D,gEAAgE;QAChE,iEAAiE;QACjE,MAAM,KAAK,GACT,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,GAAG,CAAA;QACtE,IAAI,MAAM,SAAS,CAAC,KAAK,CAAC,EAAE;YAC1B,IAAI;gBACF,OAAO,CAAC,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAA;gBACpC,6DAA6D;gBAC7D,gCAAgC;gBAChC,qBAAqB;aACtB;YAAC,MAAM,GAAE;YACR,oBAAoB;SACvB;KACF;AACH,CAAC,CAAA","sourcesContent":["import { realpath, stat } from 'fs/promises'\nimport { dirname, resolve, sep } from 'path'\nimport { walkUp } from 'walk-up-path'\n\nconst dirExists = async (f: string): Promise<boolean> =>\n  stat(f).then(\n    st => st.isDirectory(),\n    () => false\n  )\n\nexport const findDepPackage = async (\n  pkgName: string | null,\n  parentPath: string\n) => {\n  // starting from the dirname, try to find the nearest node_modules\n  for (const dir of walkUp(dirname(parentPath))) {\n    const nm = resolve(dir, 'node_modules') + sep\n    // if it's null, then we need the node_modules itself\n    // if it's '' then we use node_modules with an extra / on it\n    // thisis only relevant when generating the error message, since\n    // of course node_modules// is never going to be a valid package.\n    const ppath =\n      pkgName === null ? nm : (!pkgName ? nm : resolve(nm, pkgName)) + sep\n    if (await dirExists(ppath)) {\n      try {\n        return (await realpath(ppath)) + sep\n        // the direxists stat will avoid almost all throws that could\n        // occur here, but just in case.\n        /* c8 ignore start */\n      } catch {}\n        /* c8 ignore stop */\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-package-import.js":{"lineLengths":[40,36,38,95,46,53,40,73,74,52,52,3,59,62,3,73,39,69,17,25,15,42,24,52,48,38,17,21,38,70,43,39,56,93,55,47,51,20,67,13,9,34,31,71,13,43,38,68,27,75,17,66,42,79,17,55,13,55,22,71,13,34,43,64,23,71,13,38,75,13,51,50,54,9,14,5,62,2,50],"data":{"version":3,"file":"resolve-package-import.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-package-import.ts"],"names":[],"mappings":"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","sourcesContent":["import { dirname, resolve } from 'path'\nimport { pathToFileURL } from 'url'\nimport { walkUp } from 'walk-up-path'\nimport {\n  invalidImportSpecifier,\n  moduleNotFound,\n  packageImportNotDefined,\n} from './errors.js'\nimport { fileExists } from './file-exists.js'\nimport { findStarMatch } from './find-star-match.js'\nimport { ConditionalValue, ResolveImportOpts } from './index.js'\nimport { readPkg } from './read-pkg.js'\nimport { resolveConditionalValue } from './resolve-conditional-value.js'\nimport { resolveDependencyExports } from './resolve-dependency-export.js'\nimport { resolveExport } from './resolve-export.js'\nimport { resolveImport } from './resolve-import.js'\n\n/**\n * Resolve an import like '@package/name/sub/module', where\n * './sub/module' appears in the exports of the local package.\n */\nexport const resolvePackageImport = async (\n  url: string,\n  parentPath: string,\n  options: ResolveImportOpts & { originalParent: string }\n): Promise<URL | string> => {\n  const { originalParent } = options\n  const parts = url.match(/^(@[^\\/]+\\/[^\\/]+|[^\\/]+)(?:\\/(.*))?$/) as\n    | null\n    | (RegExpMatchArray & [string, string, string])\n  // impossible\n  /* c8 ignore start */\n  if (!parts) throw invalidImportSpecifier(url)\n  /* c8 ignore stop */\n\n  for (const dir of walkUp(dirname(parentPath))) {\n    const pj = resolve(dir, 'package.json')\n    const pkg = await readPkg(pj)\n    if (!pkg) continue\n    if (pkg.name && pkg.exports) {\n      // can import from this package name if exports is defined\n      const [, pkgName, sub] = parts\n      if (pkgName === pkg.name) {\n        // ok, see if sub is a valid export then\n        const subPath = resolveExport(\n          sub,\n          pkg.exports,\n          pj,\n          originalParent,\n          options\n        )\n        const resolved = resolve(dir, subPath)\n        if (await fileExists(resolved)) return pathToFileURL(resolved)\n        else throw moduleNotFound(resolved, originalParent)\n      }\n    }\n\n    if (url.startsWith('#')) {\n      if (!pkg.imports) {\n        throw packageImportNotDefined(url, pj, originalParent)\n      }\n      const exact = pkg.imports[url]\n      if (exact !== undefined) {\n        const res = resolveConditionalValue(exact, options)\n        if (!res) {\n          throw packageImportNotDefined(url, pj, originalParent)\n        }\n        // kind of weird behavior, but it's what node does\n        if (res.startsWith('#')) {\n          return resolveDependencyExports(null, parentPath, options)\n        }\n        return resolveImport(res, pj, options)\n      }\n\n      const sm = findStarMatch(url, pkg.imports)\n      if (!sm) {\n        throw packageImportNotDefined(url, pj, originalParent)\n      }\n      const [key, mid] = sm\n      const match = pkg.imports[key] as ConditionalValue\n      const res = resolveConditionalValue(match, options)\n      if (!res) {\n        throw packageImportNotDefined(url, pj, originalParent)\n      }\n      if (res.startsWith('#')) {\n        return resolveDependencyExports(null, parentPath, options)\n      }\n      const expand = res.replace(/\\*/g, mid)\n\n      // start over with the resolved import\n      return resolveImport(expand, pj, options)\n    }\n\n    break\n  }\n\n  return resolveDependencyExports(url, parentPath, options)\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/to-file-url.js":{"lineLengths":[36,53,7,29,20,27,39],"data":{"version":3,"file":"to-file-url.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/to-file-url.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAA;AAEnC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,CAAe,EAAO,EAAE,CAChD,OAAO,CAAC,KAAK,QAAQ;IACnB,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;QACzB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA","sourcesContent":["import { pathToFileURL } from 'url'\n\nexport const toFileURL = (p: string | URL): URL =>\n  typeof p === 'object'\n    ? p\n    : p.startsWith('file://')\n    ? new URL(p)\n    : pathToFileURL(p)\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/resolve-dependency-export.js":{"lineLengths":[31,36,62,46,55,40,52,3,57,70,3,77,39,70,81,60,17,55,5,47,46,34,54,64,57,15,23,43,42,46,16,61,9,14,44,46,13,16,62,9,5,57,46,22,85,49,39,43,12,59,5,23,38,42,12,58,5,24,51,47,36,40,43,42,12,57,5,41,38,5,10,53,5,2,53],"data":{"version":3,"file":"resolve-dependency-export.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/resolve-dependency-export.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve } from 'path'\nimport { pathToFileURL } from 'url'\nimport { moduleNotFound, packageNotFound } from './errors.js'\nimport { fileExists } from './file-exists.js'\nimport { findDepPackage } from './find-dep-package.js'\nimport { ResolveImportOpts } from './index.js'\nimport { readPkg } from './read-pkg.js'\nimport { resolveExport } from './resolve-export.js'\n\n/**\n * Resolve a dependency like '@dep/name/sub/module' where\n * '@dep/name' is in node_modules somewhere and exports './sub/module'\n */\nexport const resolveDependencyExports = async (\n  url: string | null,\n  parentPath: string,\n  options: ResolveImportOpts & { originalParent: string }\n): Promise<URL> => {\n  const { originalParent } = options\n  const parts = url?.match(/^(@[^\\/]+\\/[^\\/]+|[^\\/]+)(?:\\/(.*))?$/)\n  const [, pkgName, sub] =\n    url === null ? [, null, ''] : parts || ['', '', '']\n  const ppath = await findDepPackage(pkgName, parentPath)\n  if (!ppath) {\n    throw packageNotFound(pkgName, originalParent)\n  }\n\n  const indexjs = resolve(ppath, 'index.js')\n  const pj = resolve(ppath, 'package.json')\n  const pkg = await readPkg(pj)\n  const subpath = sub ? resolve(ppath, sub) : false\n  // if not a package, then the sub can still be a direct path\n  // if no sub, then resolves to index.js if available.\n  if (!pkg) {\n    if (!subpath) {\n      // try index.js, otherwise fail\n      if (await fileExists(indexjs)) return pathToFileURL(indexjs)\n      else throw packageNotFound(ppath, originalParent)\n    } else {\n      if (await fileExists(subpath)) {\n        return pathToFileURL(subpath)\n      } else throw moduleNotFound(subpath, originalParent)\n    }\n  }\n\n  // ok, have a package, look up the export if present.\n  // otherwise, use main, otherwise index.js\n  if (pkg.exports) {\n    const subPath = resolveExport(\n      sub,\n      pkg.exports,\n      pj,\n      originalParent,\n      options\n    )\n    const resolved = resolve(ppath, subPath)\n    if (await fileExists(resolved)) return pathToFileURL(resolved)\n    else throw moduleNotFound(resolved, originalParent)\n  } else if (subpath) {\n    if (await fileExists(subpath)) return pathToFileURL(subpath)\n    else throw moduleNotFound(subpath, originalParent)\n  } else if (pkg.main) {\n    // fall back to index.js if main is missing\n    const rmain = resolve(ppath, pkg.main)\n    if (await fileExists(rmain)) return pathToFileURL(rmain)\n    else if (await fileExists(indexjs)) return pathToFileURL(indexjs)\n    else throw packageNotFound(ppath, originalParent)\n  } else if (await fileExists(indexjs)) {\n    return pathToFileURL(indexjs)\n  } else {\n    throw packageNotFound(ppath, originalParent)\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/read-json.js":{"lineLengths":[44,56,29,23,37],"data":{"version":3,"file":"read-json.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/read-json.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAA;AAC3C,MAAM,CAAC,MAAM,QAAQ,GAAG,KAAK,EAAE,CAAS,EAAgB,EAAE,CACxD,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;KAChB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxB,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAA","sourcesContent":["import { readFile } from 'node:fs/promises'\nexport const readJSON = async (f: string): Promise<any> =>\n  readFile(f, 'utf8')\n    .then(d => JSON.parse(d))\n    .catch(() => null)\n\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/dist/esm/find-star-match.js":{"lineLengths":[3,69,72,51,3,42,44,37,42,44,36,43,52,56,76,30,9,5,16,2,43],"data":{"version":3,"file":"find-star-match.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/resolve-import/src/find-star-match.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,CAAS,EACT,GAAwB,EACC,EAAE;IAC3B,wCAAwC;IACxC,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SAC9B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC;SACjC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;SACnC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SAC3B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE,CAAc,CAAC,MAAM,KAAK,CAAC,CAG9C,CAAA;IAEH,KAAK,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,QAAQ,EAAE;QAC7C,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC7C,MAAM,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;YAC/D,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;SAClB;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["/**\n * Given an object with string keys possibly containing *, and a test\n * string, return the matching key, and the section that the star should\n * expand to when matching against the test string.\n */\nexport const findStarMatch = (\n  s: string,\n  obj: Record<string, any>\n): [string, string] | null => {\n  // longest pattern matches take priority\n  const patterns = Object.keys(obj)\n    .filter(p => p.length <= s.length)\n    .sort((a, b) => b.length - a.length)\n    .map(p => [p, p.split('*')])\n    .filter(([, p]) => (p as string[]).length === 2) as [\n    string,\n    [string, string]\n  ][]\n\n  for (const [key, [before, after]] of patterns) {\n    if (s.startsWith(before) && s.endsWith(after)) {\n      const mid = s.substring(before.length, s.length - after.length)\n      return [key, mid]\n    }\n  }\n\n  return null\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/walk-up-path/dist/mjs/index.js":{"lineLengths":[40,40,39,19,33,26,18,9,14,22,9,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/walk-up-path/src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAA;AACvC,MAAM,CAAC,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,IAAY;IAC3C,KAAK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG;QAChC,MAAM,IAAI,CAAA;QACV,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;QACxB,IAAI,EAAE,KAAK,IAAI,EAAE;YACf,MAAK;SACN;aAAM;YACL,IAAI,GAAG,EAAE,CAAA;SACV;KACF;AACH,CAAC,CAAA","sourcesContent":["import { dirname, resolve } from 'path'\nexport const walkUp = function* (path: string) {\n  for (path = resolve(path); path;) {\n    yield path\n    const pp = dirname(path)\n    if (pp === path) {\n      break\n    } else {\n      path = pp\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/index.js":{"lineLengths":[45,33,42,45,33,42,37,55,51,1,51,47,1,49,49,1,45,45,1,56,52,1,52,48,1,65,41,74,43,51,26,3,45,27,29,3,42,16,13,9,15,11,19,15,16,12,20,16,9,13,11,13,3,17,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AAS5C,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;AAChC,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AAEzC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AAQ5C,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;AAOhC,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AAyBpC,MAAM,UAAU,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AAsBD,MAAM,UAAU,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AAqBD,MAAM,UAAU,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,MAAM,UAAU,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AAqBD,MAAM,UAAU,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AAED,iEAAiE;AACjE,MAAM,CAAC,MAAM,UAAU,GAAG,cAAc,CAAA;AACxC,MAAM,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AACzE,MAAM,CAAC,MAAM,WAAW,GAAG,eAAe,CAAA;AAC1C,MAAM,CAAC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACF,MAAM,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI;IACJ,UAAU;IACV,MAAM;IACN,cAAc;IACd,UAAU;IACV,WAAW;IACX,OAAO;IACP,eAAe;IACf,WAAW;IACX,IAAI;IACJ,QAAQ;IACR,MAAM;IACN,QAAQ;CACT,CAAC,CAAA;AACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/index.js":{"lineLengths":[37,63,31,37,41,56,32,40,58,21,5,52,2,56,45,77,58,39,28,70,2,42,28,48,2,35,69,77,28,72,23,61,69,42,46,40,13,21,28,60,2,49,43,13,21,28,60,2,43,43,61,2,40,40,61,2,35,26,57,2,38,26,62,2,21,63,41,22,54,24,15,14,25,24,2,20,81,20,46,30,32,49,21,32,26,60,63,45,61,34,45,47,87,26,51,34,70,25,5,27,80,29,59,48,50,13,38,66,13,10,41,33,53,55,13,32,52,69,13,10,75,71,83,64,83,93,93,22,27,7,2,30,19,21,19,30,35,43,2,33,21,17,55,32,60,60,63,39,25,5,27,2,36,41,50,68,68,61,66,2,74,72,69,62,90,26,55,47,41,44,27,5,16,2,24,31,44,74,24,12,8,12,25,13,11,12,10,28,12,12,14,11,14,13,23,11,40,36,32,31,31,60,51,35,83,40,60,9,73,27,28,43,29,27,41,44,33,52,44,52,26,28,22,39,20,5,16,64,24,9,41,41,45,32,13,9,21,5,19,12,37,37,53,62,32,19,9,23,30,19,9,44,27,32,56,28,61,9,47,71,42,70,60,48,10,75,76,74,71,55,49,27,52,60,53,44,34,62,42,54,28,87,17,35,75,17,13,47,11,38,62,60,51,29,55,38,34,34,51,47,45,31,17,13,9,43,5,61,62,61,64,43,27,65,38,56,63,51,46,21,17,13,9,55,37,68,61,62,9,42,63,57,9,14,58,66,9,25,5,44,42,39,24,63,27,47,24,17,31,45,17,13,25,11,5,54,33,39,49,49,53,31,17,36,81,34,35,21,17,31,27,19,53,11,5,33,36,43,9,33,12,33,47,48,60,39,53,63,33,48,44,43,28,21,17,39,41,60,40,32,17,13,50,23,63,40,65,40,44,28,17,13,31,49,5,45,34,35,53,21,6,68,68,70,57,6,86,39,42,32,6,73,67,37,33,12,33,94,42,28,67,33,53,64,30,21,75,55,35,55,21,45,44,45,38,33,29,36,37,30,37,38,33,21,40,64,40,49,37,42,25,17,51,52,64,43,57,67,37,52,48,47,32,25,21,43,45,64,44,36,21,17,54,27,67,44,69,44,75,59,58,47,43,32,21,17,13,31,25,5,42,58,50,56,6,63,55,38,56,60,107,29,29,39,34,13,9,49,5,44,19,19,24,23,48,34,59,21,21,13,77,35,21,13,77,35,21,13,37,24,63,33,34,33,28,35,21,21,13,37,24,63,33,34,33,28,35,21,21,13,18,29,13,9,70,41,47,5,19,26,19,37,27,29,79,29,27,9,25,55,29,5,51,45,59,55,23,46,37,68,75,30,29,87,41,33,33,34,42,96,47,36,36,37,49,45,64,70,69,59,60,38,36,53,21,41,47,21,17,13,9,68,76,55,37,51,9,56,60,105,40,32,29,38,36,52,33,30,29,13,32,33,56,23,57,30,30,30,24,65,72,41,70,45,18,51,32,31,50,36,35,53,51,49,50,28,32,32,48,66,45,63,42,74,43,43,47,48,73,41,21,32,17,67,33,45,85,73,84,79,41,36,21,26,58,73,48,49,76,79,34,25,63,79,29,21,17,38,83,37,30,38,82,36,36,21,17,36,29,13,38,60,65,20,40,30,54,13,18,32,55,13,21,29,9,60,60,51,58,60,63,60,65,37,49,72,37,64,28,24,9,29,59,61,35,27,9,29,56,64,61,36,52,33,9,14,37,36,9,28,5,19,55,5,20,36,37,20,29,28,27,22,63,66,14,28,42,60,9,53,38,29,45,42,29,39,44,9,49,38,29,41,38,29,35,37,9,54,74,9,50,35,9,69,49,55,68,9,18,5,14,49,31,59,36,10,64,65,51,29,26,32,31,9,37,42,18,25,28,31,59,42,58,78,57,70,43,20,29,41,42,54,37,17,44,37,36,34,33,15,34,39,39,58,27,17,41,66,73,21,26,40,21,17,46,66,17,45,78,41,17,15,60,10,23,71,75,71,36,56,43,56,24,38,13,62,33,9,20,35,32,9,28,27,5,19,59,69,54,50,43,32,9,59,50,43,9,14,34,9,5,38,45,54,25,27,25,9,25,28,9,35,24,9,37,40,29,40,9,53,38,46,66,67,43,47,29,45,82,41,24,67,33,13,9,46,35,26,60,34,13,62,22,41,32,17,36,13,9,67,38,33,25,9,27,5,26,49,5,1,21,31,37,41,20,20,32,26,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/glob.js":{"lineLengths":[38,41,94,39,53,44,48,55,14,43,20,14,3,54,3,19,13,8,9,8,16,11,11,18,9,14,13,12,11,10,10,15,12,13,13,11,9,11,25,18,24,7,47,7,9,7,60,7,13,7,65,6,61,6,62,71,37,6,71,13,7,32,29,18,57,28,50,34,36,30,46,34,32,24,26,9,77,47,9,34,30,50,38,34,40,38,70,44,42,23,73,32,34,64,74,9,42,32,9,35,42,43,26,40,62,9,29,34,71,13,76,9,31,57,57,26,38,44,53,84,13,9,14,70,63,53,37,48,36,28,15,9,41,70,66,69,42,88,21,47,20,26,38,34,32,28,28,30,27,33,36,60,37,10,65,62,34,40,23,21,50,35,33,19,58,32,57,11,5,18,74,73,79,46,16,70,29,54,59,31,40,36,62,23,10,5,16,16,63,29,54,59,31,40,36,62,26,10,5,14,63,25,50,55,27,36,32,58,20,5,18,63,25,50,55,27,36,32,58,24,5,7,64,33,7,19,52,5,25,34,5,7,71,33,7,15,53,5,30,30,5,1,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/has-magic.js":{"lineLengths":[38,3,74,30,2,78,77,74,78,78,77,3,52,34,28,5,30,49,24,5,17,2,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AAGrC;;;;;;;;;;GAUG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;QACxB,IAAI,IAAI,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;IACvD,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/ignore.js":{"lineLengths":[54,34,66,45,38,39,55,14,43,20,14,3,41,3,21,13,21,13,21,13,11,95,27,27,35,35,33,23,22,20,19,18,23,33,21,28,27,10,34,26,5,14,75,72,75,47,75,77,31,79,76,29,78,48,51,49,37,46,33,40,58,13,44,61,63,31,34,13,32,71,65,70,44,25,38,16,38,27,29,50,20,50,13,9,5,16,38,41,45,41,40,56,28,9,40,56,28,9,21,5,24,44,53,48,34,28,9,48,34,28,9,21,5,1,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/assert-valid-pattern.js":{"lineLengths":[37,48,38,47,5,46,51,5,2,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":"AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AACpC,MAAM,CAAC,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/escape.js":{"lineLengths":[3,49,2,73,75,74,75,73,3,70,60,64,58,31,41,44,2,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":"AACA;;;;;;;;GAQG;AACH,MAAM,CAAC,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/unescape.js":{"lineLengths":[3,64,2,72,77,72,66,2,70,33,2,77,16,3,72,31,43,85,2,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;GAaG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/pattern.js":{"lineLengths":[73,37,45,42,3,67,10,3,22,17,14,11,11,14,10,16,13,11,16,27,57,42,54,9,36,51,9,53,81,9,41,48,54,9,40,34,28,34,75,32,28,29,35,48,49,55,35,25,31,45,69,66,38,32,34,34,17,57,57,50,47,55,13,59,57,54,38,32,34,34,17,35,35,50,47,55,13,9,5,7,53,7,15,46,5,7,44,7,16,66,5,7,44,7,18,59,5,7,41,7,16,64,5,7,63,7,18,34,31,36,39,77,50,68,5,7,58,7,15,45,5,7,74,7,12,37,30,28,39,101,50,40,44,26,5,7,62,7,13,37,42,23,28,45,40,35,35,48,30,48,29,5,26,26,71,74,49,7,64,7,15,37,44,25,30,45,40,38,48,45,5,42,54,56,7,56,7,18,37,47,28,33,50,37,34,5,7,53,7,12,39,82,13,17,5,7,72,23,7,27,37,33,35,5,7,74,7,26,77,25,37,20,5,1,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/walker.js":{"lineLengths":[3,74,11,2,10,3,36,37,43,92,54,17,3,61,3,23,9,13,9,21,19,20,19,12,9,11,13,24,39,33,25,25,74,70,55,63,44,57,84,35,13,9,69,27,29,50,28,26,38,57,42,15,9,5,20,70,5,28,55,5,29,13,27,5,14,29,33,19,28,28,27,63,17,9,5,18,33,19,29,27,17,9,14,32,36,9,5,67,44,32,37,29,16,33,61,21,33,20,9,57,49,73,46,33,67,37,13,32,9,45,5,30,20,73,41,53,32,36,38,54,32,13,24,5,30,37,29,16,33,57,21,33,20,9,57,47,73,44,68,35,13,9,45,5,30,29,19,69,61,50,34,9,85,25,72,36,38,30,9,23,75,39,9,14,75,84,31,21,65,9,5,37,50,14,42,5,35,48,14,42,5,34,29,33,17,28,69,5,46,42,24,33,17,26,79,19,9,52,77,68,65,22,28,30,21,10,73,33,25,20,62,9,53,75,25,13,20,53,34,65,18,93,13,9,15,5,45,61,22,28,30,21,10,73,33,25,20,62,9,72,20,68,9,15,5,38,29,33,17,28,73,5,50,42,24,33,17,26,83,19,9,52,77,68,65,22,28,30,21,10,73,33,25,47,9,53,75,25,13,20,45,59,9,15,5,49,61,22,28,30,21,10,73,33,25,47,9,72,20,72,9,15,5,1,42,24,39,36,5,18,28,5,18,33,37,36,36,9,41,57,43,44,17,22,38,17,15,11,28,5,16,33,37,36,34,9,68,57,37,41,11,28,5,1,42,12,39,36,37,32,29,11,54,55,5,18,30,34,25,5,14,33,33,39,77,15,9,14,73,9,28,5,18,36,34,9,76,28,5,1,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/ast.js":{"lineLengths":[30,52,41,49,42,65,64,42,71,53,29,71,69,69,44,58,38,46,74,32,21,32,26,74,38,33,73,59,18,9,10,14,19,16,12,17,10,24,13,14,54,43,22,45,25,42,17,34,30,62,76,65,52,34,74,5,20,29,41,34,28,38,38,25,37,47,9,80,30,5,31,16,41,34,25,79,9,14,36,83,9,5,17,29,32,56,29,24,28,48,24,32,14,40,31,25,81,22,31,24,89,50,45,55,76,25,44,50,21,17,23,31,13,9,20,5,20,32,25,25,33,85,54,13,32,32,9,5,14,38,84,63,41,28,27,35,74,25,9,19,5,15,32,24,58,37,25,36,24,81,31,53,35,58,29,13,9,20,5,13,32,24,39,24,35,25,23,41,50,29,65,28,44,5,18,37,28,12,40,5,19,45,38,24,9,17,5,42,29,28,28,29,32,65,24,25,36,42,75,42,45,41,29,29,17,30,47,53,44,25,21,80,40,21,29,29,17,37,35,35,37,29,29,17,78,34,29,48,56,34,29,17,25,13,26,21,9,48,31,24,38,25,21,32,38,71,38,41,37,25,25,13,26,43,49,40,21,17,76,36,17,25,25,13,33,31,31,33,25,25,13,60,31,25,45,31,52,25,13,28,31,25,33,42,25,13,28,60,41,17,31,25,41,25,13,21,9,29,74,41,24,34,46,17,5,44,54,48,19,5,72,21,19,40,29,32,44,28,37,66,71,75,46,36,29,36,49,59,24,24,9,77,60,21,24,11,5,19,29,5,73,73,77,74,73,76,72,62,6,43,32,60,43,50,14,32,16,6,71,28,53,34,66,43,50,14,52,21,6,78,79,79,19,6,76,64,69,32,66,49,56,6,75,68,6,74,41,6,78,79,6,22,51,48,75,6,81,78,74,42,6,77,72,46,6,31,74,73,75,30,52,32,29,25,59,35,27,70,64,49,60,51,26,14,26,27,33,57,83,67,84,67,100,42,52,78,44,43,79,58,74,80,76,81,83,68,86,92,21,17,13,73,25,31,41,45,34,13,44,20,22,30,52,28,14,9,73,73,44,64,31,62,44,75,79,39,38,30,29,39,64,9,43,72,16,40,38,32,9,29,56,9,62,23,50,77,9,14,43,67,26,81,30,27,35,25,39,30,61,33,65,38,50,41,9,16,18,27,48,24,10,5,25,26,23,59,33,40,64,13,32,77,68,47,22,10,66,23,5,56,29,20,26,47,37,27,33,58,25,13,29,44,33,17,22,36,17,25,13,28,78,31,30,47,38,49,29,17,13,28,44,38,20,31,32,25,13,28,28,32,25,13,34,9,55,5,1,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":"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","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/path-scurry/dist/esm/index.js":{"lineLengths":[37,41,41,102,36,32,57,46,70,36,19,14,23,16,17,17,15,14,16,17,17,6,2,58,97,13,7,21,20,19,34,41,10,6,39,48,95,47,27,57,21,21,21,21,21,21,22,20,27,27,64,40,33,38,66,33,57,64,32,74,29,37,38,37,48,34,43,29,36,43,43,43,44,38,31,33,26,36,10,17,34,29,13,2,39,32,42,10,17,41,35,13,2,3,65,12,3,44,19,28,5,1,72,79,73,79,78,77,75,76,2,78,70,3,41,12,3,45,38,15,20,32,47,11,5,1,47,3,48,78,2,78,74,75,19,2,75,75,16,3,23,7,32,6,73,74,80,74,45,7,9,7,53,6,16,7,9,7,59,6,16,7,10,7,79,6,16,7,11,7,71,16,7,11,7,73,53,7,18,36,8,19,9,15,25,5,10,16,26,5,11,17,27,5,9,15,25,5,9,15,25,5,10,16,26,5,13,19,29,5,9,15,25,5,10,16,26,5,12,18,28,5,13,19,29,5,13,19,29,5,13,19,29,5,17,23,33,5,11,17,27,5,11,17,27,5,11,17,27,5,15,21,31,5,15,11,14,19,14,19,10,14,16,14,7,69,69,76,27,7,22,48,5,7,77,77,7,16,31,5,7,79,67,6,16,7,76,25,75,37,29,27,33,34,39,39,49,34,26,39,9,14,45,9,5,7,58,6,65,7,13,38,31,25,37,55,5,7,16,7,21,30,5,7,81,7,19,20,24,9,50,52,50,33,58,43,22,5,29,21,38,30,9,17,5,7,77,80,79,14,6,16,7,16,48,21,26,9,63,43,38,24,5,7,69,6,78,14,6,75,61,6,36,6,16,7,27,50,24,9,32,39,9,25,41,83,35,40,25,13,9,71,67,34,46,84,57,20,25,21,11,33,35,9,78,79,30,22,5,7,76,68,7,16,23,22,43,34,9,31,30,17,48,9,32,62,5,7,69,44,73,57,7,21,29,35,23,22,46,39,31,30,17,64,9,37,57,5,7,57,7,16,43,34,9,31,30,17,48,9,32,59,37,5,7,70,6,77,21,7,21,46,39,29,59,27,58,39,58,13,18,49,13,9,30,39,71,43,5,7,38,6,80,76,45,7,17,47,5,18,35,5,15,44,46,40,60,48,74,70,86,53,28,5,7,34,7,14,45,5,7,31,7,19,45,5,7,38,7,25,45,5,7,34,7,21,45,5,7,31,7,14,45,5,7,28,7,16,46,5,7,35,7,22,46,5,7,72,27,6,74,47,7,19,60,5,7,75,51,6,80,74,48,7,22,32,5,7,75,56,6,80,74,48,7,22,30,5,7,76,58,6,75,74,67,7,21,41,55,5,7,77,57,6,76,55,7,19,29,24,25,25,49,39,56,39,33,5,7,77,61,7,21,47,5,7,80,74,71,7,16,39,5,7,80,50,6,75,77,56,6,73,16,7,16,29,44,53,5,7,77,6,80,39,6,79,7,22,40,21,26,9,34,29,9,29,72,27,29,9,28,13,75,77,29,55,13,9,20,40,29,9,5,7,44,7,20,40,21,26,9,34,29,9,29,72,27,29,9,28,13,64,73,29,55,13,9,20,40,29,9,5,31,45,37,60,70,34,18,32,9,5,19,37,32,19,58,35,5,27,56,41,33,35,28,9,5,24,34,28,5,63,20,65,66,66,46,29,33,19,28,27,62,54,33,30,33,35,5,29,60,53,32,9,37,31,9,14,44,9,5,27,70,29,33,57,34,29,9,37,32,31,9,5,30,29,27,30,26,69,54,77,29,32,9,25,72,62,29,48,39,9,28,5,28,55,44,5,31,61,34,68,40,67,35,9,25,24,21,5,37,56,32,83,45,25,13,62,9,5,42,25,59,58,63,25,28,69,71,38,39,24,16,35,25,9,24,17,5,7,78,18,6,78,71,74,6,79,81,16,6,75,15,7,19,42,17,80,28,13,24,41,13,9,5,7,41,7,17,42,17,69,28,13,24,41,13,9,5,20,157,28,32,36,40,32,30,28,32,24,24,24,26,28,32,28,26,26,24,35,51,71,67,34,9,5,22,31,32,40,46,37,46,5,7,79,6,79,19,6,75,15,6,76,76,63,81,76,74,7,39,33,27,29,16,51,19,9,41,35,62,27,28,16,50,19,9,57,35,38,19,9,39,52,54,41,78,21,43,41,13,18,68,28,42,55,17,47,13,75,19,11,5,26,7,46,6,79,19,6,75,15,7,21,33,22,9,41,35,59,9,52,54,41,41,45,9,14,33,36,32,77,17,75,40,21,55,17,47,13,24,43,41,13,51,22,9,55,5,7,43,7,19,33,22,9,41,35,59,9,52,54,41,13,60,36,17,51,13,43,9,20,39,37,9,55,5,18,34,25,39,75,29,70,25,9,28,20,5,34,49,39,30,47,5,7,63,22,6,74,6,79,41,7,22,27,34,62,29,13,73,55,9,19,36,9,5,7,35,7,20,27,34,62,29,13,62,55,9,19,36,9,5,7,66,41,6,16,7,24,28,19,29,26,36,20,21,31,27,44,44,25,26,9,44,19,50,36,41,25,9,5,1,3,35,2,79,43,3,41,7,45,7,15,7,42,7,25,7,79,67,6,16,7,76,63,5,7,16,7,47,105,5,7,16,7,25,38,5,7,16,7,23,54,42,29,9,70,67,51,53,13,9,47,81,5,7,16,7,50,67,77,33,27,26,33,45,36,5,1,3,40,2,36,3,41,7,41,7,19,7,44,7,14,7,79,67,6,16,7,76,63,5,7,16,7,25,47,5,7,16,7,24,25,5,7,16,7,47,105,5,1,3,78,40,2,78,77,36,3,29,7,75,7,9,7,78,7,13,7,68,7,10,7,83,7,8,18,23,14,7,51,6,68,7,11,8,7,54,6,76,6,16,7,118,36,62,37,9,61,55,46,41,52,48,53,62,73,70,46,24,9,29,35,86,9,28,29,43,46,29,35,37,32,29,35,28,37,64,65,68,15,28,9,24,5,7,59,7,28,39,42,9,28,5,7,75,53,6,16,7,21,30,5,7,60,6,49,6,78,71,17,7,23,71,72,19,53,31,32,25,36,37,22,13,9,49,35,26,9,54,42,22,5,7,71,72,62,6,49,6,78,71,17,7,28,71,72,19,53,31,32,25,36,37,22,13,9,54,35,26,9,59,47,22,5,7,79,7,32,40,44,9,32,5,7,73,61,7,37,40,44,9,37,5,7,65,7,32,40,44,9,26,5,7,64,7,31,40,44,9,50,5,44,28,8,40,44,9,48,25,29,9,39,34,22,9,14,44,58,9,5,42,28,8,40,44,9,48,25,29,9,46,34,22,9,33,39,9,14,56,9,5,7,70,42,6,78,71,74,6,79,81,16,6,75,15,7,35,40,44,9,29,5,7,47,7,33,40,44,9,33,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,45,40,44,9,48,25,29,9,83,27,39,67,9,31,35,26,44,37,25,34,17,36,41,25,32,36,38,29,21,18,42,47,71,21,55,36,72,97,21,26,61,42,25,30,35,25,21,17,36,10,28,42,31,37,23,35,36,29,15,11,5,43,40,44,9,48,25,29,9,83,27,39,67,9,38,33,46,38,43,67,17,26,41,60,33,38,38,17,53,32,17,13,9,23,5,7,30,6,47,6,75,80,76,7,30,30,5,45,76,81,81,40,44,9,48,28,29,9,67,5,7,63,6,51,7,25,34,5,47,40,44,9,48,25,29,9,83,39,59,9,38,33,46,38,43,59,17,26,41,60,33,38,38,17,53,32,17,13,9,5,41,40,44,9,48,25,29,9,83,59,39,68,9,31,30,27,31,31,29,42,27,41,38,27,17,29,30,74,41,27,57,40,50,44,50,53,47,47,82,29,25,46,93,35,25,21,46,58,83,46,29,25,21,33,46,58,61,42,25,21,53,55,21,37,34,21,18,36,32,47,29,13,10,18,23,5,45,40,44,9,48,25,29,9,83,59,31,39,68,9,30,27,31,31,29,42,27,41,38,27,17,29,30,50,42,47,79,42,25,21,17,29,42,30,45,64,37,42,42,21,57,38,21,17,13,43,47,10,18,23,5,28,32,76,35,5,1,3,51,2,75,38,3,53,7,44,7,15,49,39,53,29,49,35,9,5,7,16,7,24,80,73,58,51,5,7,16,7,17,117,5,7,66,7,19,86,5,1,3,81,2,76,2,43,3,53,7,44,7,14,49,40,52,29,5,7,16,7,25,19,5,7,16,7,17,117,5,7,66,7,19,33,5,1,3,68,2,72,11,2,43,3,55,49,39,40,5,1,3,68,2,73,3,73,3,74,2,74,65,3,72,54,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minipass/dist/esm/index.js":{"lineLengths":[51,13,7,21,21,6,43,33,52,3,78,40,3,37,28,29,30,24,23,3,67,3,39,28,32,35,69,46,3,67,3,39,28,32,36,32,26,46,41,43,45,32,28,30,40,36,34,34,32,32,32,30,44,40,42,40,42,38,42,30,36,34,36,30,30,34,32,46,38,49,29,79,60,11,32,24,47,27,78,3,62,2,12,3,12,8,9,9,12,34,23,25,25,43,44,5,14,56,5,34,25,24,24,11,22,26,28,5,1,3,67,22,2,12,3,36,14,59,23,5,34,31,56,42,5,1,50,90,3,34,2,58,2,75,55,2,67,41,3,44,22,21,17,18,17,15,12,14,18,26,27,21,27,23,24,13,22,24,24,7,40,7,20,7,37,7,20,7,69,70,51,63,7,26,35,16,16,73,84,9,43,36,34,9,46,46,37,9,14,37,34,9,38,38,47,19,63,60,79,9,63,59,77,9,35,21,34,33,30,13,18,70,13,9,5,7,66,6,62,77,55,73,15,7,24,34,5,7,55,7,20,30,5,7,49,7,24,70,5,7,67,7,23,70,5,7,43,7,22,32,5,7,49,7,25,72,5,7,38,7,21,27,5,7,45,6,78,74,34,7,22,41,5,57,15,29,49,43,5,7,43,7,19,29,5,7,78,34,7,22,32,26,25,22,47,30,141,24,9,45,26,30,9,22,30,49,67,71,42,63,59,43,58,86,13,48,58,43,13,49,88,13,9,58,62,31,32,33,58,34,32,30,41,16,40,41,38,19,23,33,9,56,55,28,41,38,19,23,33,9,70,61,40,64,73,52,49,9,55,52,47,9,73,54,30,26,37,12,36,37,34,15,19,29,5,7,38,6,74,17,6,70,77,66,6,72,31,7,13,28,24,32,39,22,44,35,24,9,29,21,59,79,40,28,31,43,71,14,9,59,31,19,5,22,29,32,14,28,45,36,45,45,38,40,13,18,48,41,40,13,9,33,47,31,21,5,30,42,23,30,9,45,26,30,9,32,40,15,33,25,30,66,37,65,63,43,35,20,5,51,16,28,19,58,35,9,29,29,28,32,26,27,35,12,31,5,7,61,6,79,77,78,76,41,7,14,30,5,7,23,7,13,30,28,32,5,7,53,7,21,31,5,7,71,46,7,19,29,5,7,56,7,18,28,5,25,29,36,12,47,33,5,21,29,36,12,57,36,5,30,62,33,59,31,5,25,33,29,5,7,74,6,33,7,22,28,24,32,40,26,57,29,12,42,46,50,20,25,27,9,14,78,76,46,44,57,28,44,16,31,9,20,5,7,47,6,74,73,73,52,7,18,57,16,43,65,42,17,33,13,16,62,23,9,5,7,36,7,30,36,5,7,64,71,6,68,6,80,57,6,75,78,26,6,77,79,16,7,21,42,28,36,34,56,31,13,9,65,35,9,53,27,40,9,57,30,28,63,16,50,9,19,5,7,37,7,33,37,5,7,45,6,73,76,73,52,7,22,43,73,74,64,28,64,44,35,38,38,13,9,19,5,7,60,6,80,76,79,14,7,28,49,48,36,58,38,13,9,19,5,7,47,7,22,33,5,24,34,33,31,40,24,38,29,35,32,29,35,39,9,5,7,66,71,6,73,72,18,6,74,74,75,71,19,6,72,63,6,79,74,71,6,74,66,7,23,29,74,29,29,31,30,25,9,33,45,23,29,63,43,9,32,35,9,34,32,57,55,29,44,45,23,9,34,39,36,71,43,24,35,23,9,35,45,35,23,9,57,39,40,23,9,35,44,31,19,5,22,38,45,29,9,71,31,19,5,17,30,25,33,30,26,51,31,5,18,28,45,23,46,39,17,37,45,13,9,38,20,9,38,39,19,5,7,74,23,7,21,39,26,11,30,31,60,39,33,30,24,34,43,11,16,19,5,7,78,28,6,41,7,20,31,59,9,41,30,26,50,5,7,64,7,21,49,76,47,44,11,5,7,45,6,74,7,30,70,22,32,28,34,25,27,52,10,28,24,30,36,29,68,26,30,24,23,35,41,39,47,23,27,14,39,41,39,47,29,54,14,33,41,41,47,23,58,14,73,46,29,30,48,42,40,42,15,10,16,17,24,25,38,28,14,10,5,7,38,6,75,44,7,25,70,22,32,28,28,25,34,38,34,27,52,10,28,24,30,38,68,10,31,31,35,16,17,24,25,33,28,14,10,5,7,79,6,70,19,6,76,30,6,70,21,7,17,30,19,39,16,37,24,9,31,31,62,32,31,24,60,23,15,35,61,12,33,20,5,7,33,6,70,6,18,7,27,24,5,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minipass/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/dist/esm/brace-expressions.js":{"lineLengths":[72,40,62,22,48,41,50,38,35,35,46,35,34,34,49,35,54,39,2,63,19,58,37,74,60,51,63,66,67,41,65,29,47,25,25,35,53,5,24,22,20,20,25,22,25,23,21,24,36,33,56,26,16,21,9,49,27,18,9,24,25,28,32,20,25,13,70,9,37,72,79,46,67,37,70,21,36,28,40,24,42,39,35,17,13,9,56,25,25,66,31,33,76,13,40,44,13,28,16,21,9,45,70,43,46,19,21,9,42,27,19,21,9,60,36,12,5,21,62,55,37,5,68,70,41,54,5,77,74,77,74,28,30,35,18,75,61,5,77,73,45,43,23,21,20,45,2,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/dist/esm/processor.js":{"lineLengths":[69,37,3,65,3,29,10,36,27,5,12,55,5,32,76,5,34,43,48,19,45,12,70,5,1,3,66,72,66,3,26,22,34,55,47,72,5,29,15,61,17,22,22,11,5,1,3,71,20,3,23,22,26,35,19,9,44,19,75,35,13,9,12,46,5,17,44,29,20,63,9,28,20,5,15,60,5,12,66,5,1,3,54,2,66,35,3,24,19,32,30,13,11,8,9,39,25,36,30,29,74,5,39,33,61,72,47,49,56,40,82,46,23,76,34,28,44,28,53,29,17,22,35,17,13,29,25,18,21,32,65,42,39,22,31,31,13,34,34,26,62,29,60,13,67,49,62,40,67,43,66,64,25,13,38,56,60,72,76,80,42,34,52,50,17,43,43,69,69,65,75,17,22,38,80,80,45,49,44,35,65,77,57,25,21,17,13,43,46,13,9,20,5,22,36,5,13,61,5,62,45,49,31,36,51,65,37,34,45,54,44,44,37,69,17,47,61,17,22,61,17,13,9,23,5,46,50,37,53,13,33,75,80,79,81,71,57,50,17,46,64,51,21,60,54,21,17,13,9,62,20,19,38,41,54,30,28,29,62,13,35,37,41,36,44,13,44,62,13,9,5,38,28,19,20,49,9,14,39,9,5,38,31,26,19,20,49,9,14,39,9,5,1,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/lru-cache/dist/esm/index.js":{"lineLengths":[3,19,3,47,18,41,17,11,25,21,74,21,46,45,50,53,2,36,32,21,32,16,28,16,22,15,24,33,35,9,6,16,32,23,29,9,26,23,36,23,24,40,24,39,24,52,27,13,42,9,6,82,34,36,19,39,78,67,71,75,81,81,133,6,1,20,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,64,72,70,77,25,3,23,75,76,40,9,13,13,18,17,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,7,55,7,19,29,5,7,60,7,24,34,5,26,348,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,58,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,58,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,36,35,27,33,37,51,47,48,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,36,40,33,32,13,56,29,10,34,36,34,65,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,98,63,7,38,7,76,71,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,74,66,69,42,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,46,31,13,9,23,5,7,77,74,77,63,7,15,40,28,29,35,48,36,16,32,29,32,41,38,42,31,58,35,41,13,9,26,40,9,21,5,7,75,29,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,73,48,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,6,73,30,7,32,30,27,24,9,140,60,84,53,53,60,25,36,51,13,66,27,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,63,61,47,57,25,52,64,25,21,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,19,9,39,76,71,5,50,73,41,21,9,28,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,39,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,35,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,73,13,58,58,43,55,48,53,35,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,47,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,39,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,60,7,15,28,31,46,38,31,39,33,17,22,48,51,53,72,21,73,47,60,25,52,67,25,21,43,53,53,47,55,21,52,55,21,26,53,59,53,59,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,67,43,45,64,13,18,47,39,52,17,44,59,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> implements Map<K,V> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string description of an object.\n   * Called by the built-in method Object.prototype.toString.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Like {@link LRUCache#dump}, but just for a\n   * single key. Always returns stale values, if their info is found in the\n   * cache, so be sure to check for expired TTLs if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/dist/commonjs/service-key.js":{"lineLengths":[13,62,28,35,60,21,38,68,44],"data":{"version":3,"file":"service-key-cjs.cjs","sourceRoot":"","sources":["file:///C:/Users/AbdulafeezAdetunmbi/Desktop/First-Fastify/node_modules/@tapjs/mock/src/service-key-cjs.cts"],"names":[],"mappings":";;;AAAA,mCAAoC;AACpC,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,CAAA;AAC3D,MAAM,CAAC,GAAG,UAET,CAAA;AAEY,QAAA,UAAU,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC;IACvC,CAAC,CAAC,WAAW,CAAC,IAAI,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA","sourcesContent":["import { randomBytes } from 'crypto'\nconst kServiceKey = Symbol.for('@tapjs/mock.' + __filename)\nconst g = globalThis as typeof globalThis & {\n  [kServiceKey]: string\n}\n\nexport const serviceKey = (g[kServiceKey] =\n  g[kServiceKey] ?? randomBytes(8).toString('hex'))\n"]},"url":null,"sourceURL":null}}}